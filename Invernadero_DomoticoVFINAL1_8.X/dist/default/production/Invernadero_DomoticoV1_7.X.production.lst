

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Oct 11 22:10:57 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    59                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    60                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    61  0000                     
    62                           ; Version 2.20
    63                           ; Generated 12/02/2020 GMT
    64                           ; 
    65                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC18F4550 Definitions
    94                           ; 
    95                           ; SFR Addresses
    96  0000                     
    97                           	psect	idataBANK0
    98  001E00                     __pidataBANK0:
    99                           	callstack 0
   100                           
   101                           ;initializer for _keypad
   102  001E00  31                 	db	49
   103  001E01  32                 	db	50
   104  001E02  33                 	db	51
   105  001E03  34                 	db	52
   106  001E04  35                 	db	53
   107  001E05  36                 	db	54
   108  001E06  37                 	db	55
   109  001E07  38                 	db	56
   110  001E08  39                 	db	57
   111  001E09  2A                 	db	42
   112  001E0A  30                 	db	48
   113  001E0B  23                 	db	35
   114                           
   115                           ;initializer for _PrimeraVez
   116  001E0C  01                 	db	1
   117  0000                     _TRISE	set	3990
   118  0000                     _TRISC	set	3988
   119  0000                     _ADCON1	set	4033
   120  0000                     _TRISAbits	set	3986
   121  0000                     _PORTAbits	set	3968
   122  0000                     _PORTB	set	3969
   123  0000                     _LATB	set	3978
   124  0000                     _TRISB	set	3987
   125  0000                     _INTCON2bits	set	4081
   126  0000                     _LATD	set	3980
   127  0000                     _TRISD	set	3989
   128  0000                     _OSCCON	set	4051
   129  0000                     _LATE2	set	31850
   130  0000                     _LATE0	set	31848
   131  0000                     _LATE1	set	31849
   132  0000                     _LATC7	set	31839
   133  0000                     _LATC6	set	31838
   134  0000                     _LATC2	set	31834
   135  0000                     _LATC1	set	31833
   136  0000                     _LATC0	set	31832
   137  0000                     _LATA0	set	31816
   138  0000                     _RBPU	set	32655
   139  0000                     _LATD1	set	31841
   140  0000                     _LATD0	set	31840
   141                           
   142                           	psect	smallconst
   143  000800                     __psmallconst:
   144                           	callstack 0
   145  000800  00                 	db	0
   146  000801                     STR_1:
   147  000801  54                 	db	84	;'T'
   148  000802  65                 	db	101	;'e'
   149  000803  6D                 	db	109	;'m'
   150  000804  70                 	db	112	;'p'
   151  000805  2E                 	db	46
   152  000806  20                 	db	32
   153  000807  41                 	db	65	;'A'
   154  000808  64                 	db	100	;'d'
   155  000809  65                 	db	101	;'e'
   156  00080A  63                 	db	99	;'c'
   157  00080B  75                 	db	117	;'u'
   158  00080C  61                 	db	97	;'a'
   159  00080D  64                 	db	100	;'d'
   160  00080E  61                 	db	97	;'a'
   161  00080F  00                 	db	0
   162  000810                     STR_2:
   163  000810  4D                 	db	77	;'M'
   164  000811  67                 	db	103	;'g'
   165  000812  6E                 	db	110	;'n'
   166  000813  20                 	db	32
   167  000814  45                 	db	69	;'E'
   168  000815  72                 	db	114	;'r'
   169  000816  72                 	db	114	;'r'
   170  000817  6F                 	db	111	;'o'
   171  000818  72                 	db	114	;'r'
   172  000819  20                 	db	32
   173  00081A  54                 	db	84	;'T'
   174  00081B  65                 	db	101	;'e'
   175  00081C  6D                 	db	109	;'m'
   176  00081D  70                 	db	112	;'p'
   177  00081E  00                 	db	0
   178  00081F                     STR_3:
   179  00081F  48                 	db	72	;'H'
   180  000820  75                 	db	117	;'u'
   181  000821  6D                 	db	109	;'m'
   182  000822  2E                 	db	46
   183  000823  20                 	db	32
   184  000824  41                 	db	65	;'A'
   185  000825  64                 	db	100	;'d'
   186  000826  65                 	db	101	;'e'
   187  000827  63                 	db	99	;'c'
   188  000828  75                 	db	117	;'u'
   189  000829  61                 	db	97	;'a'
   190  00082A  64                 	db	100	;'d'
   191  00082B  61                 	db	97	;'a'
   192  00082C  00                 	db	0
   193  00082D                     STR_4:
   194  00082D  4D                 	db	77	;'M'
   195  00082E  67                 	db	103	;'g'
   196  00082F  6E                 	db	110	;'n'
   197  000830  20                 	db	32
   198  000831  45                 	db	69	;'E'
   199  000832  72                 	db	114	;'r'
   200  000833  72                 	db	114	;'r'
   201  000834  6F                 	db	111	;'o'
   202  000835  72                 	db	114	;'r'
   203  000836  20                 	db	32
   204  000837  48                 	db	72	;'H'
   205  000838  75                 	db	117	;'u'
   206  000839  6D                 	db	109	;'m'
   207  00083A  00                 	db	0
   208  00083B                     STR_10:
   209  00083B  43                 	db	67	;'C'
   210  00083C  20                 	db	32
   211  00083D  54                 	db	84	;'T'
   212  00083E  65                 	db	101	;'e'
   213  00083F  6D                 	db	109	;'m'
   214  000840  70                 	db	112	;'p'
   215  000841  2E                 	db	46
   216  000842  00                 	db	0
   217  000843                     STR_7:
   218  000843  20                 	db	32
   219  000844  20                 	db	32
   220  000845  48                 	db	72	;'H'
   221  000846  75                 	db	117	;'u'
   222  000847  6D                 	db	109	;'m'
   223  000848  2E                 	db	46
   224  000849  00                 	db	0
   225  00084A                     STR_6:
   226  00084A  2E                 	db	46
   227  00084B  25                 	db	37
   228  00084C  64                 	db	100	;'d'
   229  00084D  00                 	db	0
   230  00084E  00                 	db	0	; dummy byte at the end
   231  0000                     
   232                           ; #config settings
   233                           
   234                           	psect	cinit
   235  001CC4                     __pcinit:
   236                           	callstack 0
   237  001CC4                     start_initialization:
   238                           	callstack 0
   239  001CC4                     __initialization:
   240                           	callstack 0
   241                           
   242                           ; Initialize objects allocated to BANK0 (13 bytes)
   243                           ; load TBLPTR registers with __pidataBANK0
   244  001CC4  0E00               	movlw	low __pidataBANK0
   245  001CC6  6EF6               	movwf	tblptrl,c
   246  001CC8  0E1E               	movlw	high __pidataBANK0
   247  001CCA  6EF7               	movwf	tblptrh,c
   248  001CCC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   249  001CCE  6EF8               	movwf	tblptru,c
   250  001CD0  EE00  F0A5         	lfsr	0,__pdataBANK0
   251  001CD4  EE10 F00D          	lfsr	1,13
   252  001CD8                     copy_data0:
   253  001CD8  0009               	tblrd		*+
   254  001CDA  CFF5 FFEE          	movff	tablat,postinc0
   255  001CDE  50E5               	movf	postdec1,w,c
   256  001CE0  50E1               	movf	fsr1l,w,c
   257  001CE2  E1FA               	bnz	copy_data0
   258                           
   259                           ; Clear objects allocated to BANK0 (69 bytes)
   260  001CE4  EE00  F060         	lfsr	0,__pbssBANK0
   261  001CE8  0E45               	movlw	69
   262  001CEA                     clear_0:
   263  001CEA  6AEE               	clrf	postinc0,c
   264  001CEC  06E8               	decf	wreg,f,c
   265  001CEE  E1FD               	bnz	clear_0
   266  001CF0                     end_of_initialization:
   267                           	callstack 0
   268  001CF0                     __end_of__initialization:
   269                           	callstack 0
   270  001CF0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   271  001CF2  6EF8               	movwf	tblptru,c
   272  001CF4  0100               	movlb	0
   273  001CF6  EFF8  F008         	goto	_main	;jump to C main() function
   274                           
   275                           	psect	bssBANK0
   276  000060                     __pbssBANK0:
   277                           	callstack 0
   278  000060                     _nout:
   279                           	callstack 0
   280  000060                     	ds	2
   281  000062                     _width:
   282                           	callstack 0
   283  000062                     	ds	2
   284  000064                     _prec:
   285                           	callstack 0
   286  000064                     	ds	2
   287  000066                     _flags:
   288                           	callstack 0
   289  000066                     	ds	2
   290  000068                     _HumedadAdecuada:
   291                           	callstack 0
   292  000068                     	ds	2
   293  00006A                     _TemperaturaAdecuada:
   294                           	callstack 0
   295  00006A                     	ds	2
   296  00006C                     _MargenEH:
   297                           	callstack 0
   298  00006C                     	ds	2
   299  00006E                     _MargenET:
   300                           	callstack 0
   301  00006E                     	ds	2
   302  000070                     _temp_col:
   303                           	callstack 0
   304  000070                     	ds	1
   305  000071                     _rowloc:
   306                           	callstack 0
   307  000071                     	ds	1
   308  000072                     _col_loc:
   309                           	callstack 0
   310  000072                     	ds	1
   311  000073                     _dbuf:
   312                           	callstack 0
   313  000073                     	ds	32
   314  000093                     _Cadena:
   315                           	callstack 0
   316  000093                     	ds	10
   317  00009D                     _Datos:
   318                           	callstack 0
   319  00009D                     	ds	2
   320  00009F                     _Humedad:
   321                           	callstack 0
   322  00009F                     	ds	2
   323  0000A1                     _Temperatura:
   324                           	callstack 0
   325  0000A1                     	ds	2
   326  0000A3                     _MargenErrorH:
   327                           	callstack 0
   328  0000A3                     	ds	1
   329  0000A4                     _MargenErrorT:
   330                           	callstack 0
   331  0000A4                     	ds	1
   332                           
   333                           	psect	dataBANK0
   334  0000A5                     __pdataBANK0:
   335                           	callstack 0
   336  0000A5                     _keypad:
   337                           	callstack 0
   338  0000A5                     	ds	12
   339  0000B1                     _PrimeraVez:
   340                           	callstack 0
   341  0000B1                     	ds	1
   342                           
   343                           	psect	cstackBANK0
   344  0000B2                     __pcstackBANK0:
   345                           	callstack 0
   346  0000B2                     sprintf@ap:
   347                           	callstack 0
   348                           
   349                           ; 2 bytes @ 0x0
   350  0000B2                     	ds	2
   351  0000B4                     sprintf@f:
   352                           	callstack 0
   353                           
   354                           ; 6 bytes @ 0x2
   355  0000B4                     	ds	6
   356  0000BA                     MostrarHumedad@Cadena:
   357                           	callstack 0
   358  0000BA                     MostrarTemperatura@Cadena:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0x8
   362  0000BA                     	ds	2
   363  0000BC                     MostrarHumedad@Humedad:
   364                           	callstack 0
   365  0000BC                     MostrarTemperatura@Temperatura:
   366                           	callstack 0
   367                           
   368                           ; 1 bytes @ 0xA
   369  0000BC                     	ds	1
   370                           
   371                           	psect	cstackCOMRAM
   372  000001                     __pcstackCOMRAM:
   373                           	callstack 0
   374  000001                     ??_LCD_Command:
   375  000001                     ??_keyfind:
   376  000001                     ??_LCD_Char:
   377  000001                     ??_DHT11_Start:
   378  000001                     ?_strlen:
   379                           	callstack 0
   380  000001                     ?___wmul:
   381                           	callstack 0
   382  000001                     ?___aodiv:
   383                           	callstack 0
   384  000001                     ?___aomod:
   385                           	callstack 0
   386  000001                     DHT11_ReadData@i:
   387                           	callstack 0
   388  000001                     PrenderLed@HumedadAdecuada:
   389                           	callstack 0
   390  000001                     ControlHumedadAspersor@HumedadActual:
   391                           	callstack 0
   392  000001                     ControlTemperaturaVentiladorCalefactor@TempActual:
   393                           	callstack 0
   394  000001                     ___wmul@multiplier:
   395                           	callstack 0
   396  000001                     fputc@c:
   397                           	callstack 0
   398  000001                     strlen@s:
   399                           	callstack 0
   400  000001                     ___aodiv@dividend:
   401                           	callstack 0
   402  000001                     ___aomod@dividend:
   403                           	callstack 0
   404                           
   405                           ; 8 bytes @ 0x0
   406  000001                     	ds	1
   407  000002                     LCD_Command@cmd:
   408                           	callstack 0
   409  000002                     LCD_Char@dat:
   410                           	callstack 0
   411  000002                     DHT11_ReadData@data:
   412                           	callstack 0
   413  000002                     PrenderLed@TemperaturaAdecuada:
   414                           	callstack 0
   415                           
   416                           ; 1 bytes @ 0x1
   417  000002                     	ds	1
   418  000003                     ??_LCD_Init:
   419  000003                     ??_LCD_Clear:
   420  000003                     LCD_String@msg:
   421                           	callstack 0
   422  000003                     DatosSensorTH@Datos:
   423                           	callstack 0
   424  000003                     Comparar_T_H_Adecuados@TempActual:
   425                           	callstack 0
   426  000003                     ControlHumedadAspersor@HumedadDigitada:
   427                           	callstack 0
   428  000003                     ControlTemperaturaVentiladorCalefactor@TempDigitada:
   429                           	callstack 0
   430  000003                     ___wmul@multiplicand:
   431                           	callstack 0
   432  000003                     fputc@fp:
   433                           	callstack 0
   434  000003                     strlen@a:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0x2
   438  000003                     	ds	2
   439  000005                     ??_fputc:
   440  000005                     LCD_String_xy@pos:
   441                           	callstack 0
   442  000005                     DatosSensorTH@RH_Integral:
   443                           	callstack 0
   444  000005                     Comparar_T_H_Adecuados@HumActual:
   445                           	callstack 0
   446  000005                     ControlHumedadAspersor@MargenErrorH:
   447                           	callstack 0
   448  000005                     ControlTemperaturaVentiladorCalefactor@MargenErrorT:
   449                           	callstack 0
   450  000005                     ___wmul@product:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0x4
   454  000005                     	ds	1
   455  000006                     DatosSensorTH@T_Integral:
   456                           	callstack 0
   457  000006                     LCD_String_xy@msg:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0x5
   461  000006                     	ds	1
   462  000007                     ??_ControlHumedadAspersor:
   463  000007                     ??_ControlTemperaturaVentiladorCalefactor:
   464  000007                     ?_DatoDigitadoAEntero:
   465                           	callstack 0
   466  000007                     DatoDigitadoAEntero@prmTemperatura:
   467                           	callstack 0
   468  000007                     Comparar_T_H_Adecuados@TempDigitada:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0x6
   472  000007                     	ds	1
   473  000008                     LCD_String_xy@row:
   474                           	callstack 0
   475                           
   476                           ; 1 bytes @ 0x7
   477  000008                     	ds	1
   478  000009                     ??_DatoDigitadoAEntero:
   479  000009                     LCD_String_xy@location:
   480                           	callstack 0
   481  000009                     Comparar_T_H_Adecuados@HumDigitada:
   482                           	callstack 0
   483  000009                     ___aodiv@divisor:
   484                           	callstack 0
   485  000009                     ___aomod@divisor:
   486                           	callstack 0
   487                           
   488                           ; 8 bytes @ 0x8
   489  000009                     	ds	1
   490  00000A                     PedirDato@Etiqueta:
   491                           	callstack 0
   492  00000A                     DatoDigitadoAEntero@Unidad:
   493                           	callstack 0
   494  00000A                     fputs@s:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x9
   498  00000A                     	ds	1
   499  00000B                     Comparar_T_H_Adecuados@MargenErrorT:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0xA
   503  00000B                     	ds	1
   504  00000C                     PedirDato@vecLlenar:
   505                           	callstack 0
   506  00000C                     DatoDigitadoAEntero@Resultado:
   507                           	callstack 0
   508  00000C                     fputs@fp:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0xB
   512  00000C                     	ds	1
   513  00000D                     Comparar_T_H_Adecuados@MargenErrorH:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0xC
   517  00000D                     	ds	1
   518  00000E                     fputs@c:
   519                           	callstack 0
   520  00000E                     PedirDato@CantDatos:
   521                           	callstack 0
   522  00000E                     DatoDigitadoAEntero@Decena:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0xD
   526  00000E                     	ds	1
   527  00000F                     ??_Comparar_T_H_Adecuados:
   528  00000F                     fputs@i:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0xE
   532  00000F                     	ds	1
   533  000010                     ??_PedirDato:
   534                           
   535                           ; 1 bytes @ 0xF
   536  000010                     	ds	1
   537  000011                     ?_pad:
   538                           	callstack 0
   539  000011                     ___aodiv@counter:
   540                           	callstack 0
   541  000011                     ___aomod@counter:
   542                           	callstack 0
   543  000011                     pad@fp:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x10
   547  000011                     	ds	1
   548  000012                     ___aodiv@sign:
   549                           	callstack 0
   550  000012                     ___aomod@sign:
   551                           	callstack 0
   552  000012                     PedirDato@i:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x11
   556  000012                     	ds	1
   557  000013                     ?_abs:
   558                           	callstack 0
   559  000013                     pad@buf:
   560                           	callstack 0
   561  000013                     abs@a:
   562                           	callstack 0
   563  000013                     ___aodiv@quotient:
   564                           	callstack 0
   565                           
   566                           ; 8 bytes @ 0x12
   567  000013                     	ds	1
   568  000014                     PedirDato@tecla:
   569                           	callstack 0
   570  000014                     Comparar_T_H_Adecuados@TemperaturaAdecuada:
   571                           	callstack 0
   572                           
   573                           ; 1 bytes @ 0x13
   574  000014                     	ds	1
   575  000015                     ??_abs:
   576  000015                     Comparar_T_H_Adecuados@HumedadAdecuada:
   577                           	callstack 0
   578  000015                     PedirTodosLosDatos@Temperatura:
   579                           	callstack 0
   580  000015                     pad@p:
   581                           	callstack 0
   582                           
   583                           ; 2 bytes @ 0x14
   584  000015                     	ds	2
   585  000017                     ??_pad:
   586  000017                     PedirTodosLosDatos@Humedad:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0x16
   590  000017                     	ds	1
   591  000018                     pad@i:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x17
   595  000018                     	ds	1
   596  000019                     PedirTodosLosDatos@MargenErrorT:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0x18
   600  000019                     	ds	1
   601  00001A                     pad@w:
   602                           	callstack 0
   603                           
   604                           ; 2 bytes @ 0x19
   605  00001A                     	ds	1
   606  00001B                     PedirTodosLosDatos@MargenErrorH:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0x1A
   610  00001B                     	ds	1
   611  00001C                     ?_dtoa:
   612                           	callstack 0
   613  00001C                     dtoa@fp:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x1B
   617  00001C                     	ds	1
   618  00001D                     ??_PedirTodosLosDatos:
   619                           
   620                           ; 1 bytes @ 0x1C
   621  00001D                     	ds	1
   622  00001E                     dtoa@d:
   623                           	callstack 0
   624                           
   625                           ; 8 bytes @ 0x1D
   626  00001E                     	ds	8
   627  000026                     ??_dtoa:
   628                           
   629                           ; 1 bytes @ 0x25
   630  000026                     	ds	8
   631  00002E                     _dtoa$956:
   632                           	callstack 0
   633                           
   634                           ; 2 bytes @ 0x2D
   635  00002E                     	ds	2
   636  000030                     dtoa@p:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0x2F
   640  000030                     	ds	2
   641  000032                     dtoa@w:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0x31
   645  000032                     	ds	2
   646  000034                     dtoa@s:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0x33
   650  000034                     	ds	2
   651  000036                     dtoa@n:
   652                           	callstack 0
   653                           
   654                           ; 8 bytes @ 0x35
   655  000036                     	ds	8
   656  00003E                     dtoa@i:
   657                           	callstack 0
   658                           
   659                           ; 2 bytes @ 0x3D
   660  00003E                     	ds	2
   661  000040                     ?_vfpfcnvrt:
   662                           	callstack 0
   663  000040                     vfpfcnvrt@fp:
   664                           	callstack 0
   665                           
   666                           ; 2 bytes @ 0x3F
   667  000040                     	ds	2
   668  000042                     vfpfcnvrt@fmt:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0x41
   672  000042                     	ds	2
   673  000044                     vfpfcnvrt@ap:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0x43
   677  000044                     	ds	2
   678  000046                     ??_vfpfcnvrt:
   679                           
   680                           ; 1 bytes @ 0x45
   681  000046                     	ds	2
   682  000048                     vfpfcnvrt@ll:
   683                           	callstack 0
   684                           
   685                           ; 8 bytes @ 0x47
   686  000048                     	ds	8
   687  000050                     ?_vfprintf:
   688                           	callstack 0
   689  000050                     vfprintf@fp:
   690                           	callstack 0
   691                           
   692                           ; 2 bytes @ 0x4F
   693  000050                     	ds	2
   694  000052                     vfprintf@fmt:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x51
   698  000052                     	ds	2
   699  000054                     vfprintf@ap:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x53
   703  000054                     	ds	2
   704  000056                     vfprintf@cfmt:
   705                           	callstack 0
   706                           
   707                           ; 2 bytes @ 0x55
   708  000056                     	ds	2
   709  000058                     ?_sprintf:
   710                           	callstack 0
   711  000058                     sprintf@s:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x57
   715  000058                     	ds	2
   716  00005A                     sprintf@fmt:
   717                           	callstack 0
   718                           
   719                           ; 2 bytes @ 0x59
   720  00005A                     	ds	4
   721  00005E                     ??_main:
   722                           
   723                           ; 1 bytes @ 0x5D
   724  00005E                     	ds	2
   725                           
   726 ;;
   727 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   728 ;;
   729 ;; *************** function _main *****************
   730 ;; Defined at:
   731 ;;		line 10 in file "Main_Invernadero.c"
   732 ;; Parameters:    Size  Location     Type
   733 ;;		None
   734 ;; Auto vars:     Size  Location     Type
   735 ;;		None
   736 ;; Return value:  Size  Location     Type
   737 ;;                  1    wreg      void 
   738 ;; Registers used:
   739 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   740 ;; Tracked objects:
   741 ;;		On entry : 0/0
   742 ;;		On exit  : 0/0
   743 ;;		Unchanged: 0/0
   744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   745 ;;      Params:         0       0       0       0       0       0       0       0       0
   746 ;;      Locals:         0       0       0       0       0       0       0       0       0
   747 ;;      Temps:          2       0       0       0       0       0       0       0       0
   748 ;;      Totals:         2       0       0       0       0       0       0       0       0
   749 ;;Total ram usage:        2 bytes
   750 ;; Hardware stack levels required when called: 9
   751 ;; This function calls:
   752 ;;		_ApagarAspersores
   753 ;;		_ApagarLeds
   754 ;;		_ApagarVentiladores
   755 ;;		_Comparar_T_H_Adecuados
   756 ;;		_ConfigurarPuertosLCD
   757 ;;		_ControlHumedadAspersor
   758 ;;		_ControlTemperaturaVentiladorCalefactor
   759 ;;		_DatoDigitadoAEntero
   760 ;;		_DatosSensorTH
   761 ;;		_LCD_Init
   762 ;;		_MostrarHumedad
   763 ;;		_MostrarTemperatura
   764 ;;		_PedirTodosLosDatos
   765 ;;		_initActuadores
   766 ;;		_initDHT11
   767 ;;		_initTeclado
   768 ;; This function is called by:
   769 ;;		Startup code after reset
   770 ;; This function uses a non-reentrant model
   771 ;;
   772                           
   773                           	psect	text0
   774  0011F0                     __ptext0:
   775                           	callstack 0
   776  0011F0                     _main:
   777                           	callstack 22
   778  0011F0                     
   779                           ;Main_Invernadero.c: 11:     OSCCON=0x72;
   780  0011F0  0E72               	movlw	114
   781  0011F2  6ED3               	movwf	211,c	;volatile
   782  0011F4                     
   783                           ;Main_Invernadero.c: 13:     ConfigurarPuertosLCD();
   784  0011F4  EC1F  F00F         	call	_ConfigurarPuertosLCD	;wreg free
   785  0011F8                     
   786                           ;Main_Invernadero.c: 14:     initDHT11();
   787  0011F8  EC10  F00F         	call	_initDHT11	;wreg free
   788  0011FC                     
   789                           ;Main_Invernadero.c: 15:     initActuadores();
   790  0011FC  EC07  F00F         	call	_initActuadores	;wreg free
   791  001200                     
   792                           ;Main_Invernadero.c: 16:     LCD_Init();
   793  001200  EC98  F00E         	call	_LCD_Init	;wreg free
   794  001204                     
   795                           ;Main_Invernadero.c: 17:     initTeclado();
   796  001204  EC22  F00F         	call	_initTeclado	;wreg free
   797  001208                     
   798                           ;Main_Invernadero.c: 19:     ApagarAspersores();
   799  001208  EC1C  F00F         	call	_ApagarAspersores	;wreg free
   800  00120C                     
   801                           ;Main_Invernadero.c: 20:     ApagarVentiladores();
   802  00120C  EC16  F00F         	call	_ApagarVentiladores	;wreg free
   803  001210                     
   804                           ;Main_Invernadero.c: 21:     ApagarLeds();
   805  001210  EC0C  F00F         	call	_ApagarLeds	;wreg free
   806  001214                     l63:
   807                           
   808                           ;Main_Invernadero.c: 24:      if(PrimeraVez==1){
   809  001214  0100               	movlb	0	; () banked
   810  001216  05B1               	decf	_PrimeraVez& (0+255),w,b
   811  001218  A4D8               	btfss	status,2,c
   812  00121A  EF11  F009         	goto	u1701
   813  00121E  EF13  F009         	goto	u1700
   814  001222                     u1701:
   815  001222  EF48  F009         	goto	l2454
   816  001226                     u1700:
   817  001226                     
   818                           ; BSR set to: 0
   819                           ;Main_Invernadero.c: 25:          PedirTodosLosDatos(Temperatura,Humedad,MargenErrorT,Ma
      +                          rgenErrorH);
   820  001226  0EA1               	movlw	low _Temperatura
   821  001228  6E15               	movwf	PedirTodosLosDatos@Temperatura^0,c
   822  00122A  0E00               	movlw	high _Temperatura
   823  00122C  6E16               	movwf	(PedirTodosLosDatos@Temperatura+1)^0,c
   824  00122E  0E9F               	movlw	low _Humedad
   825  001230  6E17               	movwf	PedirTodosLosDatos@Humedad^0,c
   826  001232  0E00               	movlw	high _Humedad
   827  001234  6E18               	movwf	(PedirTodosLosDatos@Humedad+1)^0,c
   828  001236  0EA4               	movlw	low _MargenErrorT
   829  001238  6E19               	movwf	PedirTodosLosDatos@MargenErrorT^0,c
   830  00123A  0E00               	movlw	high _MargenErrorT
   831  00123C  6E1A               	movwf	(PedirTodosLosDatos@MargenErrorT+1)^0,c
   832  00123E  0EA3               	movlw	low _MargenErrorH
   833  001240  6E1B               	movwf	PedirTodosLosDatos@MargenErrorH^0,c
   834  001242  0E00               	movlw	high _MargenErrorH
   835  001244  6E1C               	movwf	(PedirTodosLosDatos@MargenErrorH+1)^0,c
   836  001246  ECEB  F00A         	call	_PedirTodosLosDatos	;wreg free
   837  00124A                     
   838                           ;Main_Invernadero.c: 27:          TemperaturaAdecuada = DatoDigitadoAEntero(Temperatura)
      +                          ;
   839  00124A  0EA1               	movlw	low _Temperatura
   840  00124C  6E07               	movwf	DatoDigitadoAEntero@prmTemperatura^0,c
   841  00124E  0E00               	movlw	high _Temperatura
   842  001250  6E08               	movwf	(DatoDigitadoAEntero@prmTemperatura+1)^0,c
   843  001252  ECE1  F00B         	call	_DatoDigitadoAEntero	;wreg free
   844  001256  C007  F06A         	movff	?_DatoDigitadoAEntero,_TemperaturaAdecuada
   845  00125A  C008  F06B         	movff	?_DatoDigitadoAEntero+1,_TemperaturaAdecuada+1
   846  00125E                     
   847                           ;Main_Invernadero.c: 29:          HumedadAdecuada = DatoDigitadoAEntero(Humedad);
   848  00125E  0E9F               	movlw	low _Humedad
   849  001260  6E07               	movwf	DatoDigitadoAEntero@prmTemperatura^0,c
   850  001262  0E00               	movlw	high _Humedad
   851  001264  6E08               	movwf	(DatoDigitadoAEntero@prmTemperatura+1)^0,c
   852  001266  ECE1  F00B         	call	_DatoDigitadoAEntero	;wreg free
   853  00126A  C007  F068         	movff	?_DatoDigitadoAEntero,_HumedadAdecuada
   854  00126E  C008  F069         	movff	?_DatoDigitadoAEntero+1,_HumedadAdecuada+1
   855  001272                     
   856                           ;Main_Invernadero.c: 31:          MargenET = MargenErrorT[0]-48;
   857  001272  0ED0               	movlw	208
   858  001274  0100               	movlb	0	; () banked
   859  001276  25A4               	addwf	_MargenErrorT& (0+255),w,b
   860  001278  6F6E               	movwf	_MargenET& (0+255),b
   861  00127A  6B6F               	clrf	(_MargenET+1)& (0+255),b
   862  00127C  0EFF               	movlw	255
   863  00127E  236F               	addwfc	(_MargenET+1)& (0+255),f,b
   864  001280                     
   865                           ; BSR set to: 0
   866                           ;Main_Invernadero.c: 32:          MargenEH = MargenErrorH[0]-48;
   867  001280  0ED0               	movlw	208
   868  001282  25A3               	addwf	_MargenErrorH& (0+255),w,b
   869  001284  6F6C               	movwf	_MargenEH& (0+255),b
   870  001286  6B6D               	clrf	(_MargenEH+1)& (0+255),b
   871  001288  0EFF               	movlw	255
   872  00128A  236D               	addwfc	(_MargenEH+1)& (0+255),f,b
   873  00128C                     
   874                           ; BSR set to: 0
   875                           ;Main_Invernadero.c: 33:          PrimeraVez=0;
   876  00128C  0E00               	movlw	0
   877  00128E  6FB1               	movwf	_PrimeraVez& (0+255),b
   878  001290                     l2454:
   879                           
   880                           ; BSR set to: 0
   881                           ;Main_Invernadero.c: 35:         DatosSensorTH(Datos);
   882  001290  0E9D               	movlw	low _Datos
   883  001292  6E03               	movwf	DatosSensorTH@Datos^0,c
   884  001294  0E00               	movlw	high _Datos
   885  001296  6E04               	movwf	(DatosSensorTH@Datos+1)^0,c
   886  001298  EC43  F00E         	call	_DatosSensorTH	;wreg free
   887  00129C                     
   888                           ;Main_Invernadero.c: 38:         Comparar_T_H_Adecuados(&Datos[0],&Datos[1],TemperaturaA
      +                          decuada,
   889  00129C  0E9D               	movlw	low _Datos
   890  00129E  6E03               	movwf	Comparar_T_H_Adecuados@TempActual^0,c
   891  0012A0  0E00               	movlw	high _Datos
   892  0012A2  6E04               	movwf	(Comparar_T_H_Adecuados@TempActual+1)^0,c
   893  0012A4  0E9E               	movlw	low (_Datos+1)
   894  0012A6  6E05               	movwf	Comparar_T_H_Adecuados@HumActual^0,c
   895  0012A8  0E00               	movlw	high (_Datos+1)
   896  0012AA  6E06               	movwf	(Comparar_T_H_Adecuados@HumActual+1)^0,c
   897  0012AC  C06A  F007         	movff	_TemperaturaAdecuada,Comparar_T_H_Adecuados@TempDigitada
   898  0012B0  C06B  F008         	movff	_TemperaturaAdecuada+1,Comparar_T_H_Adecuados@TempDigitada+1
   899  0012B4  C068  F009         	movff	_HumedadAdecuada,Comparar_T_H_Adecuados@HumDigitada
   900  0012B8  C069  F00A         	movff	_HumedadAdecuada+1,Comparar_T_H_Adecuados@HumDigitada+1
   901  0012BC  C06E  F00B         	movff	_MargenET,Comparar_T_H_Adecuados@MargenErrorT
   902  0012C0  C06F  F00C         	movff	_MargenET+1,Comparar_T_H_Adecuados@MargenErrorT+1
   903  0012C4  C06C  F00D         	movff	_MargenEH,Comparar_T_H_Adecuados@MargenErrorH
   904  0012C8  C06D  F00E         	movff	_MargenEH+1,Comparar_T_H_Adecuados@MargenErrorH+1
   905  0012CC  ECA5  F009         	call	_Comparar_T_H_Adecuados	;wreg free
   906  0012D0                     
   907                           ;Main_Invernadero.c: 44:         ControlHumedadAspersor(&Datos[1],HumedadAdecuada,Margen
      +                          EH);
   908  0012D0  0E9E               	movlw	low (_Datos+1)
   909  0012D2  6E01               	movwf	ControlHumedadAspersor@HumedadActual^0,c
   910  0012D4  0E00               	movlw	high (_Datos+1)
   911  0012D6  6E02               	movwf	(ControlHumedadAspersor@HumedadActual+1)^0,c
   912  0012D8  C068  F003         	movff	_HumedadAdecuada,ControlHumedadAspersor@HumedadDigitada
   913  0012DC  C069  F004         	movff	_HumedadAdecuada+1,ControlHumedadAspersor@HumedadDigitada+1
   914  0012E0  C06C  F005         	movff	_MargenEH,ControlHumedadAspersor@MargenErrorH
   915  0012E4  C06D  F006         	movff	_MargenEH+1,ControlHumedadAspersor@MargenErrorH+1
   916  0012E8  ECBE  F00D         	call	_ControlHumedadAspersor	;wreg free
   917  0012EC                     
   918                           ;Main_Invernadero.c: 47:         ControlTemperaturaVentiladorCalefactor(&Datos[0],Temper
      +                          aturaAdecuada,MargenET);
   919  0012EC  0E9D               	movlw	low _Datos
   920  0012EE  6E01               	movwf	ControlTemperaturaVentiladorCalefactor@TempActual^0,c
   921  0012F0  0E00               	movlw	high _Datos
   922  0012F2  6E02               	movwf	(ControlTemperaturaVentiladorCalefactor@TempActual+1)^0,c
   923  0012F4  C06A  F003         	movff	_TemperaturaAdecuada,ControlTemperaturaVentiladorCalefactor@TempDigitada
   924  0012F8  C06B  F004         	movff	_TemperaturaAdecuada+1,ControlTemperaturaVentiladorCalefactor@TempDigitada+1
   925  0012FC  C06E  F005         	movff	_MargenET,ControlTemperaturaVentiladorCalefactor@MargenErrorT
   926  001300  C06F  F006         	movff	_MargenET+1,ControlTemperaturaVentiladorCalefactor@MargenErrorT+1
   927  001304  EC9C  F00B         	call	_ControlTemperaturaVentiladorCalefactor	;wreg free
   928  001308                     
   929                           ;Main_Invernadero.c: 56:         MostrarHumedad(Cadena,Datos[1]);
   930  001308  0E93               	movlw	low _Cadena
   931  00130A  0100               	movlb	0	; () banked
   932  00130C  6FBA               	movwf	MostrarHumedad@Cadena& (0+255),b
   933  00130E  0E00               	movlw	high _Cadena
   934  001310  6FBB               	movwf	(MostrarHumedad@Cadena+1)& (0+255),b
   935  001312  C09E  F0BC         	movff	_Datos+1,MostrarHumedad@Humedad
   936  001316  EC54  F00C         	call	_MostrarHumedad	;wreg free
   937  00131A                     
   938                           ;Main_Invernadero.c: 58:         MostrarTemperatura(Cadena,Datos[0]);
   939  00131A  0E93               	movlw	low _Cadena
   940  00131C  0100               	movlb	0	; () banked
   941  00131E  6FBA               	movwf	MostrarTemperatura@Cadena& (0+255),b
   942  001320  0E00               	movlw	high _Cadena
   943  001322  6FBB               	movwf	(MostrarTemperatura@Cadena+1)& (0+255),b
   944  001324  C09D  F0BC         	movff	_Datos,MostrarTemperatura@Temperatura
   945  001328  EC1C  F00C         	call	_MostrarTemperatura	;wreg free
   946  00132C                     
   947                           ;Main_Invernadero.c: 60:        _delay((unsigned long)((500)*(8000000L/4000.0)));
   948  00132C  0E06               	movlw	6
   949  00132E  6E5F               	movwf	(??_main+1)^0,c
   950  001330  0E13               	movlw	19
   951  001332  6E5E               	movwf	??_main^0,c
   952  001334  0EAE               	movlw	174
   953  001336                     u1717:
   954  001336  2EE8               	decfsz	wreg,f,c
   955  001338  D7FE               	bra	u1717
   956  00133A  2E5E               	decfsz	??_main^0,f,c
   957  00133C  D7FC               	bra	u1717
   958  00133E  2E5F               	decfsz	(??_main+1)^0,f,c
   959  001340  D7FA               	bra	u1717
   960  001342  EF0A  F009         	goto	l63
   961  001346  EF00  F000         	goto	start
   962  00134A                     __end_of_main:
   963                           	callstack 0
   964                           
   965 ;; *************** function _initTeclado *****************
   966 ;; Defined at:
   967 ;;		line 155 in file "keypad.c"
   968 ;; Parameters:    Size  Location     Type
   969 ;;		None
   970 ;; Auto vars:     Size  Location     Type
   971 ;;		None
   972 ;; Return value:  Size  Location     Type
   973 ;;                  1    wreg      void 
   974 ;; Registers used:
   975 ;;		None
   976 ;; Tracked objects:
   977 ;;		On entry : 0/0
   978 ;;		On exit  : 0/0
   979 ;;		Unchanged: 0/0
   980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   981 ;;      Params:         0       0       0       0       0       0       0       0       0
   982 ;;      Locals:         0       0       0       0       0       0       0       0       0
   983 ;;      Temps:          0       0       0       0       0       0       0       0       0
   984 ;;      Totals:         0       0       0       0       0       0       0       0       0
   985 ;;Total ram usage:        0 bytes
   986 ;; Hardware stack levels used: 1
   987 ;; This function calls:
   988 ;;		Nothing
   989 ;; This function is called by:
   990 ;;		_main
   991 ;; This function uses a non-reentrant model
   992 ;;
   993                           
   994                           	psect	text1
   995  001E44                     __ptext1:
   996                           	callstack 0
   997  001E44                     _initTeclado:
   998                           	callstack 30
   999  001E44                     
  1000                           ;keypad.c: 156:     RBPU=0;
  1001  001E44  9EF1               	bcf	4081,7,c	;volatile
  1002  001E46  0012               	return		;funcret
  1003  001E48                     __end_of_initTeclado:
  1004                           	callstack 0
  1005                           
  1006 ;; *************** function _initDHT11 *****************
  1007 ;; Defined at:
  1008 ;;		line 102 in file "DHT11.c"
  1009 ;; Parameters:    Size  Location     Type
  1010 ;;		None
  1011 ;; Auto vars:     Size  Location     Type
  1012 ;;		None
  1013 ;; Return value:  Size  Location     Type
  1014 ;;                  1    wreg      void 
  1015 ;; Registers used:
  1016 ;;		wreg, status,2
  1017 ;; Tracked objects:
  1018 ;;		On entry : 0/0
  1019 ;;		On exit  : 0/0
  1020 ;;		Unchanged: 0/0
  1021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1022 ;;      Params:         0       0       0       0       0       0       0       0       0
  1023 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1024 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1025 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1026 ;;Total ram usage:        0 bytes
  1027 ;; Hardware stack levels used: 1
  1028 ;; This function calls:
  1029 ;;		Nothing
  1030 ;; This function is called by:
  1031 ;;		_main
  1032 ;; This function uses a non-reentrant model
  1033 ;;
  1034                           
  1035                           	psect	text2
  1036  001E20                     __ptext2:
  1037                           	callstack 0
  1038  001E20                     _initDHT11:
  1039                           	callstack 30
  1040  001E20                     
  1041                           ;DHT11.c: 103:     ADCON1=0x0F;
  1042  001E20  0E0F               	movlw	15
  1043  001E22  6EC1               	movwf	193,c	;volatile
  1044  001E24  0012               	return		;funcret
  1045  001E26                     __end_of_initDHT11:
  1046                           	callstack 0
  1047                           
  1048 ;; *************** function _initActuadores *****************
  1049 ;; Defined at:
  1050 ;;		line 11 in file "Actuadores.c"
  1051 ;; Parameters:    Size  Location     Type
  1052 ;;		None
  1053 ;; Auto vars:     Size  Location     Type
  1054 ;;		None
  1055 ;; Return value:  Size  Location     Type
  1056 ;;                  1    wreg      void 
  1057 ;; Registers used:
  1058 ;;		wreg, status,2
  1059 ;; Tracked objects:
  1060 ;;		On entry : 0/0
  1061 ;;		On exit  : 0/0
  1062 ;;		Unchanged: 0/0
  1063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1064 ;;      Params:         0       0       0       0       0       0       0       0       0
  1065 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1066 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1067 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1068 ;;Total ram usage:        0 bytes
  1069 ;; Hardware stack levels used: 1
  1070 ;; This function calls:
  1071 ;;		Nothing
  1072 ;; This function is called by:
  1073 ;;		_main
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077                           	psect	text3
  1078  001E0E                     __ptext3:
  1079                           	callstack 0
  1080  001E0E                     _initActuadores:
  1081                           	callstack 30
  1082  001E0E                     
  1083                           ;Actuadores.c: 12:     TRISC=0x00;
  1084  001E0E  0E00               	movlw	0
  1085  001E10  6E94               	movwf	148,c	;volatile
  1086                           
  1087                           ;Actuadores.c: 13:     TRISE = 0;
  1088  001E12  0E00               	movlw	0
  1089  001E14  6E96               	movwf	150,c	;volatile
  1090  001E16  0012               	return		;funcret
  1091  001E18                     __end_of_initActuadores:
  1092                           	callstack 0
  1093                           
  1094 ;; *************** function _PedirTodosLosDatos *****************
  1095 ;; Defined at:
  1096 ;;		line 150 in file "LCD.c"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;  Temperatura     2   20[COMRAM] PTR unsigned char 
  1099 ;;		 -> Temperatura(2), 
  1100 ;;  Humedad         2   22[COMRAM] PTR unsigned char 
  1101 ;;		 -> Humedad(2), 
  1102 ;;  MargenErrorT    2   24[COMRAM] PTR unsigned char 
  1103 ;;		 -> MargenErrorT(1), 
  1104 ;;  MargenErrorH    2   26[COMRAM] PTR unsigned char 
  1105 ;;		 -> MargenErrorH(1), 
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;		None
  1108 ;; Return value:  Size  Location     Type
  1109 ;;                  1    wreg      void 
  1110 ;; Registers used:
  1111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1112 ;; Tracked objects:
  1113 ;;		On entry : 0/0
  1114 ;;		On exit  : 0/0
  1115 ;;		Unchanged: 0/0
  1116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1117 ;;      Params:         8       0       0       0       0       0       0       0       0
  1118 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1119 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1120 ;;      Totals:        10       0       0       0       0       0       0       0       0
  1121 ;;Total ram usage:       10 bytes
  1122 ;; Hardware stack levels used: 1
  1123 ;; Hardware stack levels required when called: 4
  1124 ;; This function calls:
  1125 ;;		_PedirDato
  1126 ;; This function is called by:
  1127 ;;		_main
  1128 ;; This function uses a non-reentrant model
  1129 ;;
  1130                           
  1131                           	psect	text4
  1132  0015D6                     __ptext4:
  1133                           	callstack 0
  1134  0015D6                     _PedirTodosLosDatos:
  1135                           	callstack 26
  1136  0015D6                     
  1137                           ;LCD.c: 151:        PedirDato("Temp. Adecuada",Temperatura,2);
  1138  0015D6  0E01               	movlw	low STR_1
  1139  0015D8  6E0A               	movwf	PedirDato@Etiqueta^0,c
  1140  0015DA  0E08               	movlw	high STR_1
  1141  0015DC  6E0B               	movwf	(PedirDato@Etiqueta+1)^0,c
  1142  0015DE  C015  F00C         	movff	PedirTodosLosDatos@Temperatura,PedirDato@vecLlenar
  1143  0015E2  C016  F00D         	movff	PedirTodosLosDatos@Temperatura+1,PedirDato@vecLlenar+1
  1144  0015E6  0E00               	movlw	0
  1145  0015E8  6E0F               	movwf	(PedirDato@CantDatos+1)^0,c
  1146  0015EA  0E02               	movlw	2
  1147  0015EC  6E0E               	movwf	PedirDato@CantDatos^0,c
  1148  0015EE  EC48  F00B         	call	_PedirDato	;wreg free
  1149  0015F2                     
  1150                           ;LCD.c: 152:        _delay((unsigned long)((100)*(8000000L/4000.0)));
  1151  0015F2  0E02               	movlw	2
  1152  0015F4  6E1E               	movwf	(??_PedirTodosLosDatos+1)^0,c
  1153  0015F6  0E04               	movlw	4
  1154  0015F8  6E1D               	movwf	??_PedirTodosLosDatos^0,c
  1155  0015FA  0EBA               	movlw	186
  1156  0015FC                     u1727:
  1157  0015FC  2EE8               	decfsz	wreg,f,c
  1158  0015FE  D7FE               	bra	u1727
  1159  001600  2E1D               	decfsz	??_PedirTodosLosDatos^0,f,c
  1160  001602  D7FC               	bra	u1727
  1161  001604  2E1E               	decfsz	(??_PedirTodosLosDatos+1)^0,f,c
  1162  001606  D7FA               	bra	u1727
  1163  001608  D000               	nop2	
  1164  00160A                     
  1165                           ;LCD.c: 153:        PedirDato("Mgn Error Temp",MargenErrorT,1);
  1166  00160A  0E10               	movlw	low STR_2
  1167  00160C  6E0A               	movwf	PedirDato@Etiqueta^0,c
  1168  00160E  0E08               	movlw	high STR_2
  1169  001610  6E0B               	movwf	(PedirDato@Etiqueta+1)^0,c
  1170  001612  C019  F00C         	movff	PedirTodosLosDatos@MargenErrorT,PedirDato@vecLlenar
  1171  001616  C01A  F00D         	movff	PedirTodosLosDatos@MargenErrorT+1,PedirDato@vecLlenar+1
  1172  00161A  0E00               	movlw	0
  1173  00161C  6E0F               	movwf	(PedirDato@CantDatos+1)^0,c
  1174  00161E  0E01               	movlw	1
  1175  001620  6E0E               	movwf	PedirDato@CantDatos^0,c
  1176  001622  EC48  F00B         	call	_PedirDato	;wreg free
  1177                           
  1178                           ;LCD.c: 154:         _delay((unsigned long)((100)*(8000000L/4000.0)));
  1179  001626  0E02               	movlw	2
  1180  001628  6E1E               	movwf	(??_PedirTodosLosDatos+1)^0,c
  1181  00162A  0E04               	movlw	4
  1182  00162C  6E1D               	movwf	??_PedirTodosLosDatos^0,c
  1183  00162E  0EBA               	movlw	186
  1184  001630                     u1737:
  1185  001630  2EE8               	decfsz	wreg,f,c
  1186  001632  D7FE               	bra	u1737
  1187  001634  2E1D               	decfsz	??_PedirTodosLosDatos^0,f,c
  1188  001636  D7FC               	bra	u1737
  1189  001638  2E1E               	decfsz	(??_PedirTodosLosDatos+1)^0,f,c
  1190  00163A  D7FA               	bra	u1737
  1191  00163C  D000               	nop2	
  1192  00163E                     
  1193                           ;LCD.c: 155:        PedirDato("Hum. Adecuada",Humedad,2);
  1194  00163E  0E1F               	movlw	low STR_3
  1195  001640  6E0A               	movwf	PedirDato@Etiqueta^0,c
  1196  001642  0E08               	movlw	high STR_3
  1197  001644  6E0B               	movwf	(PedirDato@Etiqueta+1)^0,c
  1198  001646  C017  F00C         	movff	PedirTodosLosDatos@Humedad,PedirDato@vecLlenar
  1199  00164A  C018  F00D         	movff	PedirTodosLosDatos@Humedad+1,PedirDato@vecLlenar+1
  1200  00164E  0E00               	movlw	0
  1201  001650  6E0F               	movwf	(PedirDato@CantDatos+1)^0,c
  1202  001652  0E02               	movlw	2
  1203  001654  6E0E               	movwf	PedirDato@CantDatos^0,c
  1204  001656  EC48  F00B         	call	_PedirDato	;wreg free
  1205  00165A                     
  1206                           ;LCD.c: 156:        _delay((unsigned long)((100)*(8000000L/4000.0)));
  1207  00165A  0E02               	movlw	2
  1208  00165C  6E1E               	movwf	(??_PedirTodosLosDatos+1)^0,c
  1209  00165E  0E04               	movlw	4
  1210  001660  6E1D               	movwf	??_PedirTodosLosDatos^0,c
  1211  001662  0EBA               	movlw	186
  1212  001664                     u1747:
  1213  001664  2EE8               	decfsz	wreg,f,c
  1214  001666  D7FE               	bra	u1747
  1215  001668  2E1D               	decfsz	??_PedirTodosLosDatos^0,f,c
  1216  00166A  D7FC               	bra	u1747
  1217  00166C  2E1E               	decfsz	(??_PedirTodosLosDatos+1)^0,f,c
  1218  00166E  D7FA               	bra	u1747
  1219  001670  D000               	nop2	
  1220                           
  1221                           ;LCD.c: 157:        PedirDato("Mgn Error Hum",MargenErrorH,1);
  1222  001672  0E2D               	movlw	low STR_4
  1223  001674  6E0A               	movwf	PedirDato@Etiqueta^0,c
  1224  001676  0E08               	movlw	high STR_4
  1225  001678  6E0B               	movwf	(PedirDato@Etiqueta+1)^0,c
  1226  00167A  C01B  F00C         	movff	PedirTodosLosDatos@MargenErrorH,PedirDato@vecLlenar
  1227  00167E  C01C  F00D         	movff	PedirTodosLosDatos@MargenErrorH+1,PedirDato@vecLlenar+1
  1228  001682  0E00               	movlw	0
  1229  001684  6E0F               	movwf	(PedirDato@CantDatos+1)^0,c
  1230  001686  0E01               	movlw	1
  1231  001688  6E0E               	movwf	PedirDato@CantDatos^0,c
  1232  00168A  EC48  F00B         	call	_PedirDato	;wreg free
  1233  00168E  0012               	return		;funcret
  1234  001690                     __end_of_PedirTodosLosDatos:
  1235                           	callstack 0
  1236                           
  1237 ;; *************** function _PedirDato *****************
  1238 ;; Defined at:
  1239 ;;		line 124 in file "LCD.c"
  1240 ;; Parameters:    Size  Location     Type
  1241 ;;  Etiqueta        2    9[COMRAM] PTR unsigned char 
  1242 ;;		 -> STR_4(14), STR_3(14), STR_2(15), STR_1(15), 
  1243 ;;  vecLlenar       2   11[COMRAM] PTR unsigned char 
  1244 ;;		 -> MargenErrorH(1), MargenErrorT(1), Humedad(2), Temperatura(2), 
  1245 ;;  CantDatos       2   13[COMRAM] int 
  1246 ;; Auto vars:     Size  Location     Type
  1247 ;;  i               2   17[COMRAM] int 
  1248 ;;  tecla           1   19[COMRAM] unsigned char 
  1249 ;; Return value:  Size  Location     Type
  1250 ;;                  1    wreg      void 
  1251 ;; Registers used:
  1252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1253 ;; Tracked objects:
  1254 ;;		On entry : 0/0
  1255 ;;		On exit  : 0/0
  1256 ;;		Unchanged: 0/0
  1257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1258 ;;      Params:         6       0       0       0       0       0       0       0       0
  1259 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1260 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1261 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1262 ;;Total ram usage:       11 bytes
  1263 ;; Hardware stack levels used: 1
  1264 ;; Hardware stack levels required when called: 3
  1265 ;; This function calls:
  1266 ;;		_LCD_Char
  1267 ;;		_LCD_Clear
  1268 ;;		_LCD_Command
  1269 ;;		_LCD_String_xy
  1270 ;;		_keyfind
  1271 ;; This function is called by:
  1272 ;;		_PedirTodosLosDatos
  1273 ;; This function uses a non-reentrant model
  1274 ;;
  1275                           
  1276                           	psect	text5
  1277  001690                     __ptext5:
  1278                           	callstack 0
  1279  001690                     _PedirDato:
  1280                           	callstack 26
  1281  001690                     
  1282                           ;LCD.c: 125:      LCD_Clear();
  1283  001690  ECC8  F00E         	call	_LCD_Clear	;wreg free
  1284  001694                     
  1285                           ;LCD.c: 127:      unsigned char tecla;;LCD.c: 128:      LCD_String_xy(0,0,Etiqueta);
  1286  001694  0E00               	movlw	0
  1287  001696  6E05               	movwf	LCD_String_xy@pos^0,c
  1288  001698  C00A  F006         	movff	PedirDato@Etiqueta,LCD_String_xy@msg
  1289  00169C  C00B  F007         	movff	PedirDato@Etiqueta+1,LCD_String_xy@msg+1
  1290  0016A0  0E00               	movlw	0
  1291  0016A2  EC23  F00E         	call	_LCD_String_xy
  1292  0016A6                     
  1293                           ;LCD.c: 129:      LCD_Command(0xC0);
  1294  0016A6  0EC0               	movlw	192
  1295  0016A8  EC96  F00D         	call	_LCD_Command
  1296  0016AC                     
  1297                           ;LCD.c: 131:      for(int i=0 ; i < CantDatos ; i++){
  1298  0016AC  0E00               	movlw	0
  1299  0016AE  6E13               	movwf	(PedirDato@i+1)^0,c
  1300  0016B0  0E00               	movlw	0
  1301  0016B2  6E12               	movwf	PedirDato@i^0,c
  1302  0016B4  EF7E  F00B         	goto	l2228
  1303  0016B8                     l2216:
  1304                           
  1305                           ;LCD.c: 133:      tecla=keyfind();
  1306  0016B8  EC99  F005         	call	_keyfind	;wreg free
  1307  0016BC  6E14               	movwf	PedirDato@tecla^0,c
  1308  0016BE                     
  1309                           ;LCD.c: 134:      }while(tecla=='*'||tecla=='#');
  1310  0016BE  0E2A               	movlw	42
  1311  0016C0  1814               	xorwf	PedirDato@tecla^0,w,c
  1312  0016C2  B4D8               	btfsc	status,2,c
  1313  0016C4  EF66  F00B         	goto	u1491
  1314  0016C8  EF68  F00B         	goto	u1490
  1315  0016CC                     u1491:
  1316  0016CC  EF5C  F00B         	goto	l2216
  1317  0016D0                     u1490:
  1318  0016D0  0E23               	movlw	35
  1319  0016D2  1814               	xorwf	PedirDato@tecla^0,w,c
  1320  0016D4  B4D8               	btfsc	status,2,c
  1321  0016D6  EF6F  F00B         	goto	u1501
  1322  0016DA  EF71  F00B         	goto	u1500
  1323  0016DE                     u1501:
  1324  0016DE  EF5C  F00B         	goto	l2216
  1325  0016E2                     u1500:
  1326  0016E2                     
  1327                           ;LCD.c: 135:      LCD_Char(tecla);
  1328  0016E2  5014               	movf	PedirDato@tecla^0,w,c
  1329  0016E4  EC6E  F00D         	call	_LCD_Char
  1330  0016E8                     
  1331                           ;LCD.c: 136:      vecLlenar[i] = tecla;
  1332  0016E8  5012               	movf	PedirDato@i^0,w,c
  1333  0016EA  240C               	addwf	PedirDato@vecLlenar^0,w,c
  1334  0016EC  6ED9               	movwf	fsr2l,c
  1335  0016EE  5013               	movf	(PedirDato@i+1)^0,w,c
  1336  0016F0  200D               	addwfc	(PedirDato@vecLlenar+1)^0,w,c
  1337  0016F2  6EDA               	movwf	fsr2h,c
  1338  0016F4  C014  FFDF         	movff	PedirDato@tecla,indf2
  1339  0016F8                     
  1340                           ;LCD.c: 138:      }
  1341  0016F8  4A12               	infsnz	PedirDato@i^0,f,c
  1342  0016FA  2A13               	incf	(PedirDato@i+1)^0,f,c
  1343  0016FC                     l2228:
  1344  0016FC  500E               	movf	PedirDato@CantDatos^0,w,c
  1345  0016FE  5C12               	subwf	PedirDato@i^0,w,c
  1346  001700  5013               	movf	(PedirDato@i+1)^0,w,c
  1347  001702  0A80               	xorlw	128
  1348  001704  6E10               	movwf	??_PedirDato^0,c
  1349  001706  500F               	movf	(PedirDato@CantDatos+1)^0,w,c
  1350  001708  0A80               	xorlw	128
  1351  00170A  5810               	subwfb	??_PedirDato^0,w,c
  1352  00170C  A0D8               	btfss	status,0,c
  1353  00170E  EF8B  F00B         	goto	u1511
  1354  001712  EF8D  F00B         	goto	u1510
  1355  001716                     u1511:
  1356  001716  EF5C  F00B         	goto	l2216
  1357  00171A                     u1510:
  1358  00171A                     
  1359                           ;LCD.c: 139:      _delay((unsigned long)((100)*(8000000L/4000.0)));
  1360  00171A  0E02               	movlw	2
  1361  00171C  6E11               	movwf	(??_PedirDato+1)^0,c
  1362  00171E  0E04               	movlw	4
  1363  001720  6E10               	movwf	??_PedirDato^0,c
  1364  001722  0EBA               	movlw	186
  1365  001724                     u1757:
  1366  001724  2EE8               	decfsz	wreg,f,c
  1367  001726  D7FE               	bra	u1757
  1368  001728  2E10               	decfsz	??_PedirDato^0,f,c
  1369  00172A  D7FC               	bra	u1757
  1370  00172C  2E11               	decfsz	(??_PedirDato+1)^0,f,c
  1371  00172E  D7FA               	bra	u1757
  1372  001730  D000               	nop2	
  1373  001732                     
  1374                           ;LCD.c: 140:      LCD_Clear();
  1375  001732  ECC8  F00E         	call	_LCD_Clear	;wreg free
  1376  001736  0012               	return		;funcret
  1377  001738                     __end_of_PedirDato:
  1378                           	callstack 0
  1379                           
  1380 ;; *************** function _keyfind *****************
  1381 ;; Defined at:
  1382 ;;		line 21 in file "keypad.c"
  1383 ;; Parameters:    Size  Location     Type
  1384 ;;		None
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;		None
  1387 ;; Return value:  Size  Location     Type
  1388 ;;                  1    wreg      unsigned char 
  1389 ;; Registers used:
  1390 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1396 ;;      Params:         0       0       0       0       0       0       0       0       0
  1397 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1398 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1399 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1400 ;;Total ram usage:        1 bytes
  1401 ;; Hardware stack levels used: 1
  1402 ;; This function calls:
  1403 ;;		Nothing
  1404 ;; This function is called by:
  1405 ;;		_PedirDato
  1406 ;; This function uses a non-reentrant model
  1407 ;;
  1408                           
  1409                           	psect	text6
  1410  000B32                     __ptext6:
  1411                           	callstack 0
  1412  000B32                     _keyfind:
  1413                           	callstack 28
  1414  000B32                     
  1415                           ;keypad.c: 24:          TRISB = 0xf0;
  1416  000B32  0EF0               	movlw	240
  1417  000B34  6E93               	movwf	147,c	;volatile
  1418                           
  1419                           ;keypad.c: 25:          LATB = 0xf0;
  1420  000B36  0EF0               	movlw	240
  1421  000B38  6E8A               	movwf	138,c	;volatile
  1422  000B3A                     l2104:
  1423                           
  1424                           ;keypad.c: 29:         {;keypad.c: 31:             col_loc = PORTB & 0xf0;
  1425  000B3A  5081               	movf	129,w,c	;volatile
  1426  000B3C  0BF0               	andlw	240
  1427  000B3E  0100               	movlb	0	; () banked
  1428  000B40  6F72               	movwf	_col_loc& (0+255),b
  1429  000B42                     
  1430                           ; BSR set to: 0
  1431                           ;keypad.c: 33:         }while(col_loc!=0xf0);
  1432  000B42  0EF0               	movlw	240
  1433  000B44  1972               	xorwf	_col_loc& (0+255),w,b
  1434  000B46  A4D8               	btfss	status,2,c
  1435  000B48  EFA8  F005         	goto	u1331
  1436  000B4C  EFAA  F005         	goto	u1330
  1437  000B50                     u1331:
  1438  000B50  EF9D  F005         	goto	l2104
  1439  000B54                     u1330:
  1440  000B54                     
  1441                           ; BSR set to: 0
  1442                           ;keypad.c: 34:          col_loc = PORTB & 0xf0;
  1443  000B54  5081               	movf	129,w,c	;volatile
  1444  000B56  0BF0               	andlw	240
  1445  000B58  6F72               	movwf	_col_loc& (0+255),b
  1446                           
  1447                           ;keypad.c: 35:       }while(col_loc!=0xf0);
  1448  000B5A  0EF0               	movlw	240
  1449  000B5C  1972               	xorwf	_col_loc& (0+255),w,b
  1450  000B5E  A4D8               	btfss	status,2,c
  1451  000B60  EFB4  F005         	goto	u1341
  1452  000B64  EFB6  F005         	goto	u1340
  1453  000B68                     u1341:
  1454  000B68  EF9D  F005         	goto	l2104
  1455  000B6C                     u1340:
  1456  000B6C                     
  1457                           ; BSR set to: 0
  1458                           ;keypad.c: 37:       _delay((unsigned long)((30)*(8000000L/4000.0)));
  1459  000B6C  0E4E               	movlw	78
  1460  000B6E  6E01               	movwf	??_keyfind^0,c
  1461  000B70  0EEB               	movlw	235
  1462  000B72                     u1767:
  1463  000B72  2EE8               	decfsz	wreg,f,c
  1464  000B74  D7FE               	bra	u1767
  1465  000B76  2E01               	decfsz	??_keyfind^0,f,c
  1466  000B78  D7FC               	bra	u1767
  1467  000B7A  F000               	nop	
  1468  000B7C                     
  1469                           ;keypad.c: 38:         LATB = 0xf0;
  1470  000B7C  0EF0               	movlw	240
  1471  000B7E  6E8A               	movwf	138,c	;volatile
  1472  000B80                     l2114:
  1473                           
  1474                           ;keypad.c: 42:             {;keypad.c: 43:                 col_loc = PORTB & 0xf0;
  1475  000B80  5081               	movf	129,w,c	;volatile
  1476  000B82  0BF0               	andlw	240
  1477  000B84  0100               	movlb	0	; () banked
  1478  000B86  6F72               	movwf	_col_loc& (0+255),b
  1479  000B88                     
  1480                           ; BSR set to: 0
  1481                           ;keypad.c: 44:             }while(col_loc==0xf0);
  1482  000B88  0EF0               	movlw	240
  1483  000B8A  1972               	xorwf	_col_loc& (0+255),w,b
  1484  000B8C  B4D8               	btfsc	status,2,c
  1485  000B8E  EFCB  F005         	goto	u1351
  1486  000B92  EFCD  F005         	goto	u1350
  1487  000B96                     u1351:
  1488  000B96  EFC0  F005         	goto	l2114
  1489  000B9A                     u1350:
  1490  000B9A                     
  1491                           ; BSR set to: 0
  1492                           ;keypad.c: 45:          col_loc = PORTB & 0xf0;
  1493  000B9A  5081               	movf	129,w,c	;volatile
  1494  000B9C  0BF0               	andlw	240
  1495  000B9E  6F72               	movwf	_col_loc& (0+255),b
  1496                           
  1497                           ;keypad.c: 46:         }while(col_loc==0xf0);
  1498  000BA0  0EF0               	movlw	240
  1499  000BA2  1972               	xorwf	_col_loc& (0+255),w,b
  1500  000BA4  B4D8               	btfsc	status,2,c
  1501  000BA6  EFD7  F005         	goto	u1361
  1502  000BAA  EFD9  F005         	goto	u1360
  1503  000BAE                     u1361:
  1504  000BAE  EFC0  F005         	goto	l2114
  1505  000BB2                     u1360:
  1506  000BB2                     
  1507                           ; BSR set to: 0
  1508                           ;keypad.c: 48:         _delay((unsigned long)((30)*(8000000L/4000.0)));
  1509  000BB2  0E4E               	movlw	78
  1510  000BB4  6E01               	movwf	??_keyfind^0,c
  1511  000BB6  0EEB               	movlw	235
  1512  000BB8                     u1777:
  1513  000BB8  2EE8               	decfsz	wreg,f,c
  1514  000BBA  D7FE               	bra	u1777
  1515  000BBC  2E01               	decfsz	??_keyfind^0,f,c
  1516  000BBE  D7FC               	bra	u1777
  1517  000BC0  F000               	nop	
  1518  000BC2                     
  1519                           ;keypad.c: 50:         col_loc = PORTB & 0xf0;
  1520  000BC2  5081               	movf	129,w,c	;volatile
  1521  000BC4  0BF0               	andlw	240
  1522  000BC6  0100               	movlb	0	; () banked
  1523  000BC8  6F72               	movwf	_col_loc& (0+255),b
  1524  000BCA                     l2124:
  1525                           
  1526                           ; BSR set to: 0
  1527                           ;keypad.c: 55:     {;keypad.c: 56:         LATB = 0xfe;
  1528  000BCA  0EFE               	movlw	254
  1529  000BCC  6E8A               	movwf	138,c	;volatile
  1530  000BCE                     
  1531                           ; BSR set to: 0
  1532                           ;keypad.c: 57:         col_loc = PORTB & 0xf0;
  1533  000BCE  5081               	movf	129,w,c	;volatile
  1534  000BD0  0BF0               	andlw	240
  1535  000BD2  6F72               	movwf	_col_loc& (0+255),b
  1536  000BD4                     
  1537                           ; BSR set to: 0
  1538                           ;keypad.c: 58:         temp_col=col_loc;
  1539  000BD4  C072  F070         	movff	_col_loc,_temp_col
  1540  000BD8                     
  1541                           ; BSR set to: 0
  1542                           ;keypad.c: 59:         if(col_loc!=0xf0)
  1543  000BD8  0EF0               	movlw	240
  1544  000BDA  1972               	xorwf	_col_loc& (0+255),w,b
  1545  000BDC  B4D8               	btfsc	status,2,c
  1546  000BDE  EFF3  F005         	goto	u1371
  1547  000BE2  EFF5  F005         	goto	u1370
  1548  000BE6                     u1371:
  1549  000BE6  EF07  F006         	goto	l2136
  1550  000BEA                     u1370:
  1551  000BEA                     
  1552                           ; BSR set to: 0
  1553                           ;keypad.c: 60:         {;keypad.c: 61:             rowloc=0;
  1554  000BEA  0E00               	movlw	0
  1555  000BEC  6F71               	movwf	_rowloc& (0+255),b
  1556                           
  1557                           ;keypad.c: 62:             while(temp_col!=0xf0)
  1558  000BEE  EFFC  F005         	goto	l166
  1559  000BF2                     l2134:
  1560                           
  1561                           ; BSR set to: 0
  1562                           ;keypad.c: 63:             {;keypad.c: 64:                 temp_col = PORTB & 0xf0;
  1563  000BF2  5081               	movf	129,w,c	;volatile
  1564  000BF4  0BF0               	andlw	240
  1565  000BF6  6F70               	movwf	_temp_col& (0+255),b
  1566  000BF8                     l166:
  1567                           
  1568                           ; BSR set to: 0
  1569                           ;keypad.c: 62:             while(temp_col!=0xf0)
  1570  000BF8  0EF0               	movlw	240
  1571  000BFA  1970               	xorwf	_temp_col& (0+255),w,b
  1572  000BFC  A4D8               	btfss	status,2,c
  1573  000BFE  EF03  F006         	goto	u1381
  1574  000C02  EF05  F006         	goto	u1380
  1575  000C06                     u1381:
  1576  000C06  EFF9  F005         	goto	l2134
  1577  000C0A                     u1380:
  1578  000C0A  EF6D  F006         	goto	l2172
  1579  000C0E                     l2136:
  1580                           
  1581                           ; BSR set to: 0
  1582                           ;keypad.c: 69:         LATB = 0xfd;
  1583  000C0E  0EFD               	movlw	253
  1584  000C10  6E8A               	movwf	138,c	;volatile
  1585  000C12                     
  1586                           ; BSR set to: 0
  1587                           ;keypad.c: 70:         col_loc = PORTB & 0xf0;
  1588  000C12  5081               	movf	129,w,c	;volatile
  1589  000C14  0BF0               	andlw	240
  1590  000C16  6F72               	movwf	_col_loc& (0+255),b
  1591  000C18                     
  1592                           ; BSR set to: 0
  1593                           ;keypad.c: 71:         temp_col=col_loc;
  1594  000C18  C072  F070         	movff	_col_loc,_temp_col
  1595  000C1C                     
  1596                           ; BSR set to: 0
  1597                           ;keypad.c: 72:         if(col_loc!=0xf0)
  1598  000C1C  0EF0               	movlw	240
  1599  000C1E  1972               	xorwf	_col_loc& (0+255),w,b
  1600  000C20  B4D8               	btfsc	status,2,c
  1601  000C22  EF15  F006         	goto	u1391
  1602  000C26  EF17  F006         	goto	u1390
  1603  000C2A                     u1391:
  1604  000C2A  EF29  F006         	goto	l2148
  1605  000C2E                     u1390:
  1606  000C2E                     
  1607                           ; BSR set to: 0
  1608                           ;keypad.c: 73:         {;keypad.c: 74:             rowloc=1;
  1609  000C2E  0E01               	movlw	1
  1610  000C30  6F71               	movwf	_rowloc& (0+255),b
  1611                           
  1612                           ;keypad.c: 75:             while(temp_col!=0xf0)
  1613  000C32  EF1E  F006         	goto	l171
  1614  000C36                     l2146:
  1615                           
  1616                           ; BSR set to: 0
  1617                           ;keypad.c: 76:             {;keypad.c: 77:                 temp_col = PORTB & 0xf0;
  1618  000C36  5081               	movf	129,w,c	;volatile
  1619  000C38  0BF0               	andlw	240
  1620  000C3A  6F70               	movwf	_temp_col& (0+255),b
  1621  000C3C                     l171:
  1622                           
  1623                           ; BSR set to: 0
  1624                           ;keypad.c: 75:             while(temp_col!=0xf0)
  1625  000C3C  0EF0               	movlw	240
  1626  000C3E  1970               	xorwf	_temp_col& (0+255),w,b
  1627  000C40  A4D8               	btfss	status,2,c
  1628  000C42  EF25  F006         	goto	u1401
  1629  000C46  EF27  F006         	goto	u1400
  1630  000C4A                     u1401:
  1631  000C4A  EF1B  F006         	goto	l2146
  1632  000C4E                     u1400:
  1633  000C4E  EF6D  F006         	goto	l2172
  1634  000C52                     l2148:
  1635                           
  1636                           ; BSR set to: 0
  1637                           ;keypad.c: 82:         LATB = 0xfb;
  1638  000C52  0EFB               	movlw	251
  1639  000C54  6E8A               	movwf	138,c	;volatile
  1640  000C56                     
  1641                           ; BSR set to: 0
  1642                           ;keypad.c: 83:         col_loc = PORTB & 0xf0;
  1643  000C56  5081               	movf	129,w,c	;volatile
  1644  000C58  0BF0               	andlw	240
  1645  000C5A  6F72               	movwf	_col_loc& (0+255),b
  1646  000C5C                     
  1647                           ; BSR set to: 0
  1648                           ;keypad.c: 84:         temp_col=col_loc;
  1649  000C5C  C072  F070         	movff	_col_loc,_temp_col
  1650  000C60                     
  1651                           ; BSR set to: 0
  1652                           ;keypad.c: 85:         if(col_loc!=0xf0)
  1653  000C60  0EF0               	movlw	240
  1654  000C62  1972               	xorwf	_col_loc& (0+255),w,b
  1655  000C64  B4D8               	btfsc	status,2,c
  1656  000C66  EF37  F006         	goto	u1411
  1657  000C6A  EF39  F006         	goto	u1410
  1658  000C6E                     u1411:
  1659  000C6E  EF4B  F006         	goto	l2160
  1660  000C72                     u1410:
  1661  000C72                     
  1662                           ; BSR set to: 0
  1663                           ;keypad.c: 86:         {;keypad.c: 87:             rowloc=2;
  1664  000C72  0E02               	movlw	2
  1665  000C74  6F71               	movwf	_rowloc& (0+255),b
  1666                           
  1667                           ;keypad.c: 88:             while(temp_col!=0xf0)
  1668  000C76  EF40  F006         	goto	l175
  1669  000C7A                     l2158:
  1670                           
  1671                           ; BSR set to: 0
  1672                           ;keypad.c: 89:             {;keypad.c: 90:                 temp_col = PORTB & 0xf0;
  1673  000C7A  5081               	movf	129,w,c	;volatile
  1674  000C7C  0BF0               	andlw	240
  1675  000C7E  6F70               	movwf	_temp_col& (0+255),b
  1676  000C80                     l175:
  1677                           
  1678                           ; BSR set to: 0
  1679                           ;keypad.c: 88:             while(temp_col!=0xf0)
  1680  000C80  0EF0               	movlw	240
  1681  000C82  1970               	xorwf	_temp_col& (0+255),w,b
  1682  000C84  A4D8               	btfss	status,2,c
  1683  000C86  EF47  F006         	goto	u1421
  1684  000C8A  EF49  F006         	goto	u1420
  1685  000C8E                     u1421:
  1686  000C8E  EF3D  F006         	goto	l2158
  1687  000C92                     u1420:
  1688  000C92  EF6D  F006         	goto	l2172
  1689  000C96                     l2160:
  1690                           
  1691                           ; BSR set to: 0
  1692                           ;keypad.c: 95:         LATB = 0xf7;
  1693  000C96  0EF7               	movlw	247
  1694  000C98  6E8A               	movwf	138,c	;volatile
  1695  000C9A                     
  1696                           ; BSR set to: 0
  1697                           ;keypad.c: 96:         col_loc = PORTB & 0xf0;
  1698  000C9A  5081               	movf	129,w,c	;volatile
  1699  000C9C  0BF0               	andlw	240
  1700  000C9E  6F72               	movwf	_col_loc& (0+255),b
  1701  000CA0                     
  1702                           ; BSR set to: 0
  1703                           ;keypad.c: 97:         temp_col=col_loc;
  1704  000CA0  C072  F070         	movff	_col_loc,_temp_col
  1705  000CA4                     
  1706                           ; BSR set to: 0
  1707                           ;keypad.c: 98:         if(col_loc!=0xf0)
  1708  000CA4  0EF0               	movlw	240
  1709  000CA6  1972               	xorwf	_col_loc& (0+255),w,b
  1710  000CA8  B4D8               	btfsc	status,2,c
  1711  000CAA  EF59  F006         	goto	u1431
  1712  000CAE  EF5B  F006         	goto	u1430
  1713  000CB2                     u1431:
  1714  000CB2  EFE5  F005         	goto	l2124
  1715  000CB6                     u1430:
  1716  000CB6                     
  1717                           ; BSR set to: 0
  1718                           ;keypad.c: 99:         {;keypad.c: 100:             rowloc=3;
  1719  000CB6  0E03               	movlw	3
  1720  000CB8  6F71               	movwf	_rowloc& (0+255),b
  1721                           
  1722                           ;keypad.c: 101:             while(temp_col!=0xf0)
  1723  000CBA  EF62  F006         	goto	l179
  1724  000CBE                     l2170:
  1725                           
  1726                           ; BSR set to: 0
  1727                           ;keypad.c: 102:             {;keypad.c: 103:                 temp_col = PORTB & 0xf0;
  1728  000CBE  5081               	movf	129,w,c	;volatile
  1729  000CC0  0BF0               	andlw	240
  1730  000CC2  6F70               	movwf	_temp_col& (0+255),b
  1731  000CC4                     l179:
  1732                           
  1733                           ; BSR set to: 0
  1734                           ;keypad.c: 101:             while(temp_col!=0xf0)
  1735  000CC4  0EF0               	movlw	240
  1736  000CC6  1970               	xorwf	_temp_col& (0+255),w,b
  1737  000CC8  A4D8               	btfss	status,2,c
  1738  000CCA  EF69  F006         	goto	u1441
  1739  000CCE  EF6B  F006         	goto	u1440
  1740  000CD2                     u1441:
  1741  000CD2  EF5F  F006         	goto	l2170
  1742  000CD6                     u1440:
  1743  000CD6  EF6D  F006         	goto	l2172
  1744  000CDA                     l169:
  1745  000CDA                     l2172:
  1746                           
  1747                           ; BSR set to: 0
  1748                           ;keypad.c: 112:     {;keypad.c: 114:         if(col_loc==0xe0)
  1749  000CDA  0EE0               	movlw	224
  1750  000CDC  1972               	xorwf	_col_loc& (0+255),w,b
  1751  000CDE  A4D8               	btfss	status,2,c
  1752  000CE0  EF74  F006         	goto	u1451
  1753  000CE4  EF76  F006         	goto	u1450
  1754  000CE8                     u1451:
  1755  000CE8  EF81  F006         	goto	l2180
  1756  000CEC                     u1450:
  1757  000CEC                     
  1758                           ; BSR set to: 0
  1759                           ;keypad.c: 115:         {;keypad.c: 116:              return keypad[rowloc][0];
  1760  000CEC  5171               	movf	_rowloc& (0+255),w,b
  1761  000CEE  0D03               	mullw	3
  1762  000CF0  0EA5               	movlw	low _keypad
  1763  000CF2  24F3               	addwf	243,w,c
  1764  000CF4  6ED9               	movwf	fsr2l,c
  1765  000CF6  0E00               	movlw	high _keypad
  1766  000CF8  20F4               	addwfc	prodh,w,c
  1767  000CFA  6EDA               	movwf	fsr2h,c
  1768  000CFC  50DF               	movf	indf2,w,c
  1769  000CFE  EFA7  F006         	goto	l185
  1770  000D02                     l2180:
  1771                           
  1772                           ; BSR set to: 0
  1773                           ;keypad.c: 119:             if(col_loc==0xd0)
  1774  000D02  0ED0               	movlw	208
  1775  000D04  1972               	xorwf	_col_loc& (0+255),w,b
  1776  000D06  A4D8               	btfss	status,2,c
  1777  000D08  EF88  F006         	goto	u1461
  1778  000D0C  EF8A  F006         	goto	u1460
  1779  000D10                     u1461:
  1780  000D10  EF95  F006         	goto	l2188
  1781  000D14                     u1460:
  1782  000D14                     
  1783                           ; BSR set to: 0
  1784                           ;keypad.c: 120:         {;keypad.c: 121:             return keypad[rowloc][1];
  1785  000D14  5171               	movf	_rowloc& (0+255),w,b
  1786  000D16  0D03               	mullw	3
  1787  000D18  0EA6               	movlw	low (_keypad+1)
  1788  000D1A  24F3               	addwf	243,w,c
  1789  000D1C  6ED9               	movwf	fsr2l,c
  1790  000D1E  0E00               	movlw	high (_keypad+1)
  1791  000D20  20F4               	addwfc	prodh,w,c
  1792  000D22  6EDA               	movwf	fsr2h,c
  1793  000D24  50DF               	movf	indf2,w,c
  1794  000D26  EFA7  F006         	goto	l185
  1795  000D2A                     l2188:
  1796                           
  1797                           ; BSR set to: 0
  1798                           ;keypad.c: 124:             if(col_loc==0xb0)
  1799  000D2A  0EB0               	movlw	176
  1800  000D2C  1972               	xorwf	_col_loc& (0+255),w,b
  1801  000D2E  A4D8               	btfss	status,2,c
  1802  000D30  EF9C  F006         	goto	u1471
  1803  000D34  EF9E  F006         	goto	u1470
  1804  000D38                     u1471:
  1805  000D38  EF6D  F006         	goto	l169
  1806  000D3C                     u1470:
  1807  000D3C                     
  1808                           ; BSR set to: 0
  1809                           ;keypad.c: 125:         {;keypad.c: 126:             return keypad[rowloc][2];
  1810  000D3C  5171               	movf	_rowloc& (0+255),w,b
  1811  000D3E  0D03               	mullw	3
  1812  000D40  0EA7               	movlw	low (_keypad+2)
  1813  000D42  24F3               	addwf	243,w,c
  1814  000D44  6ED9               	movwf	fsr2l,c
  1815  000D46  0E00               	movlw	high (_keypad+2)
  1816  000D48  20F4               	addwfc	prodh,w,c
  1817  000D4A  6EDA               	movwf	fsr2h,c
  1818  000D4C  50DF               	movf	indf2,w,c
  1819  000D4E                     l185:
  1820                           
  1821                           ; BSR set to: 0
  1822  000D4E  0012               	return		;funcret
  1823  000D50                     __end_of_keyfind:
  1824                           	callstack 0
  1825                           
  1826 ;; *************** function _LCD_Clear *****************
  1827 ;; Defined at:
  1828 ;;		line 109 in file "LCD.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;		None
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;		None
  1833 ;; Return value:  Size  Location     Type
  1834 ;;                  1    wreg      void 
  1835 ;; Registers used:
  1836 ;;		wreg, status,2, status,0, cstack
  1837 ;; Tracked objects:
  1838 ;;		On entry : 0/0
  1839 ;;		On exit  : 0/0
  1840 ;;		Unchanged: 0/0
  1841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1842 ;;      Params:         0       0       0       0       0       0       0       0       0
  1843 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1844 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1845 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1846 ;;Total ram usage:        1 bytes
  1847 ;; Hardware stack levels used: 1
  1848 ;; Hardware stack levels required when called: 1
  1849 ;; This function calls:
  1850 ;;		_LCD_Command
  1851 ;; This function is called by:
  1852 ;;		_PedirDato
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856                           	psect	text7
  1857  001D90                     __ptext7:
  1858                           	callstack 0
  1859  001D90                     _LCD_Clear:
  1860                           	callstack 27
  1861  001D90                     
  1862                           ;LCD.c: 111:     LCD_Command(0x01);
  1863  001D90  0E01               	movlw	1
  1864  001D92  EC96  F00D         	call	_LCD_Command
  1865  001D96                     
  1866                           ;LCD.c: 112:     _delay((unsigned long)((3)*(8000000L/4000.0)));
  1867  001D96  0E08               	movlw	8
  1868  001D98  6E03               	movwf	??_LCD_Clear^0,c
  1869  001D9A  0ECA               	movlw	202
  1870  001D9C                     u1787:
  1871  001D9C  2EE8               	decfsz	wreg,f,c
  1872  001D9E  D7FE               	bra	u1787
  1873  001DA0  2E03               	decfsz	??_LCD_Clear^0,f,c
  1874  001DA2  D7FC               	bra	u1787
  1875  001DA4                     
  1876                           ;LCD.c: 113:     LCD_Command (0x80);
  1877  001DA4  0E80               	movlw	128
  1878  001DA6  EC96  F00D         	call	_LCD_Command
  1879                           
  1880                           ;LCD.c: 114:     _delay((unsigned long)((1)*(8000000L/4000.0)));
  1881  001DAA  0E03               	movlw	3
  1882  001DAC  6E03               	movwf	??_LCD_Clear^0,c
  1883  001DAE  0E98               	movlw	152
  1884  001DB0                     u1797:
  1885  001DB0  2EE8               	decfsz	wreg,f,c
  1886  001DB2  D7FE               	bra	u1797
  1887  001DB4  2E03               	decfsz	??_LCD_Clear^0,f,c
  1888  001DB6  D7FC               	bra	u1797
  1889  001DB8  0012               	return		;funcret
  1890  001DBA                     __end_of_LCD_Clear:
  1891                           	callstack 0
  1892                           
  1893 ;; *************** function _MostrarTemperatura *****************
  1894 ;; Defined at:
  1895 ;;		line 174 in file "LCD.c"
  1896 ;; Parameters:    Size  Location     Type
  1897 ;;  Cadena          2    8[BANK0 ] PTR unsigned char 
  1898 ;;		 -> Cadena(10), 
  1899 ;;  Temperatura     1   10[BANK0 ] unsigned char 
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;		None
  1902 ;; Return value:  Size  Location     Type
  1903 ;;                  1    wreg      void 
  1904 ;; Registers used:
  1905 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1906 ;; Tracked objects:
  1907 ;;		On entry : 0/0
  1908 ;;		On exit  : 0/0
  1909 ;;		Unchanged: 0/0
  1910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1911 ;;      Params:         0       3       0       0       0       0       0       0       0
  1912 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1913 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1914 ;;      Totals:         0       3       0       0       0       0       0       0       0
  1915 ;;Total ram usage:        3 bytes
  1916 ;; Hardware stack levels used: 1
  1917 ;; Hardware stack levels required when called: 8
  1918 ;; This function calls:
  1919 ;;		_LCD_Char
  1920 ;;		_LCD_String
  1921 ;;		_LCD_String_xy
  1922 ;;		_sprintf
  1923 ;; This function is called by:
  1924 ;;		_main
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           	psect	text8
  1929  001838                     __ptext8:
  1930                           	callstack 0
  1931  001838                     _MostrarTemperatura:
  1932                           	callstack 22
  1933  001838                     
  1934                           ;LCD.c: 175:        sprintf(Cadena,"%d",Temperatura);
  1935  001838  C0BA  F058         	movff	MostrarTemperatura@Cadena,sprintf@s
  1936  00183C  C0BB  F059         	movff	MostrarTemperatura@Cadena+1,sprintf@s+1
  1937  001840  0E4B               	movlw	low (STR_6+1)
  1938  001842  6E5A               	movwf	sprintf@fmt^0,c
  1939  001844  0E08               	movlw	high (STR_6+1)
  1940  001846  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1941  001848  C0BC  F05C         	movff	MostrarTemperatura@Temperatura,?_sprintf+4
  1942  00184C  6A5D               	clrf	(?_sprintf+5)^0,c
  1943  00184E  EC45  F00D         	call	_sprintf	;wreg free
  1944  001852                     
  1945                           ;LCD.c: 176:        LCD_String_xy(2,0,Cadena);
  1946  001852  0E00               	movlw	0
  1947  001854  6E05               	movwf	LCD_String_xy@pos^0,c
  1948  001856  C0BA  F006         	movff	MostrarTemperatura@Cadena,LCD_String_xy@msg
  1949  00185A  C0BB  F007         	movff	MostrarTemperatura@Cadena+1,LCD_String_xy@msg+1
  1950  00185E  0E02               	movlw	2
  1951  001860  EC23  F00E         	call	_LCD_String_xy
  1952  001864                     
  1953                           ;LCD.c: 177:        sprintf(Cadena,".%d",0);
  1954  001864  C0BA  F058         	movff	MostrarTemperatura@Cadena,sprintf@s
  1955  001868  C0BB  F059         	movff	MostrarTemperatura@Cadena+1,sprintf@s+1
  1956  00186C  0E4A               	movlw	low STR_6
  1957  00186E  6E5A               	movwf	sprintf@fmt^0,c
  1958  001870  0E08               	movlw	high STR_6
  1959  001872  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1960  001874  0E00               	movlw	0
  1961  001876  6E5D               	movwf	(?_sprintf+5)^0,c
  1962  001878  0E00               	movlw	0
  1963  00187A  6E5C               	movwf	(?_sprintf+4)^0,c
  1964  00187C  EC45  F00D         	call	_sprintf	;wreg free
  1965  001880                     
  1966                           ;LCD.c: 178:        LCD_Char(0xdf);
  1967  001880  0EDF               	movlw	223
  1968  001882  EC6E  F00D         	call	_LCD_Char
  1969  001886                     
  1970                           ;LCD.c: 179:        sprintf(Cadena,"C Temp.");
  1971  001886  C0BA  F058         	movff	MostrarTemperatura@Cadena,sprintf@s
  1972  00188A  C0BB  F059         	movff	MostrarTemperatura@Cadena+1,sprintf@s+1
  1973  00188E  0E3B               	movlw	low STR_10
  1974  001890  6E5A               	movwf	sprintf@fmt^0,c
  1975  001892  0E08               	movlw	high STR_10
  1976  001894  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1977  001896  EC45  F00D         	call	_sprintf	;wreg free
  1978  00189A                     
  1979                           ;LCD.c: 180:        LCD_String(Cadena);
  1980  00189A  C0BA  F003         	movff	MostrarTemperatura@Cadena,LCD_String@msg
  1981  00189E  C0BB  F004         	movff	MostrarTemperatura@Cadena+1,LCD_String@msg+1
  1982  0018A2  ECBD  F00C         	call	_LCD_String	;wreg free
  1983  0018A6  0012               	return		;funcret
  1984  0018A8                     __end_of_MostrarTemperatura:
  1985                           	callstack 0
  1986                           
  1987 ;; *************** function _MostrarHumedad *****************
  1988 ;; Defined at:
  1989 ;;		line 163 in file "LCD.c"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;  Cadena          2    8[BANK0 ] PTR unsigned char 
  1992 ;;		 -> Cadena(10), 
  1993 ;;  Humedad         1   10[BANK0 ] unsigned char 
  1994 ;; Auto vars:     Size  Location     Type
  1995 ;;		None
  1996 ;; Return value:  Size  Location     Type
  1997 ;;                  1    wreg      void 
  1998 ;; Registers used:
  1999 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2000 ;; Tracked objects:
  2001 ;;		On entry : 0/0
  2002 ;;		On exit  : 0/0
  2003 ;;		Unchanged: 0/0
  2004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2005 ;;      Params:         0       3       0       0       0       0       0       0       0
  2006 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2007 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2008 ;;      Totals:         0       3       0       0       0       0       0       0       0
  2009 ;;Total ram usage:        3 bytes
  2010 ;; Hardware stack levels used: 1
  2011 ;; Hardware stack levels required when called: 8
  2012 ;; This function calls:
  2013 ;;		_LCD_Char
  2014 ;;		_LCD_String
  2015 ;;		_LCD_String_xy
  2016 ;;		_sprintf
  2017 ;; This function is called by:
  2018 ;;		_main
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022                           	psect	text9
  2023  0018A8                     __ptext9:
  2024                           	callstack 0
  2025  0018A8                     _MostrarHumedad:
  2026                           	callstack 22
  2027  0018A8                     
  2028                           ;LCD.c: 164:         sprintf(Cadena,"%d",Humedad);
  2029  0018A8  C0BA  F058         	movff	MostrarHumedad@Cadena,sprintf@s
  2030  0018AC  C0BB  F059         	movff	MostrarHumedad@Cadena+1,sprintf@s+1
  2031  0018B0  0E4B               	movlw	low (STR_6+1)
  2032  0018B2  6E5A               	movwf	sprintf@fmt^0,c
  2033  0018B4  0E08               	movlw	high (STR_6+1)
  2034  0018B6  6E5B               	movwf	(sprintf@fmt+1)^0,c
  2035  0018B8  C0BC  F05C         	movff	MostrarHumedad@Humedad,?_sprintf+4
  2036  0018BC  6A5D               	clrf	(?_sprintf+5)^0,c
  2037  0018BE  EC45  F00D         	call	_sprintf	;wreg free
  2038  0018C2                     
  2039                           ;LCD.c: 165:         LCD_String_xy(0,0,Cadena);
  2040  0018C2  0E00               	movlw	0
  2041  0018C4  6E05               	movwf	LCD_String_xy@pos^0,c
  2042  0018C6  C0BA  F006         	movff	MostrarHumedad@Cadena,LCD_String_xy@msg
  2043  0018CA  C0BB  F007         	movff	MostrarHumedad@Cadena+1,LCD_String_xy@msg+1
  2044  0018CE  0E00               	movlw	0
  2045  0018D0  EC23  F00E         	call	_LCD_String_xy
  2046  0018D4                     
  2047                           ;LCD.c: 166:         sprintf(Cadena,".%d",0);
  2048  0018D4  C0BA  F058         	movff	MostrarHumedad@Cadena,sprintf@s
  2049  0018D8  C0BB  F059         	movff	MostrarHumedad@Cadena+1,sprintf@s+1
  2050  0018DC  0E4A               	movlw	low STR_6
  2051  0018DE  6E5A               	movwf	sprintf@fmt^0,c
  2052  0018E0  0E08               	movlw	high STR_6
  2053  0018E2  6E5B               	movwf	(sprintf@fmt+1)^0,c
  2054  0018E4  0E00               	movlw	0
  2055  0018E6  6E5D               	movwf	(?_sprintf+5)^0,c
  2056  0018E8  0E00               	movlw	0
  2057  0018EA  6E5C               	movwf	(?_sprintf+4)^0,c
  2058  0018EC  EC45  F00D         	call	_sprintf	;wreg free
  2059  0018F0                     
  2060                           ;LCD.c: 167:         LCD_Char('%');
  2061  0018F0  0E25               	movlw	37
  2062  0018F2  EC6E  F00D         	call	_LCD_Char
  2063  0018F6                     
  2064                           ;LCD.c: 168:         sprintf(Cadena,"  Hum.");
  2065  0018F6  C0BA  F058         	movff	MostrarHumedad@Cadena,sprintf@s
  2066  0018FA  C0BB  F059         	movff	MostrarHumedad@Cadena+1,sprintf@s+1
  2067  0018FE  0E43               	movlw	low STR_7
  2068  001900  6E5A               	movwf	sprintf@fmt^0,c
  2069  001902  0E08               	movlw	high STR_7
  2070  001904  6E5B               	movwf	(sprintf@fmt+1)^0,c
  2071  001906  EC45  F00D         	call	_sprintf	;wreg free
  2072  00190A                     
  2073                           ;LCD.c: 169:         LCD_String(Cadena);
  2074  00190A  C0BA  F003         	movff	MostrarHumedad@Cadena,LCD_String@msg
  2075  00190E  C0BB  F004         	movff	MostrarHumedad@Cadena+1,LCD_String@msg+1
  2076  001912  ECBD  F00C         	call	_LCD_String	;wreg free
  2077  001916  0012               	return		;funcret
  2078  001918                     __end_of_MostrarHumedad:
  2079                           	callstack 0
  2080                           
  2081 ;; *************** function _sprintf *****************
  2082 ;; Defined at:
  2083 ;;		line 9 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\nf_sprintf.c"
  2084 ;; Parameters:    Size  Location     Type
  2085 ;;  s               2   87[COMRAM] PTR unsigned char 
  2086 ;;		 -> Cadena(10), 
  2087 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
  2088 ;;		 -> STR_10(8), STR_9(4), STR_8(3), STR_7(7), 
  2089 ;;		 -> STR_6(4), STR_5(3), 
  2090 ;; Auto vars:     Size  Location     Type
  2091 ;;  f               6    2[BANK0 ] struct _IO_FILE
  2092 ;;  ap              2    0[BANK0 ] PTR void [1]
  2093 ;;		 -> ?_sprintf(2), 
  2094 ;;  ret             2    0        int 
  2095 ;; Return value:  Size  Location     Type
  2096 ;;                  2   87[COMRAM] int 
  2097 ;; Registers used:
  2098 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2099 ;; Tracked objects:
  2100 ;;		On entry : 0/0
  2101 ;;		On exit  : 0/0
  2102 ;;		Unchanged: 0/0
  2103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2104 ;;      Params:         6       0       0       0       0       0       0       0       0
  2105 ;;      Locals:         0       8       0       0       0       0       0       0       0
  2106 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2107 ;;      Totals:         6       8       0       0       0       0       0       0       0
  2108 ;;Total ram usage:       14 bytes
  2109 ;; Hardware stack levels used: 1
  2110 ;; Hardware stack levels required when called: 7
  2111 ;; This function calls:
  2112 ;;		_vfprintf
  2113 ;; This function is called by:
  2114 ;;		_MostrarHumedad
  2115 ;;		_MostrarTemperatura
  2116 ;; This function uses a non-reentrant model
  2117 ;;
  2118                           
  2119                           	psect	text10
  2120  001A8A                     __ptext10:
  2121                           	callstack 0
  2122  001A8A                     _sprintf:
  2123                           	callstack 22
  2124  001A8A  0E5C               	movlw	low (?_sprintf+4)
  2125  001A8C  0100               	movlb	0	; () banked
  2126  001A8E  6FB2               	movwf	sprintf@ap& (0+255),b
  2127  001A90  0E00               	movlw	high (?_sprintf+4)
  2128  001A92  6FB3               	movwf	(sprintf@ap+1)& (0+255),b
  2129  001A94  C058  F0B4         	movff	sprintf@s,sprintf@f
  2130  001A98  C059  F0B5         	movff	sprintf@s+1,sprintf@f+1
  2131  001A9C                     
  2132                           ; BSR set to: 0
  2133  001A9C  0E00               	movlw	0
  2134  001A9E  6FB7               	movwf	(sprintf@f+3)& (0+255),b
  2135  001AA0  0E00               	movlw	0
  2136  001AA2  6FB6               	movwf	(sprintf@f+2)& (0+255),b
  2137  001AA4                     
  2138                           ; BSR set to: 0
  2139  001AA4  0E00               	movlw	0
  2140  001AA6  6FB9               	movwf	(sprintf@f+5)& (0+255),b
  2141  001AA8  0E00               	movlw	0
  2142  001AAA  6FB8               	movwf	(sprintf@f+4)& (0+255),b
  2143  001AAC                     
  2144                           ; BSR set to: 0
  2145  001AAC  0EB4               	movlw	low sprintf@f
  2146  001AAE  6E50               	movwf	vfprintf@fp^0,c
  2147  001AB0  0E00               	movlw	high sprintf@f
  2148  001AB2  6E51               	movwf	(vfprintf@fp+1)^0,c
  2149  001AB4  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
  2150  001AB8  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2151  001ABC  0EB2               	movlw	low sprintf@ap
  2152  001ABE  6E54               	movwf	vfprintf@ap^0,c
  2153  001AC0  0E00               	movlw	high sprintf@ap
  2154  001AC2  6E55               	movwf	(vfprintf@ap+1)^0,c
  2155  001AC4  EC8C  F00C         	call	_vfprintf	;wreg free
  2156  001AC8  0100               	movlb	0	; () banked
  2157  001ACA  51B6               	movf	(sprintf@f+2)& (0+255),w,b
  2158  001ACC  2458               	addwf	sprintf@s^0,w,c
  2159  001ACE  6ED9               	movwf	fsr2l,c
  2160  001AD0  51B7               	movf	(sprintf@f+3)& (0+255),w,b
  2161  001AD2  2059               	addwfc	(sprintf@s+1)^0,w,c
  2162  001AD4  6EDA               	movwf	fsr2h,c
  2163  001AD6  0E00               	movlw	0
  2164  001AD8  6EDF               	movwf	indf2,c
  2165  001ADA                     
  2166                           ; BSR set to: 0
  2167  001ADA  0012               	return		;funcret
  2168  001ADC                     __end_of_sprintf:
  2169                           	callstack 0
  2170                           
  2171 ;; *************** function _vfprintf *****************
  2172 ;; Defined at:
  2173 ;;		line 1390 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c"
  2174 ;; Parameters:    Size  Location     Type
  2175 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  2176 ;;		 -> sprintf@f(6), 
  2177 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  2178 ;;		 -> STR_10(8), STR_9(4), STR_8(3), STR_7(7), 
  2179 ;;		 -> STR_6(4), STR_5(3), 
  2180 ;;  ap              2   83[COMRAM] PTR PTR void 
  2181 ;;		 -> sprintf@ap(2), 
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  2184 ;;		 -> STR_10(8), STR_9(4), STR_8(3), STR_7(7), 
  2185 ;;		 -> STR_6(4), STR_5(3), 
  2186 ;; Return value:  Size  Location     Type
  2187 ;;                  2   79[COMRAM] int 
  2188 ;; Registers used:
  2189 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2190 ;; Tracked objects:
  2191 ;;		On entry : 0/0
  2192 ;;		On exit  : 0/0
  2193 ;;		Unchanged: 0/0
  2194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2195 ;;      Params:         6       0       0       0       0       0       0       0       0
  2196 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2197 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2198 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2199 ;;Total ram usage:        8 bytes
  2200 ;; Hardware stack levels used: 1
  2201 ;; Hardware stack levels required when called: 6
  2202 ;; This function calls:
  2203 ;;		_vfpfcnvrt
  2204 ;; This function is called by:
  2205 ;;		_sprintf
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209                           	psect	text11
  2210  001918                     __ptext11:
  2211                           	callstack 0
  2212  001918                     _vfprintf:
  2213                           	callstack 22
  2214  001918                     
  2215                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1390: int vfprintf(FIL
      +                          E *fp, const char *fmt, va_list ap);D:\XC8 compilador para el MPLAB\pic\sources\c99\comm
      +                          on\doprnt.c: 1391: {;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 13
      +                          93:     char *cfmt;;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 139
      +                          5:     cfmt = (char *)fmt;
  2216  001918  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  2217  00191C  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2218  001920                     
  2219                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1396:     nout = 0;
  2220  001920  0E00               	movlw	0
  2221  001922  0100               	movlb	0	; () banked
  2222  001924  6F61               	movwf	(_nout+1)& (0+255),b
  2223  001926  0E00               	movlw	0
  2224  001928  6F60               	movwf	_nout& (0+255),b
  2225                           
  2226                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1397:     while (*cfmt
      +                          ) {
  2227  00192A  EFAA  F00C         	goto	l2202
  2228  00192E                     l2200:
  2229                           
  2230                           ; BSR set to: 0
  2231                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1398:         nout += 
      +                          vfpfcnvrt(fp, &cfmt, ap);
  2232  00192E  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  2233  001932  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2234  001936  0E56               	movlw	low vfprintf@cfmt
  2235  001938  6E42               	movwf	vfpfcnvrt@fmt^0,c
  2236  00193A  0E00               	movlw	high vfprintf@cfmt
  2237  00193C  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2238  00193E  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  2239  001942  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2240  001946  ECA8  F006         	call	_vfpfcnvrt	;wreg free
  2241  00194A  5040               	movf	?_vfpfcnvrt^0,w,c
  2242  00194C  0100               	movlb	0	; () banked
  2243  00194E  2760               	addwf	_nout& (0+255),f,b
  2244  001950  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  2245  001952  2361               	addwfc	(_nout+1)& (0+255),f,b
  2246  001954                     l2202:
  2247                           
  2248                           ; BSR set to: 0
  2249                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1397:     while (*cfmt
      +                          ) {
  2250  001954  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  2251  001958  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2252  00195C                     	if	0	;tblptru may be non-zero
  2253  00195C                     	endif
  2254  00195C                     	if	0	;tblptru may be non-zero
  2255  00195C                     	endif
  2256  00195C  0008               	tblrd		*
  2257  00195E  50F5               	movf	tablat,w,c
  2258  001960  0900               	iorlw	0
  2259  001962  A4D8               	btfss	status,2,c
  2260  001964  EFB6  F00C         	goto	u1481
  2261  001968  EFB8  F00C         	goto	u1480
  2262  00196C                     u1481:
  2263  00196C  EF97  F00C         	goto	l2200
  2264  001970                     u1480:
  2265  001970                     
  2266                           ; BSR set to: 0
  2267                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1400:     return nout;
  2268  001970  C060  F050         	movff	_nout,?_vfprintf
  2269  001974  C061  F051         	movff	_nout+1,?_vfprintf+1
  2270  001978                     
  2271                           ; BSR set to: 0
  2272  001978  0012               	return		;funcret
  2273  00197A                     __end_of_vfprintf:
  2274                           	callstack 0
  2275                           
  2276 ;; *************** function _vfpfcnvrt *****************
  2277 ;; Defined at:
  2278 ;;		line 692 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c"
  2279 ;; Parameters:    Size  Location     Type
  2280 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  2281 ;;		 -> sprintf@f(6), 
  2282 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  2283 ;;		 -> vfprintf@cfmt(2), 
  2284 ;;  ap              2   67[COMRAM] PTR PTR void 
  2285 ;;		 -> sprintf@ap(2), 
  2286 ;; Auto vars:     Size  Location     Type
  2287 ;;  ll              8   71[COMRAM] long long 
  2288 ;;  llu             8    0        unsigned long long 
  2289 ;;  f               4    0        unsigned long long 
  2290 ;;  vp              3    0        PTR void 
  2291 ;;  ct              3    0        unsigned char [3]
  2292 ;;  cp              3    0        PTR unsigned char 
  2293 ;;  i               2    0        int 
  2294 ;;  done            2    0        int 
  2295 ;;  c               1    0        unsigned char 
  2296 ;; Return value:  Size  Location     Type
  2297 ;;                  2   63[COMRAM] int 
  2298 ;; Registers used:
  2299 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2300 ;; Tracked objects:
  2301 ;;		On entry : 0/0
  2302 ;;		On exit  : 0/0
  2303 ;;		Unchanged: 0/0
  2304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2305 ;;      Params:         6       0       0       0       0       0       0       0       0
  2306 ;;      Locals:         8       0       0       0       0       0       0       0       0
  2307 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2308 ;;      Totals:        16       0       0       0       0       0       0       0       0
  2309 ;;Total ram usage:       16 bytes
  2310 ;; Hardware stack levels used: 1
  2311 ;; Hardware stack levels required when called: 5
  2312 ;; This function calls:
  2313 ;;		_dtoa
  2314 ;;		_fputc
  2315 ;; This function is called by:
  2316 ;;		_vfprintf
  2317 ;; This function uses a non-reentrant model
  2318 ;;
  2319                           
  2320                           	psect	text12
  2321  000D50                     __ptext12:
  2322                           	callstack 0
  2323  000D50                     _vfpfcnvrt:
  2324                           	callstack 22
  2325  000D50                     
  2326                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 692: static int vfpfcn
      +                          vrt(FILE *fp, char *fmt[], va_list ap);D:\XC8 compilador para el MPLAB\pic\sources\c99\c
      +                          ommon\doprnt.c: 693: {;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 
      +                          694:     char c, *cp, ct[3];;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\dopr
      +                          nt.c: 695:     int done, i;;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprn
      +                          t.c: 696:     long long ll;;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprn
      +                          t.c: 697:     unsigned long long llu;
  2327  000D50  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2328  000D54  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2329  000D58  CFDE FFF6          	movff	postinc2,tblptrl
  2330  000D5C  CFDD FFF7          	movff	postdec2,tblptrh
  2331  000D60                     	if	0	;tblptru may be non-zero
  2332  000D60                     	endif
  2333  000D60                     	if	0	;tblptru may be non-zero
  2334  000D60                     	endif
  2335  000D60  0008               	tblrd		*
  2336  000D62  50F5               	movf	tablat,w,c
  2337  000D64  0A25               	xorlw	37
  2338  000D66  A4D8               	btfss	status,2,c
  2339  000D68  EFB8  F006         	goto	u1281
  2340  000D6C  EFBA  F006         	goto	u1280
  2341  000D70                     u1281:
  2342  000D70  EF66  F007         	goto	l2072
  2343  000D74                     u1280:
  2344  000D74                     
  2345                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 703:         ++*fmt;
  2346  000D74  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2347  000D78  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2348  000D7C  2ADE               	incf	postinc2,f,c
  2349  000D7E  0E00               	movlw	0
  2350  000D80  22DD               	addwfc	postdec2,f,c
  2351  000D82                     
  2352                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 705:         flags = w
      +                          idth = 0;
  2353  000D82  0E00               	movlw	0
  2354  000D84  0100               	movlb	0	; () banked
  2355  000D86  6F63               	movwf	(_width+1)& (0+255),b
  2356  000D88  0E00               	movlw	0
  2357  000D8A  6F62               	movwf	_width& (0+255),b
  2358  000D8C  C062  F066         	movff	_width,_flags
  2359  000D90  C063  F067         	movff	_width+1,_flags+1
  2360  000D94                     
  2361                           ; BSR set to: 0
  2362                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 706:         prec = -1
      +                          ;
  2363  000D94  6964               	setf	_prec& (0+255),b
  2364  000D96  6965               	setf	(_prec+1)& (0+255),b
  2365  000D98                     
  2366                           ; BSR set to: 0
  2367                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 847:         if ((*fmt
      +                          [0] == 'd') || (*fmt[0] == 'i')) {
  2368  000D98  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2369  000D9C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2370  000DA0  CFDE FFF6          	movff	postinc2,tblptrl
  2371  000DA4  CFDD FFF7          	movff	postdec2,tblptrh
  2372  000DA8                     	if	0	;tblptru may be non-zero
  2373  000DA8                     	endif
  2374  000DA8                     	if	0	;tblptru may be non-zero
  2375  000DA8                     	endif
  2376  000DA8  0008               	tblrd		*
  2377  000DAA  50F5               	movf	tablat,w,c
  2378  000DAC  0A64               	xorlw	100
  2379  000DAE  B4D8               	btfsc	status,2,c
  2380  000DB0  EFDC  F006         	goto	u1291
  2381  000DB4  EFDE  F006         	goto	u1290
  2382  000DB8                     u1291:
  2383  000DB8  EFF0  F006         	goto	l2050
  2384  000DBC                     u1290:
  2385  000DBC                     
  2386                           ; BSR set to: 0
  2387  000DBC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2388  000DC0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2389  000DC4  CFDE FFF6          	movff	postinc2,tblptrl
  2390  000DC8  CFDD FFF7          	movff	postdec2,tblptrh
  2391  000DCC                     	if	0	;tblptru may be non-zero
  2392  000DCC                     	endif
  2393  000DCC                     	if	0	;tblptru may be non-zero
  2394  000DCC                     	endif
  2395  000DCC  0008               	tblrd		*
  2396  000DCE  50F5               	movf	tablat,w,c
  2397  000DD0  0A69               	xorlw	105
  2398  000DD2  A4D8               	btfss	status,2,c
  2399  000DD4  EFEE  F006         	goto	u1301
  2400  000DD8  EFF0  F006         	goto	u1300
  2401  000DDC                     u1301:
  2402  000DDC  EF30  F007         	goto	l2056
  2403  000DE0                     u1300:
  2404  000DE0                     l2050:
  2405                           
  2406                           ; BSR set to: 0
  2407                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 849:             ++*fm
      +                          t;
  2408  000DE0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2409  000DE4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2410  000DE8  2ADE               	incf	postinc2,f,c
  2411  000DEA  0E00               	movlw	0
  2412  000DEC  22DD               	addwfc	postdec2,f,c
  2413                           
  2414                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 850:             ll = 
      +                          (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2415  000DEE  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2416  000DF2  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2417  000DF6  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2418  000DFA  0E02               	movlw	2
  2419  000DFC  26DE               	addwf	postinc2,f,c
  2420  000DFE  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2421  000E02  0E00               	movlw	0
  2422  000E04  22DD               	addwfc	postdec2,f,c
  2423  000E06  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2424  000E0A  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2425  000E0E  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  2426  000E12  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  2427  000E16  0E00               	movlw	0
  2428  000E18  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  2429  000E1A  0EFF               	movlw	-1
  2430  000E1C  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  2431  000E1E  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  2432  000E20  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  2433  000E22  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  2434  000E24  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  2435  000E26  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  2436  000E28                     
  2437                           ; BSR set to: 0
  2438                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 852:             retur
      +                          n dtoa(fp, ll);
  2439  000E28  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2440  000E2C  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2441  000E30  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  2442  000E34  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2443  000E38  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2444  000E3C  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2445  000E40  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2446  000E44  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2447  000E48  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2448  000E4C  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2449  000E50  EC28  F004         	call	_dtoa	;wreg free
  2450  000E54  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  2451  000E58  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2452  000E5C  EF81  F007         	goto	l1063
  2453  000E60                     l2056:
  2454                           
  2455                           ; BSR set to: 0
  2456                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1372:         if ((*fm
      +                          t)[0] == '%') {
  2457  000E60  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2458  000E64  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2459  000E68  CFDE FFF6          	movff	postinc2,tblptrl
  2460  000E6C  CFDD FFF7          	movff	postdec2,tblptrh
  2461  000E70                     	if	0	;tblptru may be non-zero
  2462  000E70                     	endif
  2463  000E70                     	if	0	;tblptru may be non-zero
  2464  000E70                     	endif
  2465  000E70  0008               	tblrd		*
  2466  000E72  50F5               	movf	tablat,w,c
  2467  000E74  0A25               	xorlw	37
  2468  000E76  A4D8               	btfss	status,2,c
  2469  000E78  EF40  F007         	goto	u1311
  2470  000E7C  EF42  F007         	goto	u1310
  2471  000E80                     u1311:
  2472  000E80  EF59  F007         	goto	l2066
  2473  000E84                     u1310:
  2474  000E84                     
  2475                           ; BSR set to: 0
  2476                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1373:             ++*f
      +                          mt;
  2477  000E84  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2478  000E88  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2479  000E8C  2ADE               	incf	postinc2,f,c
  2480  000E8E  0E00               	movlw	0
  2481  000E90  22DD               	addwfc	postdec2,f,c
  2482  000E92                     
  2483                           ; BSR set to: 0
  2484                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1374:             fput
      +                          c((int)'%', fp);
  2485  000E92  0E00               	movlw	0
  2486  000E94  6E02               	movwf	(fputc@c+1)^0,c
  2487  000E96  0E25               	movlw	37
  2488  000E98  6E01               	movwf	fputc@c^0,c
  2489  000E9A  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2490  000E9E  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2491  000EA2  EC23  F00A         	call	_fputc	;wreg free
  2492  000EA6                     l2062:
  2493                           
  2494                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1375:             retu
      +                          rn 1;
  2495  000EA6  0E00               	movlw	0
  2496  000EA8  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  2497  000EAA  0E01               	movlw	1
  2498  000EAC  6E40               	movwf	?_vfpfcnvrt^0,c
  2499  000EAE  EF81  F007         	goto	l1063
  2500  000EB2                     l2066:
  2501                           
  2502                           ; BSR set to: 0
  2503                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1379:         ++*fmt;
  2504  000EB2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2505  000EB6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2506  000EBA  2ADE               	incf	postinc2,f,c
  2507  000EBC  0E00               	movlw	0
  2508  000EBE  22DD               	addwfc	postdec2,f,c
  2509  000EC0                     
  2510                           ; BSR set to: 0
  2511                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1380:         return 0
      +                          ;
  2512  000EC0  0E00               	movlw	0
  2513  000EC2  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  2514  000EC4  0E00               	movlw	0
  2515  000EC6  6E40               	movwf	?_vfpfcnvrt^0,c
  2516  000EC8  EF81  F007         	goto	l1063
  2517  000ECC                     l2072:
  2518                           
  2519                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1384:     fputc((int)(
      +                          *fmt)[0], fp);
  2520  000ECC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2521  000ED0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2522  000ED4  CFDE FFF6          	movff	postinc2,tblptrl
  2523  000ED8  CFDD FFF7          	movff	postdec2,tblptrh
  2524  000EDC                     	if	0	;tblptru may be non-zero
  2525  000EDC                     	endif
  2526  000EDC                     	if	0	;tblptru may be non-zero
  2527  000EDC                     	endif
  2528  000EDC  0008               	tblrd		*
  2529  000EDE  50F5               	movf	tablat,w,c
  2530  000EE0  6E01               	movwf	fputc@c^0,c
  2531  000EE2  6A02               	clrf	(fputc@c+1)^0,c
  2532  000EE4  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2533  000EE8  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2534  000EEC  EC23  F00A         	call	_fputc	;wreg free
  2535  000EF0                     
  2536                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2537  000EF0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2538  000EF4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2539  000EF8  2ADE               	incf	postinc2,f,c
  2540  000EFA  0E00               	movlw	0
  2541  000EFC  22DD               	addwfc	postdec2,f,c
  2542  000EFE  EF53  F007         	goto	l2062
  2543  000F02                     l1063:
  2544  000F02  0012               	return		;funcret
  2545  000F04                     __end_of_vfpfcnvrt:
  2546                           	callstack 0
  2547                           
  2548 ;; *************** function _dtoa *****************
  2549 ;; Defined at:
  2550 ;;		line 287 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c"
  2551 ;; Parameters:    Size  Location     Type
  2552 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2553 ;;		 -> sprintf@f(6), 
  2554 ;;  d               8   29[COMRAM] long long 
  2555 ;; Auto vars:     Size  Location     Type
  2556 ;;  n               8   53[COMRAM] long long 
  2557 ;;  i               2   61[COMRAM] int 
  2558 ;;  s               2   51[COMRAM] int 
  2559 ;;  w               2   49[COMRAM] int 
  2560 ;;  p               2   47[COMRAM] int 
  2561 ;; Return value:  Size  Location     Type
  2562 ;;                  2   27[COMRAM] int 
  2563 ;; Registers used:
  2564 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2565 ;; Tracked objects:
  2566 ;;		On entry : 0/0
  2567 ;;		On exit  : 0/0
  2568 ;;		Unchanged: 0/0
  2569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2570 ;;      Params:        10       0       0       0       0       0       0       0       0
  2571 ;;      Locals:        18       0       0       0       0       0       0       0       0
  2572 ;;      Temps:          8       0       0       0       0       0       0       0       0
  2573 ;;      Totals:        36       0       0       0       0       0       0       0       0
  2574 ;;Total ram usage:       36 bytes
  2575 ;; Hardware stack levels used: 1
  2576 ;; Hardware stack levels required when called: 4
  2577 ;; This function calls:
  2578 ;;		___aodiv
  2579 ;;		___aomod
  2580 ;;		_abs
  2581 ;;		_pad
  2582 ;; This function is called by:
  2583 ;;		_vfpfcnvrt
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           
  2587                           	psect	text13
  2588  000850                     __ptext13:
  2589                           	callstack 0
  2590  000850                     _dtoa:
  2591                           	callstack 22
  2592  000850                     
  2593                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 287: static int dtoa(F
      +                          ILE *fp, long long d);D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 2
      +                          88: {;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 289:     int i, p
      +                          , s, w;;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 290:     long l
      +                          ong n;;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 293:     n = d;
  2594  000850  C01E  F036         	movff	dtoa@d,dtoa@n
  2595  000854  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  2596  000858  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  2597  00085C  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  2598  000860  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  2599  000864  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  2600  000868  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  2601  00086C  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  2602  000870                     
  2603                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 294:     s = n < 0 ? 1
      +                           : 0;
  2604  000870  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  2605  000872  EF3D  F004         	goto	u1101
  2606  000876  EF40  F004         	goto	u1100
  2607  00087A                     u1101:
  2608  00087A  0E01               	movlw	1
  2609  00087C  EF41  F004         	goto	u1110
  2610  000880                     u1100:
  2611  000880  0E00               	movlw	0
  2612  000882                     u1110:
  2613  000882  6E34               	movwf	dtoa@s^0,c
  2614  000884  6A35               	clrf	(dtoa@s+1)^0,c
  2615                           
  2616                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2617  000886  5034               	movf	dtoa@s^0,w,c
  2618  000888  1035               	iorwf	(dtoa@s+1)^0,w,c
  2619  00088A  B4D8               	btfsc	status,2,c
  2620  00088C  EF4A  F004         	goto	u1121
  2621  000890  EF4C  F004         	goto	u1120
  2622  000894                     u1121:
  2623  000894  EF5C  F004         	goto	l1954
  2624  000898                     u1120:
  2625  000898                     
  2626                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 296:         n = -n;
  2627  000898  1E3D               	comf	(dtoa@n+7)^0,f,c
  2628  00089A  1E3C               	comf	(dtoa@n+6)^0,f,c
  2629  00089C  1E3B               	comf	(dtoa@n+5)^0,f,c
  2630  00089E  1E3A               	comf	(dtoa@n+4)^0,f,c
  2631  0008A0  1E39               	comf	(dtoa@n+3)^0,f,c
  2632  0008A2  1E38               	comf	(dtoa@n+2)^0,f,c
  2633  0008A4  1E37               	comf	(dtoa@n+1)^0,f,c
  2634  0008A6  6C36               	negf	dtoa@n^0,c
  2635  0008A8  0E00               	movlw	0
  2636  0008AA  2237               	addwfc	(dtoa@n+1)^0,f,c
  2637  0008AC  2238               	addwfc	(dtoa@n+2)^0,f,c
  2638  0008AE  2239               	addwfc	(dtoa@n+3)^0,f,c
  2639  0008B0  223A               	addwfc	(dtoa@n+4)^0,f,c
  2640  0008B2  223B               	addwfc	(dtoa@n+5)^0,f,c
  2641  0008B4  223C               	addwfc	(dtoa@n+6)^0,f,c
  2642  0008B6  223D               	addwfc	(dtoa@n+7)^0,f,c
  2643  0008B8                     l1954:
  2644                           
  2645                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 300:     if (!(prec < 
      +                          0)) {
  2646  0008B8  0100               	movlb	0	; () banked
  2647  0008BA  BF65               	btfsc	(_prec+1)& (0+255),7,b
  2648  0008BC  EF62  F004         	goto	u1131
  2649  0008C0  EF64  F004         	goto	u1130
  2650  0008C4                     u1131:
  2651  0008C4  EF65  F004         	goto	l1958
  2652  0008C8                     u1130:
  2653  0008C8                     
  2654                           ; BSR set to: 0
  2655                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 301:         flags &= 
      +                          ~(1 << 1);
  2656  0008C8  9366               	bcf	_flags& (0+255),1,b
  2657  0008CA                     l1958:
  2658                           
  2659                           ; BSR set to: 0
  2660                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 303:     p = (0 < prec
      +                          ) ? prec : 1;
  2661  0008CA  BF65               	btfsc	(_prec+1)& (0+255),7,b
  2662  0008CC  EF72  F004         	goto	u1140
  2663  0008D0  5165               	movf	(_prec+1)& (0+255),w,b
  2664  0008D2  E106               	bnz	u1141
  2665  0008D4  0564               	decf	_prec& (0+255),w,b
  2666  0008D6  B0D8               	btfsc	status,0,c
  2667  0008D8  EF70  F004         	goto	u1141
  2668  0008DC  EF72  F004         	goto	u1140
  2669  0008E0                     u1141:
  2670  0008E0  EF78  F004         	goto	l1036
  2671  0008E4                     u1140:
  2672  0008E4                     
  2673                           ; BSR set to: 0
  2674  0008E4  0E00               	movlw	0
  2675  0008E6  6E31               	movwf	(dtoa@p+1)^0,c
  2676  0008E8  0E01               	movlw	1
  2677  0008EA  6E30               	movwf	dtoa@p^0,c
  2678  0008EC  EF7C  F004         	goto	l1038
  2679  0008F0                     l1036:
  2680                           
  2681                           ; BSR set to: 0
  2682  0008F0  C064  F030         	movff	_prec,dtoa@p
  2683  0008F4  C065  F031         	movff	_prec+1,dtoa@p+1
  2684  0008F8                     l1038:
  2685                           
  2686                           ; BSR set to: 0
  2687                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 304:     w = width;
  2688  0008F8  C062  F032         	movff	_width,dtoa@w
  2689  0008FC  C063  F033         	movff	_width+1,dtoa@w+1
  2690  000900                     
  2691                           ; BSR set to: 0
  2692                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 305:     if (s || (fla
      +                          gs & (1 << 2))) {
  2693  000900  5034               	movf	dtoa@s^0,w,c
  2694  000902  1035               	iorwf	(dtoa@s+1)^0,w,c
  2695  000904  A4D8               	btfss	status,2,c
  2696  000906  EF87  F004         	goto	u1151
  2697  00090A  EF89  F004         	goto	u1150
  2698  00090E                     u1151:
  2699  00090E  EF90  F004         	goto	l1966
  2700  000912                     u1150:
  2701  000912                     
  2702                           ; BSR set to: 0
  2703  000912  A566               	btfss	_flags& (0+255),2,b
  2704  000914  EF8E  F004         	goto	u1161
  2705  000918  EF90  F004         	goto	u1160
  2706  00091C                     u1161:
  2707  00091C  EF93  F004         	goto	l1968
  2708  000920                     u1160:
  2709  000920                     l1966:
  2710                           
  2711                           ; BSR set to: 0
  2712                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 306:         --w;
  2713  000920  0632               	decf	dtoa@w^0,f,c
  2714  000922  A0D8               	btfss	status,0,c
  2715  000924  0633               	decf	(dtoa@w+1)^0,f,c
  2716  000926                     l1968:
  2717                           
  2718                           ; BSR set to: 0
  2719                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 310:     i = sizeof(db
      +                          uf) - 1;
  2720  000926  0E00               	movlw	0
  2721  000928  6E3F               	movwf	(dtoa@i+1)^0,c
  2722  00092A  0E1F               	movlw	31
  2723  00092C  6E3E               	movwf	dtoa@i^0,c
  2724  00092E                     
  2725                           ; BSR set to: 0
  2726                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] = '\0
      +                          ';
  2727  00092E  0E00               	movlw	0
  2728  000930  6F92               	movwf	(_dbuf+31)& (0+255),b
  2729                           
  2730                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 312:     while (!(i < 
      +                          1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2731  000932  EF17  F005         	goto	l1982
  2732  000936                     l1972:
  2733                           
  2734                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 313:         --i;
  2735  000936  063E               	decf	dtoa@i^0,f,c
  2736  000938  A0D8               	btfss	status,0,c
  2737  00093A  063F               	decf	(dtoa@i+1)^0,f,c
  2738  00093C                     
  2739                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 314:         dbuf[i] =
      +                           (char)((int)'0' + abs(n % 10));
  2740  00093C  0E73               	movlw	low _dbuf
  2741  00093E  243E               	addwf	dtoa@i^0,w,c
  2742  000940  6ED9               	movwf	fsr2l,c
  2743  000942  0E00               	movlw	high _dbuf
  2744  000944  203F               	addwfc	(dtoa@i+1)^0,w,c
  2745  000946  6EDA               	movwf	fsr2h,c
  2746  000948  C036  F001         	movff	dtoa@n,___aomod@dividend
  2747  00094C  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2748  000950  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2749  000954  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2750  000958  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2751  00095C  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2752  000960  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2753  000964  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2754  000968  0E0A               	movlw	10
  2755  00096A  6E09               	movwf	___aomod@divisor^0,c
  2756  00096C  0E00               	movlw	0
  2757  00096E  6E0A               	movwf	(___aomod@divisor+1)^0,c
  2758  000970  0E00               	movlw	0
  2759  000972  6E0B               	movwf	(___aomod@divisor+2)^0,c
  2760  000974  0E00               	movlw	0
  2761  000976  6E0C               	movwf	(___aomod@divisor+3)^0,c
  2762  000978  0E00               	movlw	0
  2763  00097A  6E0D               	movwf	(___aomod@divisor+4)^0,c
  2764  00097C  0E00               	movlw	0
  2765  00097E  6E0E               	movwf	(___aomod@divisor+5)^0,c
  2766  000980  0E00               	movlw	0
  2767  000982  6E0F               	movwf	(___aomod@divisor+6)^0,c
  2768  000984  0E00               	movlw	0
  2769  000986  6E10               	movwf	(___aomod@divisor+7)^0,c
  2770  000988  EC46  F008         	call	___aomod	;wreg free
  2771  00098C  C001  F026         	movff	?___aomod,??_dtoa
  2772  000990  C002  F027         	movff	?___aomod+1,??_dtoa+1
  2773  000994  C003  F028         	movff	?___aomod+2,??_dtoa+2
  2774  000998  C004  F029         	movff	?___aomod+3,??_dtoa+3
  2775  00099C  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  2776  0009A0  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  2777  0009A4  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  2778  0009A8  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  2779  0009AC  C026  F013         	movff	??_dtoa,abs@a
  2780  0009B0  C028  F014         	movff	??_dtoa+2,abs@a+1
  2781  0009B4  EC03  F00E         	call	_abs	;wreg free
  2782  0009B8  5013               	movf	?_abs^0,w,c
  2783  0009BA  0F30               	addlw	48
  2784  0009BC  6EDF               	movwf	indf2,c
  2785  0009BE                     
  2786                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 315:         --p;
  2787  0009BE  0630               	decf	dtoa@p^0,f,c
  2788  0009C0  A0D8               	btfss	status,0,c
  2789  0009C2  0631               	decf	(dtoa@p+1)^0,f,c
  2790  0009C4                     
  2791                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 316:         --w;
  2792  0009C4  0632               	decf	dtoa@w^0,f,c
  2793  0009C6  A0D8               	btfss	status,0,c
  2794  0009C8  0633               	decf	(dtoa@w+1)^0,f,c
  2795  0009CA                     
  2796                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 317:         n = n / 1
      +                          0;
  2797  0009CA  C036  F001         	movff	dtoa@n,___aodiv@dividend
  2798  0009CE  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2799  0009D2  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2800  0009D6  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2801  0009DA  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2802  0009DE  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2803  0009E2  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2804  0009E6  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2805  0009EA  0E0A               	movlw	10
  2806  0009EC  6E09               	movwf	___aodiv@divisor^0,c
  2807  0009EE  0E00               	movlw	0
  2808  0009F0  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  2809  0009F2  0E00               	movlw	0
  2810  0009F4  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  2811  0009F6  0E00               	movlw	0
  2812  0009F8  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  2813  0009FA  0E00               	movlw	0
  2814  0009FC  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  2815  0009FE  0E00               	movlw	0
  2816  000A00  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  2817  000A02  0E00               	movlw	0
  2818  000A04  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  2819  000A06  0E00               	movlw	0
  2820  000A08  6E10               	movwf	(___aodiv@divisor+7)^0,c
  2821  000A0A  EC82  F007         	call	___aodiv	;wreg free
  2822  000A0E  C001  F036         	movff	?___aodiv,dtoa@n
  2823  000A12  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  2824  000A16  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  2825  000A1A  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  2826  000A1E  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  2827  000A22  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  2828  000A26  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  2829  000A2A  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  2830  000A2E                     l1982:
  2831                           
  2832                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 312:     while (!(i < 
      +                          1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2833  000A2E  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  2834  000A30  EF22  F005         	goto	u1171
  2835  000A34  503F               	movf	(dtoa@i+1)^0,w,c
  2836  000A36  E108               	bnz	u1170
  2837  000A38  043E               	decf	dtoa@i^0,w,c
  2838  000A3A  A0D8               	btfss	status,0,c
  2839  000A3C  EF22  F005         	goto	u1171
  2840  000A40  EF24  F005         	goto	u1170
  2841  000A44                     u1171:
  2842  000A44  EF55  F005         	goto	l1992
  2843  000A48                     u1170:
  2844  000A48  5036               	movf	dtoa@n^0,w,c
  2845  000A4A  1037               	iorwf	(dtoa@n+1)^0,w,c
  2846  000A4C  1038               	iorwf	(dtoa@n+2)^0,w,c
  2847  000A4E  1039               	iorwf	(dtoa@n+3)^0,w,c
  2848  000A50  103A               	iorwf	(dtoa@n+4)^0,w,c
  2849  000A52  103B               	iorwf	(dtoa@n+5)^0,w,c
  2850  000A54  103C               	iorwf	(dtoa@n+6)^0,w,c
  2851  000A56  103D               	iorwf	(dtoa@n+7)^0,w,c
  2852  000A58  A4D8               	btfss	status,2,c
  2853  000A5A  EF31  F005         	goto	u1181
  2854  000A5E  EF33  F005         	goto	u1180
  2855  000A62                     u1181:
  2856  000A62  EF9B  F004         	goto	l1972
  2857  000A66                     u1180:
  2858  000A66  BE31               	btfsc	(dtoa@p+1)^0,7,c
  2859  000A68  EF40  F005         	goto	u1190
  2860  000A6C  5031               	movf	(dtoa@p+1)^0,w,c
  2861  000A6E  E106               	bnz	u1191
  2862  000A70  0430               	decf	dtoa@p^0,w,c
  2863  000A72  B0D8               	btfsc	status,0,c
  2864  000A74  EF3E  F005         	goto	u1191
  2865  000A78  EF40  F005         	goto	u1190
  2866  000A7C                     u1191:
  2867  000A7C  EF9B  F004         	goto	l1972
  2868  000A80                     u1190:
  2869  000A80  BE33               	btfsc	(dtoa@w+1)^0,7,c
  2870  000A82  EF4B  F005         	goto	u1201
  2871  000A86  5033               	movf	(dtoa@w+1)^0,w,c
  2872  000A88  E108               	bnz	u1200
  2873  000A8A  0432               	decf	dtoa@w^0,w,c
  2874  000A8C  A0D8               	btfss	status,0,c
  2875  000A8E  EF4B  F005         	goto	u1201
  2876  000A92  EF4D  F005         	goto	u1200
  2877  000A96                     u1201:
  2878  000A96  EF55  F005         	goto	l1992
  2879  000A9A                     u1200:
  2880  000A9A  0100               	movlb	0	; () banked
  2881  000A9C  B366               	btfsc	_flags& (0+255),1,b
  2882  000A9E  EF53  F005         	goto	u1211
  2883  000AA2  EF55  F005         	goto	u1210
  2884  000AA6                     u1211:
  2885  000AA6  EF9B  F004         	goto	l1972
  2886  000AAA                     u1210:
  2887  000AAA                     l1992:
  2888                           
  2889                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 321:     if (s || (fla
      +                          gs & (1 << 2))) {
  2890  000AAA  5034               	movf	dtoa@s^0,w,c
  2891  000AAC  1035               	iorwf	(dtoa@s+1)^0,w,c
  2892  000AAE  A4D8               	btfss	status,2,c
  2893  000AB0  EF5C  F005         	goto	u1221
  2894  000AB4  EF5E  F005         	goto	u1220
  2895  000AB8                     u1221:
  2896  000AB8  EF66  F005         	goto	l1996
  2897  000ABC                     u1220:
  2898  000ABC  0100               	movlb	0	; () banked
  2899  000ABE  A566               	btfss	_flags& (0+255),2,b
  2900  000AC0  EF64  F005         	goto	u1231
  2901  000AC4  EF66  F005         	goto	u1230
  2902  000AC8                     u1231:
  2903  000AC8  EF84  F005         	goto	l2006
  2904  000ACC                     u1230:
  2905  000ACC                     l1996:
  2906                           
  2907                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 322:         --i;
  2908  000ACC  063E               	decf	dtoa@i^0,f,c
  2909  000ACE  A0D8               	btfss	status,0,c
  2910  000AD0  063F               	decf	(dtoa@i+1)^0,f,c
  2911  000AD2                     
  2912                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 323:         dbuf[i] =
      +                           s ? '-' : '+';
  2913  000AD2  5034               	movf	dtoa@s^0,w,c
  2914  000AD4  1035               	iorwf	(dtoa@s+1)^0,w,c
  2915  000AD6  A4D8               	btfss	status,2,c
  2916  000AD8  EF70  F005         	goto	u1241
  2917  000ADC  EF72  F005         	goto	u1240
  2918  000AE0                     u1241:
  2919  000AE0  EF78  F005         	goto	l2002
  2920  000AE4                     u1240:
  2921  000AE4  0E00               	movlw	0
  2922  000AE6  6E2F               	movwf	(_dtoa$956+1)^0,c
  2923  000AE8  0E2B               	movlw	43
  2924  000AEA  6E2E               	movwf	_dtoa$956^0,c
  2925  000AEC  EF7C  F005         	goto	l2004
  2926  000AF0                     l2002:
  2927  000AF0  0E00               	movlw	0
  2928  000AF2  6E2F               	movwf	(_dtoa$956+1)^0,c
  2929  000AF4  0E2D               	movlw	45
  2930  000AF6  6E2E               	movwf	_dtoa$956^0,c
  2931  000AF8                     l2004:
  2932  000AF8  0E73               	movlw	low _dbuf
  2933  000AFA  243E               	addwf	dtoa@i^0,w,c
  2934  000AFC  6ED9               	movwf	fsr2l,c
  2935  000AFE  0E00               	movlw	high _dbuf
  2936  000B00  203F               	addwfc	(dtoa@i+1)^0,w,c
  2937  000B02  6EDA               	movwf	fsr2h,c
  2938  000B04  C02E  FFDF         	movff	_dtoa$956,indf2
  2939  000B08                     l2006:
  2940                           
  2941                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 327:     return pad(fp
      +                          , &dbuf[i], w);
  2942  000B08  C01C  F011         	movff	dtoa@fp,pad@fp
  2943  000B0C  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  2944  000B10  0E73               	movlw	low _dbuf
  2945  000B12  243E               	addwf	dtoa@i^0,w,c
  2946  000B14  6E13               	movwf	pad@buf^0,c
  2947  000B16  0E00               	movlw	high _dbuf
  2948  000B18  203F               	addwfc	(dtoa@i+1)^0,w,c
  2949  000B1A  6E14               	movwf	(pad@buf+1)^0,c
  2950  000B1C  C032  F015         	movff	dtoa@w,pad@p
  2951  000B20  C033  F016         	movff	dtoa@w+1,pad@p+1
  2952  000B24  EC88  F00A         	call	_pad	;wreg free
  2953  000B28  C011  F01C         	movff	?_pad,?_dtoa
  2954  000B2C  C012  F01D         	movff	?_pad+1,?_dtoa+1
  2955  000B30  0012               	return		;funcret
  2956  000B32                     __end_of_dtoa:
  2957                           	callstack 0
  2958                           
  2959 ;; *************** function _pad *****************
  2960 ;; Defined at:
  2961 ;;		line 72 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2964 ;;		 -> sprintf@f(6), 
  2965 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2966 ;;		 -> dbuf(32), 
  2967 ;;  p               2   20[COMRAM] int 
  2968 ;; Auto vars:     Size  Location     Type
  2969 ;;  w               2   25[COMRAM] int 
  2970 ;;  i               2   23[COMRAM] int 
  2971 ;; Return value:  Size  Location     Type
  2972 ;;                  2   16[COMRAM] int 
  2973 ;; Registers used:
  2974 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2975 ;; Tracked objects:
  2976 ;;		On entry : 0/0
  2977 ;;		On exit  : 0/0
  2978 ;;		Unchanged: 0/0
  2979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2980 ;;      Params:         6       0       0       0       0       0       0       0       0
  2981 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2982 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2983 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2984 ;;Total ram usage:       11 bytes
  2985 ;; Hardware stack levels used: 1
  2986 ;; Hardware stack levels required when called: 3
  2987 ;; This function calls:
  2988 ;;		_fputc
  2989 ;;		_fputs
  2990 ;;		_strlen
  2991 ;; This function is called by:
  2992 ;;		_dtoa
  2993 ;; This function uses a non-reentrant model
  2994 ;;
  2995                           
  2996                           	psect	text14
  2997  001510                     __ptext14:
  2998                           	callstack 0
  2999  001510                     _pad:
  3000                           	callstack 22
  3001  001510                     
  3002                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 72: static int pad(FIL
      +                          E *fp, char *buf, int p);D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c
      +                          : 73: {;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 74:     int i, 
      +                          w;;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 77:     if (flags & 
      +                          (1 << 0)) {
  3003  001510  0100               	movlb	0	; () banked
  3004  001512  A166               	btfss	_flags& (0+255),0,b
  3005  001514  EF8E  F00A         	goto	u1051
  3006  001518  EF90  F00A         	goto	u1050
  3007  00151C                     u1051:
  3008  00151C  EF9A  F00A         	goto	l1906
  3009  001520                     u1050:
  3010  001520                     
  3011                           ; BSR set to: 0
  3012                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 78:         fputs((con
      +                          st char *)buf, fp);
  3013  001520  C013  F00A         	movff	pad@buf,fputs@s
  3014  001524  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3015  001528  C011  F00C         	movff	pad@fp,fputs@fp
  3016  00152C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3017  001530  ECE1  F00D         	call	_fputs	;wreg free
  3018  001534                     l1906:
  3019                           
  3020                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 82:     w = (p < 0) ? 
      +                          0 : p;
  3021  001534  BE16               	btfsc	(pad@p+1)^0,7,c
  3022  001536  EF9F  F00A         	goto	u1061
  3023  00153A  EFA1  F00A         	goto	u1060
  3024  00153E                     u1061:
  3025  00153E  EFA7  F00A         	goto	l1910
  3026  001542                     u1060:
  3027  001542  C015  F01A         	movff	pad@p,pad@w
  3028  001546  C016  F01B         	movff	pad@p+1,pad@w+1
  3029  00154A  EFAB  F00A         	goto	l1025
  3030  00154E                     l1910:
  3031  00154E  0E00               	movlw	0
  3032  001550  6E1B               	movwf	(pad@w+1)^0,c
  3033  001552  0E00               	movlw	0
  3034  001554  6E1A               	movwf	pad@w^0,c
  3035  001556                     l1025:
  3036                           
  3037                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3038  001556  0E00               	movlw	0
  3039  001558  6E19               	movwf	(pad@i+1)^0,c
  3040  00155A  0E00               	movlw	0
  3041  00155C  6E18               	movwf	pad@i^0,c
  3042                           
  3043                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 84:     while (i < w) 
      +                          {
  3044  00155E  EFBD  F00A         	goto	l1916
  3045  001562                     l1912:
  3046                           
  3047                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 85:         fputc(' ',
      +                           fp);
  3048  001562  0E00               	movlw	0
  3049  001564  6E02               	movwf	(fputc@c+1)^0,c
  3050  001566  0E20               	movlw	32
  3051  001568  6E01               	movwf	fputc@c^0,c
  3052  00156A  C011  F003         	movff	pad@fp,fputc@fp
  3053  00156E  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3054  001572  EC23  F00A         	call	_fputc	;wreg free
  3055  001576                     
  3056                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3057  001576  4A18               	infsnz	pad@i^0,f,c
  3058  001578  2A19               	incf	(pad@i+1)^0,f,c
  3059  00157A                     l1916:
  3060                           
  3061                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 84:     while (i < w) 
      +                          {
  3062  00157A  501A               	movf	pad@w^0,w,c
  3063  00157C  5C18               	subwf	pad@i^0,w,c
  3064  00157E  5019               	movf	(pad@i+1)^0,w,c
  3065  001580  0A80               	xorlw	128
  3066  001582  6E17               	movwf	??_pad^0,c
  3067  001584  501B               	movf	(pad@w+1)^0,w,c
  3068  001586  0A80               	xorlw	128
  3069  001588  5817               	subwfb	??_pad^0,w,c
  3070  00158A  A0D8               	btfss	status,0,c
  3071  00158C  EFCA  F00A         	goto	u1071
  3072  001590  EFCC  F00A         	goto	u1070
  3073  001594                     u1071:
  3074  001594  EFB1  F00A         	goto	l1912
  3075  001598                     u1070:
  3076  001598                     
  3077                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 90:     if (!(flags & 
      +                          (1 << 0))) {
  3078  001598  0100               	movlb	0	; () banked
  3079  00159A  B166               	btfsc	_flags& (0+255),0,b
  3080  00159C  EFD2  F00A         	goto	u1081
  3081  0015A0  EFD4  F00A         	goto	u1080
  3082  0015A4                     u1081:
  3083  0015A4  EFDE  F00A         	goto	l1920
  3084  0015A8                     u1080:
  3085  0015A8                     
  3086                           ; BSR set to: 0
  3087                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 91:         fputs((con
      +                          st char *)buf, fp);
  3088  0015A8  C013  F00A         	movff	pad@buf,fputs@s
  3089  0015AC  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3090  0015B0  C011  F00C         	movff	pad@fp,fputs@fp
  3091  0015B4  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3092  0015B8  ECE1  F00D         	call	_fputs	;wreg free
  3093  0015BC                     l1920:
  3094                           
  3095                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 94:     return (int)(s
      +                          trlen(buf) + (size_t)w);
  3096  0015BC  C013  F001         	movff	pad@buf,strlen@s
  3097  0015C0  C014  F002         	movff	pad@buf+1,strlen@s+1
  3098  0015C4  EC7D  F00E         	call	_strlen	;wreg free
  3099  0015C8  501A               	movf	pad@w^0,w,c
  3100  0015CA  2401               	addwf	?_strlen^0,w,c
  3101  0015CC  6E11               	movwf	?_pad^0,c
  3102  0015CE  501B               	movf	(pad@w+1)^0,w,c
  3103  0015D0  2002               	addwfc	(?_strlen+1)^0,w,c
  3104  0015D2  6E12               	movwf	(?_pad+1)^0,c
  3105  0015D4  0012               	return		;funcret
  3106  0015D6                     __end_of_pad:
  3107                           	callstack 0
  3108                           
  3109 ;; *************** function _strlen *****************
  3110 ;; Defined at:
  3111 ;;		line 5 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\strlen.c"
  3112 ;; Parameters:    Size  Location     Type
  3113 ;;  s               2    0[COMRAM] PTR const unsigned char 
  3114 ;;		 -> dbuf(32), 
  3115 ;; Auto vars:     Size  Location     Type
  3116 ;;  a               2    2[COMRAM] PTR const unsigned char 
  3117 ;;		 -> dbuf(32), 
  3118 ;; Return value:  Size  Location     Type
  3119 ;;                  2    0[COMRAM] unsigned int 
  3120 ;; Registers used:
  3121 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3122 ;; Tracked objects:
  3123 ;;		On entry : 0/0
  3124 ;;		On exit  : 0/0
  3125 ;;		Unchanged: 0/0
  3126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3127 ;;      Params:         2       0       0       0       0       0       0       0       0
  3128 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3129 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3130 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3131 ;;Total ram usage:        4 bytes
  3132 ;; Hardware stack levels used: 1
  3133 ;; This function calls:
  3134 ;;		Nothing
  3135 ;; This function is called by:
  3136 ;;		_pad
  3137 ;; This function uses a non-reentrant model
  3138 ;;
  3139                           
  3140                           	psect	text15
  3141  001CFA                     __ptext15:
  3142                           	callstack 0
  3143  001CFA                     _strlen:
  3144                           	callstack 24
  3145  001CFA  C001  F003         	movff	strlen@s,strlen@a
  3146  001CFE  C002  F004         	movff	strlen@s+1,strlen@a+1
  3147  001D02  EF85  F00E         	goto	l1816
  3148  001D06                     l1814:
  3149  001D06  4A01               	infsnz	strlen@s^0,f,c
  3150  001D08  2A02               	incf	(strlen@s+1)^0,f,c
  3151  001D0A                     l1816:
  3152  001D0A  C001  FFD9         	movff	strlen@s,fsr2l
  3153  001D0E  C002  FFDA         	movff	strlen@s+1,fsr2h
  3154  001D12  50DF               	movf	indf2,w,c
  3155  001D14  A4D8               	btfss	status,2,c
  3156  001D16  EF8F  F00E         	goto	u911
  3157  001D1A  EF91  F00E         	goto	u910
  3158  001D1E                     u911:
  3159  001D1E  EF83  F00E         	goto	l1814
  3160  001D22                     u910:
  3161  001D22  5003               	movf	strlen@a^0,w,c
  3162  001D24  5C01               	subwf	strlen@s^0,w,c
  3163  001D26  6E01               	movwf	?_strlen^0,c
  3164  001D28  5004               	movf	(strlen@a+1)^0,w,c
  3165  001D2A  5802               	subwfb	(strlen@s+1)^0,w,c
  3166  001D2C  6E02               	movwf	(?_strlen+1)^0,c
  3167  001D2E  0012               	return		;funcret
  3168  001D30                     __end_of_strlen:
  3169                           	callstack 0
  3170                           
  3171 ;; *************** function _fputs *****************
  3172 ;; Defined at:
  3173 ;;		line 8 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\nf_fputs.c"
  3174 ;; Parameters:    Size  Location     Type
  3175 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3176 ;;		 -> dbuf(32), 
  3177 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3178 ;;		 -> sprintf@f(6), 
  3179 ;; Auto vars:     Size  Location     Type
  3180 ;;  i               2   14[COMRAM] int 
  3181 ;;  c               1   13[COMRAM] unsigned char 
  3182 ;; Return value:  Size  Location     Type
  3183 ;;                  2    9[COMRAM] int 
  3184 ;; Registers used:
  3185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3186 ;; Tracked objects:
  3187 ;;		On entry : 0/0
  3188 ;;		On exit  : 0/0
  3189 ;;		Unchanged: 0/0
  3190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3191 ;;      Params:         4       0       0       0       0       0       0       0       0
  3192 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3193 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3194 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3195 ;;Total ram usage:        7 bytes
  3196 ;; Hardware stack levels used: 1
  3197 ;; Hardware stack levels required when called: 2
  3198 ;; This function calls:
  3199 ;;		_fputc
  3200 ;; This function is called by:
  3201 ;;		_pad
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           	psect	text16
  3206  001BC2                     __ptext16:
  3207                           	callstack 0
  3208  001BC2                     _fputs:
  3209                           	callstack 22
  3210  001BC2  0E00               	movlw	0
  3211  001BC4  6E10               	movwf	(fputs@i+1)^0,c
  3212  001BC6  0E00               	movlw	0
  3213  001BC8  6E0F               	movwf	fputs@i^0,c
  3214  001BCA  EFF2  F00D         	goto	l1810
  3215  001BCE                     l1806:
  3216  001BCE  C00E  F001         	movff	fputs@c,fputc@c
  3217  001BD2  6A02               	clrf	(fputc@c+1)^0,c
  3218  001BD4  C00C  F003         	movff	fputs@fp,fputc@fp
  3219  001BD8  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  3220  001BDC  EC23  F00A         	call	_fputc	;wreg free
  3221  001BE0  4A0F               	infsnz	fputs@i^0,f,c
  3222  001BE2  2A10               	incf	(fputs@i+1)^0,f,c
  3223  001BE4                     l1810:
  3224  001BE4  500F               	movf	fputs@i^0,w,c
  3225  001BE6  240A               	addwf	fputs@s^0,w,c
  3226  001BE8  6ED9               	movwf	fsr2l,c
  3227  001BEA  5010               	movf	(fputs@i+1)^0,w,c
  3228  001BEC  200B               	addwfc	(fputs@s+1)^0,w,c
  3229  001BEE  6EDA               	movwf	fsr2h,c
  3230  001BF0  50DF               	movf	indf2,w,c
  3231  001BF2  6E0E               	movwf	fputs@c^0,c
  3232  001BF4  500E               	movf	fputs@c^0,w,c
  3233  001BF6  A4D8               	btfss	status,2,c
  3234  001BF8  EF00  F00E         	goto	u901
  3235  001BFC  EF02  F00E         	goto	u900
  3236  001C00                     u901:
  3237  001C00  EFE7  F00D         	goto	l1806
  3238  001C04                     u900:
  3239  001C04  0012               	return		;funcret
  3240  001C06                     __end_of_fputs:
  3241                           	callstack 0
  3242                           
  3243 ;; *************** function _fputc *****************
  3244 ;; Defined at:
  3245 ;;		line 8 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\nf_fputc.c"
  3246 ;; Parameters:    Size  Location     Type
  3247 ;;  c               2    0[COMRAM] int 
  3248 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  3249 ;;		 -> sprintf@f(6), 
  3250 ;; Auto vars:     Size  Location     Type
  3251 ;;		None
  3252 ;; Return value:  Size  Location     Type
  3253 ;;                  2    0[COMRAM] int 
  3254 ;; Registers used:
  3255 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3256 ;; Tracked objects:
  3257 ;;		On entry : 0/0
  3258 ;;		On exit  : 0/0
  3259 ;;		Unchanged: 0/0
  3260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3261 ;;      Params:         4       0       0       0       0       0       0       0       0
  3262 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3263 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3264 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3265 ;;Total ram usage:        9 bytes
  3266 ;; Hardware stack levels used: 1
  3267 ;; Hardware stack levels required when called: 1
  3268 ;; This function calls:
  3269 ;;		_putch
  3270 ;; This function is called by:
  3271 ;;		_pad
  3272 ;;		_vfpfcnvrt
  3273 ;;		_fputs
  3274 ;; This function uses a non-reentrant model
  3275 ;;
  3276                           
  3277                           	psect	text17
  3278  001446                     __ptext17:
  3279                           	callstack 0
  3280  001446                     _fputc:
  3281                           	callstack 25
  3282  001446  5003               	movf	fputc@fp^0,w,c
  3283  001448  1004               	iorwf	(fputc@fp+1)^0,w,c
  3284  00144A  B4D8               	btfsc	status,2,c
  3285  00144C  EF2A  F00A         	goto	u861
  3286  001450  EF2C  F00A         	goto	u860
  3287  001454                     u861:
  3288  001454  EF35  F00A         	goto	l1794
  3289  001458                     u860:
  3290  001458  5003               	movf	fputc@fp^0,w,c
  3291  00145A  1004               	iorwf	(fputc@fp+1)^0,w,c
  3292  00145C  A4D8               	btfss	status,2,c
  3293  00145E  EF33  F00A         	goto	u871
  3294  001462  EF35  F00A         	goto	u870
  3295  001466                     u871:
  3296  001466  EF3A  F00A         	goto	l1796
  3297  00146A                     u870:
  3298  00146A                     l1794:
  3299  00146A  5001               	movf	fputc@c^0,w,c
  3300  00146C  EC28  F00F         	call	_putch
  3301  001470  EF87  F00A         	goto	l1089
  3302  001474                     l1796:
  3303  001474  EE20 F004          	lfsr	2,4
  3304  001478  5003               	movf	fputc@fp^0,w,c
  3305  00147A  26D9               	addwf	fsr2l,f,c
  3306  00147C  5004               	movf	(fputc@fp+1)^0,w,c
  3307  00147E  22DA               	addwfc	fsr2h,f,c
  3308  001480  50DE               	movf	postinc2,w,c
  3309  001482  10DE               	iorwf	postinc2,w,c
  3310  001484  B4D8               	btfsc	status,2,c
  3311  001486  EF47  F00A         	goto	u881
  3312  00148A  EF49  F00A         	goto	u880
  3313  00148E                     u881:
  3314  00148E  EF64  F00A         	goto	l1800
  3315  001492                     u880:
  3316  001492  EE20 F004          	lfsr	2,4
  3317  001496  5003               	movf	fputc@fp^0,w,c
  3318  001498  26D9               	addwf	fsr2l,f,c
  3319  00149A  5004               	movf	(fputc@fp+1)^0,w,c
  3320  00149C  22DA               	addwfc	fsr2h,f,c
  3321  00149E  EE10 F002          	lfsr	1,2
  3322  0014A2  5003               	movf	fputc@fp^0,w,c
  3323  0014A4  26E1               	addwf	fsr1l,f,c
  3324  0014A6  5004               	movf	(fputc@fp+1)^0,w,c
  3325  0014A8  22E2               	addwfc	fsr1h,f,c
  3326  0014AA  50DE               	movf	postinc2,w,c
  3327  0014AC  5CE6               	subwf	postinc1,w,c
  3328  0014AE  50E6               	movf	postinc1,w,c
  3329  0014B0  0A80               	xorlw	128
  3330  0014B2  6E09               	movwf	(??_fputc+4)^0,c
  3331  0014B4  50DE               	movf	postinc2,w,c
  3332  0014B6  0A80               	xorlw	128
  3333  0014B8  5809               	subwfb	(??_fputc+4)^0,w,c
  3334  0014BA  B0D8               	btfsc	status,0,c
  3335  0014BC  EF62  F00A         	goto	u891
  3336  0014C0  EF64  F00A         	goto	u890
  3337  0014C4                     u891:
  3338  0014C4  EF87  F00A         	goto	l1089
  3339  0014C8                     u890:
  3340  0014C8                     l1800:
  3341  0014C8  EE20 F002          	lfsr	2,2
  3342  0014CC  5003               	movf	fputc@fp^0,w,c
  3343  0014CE  26D9               	addwf	fsr2l,f,c
  3344  0014D0  5004               	movf	(fputc@fp+1)^0,w,c
  3345  0014D2  22DA               	addwfc	fsr2h,f,c
  3346  0014D4  CFDE F005          	movff	postinc2,??_fputc
  3347  0014D8  CFDD F006          	movff	postdec2,??_fputc+1
  3348  0014DC  C003  FFD9         	movff	fputc@fp,fsr2l
  3349  0014E0  C004  FFDA         	movff	fputc@fp+1,fsr2h
  3350  0014E4  CFDE F007          	movff	postinc2,??_fputc+2
  3351  0014E8  CFDD F008          	movff	postdec2,??_fputc+3
  3352  0014EC  5005               	movf	??_fputc^0,w,c
  3353  0014EE  2407               	addwf	(??_fputc+2)^0,w,c
  3354  0014F0  6ED9               	movwf	fsr2l,c
  3355  0014F2  5006               	movf	(??_fputc+1)^0,w,c
  3356  0014F4  2008               	addwfc	(??_fputc+3)^0,w,c
  3357  0014F6  6EDA               	movwf	fsr2h,c
  3358  0014F8  C001  FFDF         	movff	fputc@c,indf2
  3359  0014FC  EE20 F002          	lfsr	2,2
  3360  001500  5003               	movf	fputc@fp^0,w,c
  3361  001502  26D9               	addwf	fsr2l,f,c
  3362  001504  5004               	movf	(fputc@fp+1)^0,w,c
  3363  001506  22DA               	addwfc	fsr2h,f,c
  3364  001508  2ADE               	incf	postinc2,f,c
  3365  00150A  0E00               	movlw	0
  3366  00150C  22DD               	addwfc	postdec2,f,c
  3367  00150E                     l1089:
  3368  00150E  0012               	return		;funcret
  3369  001510                     __end_of_fputc:
  3370                           	callstack 0
  3371                           
  3372 ;; *************** function _putch *****************
  3373 ;; Defined at:
  3374 ;;		line 7 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\putch.c"
  3375 ;; Parameters:    Size  Location     Type
  3376 ;;  c               1    wreg     unsigned char 
  3377 ;; Auto vars:     Size  Location     Type
  3378 ;;  c               1    0[COMRAM] unsigned char 
  3379 ;; Return value:  Size  Location     Type
  3380 ;;                  1    wreg      void 
  3381 ;; Registers used:
  3382 ;;		wreg
  3383 ;; Tracked objects:
  3384 ;;		On entry : 0/0
  3385 ;;		On exit  : 0/0
  3386 ;;		Unchanged: 0/0
  3387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3388 ;;      Params:         0       0       0       0       0       0       0       0       0
  3389 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3390 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3391 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3392 ;;Total ram usage:        0 bytes
  3393 ;; Hardware stack levels used: 1
  3394 ;; This function calls:
  3395 ;;		Nothing
  3396 ;; This function is called by:
  3397 ;;		_fputc
  3398 ;; This function uses a non-reentrant model
  3399 ;;
  3400                           
  3401                           	psect	text18
  3402  001E50                     __ptext18:
  3403                           	callstack 0
  3404  001E50                     _putch:
  3405                           	callstack 25
  3406  001E50  0012               	return		;funcret
  3407  001E52                     __end_of_putch:
  3408                           	callstack 0
  3409                           
  3410 ;; *************** function _abs *****************
  3411 ;; Defined at:
  3412 ;;		line 1 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\abs.c"
  3413 ;; Parameters:    Size  Location     Type
  3414 ;;  a               2   18[COMRAM] int 
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;		None
  3417 ;; Return value:  Size  Location     Type
  3418 ;;                  2   18[COMRAM] int 
  3419 ;; Registers used:
  3420 ;;		wreg, status,2, status,0
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3426 ;;      Params:         2       0       0       0       0       0       0       0       0
  3427 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3428 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3429 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3430 ;;Total ram usage:        4 bytes
  3431 ;; Hardware stack levels used: 1
  3432 ;; This function calls:
  3433 ;;		Nothing
  3434 ;; This function is called by:
  3435 ;;		_dtoa
  3436 ;; This function uses a non-reentrant model
  3437 ;;
  3438                           
  3439                           	psect	text19
  3440  001C06                     __ptext19:
  3441                           	callstack 0
  3442  001C06                     _abs:
  3443                           	callstack 25
  3444  001C06  BE14               	btfsc	(abs@a+1)^0,7,c
  3445  001C08  EF10  F00E         	goto	u1090
  3446  001C0C  5014               	movf	(abs@a+1)^0,w,c
  3447  001C0E  E106               	bnz	u1091
  3448  001C10  0413               	decf	abs@a^0,w,c
  3449  001C12  B0D8               	btfsc	status,0,c
  3450  001C14  EF0E  F00E         	goto	u1091
  3451  001C18  EF10  F00E         	goto	u1090
  3452  001C1C                     u1091:
  3453  001C1C  EF1E  F00E         	goto	l1074
  3454  001C20                     u1090:
  3455  001C20  C013  F015         	movff	abs@a,??_abs
  3456  001C24  C014  F016         	movff	abs@a+1,??_abs+1
  3457  001C28  1E15               	comf	??_abs^0,f,c
  3458  001C2A  1E16               	comf	(??_abs+1)^0,f,c
  3459  001C2C  4A15               	infsnz	??_abs^0,f,c
  3460  001C2E  2A16               	incf	(??_abs+1)^0,f,c
  3461  001C30  C015  F013         	movff	??_abs,?_abs
  3462  001C34  C016  F014         	movff	??_abs+1,?_abs+1
  3463  001C38  EF22  F00E         	goto	l1077
  3464  001C3C                     l1074:
  3465  001C3C  C013  F013         	movff	abs@a,?_abs
  3466  001C40  C014  F014         	movff	abs@a+1,?_abs+1
  3467  001C44                     l1077:
  3468  001C44  0012               	return		;funcret
  3469  001C46                     __end_of_abs:
  3470                           	callstack 0
  3471                           
  3472 ;; *************** function ___aomod *****************
  3473 ;; Defined at:
  3474 ;;		line 9 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\aomod.c"
  3475 ;; Parameters:    Size  Location     Type
  3476 ;;  dividend        8    0[COMRAM] long long 
  3477 ;;  divisor         8    8[COMRAM] long long 
  3478 ;; Auto vars:     Size  Location     Type
  3479 ;;  sign            1   17[COMRAM] unsigned char 
  3480 ;;  counter         1   16[COMRAM] unsigned char 
  3481 ;; Return value:  Size  Location     Type
  3482 ;;                  8    0[COMRAM] long long 
  3483 ;; Registers used:
  3484 ;;		wreg, status,2, status,0
  3485 ;; Tracked objects:
  3486 ;;		On entry : 0/0
  3487 ;;		On exit  : 0/0
  3488 ;;		Unchanged: 0/0
  3489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3490 ;;      Params:        16       0       0       0       0       0       0       0       0
  3491 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3492 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3493 ;;      Totals:        18       0       0       0       0       0       0       0       0
  3494 ;;Total ram usage:       18 bytes
  3495 ;; Hardware stack levels used: 1
  3496 ;; This function calls:
  3497 ;;		Nothing
  3498 ;; This function is called by:
  3499 ;;		_dtoa
  3500 ;; This function uses a non-reentrant model
  3501 ;;
  3502                           
  3503                           	psect	text20
  3504  00108C                     __ptext20:
  3505                           	callstack 0
  3506  00108C                     ___aomod:
  3507                           	callstack 25
  3508  00108C  0E00               	movlw	0
  3509  00108E  6E12               	movwf	___aomod@sign^0,c
  3510  001090  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  3511  001092  EF4F  F008         	goto	u990
  3512  001096  EF4D  F008         	goto	u991
  3513  00109A                     u991:
  3514  00109A  EF61  F008         	goto	l1874
  3515  00109E                     u990:
  3516  00109E  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3517  0010A0  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3518  0010A2  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3519  0010A4  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3520  0010A6  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3521  0010A8  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3522  0010AA  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3523  0010AC  6C01               	negf	___aomod@dividend^0,c
  3524  0010AE  0E00               	movlw	0
  3525  0010B0  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3526  0010B2  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3527  0010B4  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3528  0010B6  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3529  0010B8  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3530  0010BA  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3531  0010BC  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3532  0010BE  0E01               	movlw	1
  3533  0010C0  6E12               	movwf	___aomod@sign^0,c
  3534  0010C2                     l1874:
  3535  0010C2  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  3536  0010C4  EF68  F008         	goto	u1000
  3537  0010C8  EF66  F008         	goto	u1001
  3538  0010CC                     u1001:
  3539  0010CC  EF78  F008         	goto	l1878
  3540  0010D0                     u1000:
  3541  0010D0  1E10               	comf	(___aomod@divisor+7)^0,f,c
  3542  0010D2  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  3543  0010D4  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  3544  0010D6  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  3545  0010D8  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  3546  0010DA  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  3547  0010DC  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  3548  0010DE  6C09               	negf	___aomod@divisor^0,c
  3549  0010E0  0E00               	movlw	0
  3550  0010E2  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  3551  0010E4  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  3552  0010E6  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  3553  0010E8  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  3554  0010EA  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  3555  0010EC  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  3556  0010EE  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  3557  0010F0                     l1878:
  3558  0010F0  5009               	movf	___aomod@divisor^0,w,c
  3559  0010F2  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  3560  0010F4  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  3561  0010F6  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  3562  0010F8  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  3563  0010FA  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  3564  0010FC  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  3565  0010FE  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  3566  001100  B4D8               	btfsc	status,2,c
  3567  001102  EF85  F008         	goto	u1011
  3568  001106  EF87  F008         	goto	u1010
  3569  00110A                     u1011:
  3570  00110A  EFCF  F008         	goto	l1894
  3571  00110E                     u1010:
  3572  00110E  0E01               	movlw	1
  3573  001110  6E11               	movwf	___aomod@counter^0,c
  3574  001112  EF95  F008         	goto	l1884
  3575  001116                     l1882:
  3576  001116  90D8               	bcf	status,0,c
  3577  001118  3609               	rlcf	___aomod@divisor^0,f,c
  3578  00111A  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  3579  00111C  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  3580  00111E  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  3581  001120  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  3582  001122  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  3583  001124  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  3584  001126  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  3585  001128  2A11               	incf	___aomod@counter^0,f,c
  3586  00112A                     l1884:
  3587  00112A  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  3588  00112C  EF9A  F008         	goto	u1021
  3589  001130  EF9C  F008         	goto	u1020
  3590  001134                     u1021:
  3591  001134  EF8B  F008         	goto	l1882
  3592  001138                     u1020:
  3593  001138                     l1886:
  3594  001138  5009               	movf	___aomod@divisor^0,w,c
  3595  00113A  5C01               	subwf	___aomod@dividend^0,w,c
  3596  00113C  500A               	movf	(___aomod@divisor+1)^0,w,c
  3597  00113E  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  3598  001140  500B               	movf	(___aomod@divisor+2)^0,w,c
  3599  001142  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  3600  001144  500C               	movf	(___aomod@divisor+3)^0,w,c
  3601  001146  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  3602  001148  500D               	movf	(___aomod@divisor+4)^0,w,c
  3603  00114A  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  3604  00114C  500E               	movf	(___aomod@divisor+5)^0,w,c
  3605  00114E  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  3606  001150  500F               	movf	(___aomod@divisor+6)^0,w,c
  3607  001152  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  3608  001154  5010               	movf	(___aomod@divisor+7)^0,w,c
  3609  001156  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  3610  001158  A0D8               	btfss	status,0,c
  3611  00115A  EFB1  F008         	goto	u1031
  3612  00115E  EFB3  F008         	goto	u1030
  3613  001162                     u1031:
  3614  001162  EFC3  F008         	goto	l1890
  3615  001166                     u1030:
  3616  001166  5009               	movf	___aomod@divisor^0,w,c
  3617  001168  5E01               	subwf	___aomod@dividend^0,f,c
  3618  00116A  500A               	movf	(___aomod@divisor+1)^0,w,c
  3619  00116C  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  3620  00116E  500B               	movf	(___aomod@divisor+2)^0,w,c
  3621  001170  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  3622  001172  500C               	movf	(___aomod@divisor+3)^0,w,c
  3623  001174  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  3624  001176  500D               	movf	(___aomod@divisor+4)^0,w,c
  3625  001178  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  3626  00117A  500E               	movf	(___aomod@divisor+5)^0,w,c
  3627  00117C  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  3628  00117E  500F               	movf	(___aomod@divisor+6)^0,w,c
  3629  001180  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  3630  001182  5010               	movf	(___aomod@divisor+7)^0,w,c
  3631  001184  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  3632  001186                     l1890:
  3633  001186  90D8               	bcf	status,0,c
  3634  001188  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  3635  00118A  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  3636  00118C  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  3637  00118E  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  3638  001190  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  3639  001192  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  3640  001194  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  3641  001196  3209               	rrcf	___aomod@divisor^0,f,c
  3642  001198  2E11               	decfsz	___aomod@counter^0,f,c
  3643  00119A  EF9C  F008         	goto	l1886
  3644  00119E                     l1894:
  3645  00119E  5012               	movf	___aomod@sign^0,w,c
  3646  0011A0  B4D8               	btfsc	status,2,c
  3647  0011A2  EFD5  F008         	goto	u1041
  3648  0011A6  EFD7  F008         	goto	u1040
  3649  0011AA                     u1041:
  3650  0011AA  EFE7  F008         	goto	l1898
  3651  0011AE                     u1040:
  3652  0011AE  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3653  0011B0  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3654  0011B2  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3655  0011B4  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3656  0011B6  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3657  0011B8  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3658  0011BA  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3659  0011BC  6C01               	negf	___aomod@dividend^0,c
  3660  0011BE  0E00               	movlw	0
  3661  0011C0  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3662  0011C2  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3663  0011C4  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3664  0011C6  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3665  0011C8  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3666  0011CA  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3667  0011CC  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3668  0011CE                     l1898:
  3669  0011CE  C001  F001         	movff	___aomod@dividend,?___aomod
  3670  0011D2  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3671  0011D6  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3672  0011DA  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3673  0011DE  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3674  0011E2  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3675  0011E6  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3676  0011EA  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3677  0011EE  0012               	return		;funcret
  3678  0011F0                     __end_of___aomod:
  3679                           	callstack 0
  3680                           
  3681 ;; *************** function ___aodiv *****************
  3682 ;; Defined at:
  3683 ;;		line 9 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\aodiv.c"
  3684 ;; Parameters:    Size  Location     Type
  3685 ;;  dividend        8    0[COMRAM] long long 
  3686 ;;  divisor         8    8[COMRAM] long long 
  3687 ;; Auto vars:     Size  Location     Type
  3688 ;;  quotient        8   18[COMRAM] long long 
  3689 ;;  sign            1   17[COMRAM] unsigned char 
  3690 ;;  counter         1   16[COMRAM] unsigned char 
  3691 ;; Return value:  Size  Location     Type
  3692 ;;                  8    0[COMRAM] long long 
  3693 ;; Registers used:
  3694 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3695 ;; Tracked objects:
  3696 ;;		On entry : 0/0
  3697 ;;		On exit  : 0/0
  3698 ;;		Unchanged: 0/0
  3699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3700 ;;      Params:        16       0       0       0       0       0       0       0       0
  3701 ;;      Locals:        10       0       0       0       0       0       0       0       0
  3702 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3703 ;;      Totals:        26       0       0       0       0       0       0       0       0
  3704 ;;Total ram usage:       26 bytes
  3705 ;; Hardware stack levels used: 1
  3706 ;; This function calls:
  3707 ;;		Nothing
  3708 ;; This function is called by:
  3709 ;;		_dtoa
  3710 ;; This function uses a non-reentrant model
  3711 ;;
  3712                           
  3713                           	psect	text21
  3714  000F04                     __ptext21:
  3715                           	callstack 0
  3716  000F04                     ___aodiv:
  3717                           	callstack 25
  3718  000F04  0E00               	movlw	0
  3719  000F06  6E12               	movwf	___aodiv@sign^0,c
  3720  000F08  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3721  000F0A  EF8B  F007         	goto	u920
  3722  000F0E  EF89  F007         	goto	u921
  3723  000F12                     u921:
  3724  000F12  EF9D  F007         	goto	l1830
  3725  000F16                     u920:
  3726  000F16  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3727  000F18  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3728  000F1A  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3729  000F1C  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3730  000F1E  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3731  000F20  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3732  000F22  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3733  000F24  6C09               	negf	___aodiv@divisor^0,c
  3734  000F26  0E00               	movlw	0
  3735  000F28  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3736  000F2A  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3737  000F2C  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3738  000F2E  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3739  000F30  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3740  000F32  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3741  000F34  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3742  000F36  0E01               	movlw	1
  3743  000F38  6E12               	movwf	___aodiv@sign^0,c
  3744  000F3A                     l1830:
  3745  000F3A  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3746  000F3C  EFA4  F007         	goto	u930
  3747  000F40  EFA2  F007         	goto	u931
  3748  000F44                     u931:
  3749  000F44  EFB6  F007         	goto	l1836
  3750  000F48                     u930:
  3751  000F48  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3752  000F4A  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3753  000F4C  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3754  000F4E  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3755  000F50  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3756  000F52  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3757  000F54  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3758  000F56  6C01               	negf	___aodiv@dividend^0,c
  3759  000F58  0E00               	movlw	0
  3760  000F5A  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3761  000F5C  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3762  000F5E  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3763  000F60  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3764  000F62  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3765  000F64  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3766  000F66  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3767  000F68  0E01               	movlw	1
  3768  000F6A  1A12               	xorwf	___aodiv@sign^0,f,c
  3769  000F6C                     l1836:
  3770  000F6C  EE20  F013         	lfsr	2,___aodiv@quotient
  3771  000F70  0E07               	movlw	7
  3772  000F72                     u941:
  3773  000F72  6ADE               	clrf	postinc2,c
  3774  000F74  06E8               	decf	wreg,f,c
  3775  000F76  E2FD               	bc	u941
  3776  000F78  5009               	movf	___aodiv@divisor^0,w,c
  3777  000F7A  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3778  000F7C  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3779  000F7E  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3780  000F80  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3781  000F82  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3782  000F84  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3783  000F86  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  3784  000F88  B4D8               	btfsc	status,2,c
  3785  000F8A  EFC9  F007         	goto	u951
  3786  000F8E  EFCB  F007         	goto	u950
  3787  000F92                     u951:
  3788  000F92  EF1D  F008         	goto	l1858
  3789  000F96                     u950:
  3790  000F96  0E01               	movlw	1
  3791  000F98  6E11               	movwf	___aodiv@counter^0,c
  3792  000F9A  EFD9  F007         	goto	l1844
  3793  000F9E                     l1842:
  3794  000F9E  90D8               	bcf	status,0,c
  3795  000FA0  3609               	rlcf	___aodiv@divisor^0,f,c
  3796  000FA2  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3797  000FA4  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3798  000FA6  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3799  000FA8  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3800  000FAA  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3801  000FAC  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3802  000FAE  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  3803  000FB0  2A11               	incf	___aodiv@counter^0,f,c
  3804  000FB2                     l1844:
  3805  000FB2  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  3806  000FB4  EFDE  F007         	goto	u961
  3807  000FB8  EFE0  F007         	goto	u960
  3808  000FBC                     u961:
  3809  000FBC  EFCF  F007         	goto	l1842
  3810  000FC0                     u960:
  3811  000FC0                     l1846:
  3812  000FC0  90D8               	bcf	status,0,c
  3813  000FC2  3613               	rlcf	___aodiv@quotient^0,f,c
  3814  000FC4  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3815  000FC6  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3816  000FC8  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3817  000FCA  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3818  000FCC  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3819  000FCE  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3820  000FD0  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3821  000FD2  5009               	movf	___aodiv@divisor^0,w,c
  3822  000FD4  5C01               	subwf	___aodiv@dividend^0,w,c
  3823  000FD6  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3824  000FD8  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3825  000FDA  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3826  000FDC  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3827  000FDE  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3828  000FE0  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3829  000FE2  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3830  000FE4  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3831  000FE6  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3832  000FE8  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3833  000FEA  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3834  000FEC  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  3835  000FEE  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3836  000FF0  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  3837  000FF2  A0D8               	btfss	status,0,c
  3838  000FF4  EFFE  F007         	goto	u971
  3839  000FF8  EF00  F008         	goto	u970
  3840  000FFC                     u971:
  3841  000FFC  EF11  F008         	goto	l1854
  3842  001000                     u970:
  3843  001000  5009               	movf	___aodiv@divisor^0,w,c
  3844  001002  5E01               	subwf	___aodiv@dividend^0,f,c
  3845  001004  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3846  001006  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3847  001008  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3848  00100A  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3849  00100C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3850  00100E  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3851  001010  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3852  001012  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3853  001014  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3854  001016  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3855  001018  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3856  00101A  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3857  00101C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3858  00101E  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  3859  001020  8013               	bsf	___aodiv@quotient^0,0,c
  3860  001022                     l1854:
  3861  001022  90D8               	bcf	status,0,c
  3862  001024  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  3863  001026  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3864  001028  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3865  00102A  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3866  00102C  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3867  00102E  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3868  001030  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3869  001032  3209               	rrcf	___aodiv@divisor^0,f,c
  3870  001034  2E11               	decfsz	___aodiv@counter^0,f,c
  3871  001036  EFE0  F007         	goto	l1846
  3872  00103A                     l1858:
  3873  00103A  5012               	movf	___aodiv@sign^0,w,c
  3874  00103C  B4D8               	btfsc	status,2,c
  3875  00103E  EF23  F008         	goto	u981
  3876  001042  EF25  F008         	goto	u980
  3877  001046                     u981:
  3878  001046  EF35  F008         	goto	l1862
  3879  00104A                     u980:
  3880  00104A  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  3881  00104C  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  3882  00104E  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  3883  001050  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  3884  001052  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  3885  001054  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  3886  001056  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  3887  001058  6C13               	negf	___aodiv@quotient^0,c
  3888  00105A  0E00               	movlw	0
  3889  00105C  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3890  00105E  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3891  001060  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3892  001062  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3893  001064  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3894  001066  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3895  001068  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3896  00106A                     l1862:
  3897  00106A  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3898  00106E  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3899  001072  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3900  001076  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3901  00107A  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3902  00107E  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3903  001082  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3904  001086  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3905  00108A  0012               	return		;funcret
  3906  00108C                     __end_of___aodiv:
  3907                           	callstack 0
  3908                           
  3909 ;; *************** function _LCD_String_xy *****************
  3910 ;; Defined at:
  3911 ;;		line 87 in file "LCD.c"
  3912 ;; Parameters:    Size  Location     Type
  3913 ;;  row             1    wreg     unsigned char 
  3914 ;;  pos             1    4[COMRAM] unsigned char 
  3915 ;;  msg             2    5[COMRAM] PTR const unsigned char 
  3916 ;;		 -> STR_4(14), STR_3(14), STR_2(15), STR_1(15), 
  3917 ;;		 -> Cadena(10), 
  3918 ;; Auto vars:     Size  Location     Type
  3919 ;;  row             1    7[COMRAM] unsigned char 
  3920 ;;  location        1    8[COMRAM] unsigned char 
  3921 ;; Return value:  Size  Location     Type
  3922 ;;                  1    wreg      void 
  3923 ;; Registers used:
  3924 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3925 ;; Tracked objects:
  3926 ;;		On entry : 0/0
  3927 ;;		On exit  : 0/0
  3928 ;;		Unchanged: 0/0
  3929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3930 ;;      Params:         3       0       0       0       0       0       0       0       0
  3931 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3932 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3933 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3934 ;;Total ram usage:        5 bytes
  3935 ;; Hardware stack levels used: 1
  3936 ;; Hardware stack levels required when called: 2
  3937 ;; This function calls:
  3938 ;;		_LCD_Command
  3939 ;;		_LCD_String
  3940 ;; This function is called by:
  3941 ;;		_PedirDato
  3942 ;;		_MostrarHumedad
  3943 ;;		_MostrarTemperatura
  3944 ;; This function uses a non-reentrant model
  3945 ;;
  3946                           
  3947                           	psect	text22
  3948  001C46                     __ptext22:
  3949                           	callstack 0
  3950  001C46                     _LCD_String_xy:
  3951                           	callstack 26
  3952                           
  3953                           ;incstack = 0
  3954                           ;LCD_String_xy@row stored from wreg
  3955  001C46  6E08               	movwf	LCD_String_xy@row^0,c
  3956  001C48                     
  3957                           ;LCD.c: 90:     if(row<=1)
  3958  001C48  0E02               	movlw	2
  3959  001C4A  6008               	cpfslt	LCD_String_xy@row^0,c
  3960  001C4C  EF2A  F00E         	goto	u1321
  3961  001C50  EF2C  F00E         	goto	u1320
  3962  001C54                     u1321:
  3963  001C54  EF35  F00E         	goto	l2090
  3964  001C58                     u1320:
  3965  001C58                     
  3966                           ;LCD.c: 91:     {;LCD.c: 92:         location = (0x80) | ((pos) & 0x0f);
  3967  001C58  5005               	movf	LCD_String_xy@pos^0,w,c
  3968  001C5A  0B0F               	andlw	15
  3969  001C5C  0980               	iorlw	128
  3970  001C5E  6E09               	movwf	LCD_String_xy@location^0,c
  3971  001C60                     
  3972                           ;LCD.c: 93:         LCD_Command(location);
  3973  001C60  5009               	movf	LCD_String_xy@location^0,w,c
  3974  001C62  EC96  F00D         	call	_LCD_Command
  3975                           
  3976                           ;LCD.c: 94:     }
  3977  001C66  EF3C  F00E         	goto	l2094
  3978  001C6A                     l2090:
  3979                           
  3980                           ;LCD.c: 96:     {;LCD.c: 97:         location = (0xC0) | ((pos) & 0x0f);
  3981  001C6A  5005               	movf	LCD_String_xy@pos^0,w,c
  3982  001C6C  0B0F               	andlw	15
  3983  001C6E  09C0               	iorlw	192
  3984  001C70  6E09               	movwf	LCD_String_xy@location^0,c
  3985  001C72                     
  3986                           ;LCD.c: 98:         LCD_Command(location);
  3987  001C72  5009               	movf	LCD_String_xy@location^0,w,c
  3988  001C74  EC96  F00D         	call	_LCD_Command
  3989  001C78                     l2094:
  3990                           
  3991                           ;LCD.c: 102:     LCD_String(msg);
  3992  001C78  C006  F003         	movff	LCD_String_xy@msg,LCD_String@msg
  3993  001C7C  C007  F004         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  3994  001C80  ECBD  F00C         	call	_LCD_String	;wreg free
  3995  001C84  0012               	return		;funcret
  3996  001C86                     __end_of_LCD_String_xy:
  3997                           	callstack 0
  3998                           
  3999 ;; *************** function _LCD_String *****************
  4000 ;; Defined at:
  4001 ;;		line 74 in file "LCD.c"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;  msg             2    2[COMRAM] PTR const unsigned char 
  4004 ;;		 -> STR_4(14), STR_3(14), STR_2(15), STR_1(15), 
  4005 ;;		 -> Cadena(10), 
  4006 ;; Auto vars:     Size  Location     Type
  4007 ;;		None
  4008 ;; Return value:  Size  Location     Type
  4009 ;;                  1    wreg      void 
  4010 ;; Registers used:
  4011 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4012 ;; Tracked objects:
  4013 ;;		On entry : 0/0
  4014 ;;		On exit  : 0/0
  4015 ;;		Unchanged: 0/0
  4016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4017 ;;      Params:         2       0       0       0       0       0       0       0       0
  4018 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4019 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4020 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4021 ;;Total ram usage:        2 bytes
  4022 ;; Hardware stack levels used: 1
  4023 ;; Hardware stack levels required when called: 1
  4024 ;; This function calls:
  4025 ;;		_LCD_Char
  4026 ;; This function is called by:
  4027 ;;		_LCD_String_xy
  4028 ;;		_MostrarHumedad
  4029 ;;		_MostrarTemperatura
  4030 ;; This function uses a non-reentrant model
  4031 ;;
  4032                           
  4033                           	psect	text23
  4034  00197A                     __ptext23:
  4035                           	callstack 0
  4036  00197A                     _LCD_String:
  4037                           	callstack 26
  4038  00197A                     
  4039                           ;LCD.c: 74: void LCD_String(const char *msg);LCD.c: 75: {;LCD.c: 76:  while((*msg)!=0)
  4040  00197A  EFD3  F00C         	goto	l2036
  4041  00197E                     l2032:
  4042                           
  4043                           ;LCD.c: 77:  {;LCD.c: 78:    LCD_Char(*msg);
  4044  00197E  C003  FFF6         	movff	LCD_String@msg,tblptrl
  4045  001982  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  4046  001986  6AF8               	clrf	tblptru,c
  4047  001988  0E07               	movlw	(high __ramtop+-1)
  4048  00198A  64F7               	cpfsgt	tblptrh,c
  4049  00198C  D003               	bra	u1257
  4050  00198E  0008               	tblrd		*
  4051  001990  50F5               	movf	tablat,w,c
  4052  001992  D005               	bra	u1250
  4053  001994                     u1257:
  4054  001994  CFF6 FFE1          	movff	tblptrl,fsr1l
  4055  001998  CFF7 FFE2          	movff	tblptrh,fsr1h
  4056  00199C  50E7               	movf	indf1,w,c
  4057  00199E                     u1250:
  4058  00199E  EC6E  F00D         	call	_LCD_Char
  4059  0019A2                     
  4060                           ;LCD.c: 79:    msg++;
  4061  0019A2  4A03               	infsnz	LCD_String@msg^0,f,c
  4062  0019A4  2A04               	incf	(LCD_String@msg+1)^0,f,c
  4063  0019A6                     l2036:
  4064                           
  4065                           ;LCD.c: 76:  while((*msg)!=0)
  4066  0019A6  C003  FFF6         	movff	LCD_String@msg,tblptrl
  4067  0019AA  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  4068  0019AE  6AF8               	clrf	tblptru,c
  4069  0019B0  0E07               	movlw	(high __ramtop+-1)
  4070  0019B2  64F7               	cpfsgt	tblptrh,c
  4071  0019B4  D003               	bra	u1267
  4072  0019B6  0008               	tblrd		*
  4073  0019B8  50F5               	movf	tablat,w,c
  4074  0019BA  D005               	bra	u1260
  4075  0019BC                     u1267:
  4076  0019BC  CFF6 FFE1          	movff	tblptrl,fsr1l
  4077  0019C0  CFF7 FFE2          	movff	tblptrh,fsr1h
  4078  0019C4  50E7               	movf	indf1,w,c
  4079  0019C6                     u1260:
  4080  0019C6  0900               	iorlw	0
  4081  0019C8  A4D8               	btfss	status,2,c
  4082  0019CA  EFE9  F00C         	goto	u1271
  4083  0019CE  EFEB  F00C         	goto	u1270
  4084  0019D2                     u1271:
  4085  0019D2  EFBF  F00C         	goto	l2032
  4086  0019D6                     u1270:
  4087  0019D6  0012               	return		;funcret
  4088  0019D8                     __end_of_LCD_String:
  4089                           	callstack 0
  4090                           
  4091 ;; *************** function _LCD_Char *****************
  4092 ;; Defined at:
  4093 ;;		line 57 in file "LCD.c"
  4094 ;; Parameters:    Size  Location     Type
  4095 ;;  dat             1    wreg     unsigned char 
  4096 ;; Auto vars:     Size  Location     Type
  4097 ;;  dat             1    1[COMRAM] unsigned char 
  4098 ;; Return value:  Size  Location     Type
  4099 ;;                  1    wreg      void 
  4100 ;; Registers used:
  4101 ;;		wreg, status,2, status,0
  4102 ;; Tracked objects:
  4103 ;;		On entry : 0/0
  4104 ;;		On exit  : 0/0
  4105 ;;		Unchanged: 0/0
  4106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4107 ;;      Params:         0       0       0       0       0       0       0       0       0
  4108 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4109 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4110 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4111 ;;Total ram usage:        2 bytes
  4112 ;; Hardware stack levels used: 1
  4113 ;; This function calls:
  4114 ;;		Nothing
  4115 ;; This function is called by:
  4116 ;;		_LCD_String
  4117 ;;		_PedirDato
  4118 ;;		_MostrarHumedad
  4119 ;;		_MostrarTemperatura
  4120 ;; This function uses a non-reentrant model
  4121 ;;
  4122                           
  4123                           	psect	text24
  4124  001ADC                     __ptext24:
  4125                           	callstack 0
  4126  001ADC                     _LCD_Char:
  4127                           	callstack 26
  4128                           
  4129                           ;incstack = 0
  4130                           ;LCD_Char@dat stored from wreg
  4131  001ADC  6E02               	movwf	LCD_Char@dat^0,c
  4132  001ADE                     
  4133                           ;LCD.c: 57: void LCD_Char(unsigned char dat);LCD.c: 58: {;LCD.c: 59:  LATD = (LATD & 0x0
      +                          f) | (0xF0 & dat);
  4134  001ADE  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  4135  001AE2  0EF0               	movlw	240
  4136  001AE4  1601               	andwf	??_LCD_Char^0,f,c
  4137  001AE6  508C               	movf	140,w,c	;volatile
  4138  001AE8  0B0F               	andlw	15
  4139  001AEA  1001               	iorwf	??_LCD_Char^0,w,c
  4140  001AEC  6E8C               	movwf	140,c	;volatile
  4141  001AEE                     
  4142                           ;LCD.c: 60:  LATD0 = 1;
  4143  001AEE  808C               	bsf	3980,0,c	;volatile
  4144  001AF0                     
  4145                           ;LCD.c: 61:  LATD1 = 1;
  4146  001AF0  828C               	bsf	3980,1,c	;volatile
  4147  001AF2                     
  4148                           ;LCD.c: 62:  __nop();
  4149  001AF2  F000               	nop	
  4150  001AF4                     
  4151                           ;LCD.c: 63:  LATD1 = 0;
  4152  001AF4  928C               	bcf	3980,1,c	;volatile
  4153  001AF6                     
  4154                           ;LCD.c: 64:  _delay((unsigned long)((1)*(8000000L/4000.0)));
  4155  001AF6  0E03               	movlw	3
  4156  001AF8  6E01               	movwf	??_LCD_Char^0,c
  4157  001AFA  0E98               	movlw	152
  4158  001AFC                     u1807:
  4159  001AFC  2EE8               	decfsz	wreg,f,c
  4160  001AFE  D7FE               	bra	u1807
  4161  001B00  2E01               	decfsz	??_LCD_Char^0,f,c
  4162  001B02  D7FC               	bra	u1807
  4163  001B04                     
  4164                           ;LCD.c: 65:     LATD = (LATD & 0x0f) | (dat<<4);
  4165  001B04  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  4166  001B08  3A01               	swapf	??_LCD_Char^0,f,c
  4167  001B0A  0EF0               	movlw	240
  4168  001B0C  1601               	andwf	??_LCD_Char^0,f,c
  4169  001B0E  508C               	movf	140,w,c	;volatile
  4170  001B10  0B0F               	andlw	15
  4171  001B12  1001               	iorwf	??_LCD_Char^0,w,c
  4172  001B14  6E8C               	movwf	140,c	;volatile
  4173  001B16                     
  4174                           ;LCD.c: 66:  LATD1 = 1;
  4175  001B16  828C               	bsf	3980,1,c	;volatile
  4176  001B18                     
  4177                           ;LCD.c: 67:  __nop();
  4178  001B18  F000               	nop	
  4179  001B1A                     
  4180                           ;LCD.c: 68:  LATD1 = 0;
  4181  001B1A  928C               	bcf	3980,1,c	;volatile
  4182                           
  4183                           ;LCD.c: 69:  _delay((unsigned long)((3)*(8000000L/4000.0)));
  4184  001B1C  0E08               	movlw	8
  4185  001B1E  6E01               	movwf	??_LCD_Char^0,c
  4186  001B20  0ECA               	movlw	202
  4187  001B22                     u1817:
  4188  001B22  2EE8               	decfsz	wreg,f,c
  4189  001B24  D7FE               	bra	u1817
  4190  001B26  2E01               	decfsz	??_LCD_Char^0,f,c
  4191  001B28  D7FC               	bra	u1817
  4192  001B2A  0012               	return		;funcret
  4193  001B2C                     __end_of_LCD_Char:
  4194                           	callstack 0
  4195                           
  4196 ;; *************** function _LCD_Init *****************
  4197 ;; Defined at:
  4198 ;;		line 26 in file "LCD.c"
  4199 ;; Parameters:    Size  Location     Type
  4200 ;;		None
  4201 ;; Auto vars:     Size  Location     Type
  4202 ;;		None
  4203 ;; Return value:  Size  Location     Type
  4204 ;;                  1    wreg      void 
  4205 ;; Registers used:
  4206 ;;		wreg, status,2, status,0, cstack
  4207 ;; Tracked objects:
  4208 ;;		On entry : 0/0
  4209 ;;		On exit  : 0/0
  4210 ;;		Unchanged: 0/0
  4211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4212 ;;      Params:         0       0       0       0       0       0       0       0       0
  4213 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4214 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4215 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4216 ;;Total ram usage:        1 bytes
  4217 ;; Hardware stack levels used: 1
  4218 ;; Hardware stack levels required when called: 1
  4219 ;; This function calls:
  4220 ;;		_LCD_Command
  4221 ;; This function is called by:
  4222 ;;		_main
  4223 ;; This function uses a non-reentrant model
  4224 ;;
  4225                           
  4226                           	psect	text25
  4227  001D30                     __ptext25:
  4228                           	callstack 0
  4229  001D30                     _LCD_Init:
  4230                           	callstack 29
  4231  001D30                     
  4232                           ;LCD.c: 28:     TRISD = 0;
  4233  001D30  0E00               	movlw	0
  4234  001D32  6E95               	movwf	149,c	;volatile
  4235  001D34                     
  4236                           ;LCD.c: 29:     _delay((unsigned long)((15)*(8000000L/4000.0)));
  4237  001D34  0E27               	movlw	39
  4238  001D36  6E03               	movwf	??_LCD_Init^0,c
  4239  001D38  0EF5               	movlw	245
  4240  001D3A                     u1827:
  4241  001D3A  2EE8               	decfsz	wreg,f,c
  4242  001D3C  D7FE               	bra	u1827
  4243  001D3E  2E03               	decfsz	??_LCD_Init^0,f,c
  4244  001D40  D7FC               	bra	u1827
  4245  001D42  F000               	nop	
  4246  001D44                     
  4247                           ;LCD.c: 30:     LCD_Command(0x02);
  4248  001D44  0E02               	movlw	2
  4249  001D46  EC96  F00D         	call	_LCD_Command
  4250  001D4A                     
  4251                           ;LCD.c: 32:     LCD_Command(0x28);
  4252  001D4A  0E28               	movlw	40
  4253  001D4C  EC96  F00D         	call	_LCD_Command
  4254  001D50                     
  4255                           ;LCD.c: 34:  LCD_Command(0x01);
  4256  001D50  0E01               	movlw	1
  4257  001D52  EC96  F00D         	call	_LCD_Command
  4258  001D56                     
  4259                           ;LCD.c: 35:     LCD_Command(0x0c);
  4260  001D56  0E0C               	movlw	12
  4261  001D58  EC96  F00D         	call	_LCD_Command
  4262  001D5C                     
  4263                           ;LCD.c: 36:  LCD_Command(0x06);
  4264  001D5C  0E06               	movlw	6
  4265  001D5E  EC96  F00D         	call	_LCD_Command
  4266  001D62  0012               	return		;funcret
  4267  001D64                     __end_of_LCD_Init:
  4268                           	callstack 0
  4269                           
  4270 ;; *************** function _LCD_Command *****************
  4271 ;; Defined at:
  4272 ;;		line 41 in file "LCD.c"
  4273 ;; Parameters:    Size  Location     Type
  4274 ;;  cmd             1    wreg     unsigned char 
  4275 ;; Auto vars:     Size  Location     Type
  4276 ;;  cmd             1    1[COMRAM] unsigned char 
  4277 ;; Return value:  Size  Location     Type
  4278 ;;                  1    wreg      void 
  4279 ;; Registers used:
  4280 ;;		wreg, status,2, status,0
  4281 ;; Tracked objects:
  4282 ;;		On entry : 0/0
  4283 ;;		On exit  : 0/0
  4284 ;;		Unchanged: 0/0
  4285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4286 ;;      Params:         0       0       0       0       0       0       0       0       0
  4287 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4288 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4289 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4290 ;;Total ram usage:        2 bytes
  4291 ;; Hardware stack levels used: 1
  4292 ;; This function calls:
  4293 ;;		Nothing
  4294 ;; This function is called by:
  4295 ;;		_LCD_Init
  4296 ;;		_LCD_String_xy
  4297 ;;		_LCD_Clear
  4298 ;;		_PedirDato
  4299 ;; This function uses a non-reentrant model
  4300 ;;
  4301                           
  4302                           	psect	text26
  4303  001B2C                     __ptext26:
  4304                           	callstack 0
  4305  001B2C                     _LCD_Command:
  4306                           	callstack 27
  4307                           
  4308                           ;incstack = 0
  4309                           ;LCD_Command@cmd stored from wreg
  4310  001B2C  6E02               	movwf	LCD_Command@cmd^0,c
  4311  001B2E                     
  4312                           ;LCD.c: 41: void LCD_Command(unsigned char cmd );LCD.c: 42: {;LCD.c: 43:  LATD = (LATD &
      +                           0x0f) |(0xF0 & cmd);
  4313  001B2E  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  4314  001B32  0EF0               	movlw	240
  4315  001B34  1601               	andwf	??_LCD_Command^0,f,c
  4316  001B36  508C               	movf	140,w,c	;volatile
  4317  001B38  0B0F               	andlw	15
  4318  001B3A  1001               	iorwf	??_LCD_Command^0,w,c
  4319  001B3C  6E8C               	movwf	140,c	;volatile
  4320  001B3E                     
  4321                           ;LCD.c: 44:  LATD0 = 0;
  4322  001B3E  908C               	bcf	3980,0,c	;volatile
  4323  001B40                     
  4324                           ;LCD.c: 45:  LATD1 = 1;
  4325  001B40  828C               	bsf	3980,1,c	;volatile
  4326  001B42                     
  4327                           ;LCD.c: 46:  __nop();
  4328  001B42  F000               	nop	
  4329  001B44                     
  4330                           ;LCD.c: 47:  LATD1 = 0;
  4331  001B44  928C               	bcf	3980,1,c	;volatile
  4332  001B46                     
  4333                           ;LCD.c: 48:  _delay((unsigned long)((1)*(8000000L/4000.0)));
  4334  001B46  0E03               	movlw	3
  4335  001B48  6E01               	movwf	??_LCD_Command^0,c
  4336  001B4A  0E98               	movlw	152
  4337  001B4C                     u1837:
  4338  001B4C  2EE8               	decfsz	wreg,f,c
  4339  001B4E  D7FE               	bra	u1837
  4340  001B50  2E01               	decfsz	??_LCD_Command^0,f,c
  4341  001B52  D7FC               	bra	u1837
  4342  001B54                     
  4343                           ;LCD.c: 49:     LATD = (LATD & 0x0f) | (cmd<<4);
  4344  001B54  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  4345  001B58  3A01               	swapf	??_LCD_Command^0,f,c
  4346  001B5A  0EF0               	movlw	240
  4347  001B5C  1601               	andwf	??_LCD_Command^0,f,c
  4348  001B5E  508C               	movf	140,w,c	;volatile
  4349  001B60  0B0F               	andlw	15
  4350  001B62  1001               	iorwf	??_LCD_Command^0,w,c
  4351  001B64  6E8C               	movwf	140,c	;volatile
  4352  001B66                     
  4353                           ;LCD.c: 50:  LATD1 = 1;
  4354  001B66  828C               	bsf	3980,1,c	;volatile
  4355  001B68                     
  4356                           ;LCD.c: 51:  __nop();
  4357  001B68  F000               	nop	
  4358  001B6A                     
  4359                           ;LCD.c: 52:  LATD1 = 0;
  4360  001B6A  928C               	bcf	3980,1,c	;volatile
  4361                           
  4362                           ;LCD.c: 53:  _delay((unsigned long)((3)*(8000000L/4000.0)));
  4363  001B6C  0E08               	movlw	8
  4364  001B6E  6E01               	movwf	??_LCD_Command^0,c
  4365  001B70  0ECA               	movlw	202
  4366  001B72                     u1847:
  4367  001B72  2EE8               	decfsz	wreg,f,c
  4368  001B74  D7FE               	bra	u1847
  4369  001B76  2E01               	decfsz	??_LCD_Command^0,f,c
  4370  001B78  D7FC               	bra	u1847
  4371  001B7A  0012               	return		;funcret
  4372  001B7C                     __end_of_LCD_Command:
  4373                           	callstack 0
  4374                           
  4375 ;; *************** function _DatosSensorTH *****************
  4376 ;; Defined at:
  4377 ;;		line 57 in file "DHT11.c"
  4378 ;; Parameters:    Size  Location     Type
  4379 ;;  Datos           2    2[COMRAM] PTR unsigned char 
  4380 ;;		 -> Datos(2), 
  4381 ;; Auto vars:     Size  Location     Type
  4382 ;;  T_Integral      1    5[COMRAM] unsigned char 
  4383 ;;  RH_Integral     1    4[COMRAM] unsigned char 
  4384 ;;  Checksum        1    0        unsigned char 
  4385 ;;  T_Decimal       1    0        unsigned char 
  4386 ;;  RH_Decimal      1    0        unsigned char 
  4387 ;; Return value:  Size  Location     Type
  4388 ;;                  1    wreg      void 
  4389 ;; Registers used:
  4390 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4391 ;; Tracked objects:
  4392 ;;		On entry : 0/0
  4393 ;;		On exit  : 0/0
  4394 ;;		Unchanged: 0/0
  4395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4396 ;;      Params:         2       0       0       0       0       0       0       0       0
  4397 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4398 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4399 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4400 ;;Total ram usage:        4 bytes
  4401 ;; Hardware stack levels used: 1
  4402 ;; Hardware stack levels required when called: 1
  4403 ;; This function calls:
  4404 ;;		_DHT11_CheckResponse
  4405 ;;		_DHT11_ReadData
  4406 ;;		_DHT11_Start
  4407 ;; This function is called by:
  4408 ;;		_main
  4409 ;; This function uses a non-reentrant model
  4410 ;;
  4411                           
  4412                           	psect	text27
  4413  001C86                     __ptext27:
  4414                           	callstack 0
  4415  001C86                     _DatosSensorTH:
  4416                           	callstack 29
  4417  001C86                     
  4418                           ;DHT11.c: 58:          char RH_Decimal,RH_Integral,T_Decimal,T_Integral;;DHT11.c: 59:   
      +                                 char Checksum;;DHT11.c: 60:          DHT11_Start();
  4419  001C86  ECF0  F00E         	call	_DHT11_Start	;wreg free
  4420  001C8A                     
  4421                           ;DHT11.c: 61:          DHT11_CheckResponse();
  4422  001C8A  ECB2  F00E         	call	_DHT11_CheckResponse	;wreg free
  4423  001C8E                     
  4424                           ;DHT11.c: 64:          RH_Integral = DHT11_ReadData();
  4425  001C8E  ECEC  F00C         	call	_DHT11_ReadData	;wreg free
  4426  001C92  6E05               	movwf	DatosSensorTH@RH_Integral^0,c
  4427  001C94  ECEC  F00C         	call	_DHT11_ReadData	;wreg free
  4428  001C98                     
  4429                           ;DHT11.c: 68:          T_Integral = DHT11_ReadData();
  4430  001C98  ECEC  F00C         	call	_DHT11_ReadData	;wreg free
  4431  001C9C  6E06               	movwf	DatosSensorTH@T_Integral^0,c
  4432  001C9E  ECEC  F00C         	call	_DHT11_ReadData	;wreg free
  4433  001CA2  ECEC  F00C         	call	_DHT11_ReadData	;wreg free
  4434  001CA6                     
  4435                           ;DHT11.c: 74:          Datos[0]=T_Integral;
  4436  001CA6  C003  FFD9         	movff	DatosSensorTH@Datos,fsr2l
  4437  001CAA  C004  FFDA         	movff	DatosSensorTH@Datos+1,fsr2h
  4438  001CAE  C006  FFDF         	movff	DatosSensorTH@T_Integral,indf2
  4439  001CB2                     
  4440                           ;DHT11.c: 75:          Datos[1]=RH_Integral;
  4441  001CB2  EE20 F001          	lfsr	2,1
  4442  001CB6  5003               	movf	DatosSensorTH@Datos^0,w,c
  4443  001CB8  26D9               	addwf	fsr2l,f,c
  4444  001CBA  5004               	movf	(DatosSensorTH@Datos+1)^0,w,c
  4445  001CBC  22DA               	addwfc	fsr2h,f,c
  4446  001CBE  C005  FFDF         	movff	DatosSensorTH@RH_Integral,indf2
  4447  001CC2  0012               	return		;funcret
  4448  001CC4                     __end_of_DatosSensorTH:
  4449                           	callstack 0
  4450                           
  4451 ;; *************** function _DHT11_Start *****************
  4452 ;; Defined at:
  4453 ;;		line 31 in file "DHT11.c"
  4454 ;; Parameters:    Size  Location     Type
  4455 ;;		None
  4456 ;; Auto vars:     Size  Location     Type
  4457 ;;		None
  4458 ;; Return value:  Size  Location     Type
  4459 ;;                  1    wreg      void 
  4460 ;; Registers used:
  4461 ;;		wreg
  4462 ;; Tracked objects:
  4463 ;;		On entry : 0/0
  4464 ;;		On exit  : 0/0
  4465 ;;		Unchanged: 0/0
  4466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4467 ;;      Params:         0       0       0       0       0       0       0       0       0
  4468 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4469 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4470 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4471 ;;Total ram usage:        1 bytes
  4472 ;; Hardware stack levels used: 1
  4473 ;; This function calls:
  4474 ;;		Nothing
  4475 ;; This function is called by:
  4476 ;;		_DatosSensorTH
  4477 ;; This function uses a non-reentrant model
  4478 ;;
  4479                           
  4480                           	psect	text28
  4481  001DE0                     __ptext28:
  4482                           	callstack 0
  4483  001DE0                     _DHT11_Start:
  4484                           	callstack 29
  4485  001DE0                     
  4486                           ;DHT11.c: 34:     TRISAbits.RA0 = 0;
  4487  001DE0  9092               	bcf	146,0,c	;volatile
  4488                           
  4489                           ;DHT11.c: 35:     LATA0 = 0;
  4490  001DE2  9089               	bcf	3977,0,c	;volatile
  4491  001DE4                     
  4492                           ;DHT11.c: 36:     _delay((unsigned long)((18)*(8000000L/4000.0)));
  4493  001DE4  0E2F               	movlw	47
  4494  001DE6  6E01               	movwf	??_DHT11_Start^0,c
  4495  001DE8  0EC0               	movlw	192
  4496  001DEA                     u1857:
  4497  001DEA  2EE8               	decfsz	wreg,f,c
  4498  001DEC  D7FE               	bra	u1857
  4499  001DEE  2E01               	decfsz	??_DHT11_Start^0,f,c
  4500  001DF0  D7FC               	bra	u1857
  4501  001DF2                     
  4502                           ;DHT11.c: 37:     LATA0 = 1;
  4503  001DF2  8089               	bsf	3977,0,c	;volatile
  4504                           
  4505                           ;DHT11.c: 38:     _delay((unsigned long)((20)*(8000000L/4000000.0)));
  4506  001DF4  0E0D               	movlw	13
  4507  001DF6                     u1867:
  4508  001DF6  2EE8               	decfsz	wreg,f,c
  4509  001DF8  D7FE               	bra	u1867
  4510  001DFA  F000               	nop	
  4511  001DFC                     
  4512                           ;DHT11.c: 39:     TRISAbits.RA0 = 1;
  4513  001DFC  8092               	bsf	146,0,c	;volatile
  4514  001DFE  0012               	return		;funcret
  4515  001E00                     __end_of_DHT11_Start:
  4516                           	callstack 0
  4517                           
  4518 ;; *************** function _DHT11_ReadData *****************
  4519 ;; Defined at:
  4520 ;;		line 14 in file "DHT11.c"
  4521 ;; Parameters:    Size  Location     Type
  4522 ;;		None
  4523 ;; Auto vars:     Size  Location     Type
  4524 ;;  data            1    1[COMRAM] unsigned char 
  4525 ;;  i               1    0[COMRAM] unsigned char 
  4526 ;; Return value:  Size  Location     Type
  4527 ;;                  1    wreg      unsigned char 
  4528 ;; Registers used:
  4529 ;;		wreg, status,2, status,0
  4530 ;; Tracked objects:
  4531 ;;		On entry : 0/0
  4532 ;;		On exit  : 0/0
  4533 ;;		Unchanged: 0/0
  4534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4535 ;;      Params:         0       0       0       0       0       0       0       0       0
  4536 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4537 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4538 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4539 ;;Total ram usage:        2 bytes
  4540 ;; Hardware stack levels used: 1
  4541 ;; This function calls:
  4542 ;;		Nothing
  4543 ;; This function is called by:
  4544 ;;		_DatosSensorTH
  4545 ;; This function uses a non-reentrant model
  4546 ;;
  4547                           
  4548                           	psect	text29
  4549  0019D8                     __ptext29:
  4550                           	callstack 0
  4551  0019D8                     _DHT11_ReadData:
  4552                           	callstack 29
  4553  0019D8                     
  4554                           ;DHT11.c: 16:   char i,data = 0;
  4555  0019D8  0E00               	movlw	0
  4556  0019DA  6E02               	movwf	DHT11_ReadData@data^0,c
  4557                           
  4558                           ;DHT11.c: 17:     for(i=0;i<8;i++)
  4559  0019DC  0E00               	movlw	0
  4560  0019DE  6E01               	movwf	DHT11_ReadData@i^0,c
  4561  0019E0                     l214:
  4562  0019E0  A080               	btfss	128,0,c	;volatile
  4563  0019E2  EFF5  F00C         	goto	u1521
  4564  0019E6  EFF7  F00C         	goto	u1520
  4565  0019EA                     u1521:
  4566  0019EA  EFF0  F00C         	goto	l214
  4567  0019EE                     u1520:
  4568  0019EE                     
  4569                           ;DHT11.c: 20:         _delay((unsigned long)((30)*(8000000L/4000000.0)));
  4570  0019EE  0E14               	movlw	20
  4571  0019F0                     u1877:
  4572  0019F0  2EE8               	decfsz	wreg,f,c
  4573  0019F2  D7FE               	bra	u1877
  4574  0019F4                     
  4575                           ;DHT11.c: 21:         if(PORTAbits.RA0 & 1)
  4576  0019F4  A080               	btfss	128,0,c	;volatile
  4577  0019F6  EFFF  F00C         	goto	u1531
  4578  0019FA  EF01  F00D         	goto	u1530
  4579  0019FE                     u1531:
  4580  0019FE  EF05  F00D         	goto	l2258
  4581  001A02                     u1530:
  4582  001A02                     
  4583                           ;DHT11.c: 22:           data = ((data<<1) | 1);
  4584  001A02  80D8               	bsf	status,0,c
  4585  001A04  3602               	rlcf	DHT11_ReadData@data^0,f,c
  4586  001A06  EF08  F00D         	goto	l219
  4587  001A0A                     l2258:
  4588                           
  4589                           ;DHT11.c: 24:           data = (data<<1);
  4590  001A0A  5002               	movf	DHT11_ReadData@data^0,w,c
  4591  001A0C  2402               	addwf	DHT11_ReadData@data^0,w,c
  4592  001A0E  6E02               	movwf	DHT11_ReadData@data^0,c
  4593  001A10                     l219:
  4594  001A10  B080               	btfsc	128,0,c	;volatile
  4595  001A12  EF0D  F00D         	goto	u1541
  4596  001A16  EF0F  F00D         	goto	u1540
  4597  001A1A                     u1541:
  4598  001A1A  EF08  F00D         	goto	l219
  4599  001A1E                     u1540:
  4600  001A1E                     
  4601                           ;DHT11.c: 26:     }
  4602  001A1E  2A01               	incf	DHT11_ReadData@i^0,f,c
  4603  001A20  0E07               	movlw	7
  4604  001A22  6401               	cpfsgt	DHT11_ReadData@i^0,c
  4605  001A24  EF16  F00D         	goto	u1551
  4606  001A28  EF18  F00D         	goto	u1550
  4607  001A2C                     u1551:
  4608  001A2C  EFF0  F00C         	goto	l214
  4609  001A30                     u1550:
  4610  001A30                     
  4611                           ;DHT11.c: 27:   return data;
  4612  001A30  5002               	movf	DHT11_ReadData@data^0,w,c
  4613  001A32  0012               	return		;funcret
  4614  001A34                     __end_of_DHT11_ReadData:
  4615                           	callstack 0
  4616                           
  4617 ;; *************** function _DHT11_CheckResponse *****************
  4618 ;; Defined at:
  4619 ;;		line 45 in file "DHT11.c"
  4620 ;; Parameters:    Size  Location     Type
  4621 ;;		None
  4622 ;; Auto vars:     Size  Location     Type
  4623 ;;		None
  4624 ;; Return value:  Size  Location     Type
  4625 ;;                  1    wreg      void 
  4626 ;; Registers used:
  4627 ;;		None
  4628 ;; Tracked objects:
  4629 ;;		On entry : 0/0
  4630 ;;		On exit  : 0/0
  4631 ;;		Unchanged: 0/0
  4632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4633 ;;      Params:         0       0       0       0       0       0       0       0       0
  4634 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4635 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4636 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4637 ;;Total ram usage:        0 bytes
  4638 ;; Hardware stack levels used: 1
  4639 ;; This function calls:
  4640 ;;		Nothing
  4641 ;; This function is called by:
  4642 ;;		_DatosSensorTH
  4643 ;; This function uses a non-reentrant model
  4644 ;;
  4645                           
  4646                           	psect	text30
  4647  001D64                     __ptext30:
  4648                           	callstack 0
  4649  001D64                     _DHT11_CheckResponse:
  4650                           	callstack 29
  4651  001D64                     l228:
  4652  001D64  B080               	btfsc	128,0,c	;volatile
  4653  001D66  EFB7  F00E         	goto	u1561
  4654  001D6A  EFB9  F00E         	goto	u1560
  4655  001D6E                     u1561:
  4656  001D6E  EFB2  F00E         	goto	l228
  4657  001D72                     u1560:
  4658  001D72                     l231:
  4659  001D72  A080               	btfss	128,0,c	;volatile
  4660  001D74  EFBE  F00E         	goto	u1571
  4661  001D78  EFC0  F00E         	goto	u1570
  4662  001D7C                     u1571:
  4663  001D7C  EFB9  F00E         	goto	l231
  4664  001D80                     u1570:
  4665  001D80                     l234:
  4666  001D80  B080               	btfsc	128,0,c	;volatile
  4667  001D82  EFC5  F00E         	goto	u1581
  4668  001D86  EFC7  F00E         	goto	u1580
  4669  001D8A                     u1581:
  4670  001D8A  EFC0  F00E         	goto	l234
  4671  001D8E                     u1580:
  4672  001D8E  0012               	return		;funcret
  4673  001D90                     __end_of_DHT11_CheckResponse:
  4674                           	callstack 0
  4675                           
  4676 ;; *************** function _DatoDigitadoAEntero *****************
  4677 ;; Defined at:
  4678 ;;		line 138 in file "keypad.c"
  4679 ;; Parameters:    Size  Location     Type
  4680 ;;  prmTemperatu    2    6[COMRAM] PTR unsigned char 
  4681 ;;		 -> Humedad(2), Temperatura(2), 
  4682 ;; Auto vars:     Size  Location     Type
  4683 ;;  Decena          2   13[COMRAM] int 
  4684 ;;  Resultado       2   11[COMRAM] int 
  4685 ;;  Unidad          2    9[COMRAM] int 
  4686 ;; Return value:  Size  Location     Type
  4687 ;;                  2    6[COMRAM] int 
  4688 ;; Registers used:
  4689 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4690 ;; Tracked objects:
  4691 ;;		On entry : 0/0
  4692 ;;		On exit  : 0/0
  4693 ;;		Unchanged: 0/0
  4694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4695 ;;      Params:         2       0       0       0       0       0       0       0       0
  4696 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4697 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4698 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4699 ;;Total ram usage:        9 bytes
  4700 ;; Hardware stack levels used: 1
  4701 ;; Hardware stack levels required when called: 1
  4702 ;; This function calls:
  4703 ;;		___wmul
  4704 ;; This function is called by:
  4705 ;;		_main
  4706 ;; This function uses a non-reentrant model
  4707 ;;
  4708                           
  4709                           	psect	text31
  4710  0017C2                     __ptext31:
  4711                           	callstack 0
  4712  0017C2                     _DatoDigitadoAEntero:
  4713                           	callstack 29
  4714  0017C2                     
  4715                           ;keypad.c: 140:     int Unidad = 0;
  4716  0017C2  0E00               	movlw	0
  4717  0017C4  6E0B               	movwf	(DatoDigitadoAEntero@Unidad+1)^0,c
  4718  0017C6  0E00               	movlw	0
  4719  0017C8  6E0A               	movwf	DatoDigitadoAEntero@Unidad^0,c
  4720                           
  4721                           ;keypad.c: 142:     int Resultado=0;
  4722  0017CA  0E00               	movlw	0
  4723  0017CC  6E0D               	movwf	(DatoDigitadoAEntero@Resultado+1)^0,c
  4724  0017CE  0E00               	movlw	0
  4725  0017D0  6E0C               	movwf	DatoDigitadoAEntero@Resultado^0,c
  4726  0017D2                     
  4727                           ;keypad.c: 144:     Decena = prmTemperatura[0]-'0';
  4728  0017D2  C007  FFD9         	movff	DatoDigitadoAEntero@prmTemperatura,fsr2l
  4729  0017D6  C008  FFDA         	movff	DatoDigitadoAEntero@prmTemperatura+1,fsr2h
  4730  0017DA  50DF               	movf	indf2,w,c
  4731  0017DC  6E09               	movwf	??_DatoDigitadoAEntero^0,c
  4732  0017DE  0ED0               	movlw	208
  4733  0017E0  2409               	addwf	??_DatoDigitadoAEntero^0,w,c
  4734  0017E2  6E0E               	movwf	DatoDigitadoAEntero@Decena^0,c
  4735  0017E4  6A0F               	clrf	(DatoDigitadoAEntero@Decena+1)^0,c
  4736  0017E6  0EFF               	movlw	255
  4737  0017E8  220F               	addwfc	(DatoDigitadoAEntero@Decena+1)^0,f,c
  4738  0017EA                     
  4739                           ;keypad.c: 145:     Unidad = prmTemperatura[1]-'0';
  4740  0017EA  EE20 F001          	lfsr	2,1
  4741  0017EE  5007               	movf	DatoDigitadoAEntero@prmTemperatura^0,w,c
  4742  0017F0  26D9               	addwf	fsr2l,f,c
  4743  0017F2  5008               	movf	(DatoDigitadoAEntero@prmTemperatura+1)^0,w,c
  4744  0017F4  22DA               	addwfc	fsr2h,f,c
  4745  0017F6  50DF               	movf	indf2,w,c
  4746  0017F8  6E09               	movwf	??_DatoDigitadoAEntero^0,c
  4747  0017FA  0ED0               	movlw	208
  4748  0017FC  2409               	addwf	??_DatoDigitadoAEntero^0,w,c
  4749  0017FE  6E0A               	movwf	DatoDigitadoAEntero@Unidad^0,c
  4750  001800  6A0B               	clrf	(DatoDigitadoAEntero@Unidad+1)^0,c
  4751  001802  0EFF               	movlw	255
  4752  001804  220B               	addwfc	(DatoDigitadoAEntero@Unidad+1)^0,f,c
  4753  001806                     
  4754                           ;keypad.c: 147:     Decena = Decena * 10;
  4755  001806  C00E  F001         	movff	DatoDigitadoAEntero@Decena,___wmul@multiplier
  4756  00180A  C00F  F002         	movff	DatoDigitadoAEntero@Decena+1,___wmul@multiplier+1
  4757  00180E  0E00               	movlw	0
  4758  001810  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4759  001812  0E0A               	movlw	10
  4760  001814  6E03               	movwf	___wmul@multiplicand^0,c
  4761  001816  ECDD  F00E         	call	___wmul	;wreg free
  4762  00181A  C001  F00E         	movff	?___wmul,DatoDigitadoAEntero@Decena
  4763  00181E  C002  F00F         	movff	?___wmul+1,DatoDigitadoAEntero@Decena+1
  4764  001822                     
  4765                           ;keypad.c: 148:     Resultado = Decena + Unidad;
  4766  001822  500A               	movf	DatoDigitadoAEntero@Unidad^0,w,c
  4767  001824  240E               	addwf	DatoDigitadoAEntero@Decena^0,w,c
  4768  001826  6E0C               	movwf	DatoDigitadoAEntero@Resultado^0,c
  4769  001828  500B               	movf	(DatoDigitadoAEntero@Unidad+1)^0,w,c
  4770  00182A  200F               	addwfc	(DatoDigitadoAEntero@Decena+1)^0,w,c
  4771  00182C  6E0D               	movwf	(DatoDigitadoAEntero@Resultado+1)^0,c
  4772  00182E                     
  4773                           ;keypad.c: 150:     return Resultado;
  4774  00182E  C00C  F007         	movff	DatoDigitadoAEntero@Resultado,?_DatoDigitadoAEntero
  4775  001832  C00D  F008         	movff	DatoDigitadoAEntero@Resultado+1,?_DatoDigitadoAEntero+1
  4776  001836  0012               	return		;funcret
  4777  001838                     __end_of_DatoDigitadoAEntero:
  4778                           	callstack 0
  4779                           
  4780 ;; *************** function ___wmul *****************
  4781 ;; Defined at:
  4782 ;;		line 15 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\Umul16.c"
  4783 ;; Parameters:    Size  Location     Type
  4784 ;;  multiplier      2    0[COMRAM] unsigned int 
  4785 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4786 ;; Auto vars:     Size  Location     Type
  4787 ;;  product         2    4[COMRAM] unsigned int 
  4788 ;; Return value:  Size  Location     Type
  4789 ;;                  2    0[COMRAM] unsigned int 
  4790 ;; Registers used:
  4791 ;;		wreg, status,2, status,0, prodl, prodh
  4792 ;; Tracked objects:
  4793 ;;		On entry : 0/0
  4794 ;;		On exit  : 0/0
  4795 ;;		Unchanged: 0/0
  4796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4797 ;;      Params:         4       0       0       0       0       0       0       0       0
  4798 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4799 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4800 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4801 ;;Total ram usage:        6 bytes
  4802 ;; Hardware stack levels used: 1
  4803 ;; This function calls:
  4804 ;;		Nothing
  4805 ;; This function is called by:
  4806 ;;		_DatoDigitadoAEntero
  4807 ;; This function uses a non-reentrant model
  4808 ;;
  4809                           
  4810                           	psect	text32
  4811  001DBA                     __ptext32:
  4812                           	callstack 0
  4813  001DBA                     ___wmul:
  4814                           	callstack 29
  4815  001DBA  5001               	movf	___wmul@multiplier^0,w,c
  4816  001DBC  0203               	mulwf	___wmul@multiplicand^0,c
  4817  001DBE  CFF3 F005          	movff	prodl,___wmul@product
  4818  001DC2  CFF4 F006          	movff	prodh,___wmul@product+1
  4819  001DC6  5001               	movf	___wmul@multiplier^0,w,c
  4820  001DC8  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  4821  001DCA  50F3               	movf	243,w,c
  4822  001DCC  2606               	addwf	(___wmul@product+1)^0,f,c
  4823  001DCE  5002               	movf	(___wmul@multiplier+1)^0,w,c
  4824  001DD0  0203               	mulwf	___wmul@multiplicand^0,c
  4825  001DD2  50F3               	movf	243,w,c
  4826  001DD4  2606               	addwf	(___wmul@product+1)^0,f,c
  4827  001DD6  C005  F001         	movff	___wmul@product,?___wmul
  4828  001DDA  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4829  001DDE  0012               	return		;funcret
  4830  001DE0                     __end_of___wmul:
  4831                           	callstack 0
  4832                           
  4833 ;; *************** function _ControlTemperaturaVentiladorCalefactor *****************
  4834 ;; Defined at:
  4835 ;;		line 112 in file "Actuadores.c"
  4836 ;; Parameters:    Size  Location     Type
  4837 ;;  TempActual      2    0[COMRAM] PTR unsigned char 
  4838 ;;		 -> Datos(2), 
  4839 ;;  TempDigitada    2    2[COMRAM] int 
  4840 ;;  MargenErrorT    2    4[COMRAM] int 
  4841 ;; Auto vars:     Size  Location     Type
  4842 ;;		None
  4843 ;; Return value:  Size  Location     Type
  4844 ;;                  1    wreg      void 
  4845 ;; Registers used:
  4846 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4847 ;; Tracked objects:
  4848 ;;		On entry : 0/0
  4849 ;;		On exit  : 0/0
  4850 ;;		Unchanged: 0/0
  4851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4852 ;;      Params:         6       0       0       0       0       0       0       0       0
  4853 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4854 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4855 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4856 ;;Total ram usage:       11 bytes
  4857 ;; Hardware stack levels used: 1
  4858 ;; Hardware stack levels required when called: 1
  4859 ;; This function calls:
  4860 ;;		_ApagarCalefactor
  4861 ;;		_ApagarVentiladores
  4862 ;;		_PrenderCalefactor
  4863 ;;		_PrenderVentiladores
  4864 ;; This function is called by:
  4865 ;;		_main
  4866 ;; This function uses a non-reentrant model
  4867 ;;
  4868                           
  4869                           	psect	text33
  4870  001738                     __ptext33:
  4871                           	callstack 0
  4872  001738                     _ControlTemperaturaVentiladorCalefactor:
  4873                           	callstack 29
  4874  001738                     
  4875                           ;Actuadores.c: 113:     if(*TempActual>TempDigitada+MargenErrorT){
  4876  001738  C001  FFD9         	movff	ControlTemperaturaVentiladorCalefactor@TempActual,fsr2l
  4877  00173C  C002  FFDA         	movff	ControlTemperaturaVentiladorCalefactor@TempActual+1,fsr2h
  4878  001740  50DF               	movf	indf2,w,c
  4879  001742  6E07               	movwf	??_ControlTemperaturaVentiladorCalefactor^0,c
  4880  001744  6A08               	clrf	(??_ControlTemperaturaVentiladorCalefactor+1)^0,c
  4881  001746  5005               	movf	ControlTemperaturaVentiladorCalefactor@MargenErrorT^0,w,c
  4882  001748  2403               	addwf	ControlTemperaturaVentiladorCalefactor@TempDigitada^0,w,c
  4883  00174A  6E09               	movwf	(??_ControlTemperaturaVentiladorCalefactor+2)^0,c
  4884  00174C  5006               	movf	(ControlTemperaturaVentiladorCalefactor@MargenErrorT+1)^0,w,c
  4885  00174E  2004               	addwfc	(ControlTemperaturaVentiladorCalefactor@TempDigitada+1)^0,w,c
  4886  001750  6E0A               	movwf	(??_ControlTemperaturaVentiladorCalefactor+3)^0,c
  4887  001752  5007               	movf	??_ControlTemperaturaVentiladorCalefactor^0,w,c
  4888  001754  5C09               	subwf	(??_ControlTemperaturaVentiladorCalefactor+2)^0,w,c
  4889  001756  500A               	movf	(??_ControlTemperaturaVentiladorCalefactor+3)^0,w,c
  4890  001758  0A80               	xorlw	128
  4891  00175A  6E0B               	movwf	(??_ControlTemperaturaVentiladorCalefactor+4)^0,c
  4892  00175C  5008               	movf	(??_ControlTemperaturaVentiladorCalefactor+1)^0,w,c
  4893  00175E  0A80               	xorlw	128
  4894  001760  580B               	subwfb	(??_ControlTemperaturaVentiladorCalefactor+4)^0,w,c
  4895  001762  B0D8               	btfsc	status,0,c
  4896  001764  EFB6  F00B         	goto	u1681
  4897  001768  EFB8  F00B         	goto	u1680
  4898  00176C                     u1681:
  4899  00176C  EFBC  F00B         	goto	l2394
  4900  001770                     u1680:
  4901  001770                     
  4902                           ;Actuadores.c: 114:         PrenderVentiladores();
  4903  001770  EC13  F00F         	call	_PrenderVentiladores	;wreg free
  4904                           
  4905                           ;Actuadores.c: 115:     }else if(*TempActual<TempDigitada-MargenErrorT){
  4906  001774  EFE0  F00B         	goto	l317
  4907  001778                     l2394:
  4908  001778  5005               	movf	ControlTemperaturaVentiladorCalefactor@MargenErrorT^0,w,c
  4909  00177A  5C03               	subwf	ControlTemperaturaVentiladorCalefactor@TempDigitada^0,w,c
  4910  00177C  6E07               	movwf	??_ControlTemperaturaVentiladorCalefactor^0,c
  4911  00177E  5006               	movf	(ControlTemperaturaVentiladorCalefactor@MargenErrorT+1)^0,w,c
  4912  001780  5804               	subwfb	(ControlTemperaturaVentiladorCalefactor@TempDigitada+1)^0,w,c
  4913  001782  6E08               	movwf	(??_ControlTemperaturaVentiladorCalefactor+1)^0,c
  4914  001784  C001  FFD9         	movff	ControlTemperaturaVentiladorCalefactor@TempActual,fsr2l
  4915  001788  C002  FFDA         	movff	ControlTemperaturaVentiladorCalefactor@TempActual+1,fsr2h
  4916  00178C  50DF               	movf	indf2,w,c
  4917  00178E  6E09               	movwf	(??_ControlTemperaturaVentiladorCalefactor+2)^0,c
  4918  001790  6A0A               	clrf	(??_ControlTemperaturaVentiladorCalefactor+3)^0,c
  4919  001792  5007               	movf	??_ControlTemperaturaVentiladorCalefactor^0,w,c
  4920  001794  5C09               	subwf	(??_ControlTemperaturaVentiladorCalefactor+2)^0,w,c
  4921  001796  500A               	movf	(??_ControlTemperaturaVentiladorCalefactor+3)^0,w,c
  4922  001798  0A80               	xorlw	128
  4923  00179A  6E0B               	movwf	(??_ControlTemperaturaVentiladorCalefactor+4)^0,c
  4924  00179C  5008               	movf	(??_ControlTemperaturaVentiladorCalefactor+1)^0,w,c
  4925  00179E  0A80               	xorlw	128
  4926  0017A0  580B               	subwfb	(??_ControlTemperaturaVentiladorCalefactor+4)^0,w,c
  4927  0017A2  B0D8               	btfsc	status,0,c
  4928  0017A4  EFD6  F00B         	goto	u1691
  4929  0017A8  EFD8  F00B         	goto	u1690
  4930  0017AC                     u1691:
  4931  0017AC  EFDC  F00B         	goto	l2398
  4932  0017B0                     u1690:
  4933  0017B0                     
  4934                           ;Actuadores.c: 116:         PrenderCalefactor();
  4935  0017B0  EC24  F00F         	call	_PrenderCalefactor	;wreg free
  4936                           
  4937                           ;Actuadores.c: 118:     }else{
  4938  0017B4  EFE0  F00B         	goto	l317
  4939  0017B8                     l2398:
  4940                           
  4941                           ;Actuadores.c: 119:         ApagarCalefactor();
  4942  0017B8  EC26  F00F         	call	_ApagarCalefactor	;wreg free
  4943                           
  4944                           ;Actuadores.c: 120:         ApagarVentiladores();
  4945  0017BC  EC16  F00F         	call	_ApagarVentiladores	;wreg free
  4946  0017C0                     l317:
  4947  0017C0  0012               	return		;funcret
  4948  0017C2                     __end_of_ControlTemperaturaVentiladorCalefactor:
  4949                           	callstack 0
  4950                           
  4951 ;; *************** function _PrenderVentiladores *****************
  4952 ;; Defined at:
  4953 ;;		line 45 in file "Actuadores.c"
  4954 ;; Parameters:    Size  Location     Type
  4955 ;;		None
  4956 ;; Auto vars:     Size  Location     Type
  4957 ;;		None
  4958 ;; Return value:  Size  Location     Type
  4959 ;;                  1    wreg      void 
  4960 ;; Registers used:
  4961 ;;		None
  4962 ;; Tracked objects:
  4963 ;;		On entry : 0/0
  4964 ;;		On exit  : 0/0
  4965 ;;		Unchanged: 0/0
  4966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4967 ;;      Params:         0       0       0       0       0       0       0       0       0
  4968 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4969 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4970 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4971 ;;Total ram usage:        0 bytes
  4972 ;; Hardware stack levels used: 1
  4973 ;; This function calls:
  4974 ;;		Nothing
  4975 ;; This function is called by:
  4976 ;;		_ControlTemperaturaVentiladorCalefactor
  4977 ;; This function uses a non-reentrant model
  4978 ;;
  4979                           
  4980                           	psect	text34
  4981  001E26                     __ptext34:
  4982                           	callstack 0
  4983  001E26                     _PrenderVentiladores:
  4984                           	callstack 29
  4985  001E26                     
  4986                           ;Actuadores.c: 46:     LATC2=1;
  4987  001E26  848B               	bsf	3979,2,c	;volatile
  4988                           
  4989                           ;Actuadores.c: 47:     LATC6=1;
  4990  001E28  8C8B               	bsf	3979,6,c	;volatile
  4991  001E2A  0012               	return		;funcret
  4992  001E2C                     __end_of_PrenderVentiladores:
  4993                           	callstack 0
  4994                           
  4995 ;; *************** function _PrenderCalefactor *****************
  4996 ;; Defined at:
  4997 ;;		line 52 in file "Actuadores.c"
  4998 ;; Parameters:    Size  Location     Type
  4999 ;;		None
  5000 ;; Auto vars:     Size  Location     Type
  5001 ;;		None
  5002 ;; Return value:  Size  Location     Type
  5003 ;;                  1    wreg      void 
  5004 ;; Registers used:
  5005 ;;		None
  5006 ;; Tracked objects:
  5007 ;;		On entry : 0/0
  5008 ;;		On exit  : 0/0
  5009 ;;		Unchanged: 0/0
  5010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5011 ;;      Params:         0       0       0       0       0       0       0       0       0
  5012 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5013 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5014 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5015 ;;Total ram usage:        0 bytes
  5016 ;; Hardware stack levels used: 1
  5017 ;; This function calls:
  5018 ;;		Nothing
  5019 ;; This function is called by:
  5020 ;;		_ControlTemperaturaVentiladorCalefactor
  5021 ;; This function uses a non-reentrant model
  5022 ;;
  5023                           
  5024                           	psect	text35
  5025  001E48                     __ptext35:
  5026                           	callstack 0
  5027  001E48                     _PrenderCalefactor:
  5028                           	callstack 29
  5029  001E48                     
  5030                           ;Actuadores.c: 53:     LATC7=1;
  5031  001E48  8E8B               	bsf	3979,7,c	;volatile
  5032  001E4A  0012               	return		;funcret
  5033  001E4C                     __end_of_PrenderCalefactor:
  5034                           	callstack 0
  5035                           
  5036 ;; *************** function _ApagarVentiladores *****************
  5037 ;; Defined at:
  5038 ;;		line 25 in file "Actuadores.c"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;		None
  5041 ;; Auto vars:     Size  Location     Type
  5042 ;;		None
  5043 ;; Return value:  Size  Location     Type
  5044 ;;                  1    wreg      void 
  5045 ;; Registers used:
  5046 ;;		None
  5047 ;; Tracked objects:
  5048 ;;		On entry : 0/0
  5049 ;;		On exit  : 0/0
  5050 ;;		Unchanged: 0/0
  5051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5052 ;;      Params:         0       0       0       0       0       0       0       0       0
  5053 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5054 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5055 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5056 ;;Total ram usage:        0 bytes
  5057 ;; Hardware stack levels used: 1
  5058 ;; This function calls:
  5059 ;;		Nothing
  5060 ;; This function is called by:
  5061 ;;		_main
  5062 ;;		_ControlTemperaturaVentiladorCalefactor
  5063 ;; This function uses a non-reentrant model
  5064 ;;
  5065                           
  5066                           	psect	text36
  5067  001E2C                     __ptext36:
  5068                           	callstack 0
  5069  001E2C                     _ApagarVentiladores:
  5070                           	callstack 29
  5071  001E2C                     
  5072                           ;Actuadores.c: 26:     LATC2=0;
  5073  001E2C  948B               	bcf	3979,2,c	;volatile
  5074                           
  5075                           ;Actuadores.c: 27:     LATC6=0;
  5076  001E2E  9C8B               	bcf	3979,6,c	;volatile
  5077  001E30  0012               	return		;funcret
  5078  001E32                     __end_of_ApagarVentiladores:
  5079                           	callstack 0
  5080                           
  5081 ;; *************** function _ApagarCalefactor *****************
  5082 ;; Defined at:
  5083 ;;		line 31 in file "Actuadores.c"
  5084 ;; Parameters:    Size  Location     Type
  5085 ;;		None
  5086 ;; Auto vars:     Size  Location     Type
  5087 ;;		None
  5088 ;; Return value:  Size  Location     Type
  5089 ;;                  1    wreg      void 
  5090 ;; Registers used:
  5091 ;;		None
  5092 ;; Tracked objects:
  5093 ;;		On entry : 0/0
  5094 ;;		On exit  : 0/0
  5095 ;;		Unchanged: 0/0
  5096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5097 ;;      Params:         0       0       0       0       0       0       0       0       0
  5098 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5099 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5100 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5101 ;;Total ram usage:        0 bytes
  5102 ;; Hardware stack levels used: 1
  5103 ;; This function calls:
  5104 ;;		Nothing
  5105 ;; This function is called by:
  5106 ;;		_ControlTemperaturaVentiladorCalefactor
  5107 ;; This function uses a non-reentrant model
  5108 ;;
  5109                           
  5110                           	psect	text37
  5111  001E4C                     __ptext37:
  5112                           	callstack 0
  5113  001E4C                     _ApagarCalefactor:
  5114                           	callstack 29
  5115  001E4C                     
  5116                           ;Actuadores.c: 32:     LATC7=0;
  5117  001E4C  9E8B               	bcf	3979,7,c	;volatile
  5118  001E4E  0012               	return		;funcret
  5119  001E50                     __end_of_ApagarCalefactor:
  5120                           	callstack 0
  5121                           
  5122 ;; *************** function _ControlHumedadAspersor *****************
  5123 ;; Defined at:
  5124 ;;		line 91 in file "Actuadores.c"
  5125 ;; Parameters:    Size  Location     Type
  5126 ;;  HumedadActua    2    0[COMRAM] PTR unsigned char 
  5127 ;;		 -> Datos(2), 
  5128 ;;  HumedadDigit    2    2[COMRAM] int 
  5129 ;;  MargenErrorH    2    4[COMRAM] int 
  5130 ;; Auto vars:     Size  Location     Type
  5131 ;;		None
  5132 ;; Return value:  Size  Location     Type
  5133 ;;                  1    wreg      void 
  5134 ;; Registers used:
  5135 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5136 ;; Tracked objects:
  5137 ;;		On entry : 0/0
  5138 ;;		On exit  : 0/0
  5139 ;;		Unchanged: 0/0
  5140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5141 ;;      Params:         6       0       0       0       0       0       0       0       0
  5142 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5143 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5144 ;;      Totals:        11       0       0       0       0       0       0       0       0
  5145 ;;Total ram usage:       11 bytes
  5146 ;; Hardware stack levels used: 1
  5147 ;; Hardware stack levels required when called: 1
  5148 ;; This function calls:
  5149 ;;		_ApagarAspersores
  5150 ;;		_PrenderAspersores
  5151 ;; This function is called by:
  5152 ;;		_main
  5153 ;; This function uses a non-reentrant model
  5154 ;;
  5155                           
  5156                           	psect	text38
  5157  001B7C                     __ptext38:
  5158                           	callstack 0
  5159  001B7C                     _ControlHumedadAspersor:
  5160                           	callstack 29
  5161  001B7C                     
  5162                           ;Actuadores.c: 92:     if(*HumedadActual<HumedadDigitada-MargenErrorH){
  5163  001B7C  5005               	movf	ControlHumedadAspersor@MargenErrorH^0,w,c
  5164  001B7E  5C03               	subwf	ControlHumedadAspersor@HumedadDigitada^0,w,c
  5165  001B80  6E07               	movwf	??_ControlHumedadAspersor^0,c
  5166  001B82  5006               	movf	(ControlHumedadAspersor@MargenErrorH+1)^0,w,c
  5167  001B84  5804               	subwfb	(ControlHumedadAspersor@HumedadDigitada+1)^0,w,c
  5168  001B86  6E08               	movwf	(??_ControlHumedadAspersor+1)^0,c
  5169  001B88  C001  FFD9         	movff	ControlHumedadAspersor@HumedadActual,fsr2l
  5170  001B8C  C002  FFDA         	movff	ControlHumedadAspersor@HumedadActual+1,fsr2h
  5171  001B90  50DF               	movf	indf2,w,c
  5172  001B92  6E09               	movwf	(??_ControlHumedadAspersor+2)^0,c
  5173  001B94  6A0A               	clrf	(??_ControlHumedadAspersor+3)^0,c
  5174  001B96  5007               	movf	??_ControlHumedadAspersor^0,w,c
  5175  001B98  5C09               	subwf	(??_ControlHumedadAspersor+2)^0,w,c
  5176  001B9A  500A               	movf	(??_ControlHumedadAspersor+3)^0,w,c
  5177  001B9C  0A80               	xorlw	128
  5178  001B9E  6E0B               	movwf	(??_ControlHumedadAspersor+4)^0,c
  5179  001BA0  5008               	movf	(??_ControlHumedadAspersor+1)^0,w,c
  5180  001BA2  0A80               	xorlw	128
  5181  001BA4  580B               	subwfb	(??_ControlHumedadAspersor+4)^0,w,c
  5182  001BA6  B0D8               	btfsc	status,0,c
  5183  001BA8  EFD8  F00D         	goto	u1671
  5184  001BAC  EFDA  F00D         	goto	u1670
  5185  001BB0                     u1671:
  5186  001BB0  EFDE  F00D         	goto	l2388
  5187  001BB4                     u1670:
  5188  001BB4                     
  5189                           ;Actuadores.c: 93:         PrenderAspersores();
  5190  001BB4  EC19  F00F         	call	_PrenderAspersores	;wreg free
  5191                           
  5192                           ;Actuadores.c: 94:     }else{
  5193  001BB8  EFE0  F00D         	goto	l310
  5194  001BBC                     l2388:
  5195                           
  5196                           ;Actuadores.c: 95:         ApagarAspersores();
  5197  001BBC  EC1C  F00F         	call	_ApagarAspersores	;wreg free
  5198  001BC0                     l310:
  5199  001BC0  0012               	return		;funcret
  5200  001BC2                     __end_of_ControlHumedadAspersor:
  5201                           	callstack 0
  5202                           
  5203 ;; *************** function _PrenderAspersores *****************
  5204 ;; Defined at:
  5205 ;;		line 37 in file "Actuadores.c"
  5206 ;; Parameters:    Size  Location     Type
  5207 ;;		None
  5208 ;; Auto vars:     Size  Location     Type
  5209 ;;		None
  5210 ;; Return value:  Size  Location     Type
  5211 ;;                  1    wreg      void 
  5212 ;; Registers used:
  5213 ;;		None
  5214 ;; Tracked objects:
  5215 ;;		On entry : 0/0
  5216 ;;		On exit  : 0/0
  5217 ;;		Unchanged: 0/0
  5218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5219 ;;      Params:         0       0       0       0       0       0       0       0       0
  5220 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5221 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5222 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5223 ;;Total ram usage:        0 bytes
  5224 ;; Hardware stack levels used: 1
  5225 ;; This function calls:
  5226 ;;		Nothing
  5227 ;; This function is called by:
  5228 ;;		_ControlHumedadAspersor
  5229 ;; This function uses a non-reentrant model
  5230 ;;
  5231                           
  5232                           	psect	text39
  5233  001E32                     __ptext39:
  5234                           	callstack 0
  5235  001E32                     _PrenderAspersores:
  5236                           	callstack 29
  5237  001E32                     
  5238                           ;Actuadores.c: 38:     LATC0=1;
  5239  001E32  808B               	bsf	3979,0,c	;volatile
  5240                           
  5241                           ;Actuadores.c: 39:     LATC1=1;
  5242  001E34  828B               	bsf	3979,1,c	;volatile
  5243  001E36  0012               	return		;funcret
  5244  001E38                     __end_of_PrenderAspersores:
  5245                           	callstack 0
  5246                           
  5247 ;; *************** function _ApagarAspersores *****************
  5248 ;; Defined at:
  5249 ;;		line 18 in file "Actuadores.c"
  5250 ;; Parameters:    Size  Location     Type
  5251 ;;		None
  5252 ;; Auto vars:     Size  Location     Type
  5253 ;;		None
  5254 ;; Return value:  Size  Location     Type
  5255 ;;                  1    wreg      void 
  5256 ;; Registers used:
  5257 ;;		None
  5258 ;; Tracked objects:
  5259 ;;		On entry : 0/0
  5260 ;;		On exit  : 0/0
  5261 ;;		Unchanged: 0/0
  5262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5263 ;;      Params:         0       0       0       0       0       0       0       0       0
  5264 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5265 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5266 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5267 ;;Total ram usage:        0 bytes
  5268 ;; Hardware stack levels used: 1
  5269 ;; This function calls:
  5270 ;;		Nothing
  5271 ;; This function is called by:
  5272 ;;		_main
  5273 ;;		_ControlHumedadAspersor
  5274 ;; This function uses a non-reentrant model
  5275 ;;
  5276                           
  5277                           	psect	text40
  5278  001E38                     __ptext40:
  5279                           	callstack 0
  5280  001E38                     _ApagarAspersores:
  5281                           	callstack 29
  5282  001E38                     
  5283                           ;Actuadores.c: 19:     LATC0=0;
  5284  001E38  908B               	bcf	3979,0,c	;volatile
  5285                           
  5286                           ;Actuadores.c: 20:     LATC1=0;
  5287  001E3A  928B               	bcf	3979,1,c	;volatile
  5288  001E3C  0012               	return		;funcret
  5289  001E3E                     __end_of_ApagarAspersores:
  5290                           	callstack 0
  5291                           
  5292 ;; *************** function _ConfigurarPuertosLCD *****************
  5293 ;; Defined at:
  5294 ;;		line 144 in file "LCD.c"
  5295 ;; Parameters:    Size  Location     Type
  5296 ;;		None
  5297 ;; Auto vars:     Size  Location     Type
  5298 ;;		None
  5299 ;; Return value:  Size  Location     Type
  5300 ;;                  1    wreg      void 
  5301 ;; Registers used:
  5302 ;;		wreg, status,2
  5303 ;; Tracked objects:
  5304 ;;		On entry : 0/0
  5305 ;;		On exit  : 0/0
  5306 ;;		Unchanged: 0/0
  5307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5308 ;;      Params:         0       0       0       0       0       0       0       0       0
  5309 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5310 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5311 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5312 ;;Total ram usage:        0 bytes
  5313 ;; Hardware stack levels used: 1
  5314 ;; This function calls:
  5315 ;;		Nothing
  5316 ;; This function is called by:
  5317 ;;		_main
  5318 ;; This function uses a non-reentrant model
  5319 ;;
  5320                           
  5321                           	psect	text41
  5322  001E3E                     __ptext41:
  5323                           	callstack 0
  5324  001E3E                     _ConfigurarPuertosLCD:
  5325                           	callstack 30
  5326  001E3E                     
  5327                           ;LCD.c: 145: TRISD=0x00;
  5328  001E3E  0E00               	movlw	0
  5329  001E40  6E95               	movwf	149,c	;volatile
  5330  001E42  0012               	return		;funcret
  5331  001E44                     __end_of_ConfigurarPuertosLCD:
  5332                           	callstack 0
  5333                           
  5334 ;; *************** function _Comparar_T_H_Adecuados *****************
  5335 ;; Defined at:
  5336 ;;		line 87 in file "DHT11.c"
  5337 ;; Parameters:    Size  Location     Type
  5338 ;;  TempActual      2    2[COMRAM] PTR unsigned char 
  5339 ;;		 -> Datos(2), 
  5340 ;;  HumActual       2    4[COMRAM] PTR unsigned char 
  5341 ;;		 -> Datos(2), 
  5342 ;;  TempDigitada    2    6[COMRAM] int 
  5343 ;;  HumDigitada     2    8[COMRAM] int 
  5344 ;;  MargenErrorT    2   10[COMRAM] int 
  5345 ;;  MargenErrorH    2   12[COMRAM] int 
  5346 ;; Auto vars:     Size  Location     Type
  5347 ;;  HumedadAdecu    1   20[COMRAM] _Bool 
  5348 ;;  TemperaturaA    1   19[COMRAM] _Bool 
  5349 ;; Return value:  Size  Location     Type
  5350 ;;                  1    wreg      void 
  5351 ;; Registers used:
  5352 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5353 ;; Tracked objects:
  5354 ;;		On entry : 0/0
  5355 ;;		On exit  : 0/0
  5356 ;;		Unchanged: 0/0
  5357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5358 ;;      Params:        12       0       0       0       0       0       0       0       0
  5359 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5360 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5361 ;;      Totals:        19       0       0       0       0       0       0       0       0
  5362 ;;Total ram usage:       19 bytes
  5363 ;; Hardware stack levels used: 1
  5364 ;; Hardware stack levels required when called: 2
  5365 ;; This function calls:
  5366 ;;		_PrenderLed
  5367 ;; This function is called by:
  5368 ;;		_main
  5369 ;; This function uses a non-reentrant model
  5370 ;;
  5371                           
  5372                           	psect	text42
  5373  00134A                     __ptext42:
  5374                           	callstack 0
  5375  00134A                     _Comparar_T_H_Adecuados:
  5376                           	callstack 28
  5377  00134A                     
  5378                           ;DHT11.c: 87: void Comparar_T_H_Adecuados(char *TempActual,char *HumActual,int TempDigit
      +                          ada,;DHT11.c: 88:         int HumDigitada,int MargenErrorT,int MargenErrorH){;DHT11.c: 8
      +                          9:     _Bool TemperaturaAdecuada= 1;
  5379  00134A  0E01               	movlw	1
  5380  00134C  6E14               	movwf	Comparar_T_H_Adecuados@TemperaturaAdecuada^0,c
  5381                           
  5382                           ;DHT11.c: 90:     _Bool HumedadAdecuada =1;
  5383  00134E  0E01               	movlw	1
  5384  001350  6E15               	movwf	Comparar_T_H_Adecuados@HumedadAdecuada^0,c
  5385  001352                     
  5386                           ;DHT11.c: 91:     if(*TempActual<TempDigitada-MargenErrorT || *TempActual >TempDigitada+
      +                          MargenErrorT){
  5387  001352  500B               	movf	Comparar_T_H_Adecuados@MargenErrorT^0,w,c
  5388  001354  5C07               	subwf	Comparar_T_H_Adecuados@TempDigitada^0,w,c
  5389  001356  6E0F               	movwf	??_Comparar_T_H_Adecuados^0,c
  5390  001358  500C               	movf	(Comparar_T_H_Adecuados@MargenErrorT+1)^0,w,c
  5391  00135A  5808               	subwfb	(Comparar_T_H_Adecuados@TempDigitada+1)^0,w,c
  5392  00135C  6E10               	movwf	(??_Comparar_T_H_Adecuados+1)^0,c
  5393  00135E  C003  FFD9         	movff	Comparar_T_H_Adecuados@TempActual,fsr2l
  5394  001362  C004  FFDA         	movff	Comparar_T_H_Adecuados@TempActual+1,fsr2h
  5395  001366  50DF               	movf	indf2,w,c
  5396  001368  6E11               	movwf	(??_Comparar_T_H_Adecuados+2)^0,c
  5397  00136A  6A12               	clrf	(??_Comparar_T_H_Adecuados+3)^0,c
  5398  00136C  500F               	movf	??_Comparar_T_H_Adecuados^0,w,c
  5399  00136E  5C11               	subwf	(??_Comparar_T_H_Adecuados+2)^0,w,c
  5400  001370  5012               	movf	(??_Comparar_T_H_Adecuados+3)^0,w,c
  5401  001372  0A80               	xorlw	128
  5402  001374  6E13               	movwf	(??_Comparar_T_H_Adecuados+4)^0,c
  5403  001376  5010               	movf	(??_Comparar_T_H_Adecuados+1)^0,w,c
  5404  001378  0A80               	xorlw	128
  5405  00137A  5813               	subwfb	(??_Comparar_T_H_Adecuados+4)^0,w,c
  5406  00137C  A0D8               	btfss	status,0,c
  5407  00137E  EFC3  F009         	goto	u1631
  5408  001382  EFC5  F009         	goto	u1630
  5409  001386                     u1631:
  5410  001386  EFE1  F009         	goto	l2374
  5411  00138A                     u1630:
  5412  00138A  C003  FFD9         	movff	Comparar_T_H_Adecuados@TempActual,fsr2l
  5413  00138E  C004  FFDA         	movff	Comparar_T_H_Adecuados@TempActual+1,fsr2h
  5414  001392  50DF               	movf	indf2,w,c
  5415  001394  6E0F               	movwf	??_Comparar_T_H_Adecuados^0,c
  5416  001396  6A10               	clrf	(??_Comparar_T_H_Adecuados+1)^0,c
  5417  001398  500B               	movf	Comparar_T_H_Adecuados@MargenErrorT^0,w,c
  5418  00139A  2407               	addwf	Comparar_T_H_Adecuados@TempDigitada^0,w,c
  5419  00139C  6E11               	movwf	(??_Comparar_T_H_Adecuados+2)^0,c
  5420  00139E  500C               	movf	(Comparar_T_H_Adecuados@MargenErrorT+1)^0,w,c
  5421  0013A0  2008               	addwfc	(Comparar_T_H_Adecuados@TempDigitada+1)^0,w,c
  5422  0013A2  6E12               	movwf	(??_Comparar_T_H_Adecuados+3)^0,c
  5423  0013A4  500F               	movf	??_Comparar_T_H_Adecuados^0,w,c
  5424  0013A6  5C11               	subwf	(??_Comparar_T_H_Adecuados+2)^0,w,c
  5425  0013A8  5012               	movf	(??_Comparar_T_H_Adecuados+3)^0,w,c
  5426  0013AA  0A80               	xorlw	128
  5427  0013AC  6E13               	movwf	(??_Comparar_T_H_Adecuados+4)^0,c
  5428  0013AE  5010               	movf	(??_Comparar_T_H_Adecuados+1)^0,w,c
  5429  0013B0  0A80               	xorlw	128
  5430  0013B2  5813               	subwfb	(??_Comparar_T_H_Adecuados+4)^0,w,c
  5431  0013B4  B0D8               	btfsc	status,0,c
  5432  0013B6  EFDF  F009         	goto	u1641
  5433  0013BA  EFE1  F009         	goto	u1640
  5434  0013BE                     u1641:
  5435  0013BE  EFE3  F009         	goto	l2376
  5436  0013C2                     u1640:
  5437  0013C2                     l2374:
  5438                           
  5439                           ;DHT11.c: 92:            TemperaturaAdecuada=0;
  5440  0013C2  0E00               	movlw	0
  5441  0013C4  6E14               	movwf	Comparar_T_H_Adecuados@TemperaturaAdecuada^0,c
  5442  0013C6                     l2376:
  5443                           
  5444                           ;DHT11.c: 94:     if(*HumActual<HumDigitada-MargenErrorH || *HumActual>HumDigitada+Marge
      +                          nErrorH){
  5445  0013C6  500D               	movf	Comparar_T_H_Adecuados@MargenErrorH^0,w,c
  5446  0013C8  5C09               	subwf	Comparar_T_H_Adecuados@HumDigitada^0,w,c
  5447  0013CA  6E0F               	movwf	??_Comparar_T_H_Adecuados^0,c
  5448  0013CC  500E               	movf	(Comparar_T_H_Adecuados@MargenErrorH+1)^0,w,c
  5449  0013CE  580A               	subwfb	(Comparar_T_H_Adecuados@HumDigitada+1)^0,w,c
  5450  0013D0  6E10               	movwf	(??_Comparar_T_H_Adecuados+1)^0,c
  5451  0013D2  C005  FFD9         	movff	Comparar_T_H_Adecuados@HumActual,fsr2l
  5452  0013D6  C006  FFDA         	movff	Comparar_T_H_Adecuados@HumActual+1,fsr2h
  5453  0013DA  50DF               	movf	indf2,w,c
  5454  0013DC  6E11               	movwf	(??_Comparar_T_H_Adecuados+2)^0,c
  5455  0013DE  6A12               	clrf	(??_Comparar_T_H_Adecuados+3)^0,c
  5456  0013E0  500F               	movf	??_Comparar_T_H_Adecuados^0,w,c
  5457  0013E2  5C11               	subwf	(??_Comparar_T_H_Adecuados+2)^0,w,c
  5458  0013E4  5012               	movf	(??_Comparar_T_H_Adecuados+3)^0,w,c
  5459  0013E6  0A80               	xorlw	128
  5460  0013E8  6E13               	movwf	(??_Comparar_T_H_Adecuados+4)^0,c
  5461  0013EA  5010               	movf	(??_Comparar_T_H_Adecuados+1)^0,w,c
  5462  0013EC  0A80               	xorlw	128
  5463  0013EE  5813               	subwfb	(??_Comparar_T_H_Adecuados+4)^0,w,c
  5464  0013F0  A0D8               	btfss	status,0,c
  5465  0013F2  EFFD  F009         	goto	u1651
  5466  0013F6  EFFF  F009         	goto	u1650
  5467  0013FA                     u1651:
  5468  0013FA  EF1B  F00A         	goto	l2380
  5469  0013FE                     u1650:
  5470  0013FE  C005  FFD9         	movff	Comparar_T_H_Adecuados@HumActual,fsr2l
  5471  001402  C006  FFDA         	movff	Comparar_T_H_Adecuados@HumActual+1,fsr2h
  5472  001406  50DF               	movf	indf2,w,c
  5473  001408  6E0F               	movwf	??_Comparar_T_H_Adecuados^0,c
  5474  00140A  6A10               	clrf	(??_Comparar_T_H_Adecuados+1)^0,c
  5475  00140C  500D               	movf	Comparar_T_H_Adecuados@MargenErrorH^0,w,c
  5476  00140E  2409               	addwf	Comparar_T_H_Adecuados@HumDigitada^0,w,c
  5477  001410  6E11               	movwf	(??_Comparar_T_H_Adecuados+2)^0,c
  5478  001412  500E               	movf	(Comparar_T_H_Adecuados@MargenErrorH+1)^0,w,c
  5479  001414  200A               	addwfc	(Comparar_T_H_Adecuados@HumDigitada+1)^0,w,c
  5480  001416  6E12               	movwf	(??_Comparar_T_H_Adecuados+3)^0,c
  5481  001418  500F               	movf	??_Comparar_T_H_Adecuados^0,w,c
  5482  00141A  5C11               	subwf	(??_Comparar_T_H_Adecuados+2)^0,w,c
  5483  00141C  5012               	movf	(??_Comparar_T_H_Adecuados+3)^0,w,c
  5484  00141E  0A80               	xorlw	128
  5485  001420  6E13               	movwf	(??_Comparar_T_H_Adecuados+4)^0,c
  5486  001422  5010               	movf	(??_Comparar_T_H_Adecuados+1)^0,w,c
  5487  001424  0A80               	xorlw	128
  5488  001426  5813               	subwfb	(??_Comparar_T_H_Adecuados+4)^0,w,c
  5489  001428  B0D8               	btfsc	status,0,c
  5490  00142A  EF19  F00A         	goto	u1661
  5491  00142E  EF1B  F00A         	goto	u1660
  5492  001432                     u1661:
  5493  001432  EF1D  F00A         	goto	l2382
  5494  001436                     u1660:
  5495  001436                     l2380:
  5496                           
  5497                           ;DHT11.c: 95:         HumedadAdecuada=0;
  5498  001436  0E00               	movlw	0
  5499  001438  6E15               	movwf	Comparar_T_H_Adecuados@HumedadAdecuada^0,c
  5500  00143A                     l2382:
  5501                           
  5502                           ;DHT11.c: 97:    PrenderLed(TemperaturaAdecuada,HumedadAdecuada);
  5503  00143A  C015  F001         	movff	Comparar_T_H_Adecuados@HumedadAdecuada,PrenderLed@HumedadAdecuada
  5504  00143E  5014               	movf	Comparar_T_H_Adecuados@TemperaturaAdecuada^0,w,c
  5505  001440  EC1A  F00D         	call	_PrenderLed
  5506  001444  0012               	return		;funcret
  5507  001446                     __end_of_Comparar_T_H_Adecuados:
  5508                           	callstack 0
  5509                           
  5510 ;; *************** function _PrenderLed *****************
  5511 ;; Defined at:
  5512 ;;		line 70 in file "Actuadores.c"
  5513 ;; Parameters:    Size  Location     Type
  5514 ;;  TemperaturaA    1    wreg     _Bool 
  5515 ;;  HumedadAdecu    1    0[COMRAM] _Bool 
  5516 ;; Auto vars:     Size  Location     Type
  5517 ;;  TemperaturaA    1    1[COMRAM] _Bool 
  5518 ;; Return value:  Size  Location     Type
  5519 ;;                  1    wreg      void 
  5520 ;; Registers used:
  5521 ;;		wreg, status,2, cstack
  5522 ;; Tracked objects:
  5523 ;;		On entry : 0/0
  5524 ;;		On exit  : 0/0
  5525 ;;		Unchanged: 0/0
  5526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5527 ;;      Params:         1       0       0       0       0       0       0       0       0
  5528 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5529 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5530 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5531 ;;Total ram usage:        2 bytes
  5532 ;; Hardware stack levels used: 1
  5533 ;; Hardware stack levels required when called: 1
  5534 ;; This function calls:
  5535 ;;		_ApagarLeds
  5536 ;; This function is called by:
  5537 ;;		_Comparar_T_H_Adecuados
  5538 ;; This function uses a non-reentrant model
  5539 ;;
  5540                           
  5541                           	psect	text43
  5542  001A34                     __ptext43:
  5543                           	callstack 0
  5544  001A34                     _PrenderLed:
  5545                           	callstack 28
  5546                           
  5547                           ;incstack = 0
  5548                           ;PrenderLed@TemperaturaAdecuada stored from wreg
  5549  001A34  6E02               	movwf	PrenderLed@TemperaturaAdecuada^0,c
  5550  001A36                     
  5551                           ;Actuadores.c: 71:     ApagarLeds();
  5552  001A36  EC0C  F00F         	call	_ApagarLeds	;wreg free
  5553  001A3A                     
  5554                           ;Actuadores.c: 72:     if(TemperaturaAdecuada==0 && HumedadAdecuada==0){
  5555  001A3A  5002               	movf	PrenderLed@TemperaturaAdecuada^0,w,c
  5556  001A3C  A4D8               	btfss	status,2,c
  5557  001A3E  EF23  F00D         	goto	u1591
  5558  001A42  EF25  F00D         	goto	u1590
  5559  001A46                     u1591:
  5560  001A46  EF30  F00D         	goto	l2286
  5561  001A4A                     u1590:
  5562  001A4A  5001               	movf	PrenderLed@HumedadAdecuada^0,w,c
  5563  001A4C  A4D8               	btfss	status,2,c
  5564  001A4E  EF2B  F00D         	goto	u1601
  5565  001A52  EF2D  F00D         	goto	u1600
  5566  001A56                     u1601:
  5567  001A56  EF30  F00D         	goto	l2286
  5568  001A5A                     u1600:
  5569  001A5A                     
  5570                           ;Actuadores.c: 73:         LATE0=1;
  5571  001A5A  808D               	bsf	3981,0,c	;volatile
  5572                           
  5573                           ;Actuadores.c: 74:     }else if(TemperaturaAdecuada==0 || HumedadAdecuada==0){
  5574  001A5C  EF44  F00D         	goto	l305
  5575  001A60                     l2286:
  5576  001A60  5002               	movf	PrenderLed@TemperaturaAdecuada^0,w,c
  5577  001A62  B4D8               	btfsc	status,2,c
  5578  001A64  EF36  F00D         	goto	u1611
  5579  001A68  EF38  F00D         	goto	u1610
  5580  001A6C                     u1611:
  5581  001A6C  EF40  F00D         	goto	l303
  5582  001A70                     u1610:
  5583  001A70  5001               	movf	PrenderLed@HumedadAdecuada^0,w,c
  5584  001A72  A4D8               	btfss	status,2,c
  5585  001A74  EF3E  F00D         	goto	u1621
  5586  001A78  EF40  F00D         	goto	u1620
  5587  001A7C                     u1621:
  5588  001A7C  EF43  F00D         	goto	l301
  5589  001A80                     u1620:
  5590  001A80                     l303:
  5591                           
  5592                           ;Actuadores.c: 75:         LATE1=1;
  5593  001A80  828D               	bsf	3981,1,c	;volatile
  5594                           
  5595                           ;Actuadores.c: 76:     }else{
  5596  001A82  EF44  F00D         	goto	l305
  5597  001A86                     l301:
  5598                           
  5599                           ;Actuadores.c: 77:         LATE2=1;
  5600  001A86  848D               	bsf	3981,2,c	;volatile
  5601  001A88                     l305:
  5602  001A88  0012               	return		;funcret
  5603  001A8A                     __end_of_PrenderLed:
  5604                           	callstack 0
  5605                           
  5606 ;; *************** function _ApagarLeds *****************
  5607 ;; Defined at:
  5608 ;;		line 58 in file "Actuadores.c"
  5609 ;; Parameters:    Size  Location     Type
  5610 ;;		None
  5611 ;; Auto vars:     Size  Location     Type
  5612 ;;		None
  5613 ;; Return value:  Size  Location     Type
  5614 ;;                  1    wreg      void 
  5615 ;; Registers used:
  5616 ;;		None
  5617 ;; Tracked objects:
  5618 ;;		On entry : 0/0
  5619 ;;		On exit  : 0/0
  5620 ;;		Unchanged: 0/0
  5621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5622 ;;      Params:         0       0       0       0       0       0       0       0       0
  5623 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5624 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5625 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5626 ;;Total ram usage:        0 bytes
  5627 ;; Hardware stack levels used: 1
  5628 ;; This function calls:
  5629 ;;		Nothing
  5630 ;; This function is called by:
  5631 ;;		_main
  5632 ;;		_PrenderLed
  5633 ;; This function uses a non-reentrant model
  5634 ;;
  5635                           
  5636                           	psect	text44
  5637  001E18                     __ptext44:
  5638                           	callstack 0
  5639  001E18                     _ApagarLeds:
  5640                           	callstack 28
  5641  001E18                     
  5642                           ;Actuadores.c: 59:     LATE1=0;
  5643  001E18  928D               	bcf	3981,1,c	;volatile
  5644                           
  5645                           ;Actuadores.c: 60:     LATE0=0;
  5646  001E1A  908D               	bcf	3981,0,c	;volatile
  5647                           
  5648                           ;Actuadores.c: 61:     LATE2=0;
  5649  001E1C  948D               	bcf	3981,2,c	;volatile
  5650  001E1E  0012               	return		;funcret
  5651  001E20                     __end_of_ApagarLeds:
  5652                           	callstack 0
  5653                           
  5654                           	psect	rparam
  5655  0000                     
  5656                           	psect	idloc
  5657                           
  5658                           ;Config register IDLOC0 @ 0x200000
  5659                           ;	unspecified, using default values
  5660  200000                     	org	2097152
  5661  200000  FF                 	db	255
  5662                           
  5663                           ;Config register IDLOC1 @ 0x200001
  5664                           ;	unspecified, using default values
  5665  200001                     	org	2097153
  5666  200001  FF                 	db	255
  5667                           
  5668                           ;Config register IDLOC2 @ 0x200002
  5669                           ;	unspecified, using default values
  5670  200002                     	org	2097154
  5671  200002  FF                 	db	255
  5672                           
  5673                           ;Config register IDLOC3 @ 0x200003
  5674                           ;	unspecified, using default values
  5675  200003                     	org	2097155
  5676  200003  FF                 	db	255
  5677                           
  5678                           ;Config register IDLOC4 @ 0x200004
  5679                           ;	unspecified, using default values
  5680  200004                     	org	2097156
  5681  200004  FF                 	db	255
  5682                           
  5683                           ;Config register IDLOC5 @ 0x200005
  5684                           ;	unspecified, using default values
  5685  200005                     	org	2097157
  5686  200005  FF                 	db	255
  5687                           
  5688                           ;Config register IDLOC6 @ 0x200006
  5689                           ;	unspecified, using default values
  5690  200006                     	org	2097158
  5691  200006  FF                 	db	255
  5692                           
  5693                           ;Config register IDLOC7 @ 0x200007
  5694                           ;	unspecified, using default values
  5695  200007                     	org	2097159
  5696  200007  FF                 	db	255
  5697                           
  5698                           	psect	config
  5699                           
  5700                           ;Config register CONFIG1L @ 0x300000
  5701                           ;	unspecified, using default values
  5702                           ;	PLL Prescaler Selection bits
  5703                           ;	PLLDIV = 0x0, unprogrammed default
  5704                           ;	System Clock Postscaler Selection bits
  5705                           ;	CPUDIV = 0x0, unprogrammed default
  5706                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  5707                           ;	USBDIV = 0x0, unprogrammed default
  5708  300000                     	org	3145728
  5709  300000  00                 	db	0
  5710                           
  5711                           ;Config register CONFIG1H @ 0x300001
  5712                           ;	Oscillator Selection bits
  5713                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  5714                           ;	Fail-Safe Clock Monitor Enable bit
  5715                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5716                           ;	Internal/External Oscillator Switchover bit
  5717                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5718  300001                     	org	3145729
  5719  300001  09                 	db	9
  5720                           
  5721                           ;Config register CONFIG2L @ 0x300002
  5722                           ;	Power-up Timer Enable bit
  5723                           ;	PWRT = OFF, PWRT disabled
  5724                           ;	Brown-out Reset Enable bits
  5725                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  5726                           ;	Brown-out Reset Voltage bits
  5727                           ;	BORV = 3, Minimum setting 2.05V
  5728                           ;	USB Voltage Regulator Enable bit
  5729                           ;	VREGEN = OFF, USB voltage regulator disabled
  5730  300002                     	org	3145730
  5731  300002  1F                 	db	31
  5732                           
  5733                           ;Config register CONFIG2H @ 0x300003
  5734                           ;	Watchdog Timer Enable bit
  5735                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5736                           ;	Watchdog Timer Postscale Select bits
  5737                           ;	WDTPS = 32768, 1:32768
  5738  300003                     	org	3145731
  5739  300003  1E                 	db	30
  5740                           
  5741                           ; Padding undefined space
  5742  300004                     	org	3145732
  5743  300004  FF                 	db	255
  5744                           
  5745                           ;Config register CONFIG3H @ 0x300005
  5746                           ;	CCP2 MUX bit
  5747                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  5748                           ;	PORTB A/D Enable bit
  5749                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5750                           ;	Low-Power Timer 1 Oscillator Enable bit
  5751                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5752                           ;	MCLR Pin Enable bit
  5753                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5754  300005                     	org	3145733
  5755  300005  81                 	db	129
  5756                           
  5757                           ;Config register CONFIG4L @ 0x300006
  5758                           ;	Stack Full/Underflow Reset Enable bit
  5759                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5760                           ;	Single-Supply ICSP Enable bit
  5761                           ;	LVP = OFF, Single-Supply ICSP disabled
  5762                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  5763                           ;	ICPRT = OFF, ICPORT disabled
  5764                           ;	Extended Instruction Set Enable bit
  5765                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5766                           ;	Background Debugger Enable bit
  5767                           ;	DEBUG = 0x1, unprogrammed default
  5768  300006                     	org	3145734
  5769  300006  81                 	db	129
  5770                           
  5771                           ; Padding undefined space
  5772  300007                     	org	3145735
  5773  300007  FF                 	db	255
  5774                           
  5775                           ;Config register CONFIG5L @ 0x300008
  5776                           ;	Code Protection bit
  5777                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  5778                           ;	Code Protection bit
  5779                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  5780                           ;	Code Protection bit
  5781                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  5782                           ;	Code Protection bit
  5783                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  5784  300008                     	org	3145736
  5785  300008  0F                 	db	15
  5786                           
  5787                           ;Config register CONFIG5H @ 0x300009
  5788                           ;	Boot Block Code Protection bit
  5789                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  5790                           ;	Data EEPROM Code Protection bit
  5791                           ;	CPD = OFF, Data EEPROM is not code-protected
  5792  300009                     	org	3145737
  5793  300009  C0                 	db	192
  5794                           
  5795                           ;Config register CONFIG6L @ 0x30000A
  5796                           ;	Write Protection bit
  5797                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  5798                           ;	Write Protection bit
  5799                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  5800                           ;	Write Protection bit
  5801                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  5802                           ;	Write Protection bit
  5803                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  5804  30000A                     	org	3145738
  5805  30000A  0F                 	db	15
  5806                           
  5807                           ;Config register CONFIG6H @ 0x30000B
  5808                           ;	Configuration Register Write Protection bit
  5809                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  5810                           ;	Boot Block Write Protection bit
  5811                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  5812                           ;	Data EEPROM Write Protection bit
  5813                           ;	WRTD = OFF, Data EEPROM is not write-protected
  5814  30000B                     	org	3145739
  5815  30000B  E0                 	db	224
  5816                           
  5817                           ;Config register CONFIG7L @ 0x30000C
  5818                           ;	Table Read Protection bit
  5819                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5820                           ;	Table Read Protection bit
  5821                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5822                           ;	Table Read Protection bit
  5823                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5824                           ;	Table Read Protection bit
  5825                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5826  30000C                     	org	3145740
  5827  30000C  0F                 	db	15
  5828                           
  5829                           ;Config register CONFIG7H @ 0x30000D
  5830                           ;	Boot Block Table Read Protection bit
  5831                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  5832  30000D                     	org	3145741
  5833  30000D  40                 	db	64
  5834                           tosu	equ	0xFFF
  5835                           tosh	equ	0xFFE
  5836                           tosl	equ	0xFFD
  5837                           stkptr	equ	0xFFC
  5838                           pclatu	equ	0xFFB
  5839                           pclath	equ	0xFFA
  5840                           pcl	equ	0xFF9
  5841                           tblptru	equ	0xFF8
  5842                           tblptrh	equ	0xFF7
  5843                           tblptrl	equ	0xFF6
  5844                           tablat	equ	0xFF5
  5845                           prodh	equ	0xFF4
  5846                           prodl	equ	0xFF3
  5847                           indf0	equ	0xFEF
  5848                           postinc0	equ	0xFEE
  5849                           postdec0	equ	0xFED
  5850                           preinc0	equ	0xFEC
  5851                           plusw0	equ	0xFEB
  5852                           fsr0h	equ	0xFEA
  5853                           fsr0l	equ	0xFE9
  5854                           wreg	equ	0xFE8
  5855                           indf1	equ	0xFE7
  5856                           postinc1	equ	0xFE6
  5857                           postdec1	equ	0xFE5
  5858                           preinc1	equ	0xFE4
  5859                           plusw1	equ	0xFE3
  5860                           fsr1h	equ	0xFE2
  5861                           fsr1l	equ	0xFE1
  5862                           bsr	equ	0xFE0
  5863                           indf2	equ	0xFDF
  5864                           postinc2	equ	0xFDE
  5865                           postdec2	equ	0xFDD
  5866                           preinc2	equ	0xFDC
  5867                           plusw2	equ	0xFDB
  5868                           fsr2h	equ	0xFDA
  5869                           fsr2l	equ	0xFD9
  5870                           status	equ	0xFD8

Data Sizes:
    Strings     77
    Constant    0
    Data        13
    BSS         69
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     11      93
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> Cadena(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_10(CODE[8]), STR_9(CODE[4]), STR_8(CODE[3]), STR_7(CODE[7]), 
		 -> STR_6(CODE[4]), STR_5(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 8
		 -> STR_10(CODE[8]), STR_9(CODE[4]), STR_8(CODE[3]), STR_7(CODE[7]), 
		 -> STR_6(CODE[4]), STR_5(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_10(CODE[8]), STR_9(CODE[4]), STR_8(CODE[3]), STR_7(CODE[7]), 
		 -> STR_6(CODE[4]), STR_5(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> Cadena(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S883_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> Cadena(BANK0[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> Cadena(BANK0[10]), 

    ControlTemperaturaVentiladorCalefactor@TempActual	PTR unsigned char  size(2) Largest target is 2
		 -> Datos(BANK0[2]), 

    ControlHumedadAspersor@HumedadActual	PTR unsigned char  size(2) Largest target is 2
		 -> Datos(BANK0[2]), 

    Comparar_T_H_Adecuados@HumActual	PTR unsigned char  size(2) Largest target is 2
		 -> Datos(BANK0[2]), 

    Comparar_T_H_Adecuados@TempActual	PTR unsigned char  size(2) Largest target is 2
		 -> Datos(BANK0[2]), 

    DatosSensorTH@Datos	PTR unsigned char  size(2) Largest target is 2
		 -> Datos(BANK0[2]), 

    DatoDigitadoAEntero@prmTemperatura	PTR unsigned char  size(2) Largest target is 2
		 -> Humedad(BANK0[2]), Temperatura(BANK0[2]), 

    MostrarTemperatura@Cadena	PTR unsigned char  size(2) Largest target is 10
		 -> Cadena(BANK0[10]), 

    MostrarHumedad@Cadena	PTR unsigned char  size(2) Largest target is 10
		 -> Cadena(BANK0[10]), 

    PedirTodosLosDatos@MargenErrorH	PTR unsigned char  size(2) Largest target is 1
		 -> MargenErrorH(BANK0[1]), 

    PedirTodosLosDatos@Humedad	PTR unsigned char  size(2) Largest target is 2
		 -> Humedad(BANK0[2]), 

    PedirTodosLosDatos@MargenErrorT	PTR unsigned char  size(2) Largest target is 1
		 -> MargenErrorT(BANK0[1]), 

    PedirTodosLosDatos@Temperatura	PTR unsigned char  size(2) Largest target is 2
		 -> Temperatura(BANK0[2]), 

    PedirDato@vecLlenar	PTR unsigned char  size(2) Largest target is 2
		 -> MargenErrorH(BANK0[1]), MargenErrorT(BANK0[1]), Humedad(BANK0[2]), Temperatura(BANK0[2]), 

    PedirDato@Etiqueta	PTR unsigned char  size(2) Largest target is 15
		 -> STR_4(CODE[14]), STR_3(CODE[14]), STR_2(CODE[15]), STR_1(CODE[15]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_4(CODE[14]), STR_3(CODE[14]), STR_2(CODE[15]), STR_1(CODE[15]), 
		 -> Cadena(BANK0[10]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_4(CODE[14]), STR_3(CODE[14]), STR_2(CODE[15]), STR_1(CODE[15]), 
		 -> Cadena(BANK0[10]), 


Critical Paths under _main in COMRAM

    _PedirTodosLosDatos->_PedirDato
    _PedirDato->_LCD_String_xy
    _LCD_Clear->_LCD_Command
    _MostrarTemperatura->_sprintf
    _MostrarHumedad->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Init->_LCD_Command
    _DatosSensorTH->_DHT11_ReadData
    _DatoDigitadoAEntero->___wmul
    _Comparar_T_H_Adecuados->_PrenderLed

Critical Paths under _main in BANK0

    _main->_MostrarHumedad
    _main->_MostrarTemperatura
    _MostrarTemperatura->_sprintf
    _MostrarHumedad->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   22823
                                             93 COMRAM     2     2      0
                   _ApagarAspersores
                         _ApagarLeds
                 _ApagarVentiladores
             _Comparar_T_H_Adecuados
               _ConfigurarPuertosLCD
             _ControlHumedadAspersor
_ControlTemperaturaVentiladorCalefac
                _DatoDigitadoAEntero
                      _DatosSensorTH
                           _LCD_Init
                     _MostrarHumedad
                 _MostrarTemperatura
                 _PedirTodosLosDatos
                     _initActuadores
                          _initDHT11
                        _initTeclado
 ---------------------------------------------------------------------------------
 (1) _initTeclado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDHT11                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initActuadores                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PedirTodosLosDatos                                  10     2      8    2589
                                             20 COMRAM    10     2      8
                          _PedirDato
 ---------------------------------------------------------------------------------
 (2) _PedirDato                                           11     5      6    2197
                                              9 COMRAM    11     5      6
                           _LCD_Char
                          _LCD_Clear
                        _LCD_Command
                      _LCD_String_xy
                            _keyfind
 ---------------------------------------------------------------------------------
 (3) _keyfind                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_Clear                                            1     1      0      44
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _MostrarTemperatura                                   3     0      3    8813
                                              8 BANK0      3     0      3
                           _LCD_Char
                         _LCD_String
                      _LCD_String_xy
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _MostrarHumedad                                       3     0      3    8813
                                              8 BANK0      3     0      3
                           _LCD_Char
                         _LCD_String
                      _LCD_String_xy
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16    10      6    7216
                                             87 COMRAM     6     0      6
                                              0 BANK0      8     8      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (3) _LCD_String_xy                                        5     2      3     952
                                              4 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (4) _LCD_String                                           2     0      2     317
                                              2 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (5) _LCD_Char                                             2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      44
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (4) _LCD_Command                                          2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DatosSensorTH                                        7     5      2     284
                                              2 COMRAM     4     2      2
                _DHT11_CheckResponse
                     _DHT11_ReadData
                        _DHT11_Start
 ---------------------------------------------------------------------------------
 (2) _DHT11_Start                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DHT11_ReadData                                       2     2      0     115
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _DHT11_CheckResponse                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DatoDigitadoAEntero                                  9     7      2     694
                                              6 COMRAM     9     7      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _ControlTemperaturaVentiladorCalefactor              11     5      6     360
                                              0 COMRAM    11     5      6
                   _ApagarCalefactor
                 _ApagarVentiladores
                  _PrenderCalefactor
                _PrenderVentiladores
 ---------------------------------------------------------------------------------
 (2) _PrenderVentiladores                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PrenderCalefactor                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ApagarVentiladores                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ApagarCalefactor                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlHumedadAspersor                              11     5      6     294
                                              0 COMRAM    11     5      6
                   _ApagarAspersores
                  _PrenderAspersores
 ---------------------------------------------------------------------------------
 (2) _PrenderAspersores                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ApagarAspersores                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigurarPuertosLCD                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Comparar_T_H_Adecuados                              19     7     12     932
                                              2 COMRAM    19     7     12
                         _PrenderLed
 ---------------------------------------------------------------------------------
 (2) _PrenderLed                                           2     1      1     164
                                              0 COMRAM     2     1      1
                         _ApagarLeds
 ---------------------------------------------------------------------------------
 (3) _ApagarLeds                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ApagarAspersores
   _ApagarLeds
   _ApagarVentiladores
   _Comparar_T_H_Adecuados
     _PrenderLed
       _ApagarLeds
   _ConfigurarPuertosLCD
   _ControlHumedadAspersor
     _ApagarAspersores
     _PrenderAspersores
   _ControlTemperaturaVentiladorCalefactor
     _ApagarCalefactor
     _ApagarVentiladores
     _PrenderCalefactor
     _PrenderVentiladores
   _DatoDigitadoAEntero
     ___wmul
   _DatosSensorTH
     _DHT11_CheckResponse
     _DHT11_ReadData
     _DHT11_Start
   _LCD_Init
     _LCD_Command
   _MostrarHumedad
     _LCD_Char
     _LCD_String
       _LCD_Char
     _LCD_String_xy
       _LCD_Command
       _LCD_String
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc
   _MostrarTemperatura
     _LCD_Char
     _LCD_String
     _LCD_String_xy
     _sprintf
   _PedirTodosLosDatos
     _PedirDato
       _LCD_Char
       _LCD_Clear
         _LCD_Command
       _LCD_Command
       _LCD_String_xy
       _keyfind
   _initActuadores
   _initDHT11
   _initTeclado

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      B      5D       5       58.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BC      20        0.0%
DATA                 0      0      BC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Oct 11 22:10:57 2021

                         __size_of_ApagarCalefactor 0004                  Comparar_T_H_Adecuados@TempDigitada 0007  
                                      ?_LCD_Command 0001                                                  l63 1214  
                                                l91 1B7A                                                  l94 1B2A  
                                                l88 1D62                                 _PrenderVentiladores 1E26  
                               ___wmul@multiplicand 0003                                         ?_LCD_String 0003  
                       __size_of_ApagarVentiladores 0006                                                 l100 19D6  
                                               l105 1C84                                                 l122 168E  
                                               l108 1DB8                                                 l116 1736  
                                               l301 1A86                                                 l125 1916  
                                               l310 1BC0                                                 l222 1A32  
                                               l214 19E0                                                 l303 1A80  
                                               l119 1E42                                                 l231 1D72  
                                               l320 1DDE                                                 l240 1CC2  
                                               l128 18A6                                                 l305 1A88  
                                               l225 1DFE                                                 l234 1D80  
                                               l219 1A10                                                 l171 0C3C  
                                               l228 1D64                                                 l252 1E24  
                                               l317 17C0                                                 l237 1D8E  
                                               l166 0BF8                                                 l175 0C80  
                                               l249 1444                                                 l281 1E30  
                                               l185 0D4E                                                 l169 0CDA  
                                               l290 1E2A                                                 l194 1836  
                                               l434 108A                                                 l179 0CC4  
                                               l275 1E16                                                 l284 1E4E  
                                               l293 1E4A                                                 l197 1E46  
                                               l278 1E3C                                                 l287 1E36  
                                               l447 11EE                                                 l296 1E1E  
                                               l998 1ADA                                                 u900 1C04  
                                               u901 1C00                                                 u910 1D22  
                                               u911 1D1E                                                 u920 0F16  
                                               u921 0F12                                                 u930 0F48  
                                               u931 0F44                                                 u860 1458  
                                               u941 0F72                                                 u861 1454  
                                               u950 0F96                                                 u870 146A  
                                               u951 0F92                                                 u871 1466  
                                               u960 0FC0                                                 u880 1492  
                                               u961 0FBC                                                 u881 148E  
                                               u970 1000                                                 u890 14C8  
                                               u971 0FFC                                                 u891 14C4  
                                               u980 104A                                                 u981 1046  
                                               u990 109E                                                 u991 109A  
                                               _abs 1C06                                                 _pad 1510  
                                               prod 000FF3                                                 wreg 000FE8  
                         PedirTodosLosDatos@Humedad 0017                                         LCD_Char@dat 0002  
                                    PedirDato@tecla 0014                                MostrarHumedad@Cadena 00BA  
                                              l1100 1E50                                                l1030 15D4  
                                              l2000 0AE4                                                l1025 1556  
                                              l2010 1B2E                                                l1106 1D2E  
                                              l2002 0AF0                                                ?_abs 0013  
                                              l2020 1B46                                                l2012 1B3E  
                                              l1028 1598                                                l2004 0AF8  
                                              l1036 08F0                                                l2100 1DA4  
                                              l2022 1B54                                                l2014 1B40  
                                              l2030 197A                                                l2006 0B08  
                                              l1038 08F8                                                l1070 1978  
                                              l2110 0B6C                                                l2102 0B32  
                                              l1063 0F02                                                l2024 1B66  
                                              l2016 1B42                                                l2032 197E  
                                              l1056 0B30                                                l2040 0D74  
                                              l2200 192E                                                l2120 0BB2  
                                              l2112 0B7C                                                l2104 0B3A  
                                              l2026 1B68                                                l2018 1B44  
                                              l2034 19A2                                                l1074 1C3C  
                                              l2050 0DE0                                                l2042 0D82  
                                              l2202 1954                                                l2130 0BD8  
                                              l2122 0BC2                                                l2114 0B80  
                                              l2106 0B42                                                l2210 1694  
                                              l2204 1E38                                                l2300 1DD6  
                                              l2028 1B6A                                                l2036 19A6  
                                              l2060 0E92                                                l2052 0E28  
                                              l2044 0D94                                                l2140 0C18  
                                              l2132 0BEA                                                l2124 0BCA  
                                              l2116 0B88                                                l2108 0B54  
                                              l2220 16D0                                                l2212 16A6  
                                              l1077 1C44                                                l1069 1970  
                                              l2206 1E2C                                                l2310 1D30  
                                              l2062 0EA6                                                l2046 0D98  
                                              l2038 0D50                                                l2150 0C56  
                                              l2142 0C1C                                                l2134 0BF2  
                                              l2126 0BCE                                                l2118 0B9A  
                                              l2230 171A                                                l2222 16E2  
                                              l2214 16AC                                                l2080 1E18  
                                              l2304 1E3E                                                l2320 1D56  
                                              l2312 1D34                                                l2056 0E60  
                                              l2048 0DBC                                                l2072 0ECC  
                                              l2240 1AAC                                                l2400 18A8  
                                              l2160 0C96                                                l2152 0C5C  
                                              l2144 0C2E                                                l2136 0C0E  
                                              l2128 0BD4                                                l2232 1732  
                                              l2224 16E8                                                l2216 16B8  
                                              l2208 1690                                                l1089 150E  
                                              l1097 1C04                                                l2322 1D5C  
                                              l2314 1D44                                                l2090 1C6A  
                                              l2082 1C48                                                l2074 0EF0  
                                              l2058 0E84                                                l2066 0EB2  
                                              l2242 1AC8                                                l2234 1A8A  
                                              l2410 190A                                                l2402 18C2  
                                              l2170 0CBE                                                l2162 0C9A  
                                              l2154 0C60                                                l2146 0C36  
                                              l2138 0C12                                                l2226 16F8  
                                              l2218 16BE                                                l2330 160A  
                                              l2306 1E20                                                l2340 17EA  
                                              l2260 1A1E                                                l2252 19EE  
                                              l2316 1D4A                                                l2092 1C72  
                                              l2084 1C48                                                l2068 0EC0  
                                              l2236 1A9C                                                l2404 18D4  
                                              l2420 1886                                                l2412 1838  
                                              l2180 0D02                                                l2164 0CA0  
                                              l2156 0C72                                                l2148 0C52  
                                              l2172 0CDA                                                l2228 16FC  
                                              l2332 163E                                                l2308 1E0E  
                                              l2324 1E44                                                l2342 1806  
                                              l2262 1A20                                                l2254 19F4  
                                              l2246 19D8                                                l2270 1DE4  
                                              l2350 1C86                                                l2318 1D50  
                                              l2094 1C78                                                l2086 1C58  
                                              l2238 1AA4                                                l2406 18F0  
                                              l2422 189A                                                l2414 1852  
                                              l2190 0D3C                                                l2182 0D14  
                                              l2174 0CEC                                                l2166 0CA4  
                                              l2158 0C7A                                                l2334 165A  
                                              l2326 15D6                                                l2430 11FC  
                                              l2280 1A3A                                                l2344 1822  
                                              l2336 17C2                                                l2264 1A30  
                                              l2256 1A02                                                l2272 1DF2  
                                              l2360 1C9E                                                l2352 1C8A  
                                              l2088 1C60                                                l1800 14C8  
                                              l2408 18F6                                                l2416 1864  
                                              l2096 1D90                                                l2168 0CB6  
                                              l2328 15F2                                                l2440 1210  
                                              l2432 1200                                                l2424 11F0  
                                              l2282 1A4A                                                l2370 1352  
                                              l2290 1E4C                                                l2346 182E  
                                              l2338 17D2                                                l2258 1A0A  
                                              l2274 1DFC                                                l2362 1CA2  
                                              l2354 1C8E                                                l1810 1BE4  
                                              l2418 1880                                                l2098 1D96  
                                              l2450 1280                                                l2442 1226  
                                              l2434 1204                                                l2426 11F4  
                                              l2284 1A5A                                                l2380 1436  
                                              l2372 138A                                                l2292 1E32  
                                              l2276 1D64                                                l2268 1DE0  
                                              l2364 1CA6                                                l2356 1C94  
                                              l1804 1BC2                                                l1812 1CFA  
                                              l2196 1918                                                l2188 0D2A  
                                              l2460 12EC                                                l2452 128C  
                                              l2444 124A                                                l2436 1208  
                                              l2428 11F8                                                l2286 1A60  
                                              l2278 1A36                                                l2382 143A  
                                              l2374 13C2                                                l2294 1E26  
                                              l2390 1738                                                l2366 1CB2  
                                              l2358 1C98                                                l1830 0F3A  
                                              l1822 0F04                                                l1806 1BCE  
                                              l1814 1D06                                                l1910 154E  
                                              l1902 1510                                                l2198 1920  
                                              l2462 1308                                                l2446 125E  
                                              l2454 1290                                                l2438 120C  
                                              l2288 1A70                                                l2376 13C6  
                                              l2368 134A                                                l2384 1B7C  
                                              l2296 1E48                                                l2392 1770  
                                              l1840 0F96                                                l1832 0F48  
                                              l1824 0F08                                                l1808 1BE0  
                                              l1816 1D0A                                                l1920 15BC  
                                              l1912 1562                                                l1904 1520  
                                              l2464 131A                                                l2456 129C  
                                              l2448 1272                                                l2378 13FE  
                                              l2386 1BB4                                                l2394 1778  
                                              l2298 1DBA                                                l1930 1AEE  
                                              l1850 1000                                                l1842 0F9E  
                                              l1834 0F68                                                l1826 0F16  
                                              l1818 1D22                                                l1914 1576  
                                              l1906 1534                                                l2466 132C  
                                              l2458 12D0                                                l2388 1BBC  
                                              l2396 17B0                                                l1940 1B04  
                                              l1932 1AF0                                                l1860 104A  
                                              l1852 1020                                                l1844 0FB2  
                                              l1836 0F6C                                                l1828 0F36  
                                              l1924 1C06                                                l1916 157A  
                                              l1908 1542                                                l2398 17B8  
                                              l1942 1B16                                                l1934 1AF2  
                                              l1862 106A                                                l1854 1022  
                                              l1846 0FC0                                                l1838 0F78  
                                              l1870 109E                                                l1926 1C20  
                                              l1790 1446                                                l1918 15A8  
                                              l1950 0870                                                l1944 1B18  
                                              l1936 1AF4                                                l1928 1ADE  
                                              l1856 1034                                                l1848 0FD2  
                                              l1880 110E                                                l1872 10BE  
                                              l1792 1458                                                l1960 08E4  
                                              l1952 0898                                                l1946 1B1A  
                                              l1938 1AF6                                                l1858 103A  
                                              l1890 1186                                                l1882 1116  
                                              l1874 10C2                                                l1866 108C  
                                              l1794 146A                                                l1970 092E  
                                              l1962 0900                                                l1954 08B8  
                                              l1892 1198                                                l1884 112A  
                                              l1876 10D0                                                l1868 1090  
                                              l1796 1474                                                l1980 09CA  
                                              l1972 0936                                                l1964 0912  
                                              l1956 08C8                                                l1948 0850  
                                              l1886 1138                                                l1894 119E  
                                              l1878 10F0                                                l1798 1492  
                                              l1990 0A9A                                                l1974 093C  
                                              l1982 0A2E                                                l1966 0920  
                                              l1958 08CA                                                ?_pad 0011  
                                              l1896 11AE                                                l1888 1166  
                                              l1984 0A48                                                l1992 0AAA  
                                              l1976 09BE                                                l1968 0926  
                                              l1898 11CE                                                l1994 0ABC  
                                              l1986 0A66                                                l1978 09C4  
                                              l1996 0ACC                                                l1988 0A80  
                                              l1998 0AD2                                                STR_1 0801  
                                              STR_2 0810                                                STR_3 081F  
                                              STR_4 082D                                                STR_5 084B  
                                              STR_6 084A                                                STR_7 0843  
                                              STR_8 084B                                                STR_9 084A  
                                              u1000 10D0                                                u1001 10CC  
                                              u1010 110E                                                u1011 110A  
                                              u1020 1138                                                u1100 0880  
                                              u1021 1134                                                u1101 087A  
                                              u1030 1166                                                u1110 0882  
                                              u1031 1162                                                u1040 11AE  
                                              u1200 0A9A                                                u1120 0898  
                                              u1041 11AA                                                u1201 0A96  
                                              u1121 0894                                                u1050 1520  
                                              u1210 0AAA                                                u1130 08C8  
                                              u1051 151C                                                u1211 0AA6  
                                              u1131 08C4                                                u1060 1542  
                                              u1220 0ABC                                                u1140 08E4  
                                              u1300 0DE0                                                u1061 153E  
                                              u1221 0AB8                                                u1141 08E0  
                                              u1301 0DDC                                                u1070 1598  
                                              u1230 0ACC                                                u1150 0912  
                                              u1310 0E84                                                u1071 1594  
                                              u1231 0AC8                                                u1151 090E  
                                              u1311 0E80                                                u1320 1C58  
                                              u1080 15A8                                                u1240 0AE4  
                                              u1160 0920                                                u1400 0C4E  
                                              u1321 1C54                                                u1081 15A4  
                                              u1241 0AE0                                                u1161 091C  
                                              u1401 0C4A                                                u1250 199E  
                                              u1090 1C20                                                u1170 0A48  
                                              u1410 0C72                                                u1330 0B54  
                                              u1091 1C1C                                                u1171 0A44  
                                              u1411 0C6E                                                u1331 0B50  
                                              u1260 19C6                                                u1180 0A66  
                                              u1420 0C92                                                u1340 0B6C  
                                              u1500 16E2                                                u1181 0A62  
                                              u1421 0C8E                                                u1341 0B68  
                                              u1501 16DE                                                u1270 19D6  
                                              u1190 0A80                                                u1430 0CB6  
                                              u1350 0B9A                                                u1510 171A  
                                              _LATB 000F8A                                                u1271 19D2  
                                              u1191 0A7C                                                u1431 0CB2  
                                              u1351 0B96                                                u1511 1716  
                                              u1600 1A5A                                                u1520 19EE  
                                              u1280 0D74                                                u1440 0CD6  
                                              u1360 0BB2                                                _LATD 000F8C  
                                              u1601 1A56                                                u1521 19EA  
                                              u1257 1994                                                u1281 0D70  
                                              u1441 0CD2                                                u1361 0BAE  
                                              u1610 1A70                                                u1530 1A02  
                                              u1290 0DBC                                                u1450 0CEC  
                                              u1370 0BEA                                                u1611 1A6C  
                                              u1531 19FE                                                u1267 19BC  
                                              u1291 0DB8                                                u1451 0CE8  
                                              u1371 0BE6                                                u1620 1A80  
                                              u1540 1A1E                                                u1460 0D14  
                                              u1380 0C0A                                                u1700 1226  
                                              u1621 1A7C                                                u1541 1A1A  
                                              u1461 0D10                                                u1381 0C06  
                                              u1701 1222                                                u1630 138A  
                                              u1550 1A30                                                u1470 0D3C  
                                              u1390 0C2E                                                u1631 1386  
                                              u1551 1A2C                                                u1471 0D38  
                                              u1391 0C2A                                                u1640 13C2  
                                              u1560 1D72                                                u1480 1970  
                                              u1641 13BE                                                u1561 1D6E  
                                              u1481 196C                                                u1650 13FE  
                                              u1570 1D80                                                u1490 16D0  
                                              u1651 13FA                                                u1571 1D7C  
                                              u1491 16CC                                                u1660 1436  
                                              u1580 1D8E                                                u1661 1432  
                                              u1581 1D8A                                                u1717 1336  
                                              u1590 1A4A                                                u1670 1BB4  
                                              u1591 1A46                                                u1671 1BB0  
                                              u1807 1AFC                                                u1727 15FC  
                                              u1680 1770                                                u1681 176C  
                                              u1817 1B22                                                u1737 1630  
                                              u1690 17B0                                                u1691 17AC  
                                              u1827 1D3A                                                u1747 1664  
                              ?_PrenderVentiladores 0001                                                u1837 1B4C  
                                              u1757 1724                                                u1847 1B72  
                                              u1767 0B72                                                u1857 1DEA  
                                              u1777 0BB8                                                u1867 1DF6  
                                              u1787 1D9C                                                u1877 19F0  
                                              u1797 1DB0                                                _RBPU 007F8F  
                          ??_Comparar_T_H_Adecuados 000F                                          _ApagarLeds 1E18  
                                              abs@a 0013                                                _dbuf 0073  
                                 _PrenderCalefactor 1E48                                                _main 11F0  
                                              _dtoa 0850                                  __size_of_LCD_Clear 002A  
                                              _prec 0064                                                _nout 0060  
                                              pad@i 0018                                                pad@p 0015  
                                              fsr1h 000FE2                                                fsr2h 000FDA  
                                              indf1 000FE7                                                indf2 000FDF  
                                              fsr1l 000FE1                                                pad@w 001A  
                                              fsr2l 000FD9                                                prodh 000FF4  
                                              prodl 000FF3                                                start 0000  
                                ?_PrenderCalefactor 0001                                    ??_DHT11_ReadData 0001  
                                     _LCD_String_xy 1C46                                __size_of_DHT11_Start 0020  
                                        PedirDato@i 0012                                        ___param_bank 000000  
                             __end_of_DatosSensorTH 1CC4                                               ??_abs 0015  
                                      ?_initTeclado 0001                                 ??_PrenderCalefactor 0001  
                                             ??_pad 0017                                    __end_of_LCD_Char 1B2C  
                                  __end_of_LCD_Init 1D64                                     __end_of___aodiv 108C  
                                             ?_main 0001                                               ?_dtoa 001C  
                                   __end_of___aomod 11F0                                               STR_10 083B  
                         __size_of_ApagarAspersores 0006                                               _LATA0 007C48  
                                             _LATC0 007C58                                               _LATC1 007C59  
                                             _LATD0 007C60                                               _LATC2 007C5A  
                                             _LATD1 007C61                                               _LATE0 007C68  
                                             _LATE1 007C69                                               _LATC6 007C5E  
                                             _LATE2 007C6A                                               _LATC7 007C5F  
                                      vfpfcnvrt@fmt 0042                                               _PORTB 000F81  
                                             _TRISB 000F93                                               _TRISC 000F94  
                                             _TRISD 000F95                                               _TRISE 000F96  
                                             _Datos 009D                               MostrarHumedad@Humedad 00BC  
                                             _flags 0066                                               _fputc 1446  
                                   __end_of_keyfind 0D50                                               _fputs 1BC2  
                                             pad@fp 0011                               ??_PrenderVentiladores 0001  
                                             _width 0062                                               _putch 1E50  
                                             dtoa@d 001E                                               dtoa@i 003E  
                                             dtoa@n 0036                                               dtoa@p 0030  
                                             dtoa@s 0034                                               dtoa@w 0032  
                         __end_of_PrenderCalefactor 1E4C                                               tablat 000FF5  
             Comparar_T_H_Adecuados@HumedadAdecuada 0015                                               status 000FD8  
                               __size_of_LCD_String 005E                                     __end_of_sprintf 1ADC  
                     PedirTodosLosDatos@Temperatura 0015                                      ?_LCD_String_xy 0005  
                                 _PrenderAspersores 1E32                                     __initialization 1CC4  
                                      __end_of_main 134A                                        __end_of_dtoa 0B32  
                        __end_of_PedirTodosLosDatos 1690                                  ?_PrenderAspersores 0001  
                           __size_of_MostrarHumedad 0070                     Comparar_T_H_Adecuados@HumActual 0005  
                                            ??_main 005E                                              ??_dtoa 0026  
                                 __end_of_LCD_Clear 1DBA                                 ??_PrenderAspersores 0001  
                                     __activetblptr 000002                             __size_of_initActuadores 000A  
                           ?_ControlHumedadAspersor 0001                                              _ADCON1 000FC1  
                                            ?_fputc 0001                                              ?_fputs 000A  
                                            ?_putch 0001                                 _DHT11_CheckResponse 1D64  
                                  LCD_String_xy@msg 0006                                    LCD_String_xy@pos 0005  
                                  LCD_String_xy@row 0008                                              _OSCCON 000FD3  
                                       ?_ApagarLeds 0001                     __size_of_Comparar_T_H_Adecuados 00FC  
                                            _Cadena 0093                         __end_of_DatoDigitadoAEntero 1838  
                                __size_of_PedirDato 00A8                           __end_of_PrenderAspersores 1E38  
                                      vfprintf@cfmt 0056                                          _PrenderLed 1A34  
                                         ??___aodiv 0011                                           ??___aomod 0011  
                                            ___wmul 1DBA                                    _ApagarCalefactor 1E4C  
                              ?_DHT11_CheckResponse 0001                                              _keypad 00A5  
                                        _PrimeraVez 00B1                                              clear_0 1CEA  
ControlTemperaturaVentiladorCalefactor@TempDigitada 0003                                              isa$std 000001  
                                            pad@buf 0013                                              _rowloc 0071  
                              __size_of_LCD_Command 0050                                              dtoa@fp 001C  
                                            _strlen 1CFA                                              fputc@c 0001  
                                            fputs@c 000E                                              fputs@i 000F  
                                            fputs@s 000A                                           ??_keyfind 0001  
                    __end_of_ControlHumedadAspersor 1BC2                                        __mediumconst 0000  
                                            tblptrh 000FF7                                              tblptrl 000FF6  
                                            tblptru 000FF8                                              putch@c 0001  
                                  __end_of_vfprintf 197A                                           ??_sprintf 005E  
                        __size_of_PrenderCalefactor 0004                                   PedirDato@Etiqueta 000A  
                                         ?_LCD_Char 0001                                          __accesstop 0060  
                           __end_of__initialization 1CF0                          __end_of_MostrarTemperatura 18A8  
                                         ?_LCD_Init 0001                                     ??_LCD_String_xy 0008  
                      __end_of_ConfigurarPuertosLCD 1E44                                       ___rparam_used 000001  
                                    __pcstackCOMRAM 0001                                        __pidataBANK0 1E00  
                             ??_DHT11_CheckResponse 0001                                       __end_of_fputc 1510  
                                     __end_of_fputs 1C06                                       __end_of_putch 1E52  
                                      ??_LCD_String 0005                              _Comparar_T_H_Adecuados 134A  
                              __size_of_initTeclado 0004                                    _ApagarAspersores 1E38  
                               __size_of_ApagarLeds 0008                                   __end_of_PedirDato 1738  
                                DatosSensorTH@Datos 0003                                             ??_fputc 0005  
                                           ??_fputs 000E                                  __size_of_initDHT11 0006  
                                           ??_putch 0001                                          __pbssBANK0 0060  
                                        ??_LCD_Char 0001                                          ??_LCD_Init 0003  
                        __size_of_PrenderAspersores 0006                                  __end_of_LCD_String 19D8  
                                       ?_PrenderLed 0001                                             ?___wmul 0001  
                                    _MostrarHumedad 18A8                          __end_of_ApagarVentiladores 1E32  
                  Comparar_T_H_Adecuados@TempActual 0003                                             ?_strlen 0001  
                                    _initActuadores 1E0E                        DatoDigitadoAEntero@Resultado 000C  
                                __size_of_vfpfcnvrt 01B4                                       ??_DHT11_Start 0001  
                                     LCD_String@msg 0003                                             _Humedad 009F  
                                           __Hparam 0000                                             __Lparam 0000  
                            __end_of_MostrarHumedad 1918                                             ___aodiv 0F04  
                                           ___aomod 108C                                     __size_of___wmul 0026  
                                         ?_vfprintf 0050                                   __end_of_initDHT11 1E26  
                                      __psmallconst 0800                                         _Temperatura 00A1  
                                           __pcinit 1CC4                                             __ramtop 0800  
                     PrenderLed@TemperaturaAdecuada 0002                                             __ptext0 11F0  
                                           __ptext1 1E44                                             __ptext2 1E20  
                                           __ptext3 1E0E                                             __ptext4 15D6  
                                           __ptext5 1690                                             __ptext6 0B32  
                                           __ptext7 1D90                                             __ptext8 1838  
                                           __ptext9 18A8                              __end_of_initActuadores 1E18  
                                           _col_loc 0072                                     __size_of_strlen 0036  
                                      __size_of_abs 0040                                        __size_of_pad 00C6  
                                           _keyfind 0B32                         __end_of_PrenderVentiladores 1E2C  
                              _ConfigurarPuertosLCD 1E3E                                  _PedirTodosLosDatos 15D6  
                                         _LCD_Clear 1D90                                             _sprintf 1A8A  
                          __end_of_ApagarCalefactor 1E50                                 __size_of_PrenderLed 0056  
                                PedirDato@CantDatos 000E                              __size_of_DatosSensorTH 003E  
                              end_of_initialization 1CF0                                 ?_PedirTodosLosDatos 0015  
                                      ??_ApagarLeds 0001                                             fputc@fp 0003  
                                    LCD_Command@cmd 0002                                       __Lmediumconst 0000  
                                           fputs@fp 000C                                     ?_MostrarHumedad 00BA  
                                 __end_of_vfpfcnvrt 0F04                                 __end_of_DHT11_Start 1E00  
                                           postdec1 000FE5                                             postdec2 000FDD  
                                           postinc0 000FEE                                             postinc1 000FE6  
                                           postinc2 000FDE                                          ??_vfprintf 0056  
                              ??_PedirTodosLosDatos 001D                                             strlen@a 0003  
                                           strlen@s 0001                                           _PORTAbits 000F80  
                                   ?_initActuadores 0001                             __size_of_DHT11_ReadData 005C  
                             ?_ConfigurarPuertosLCD 0001                                  __end_of_ApagarLeds 1E20  
                                         _TRISAbits 000F92                                          ?_LCD_Clear 0001  
                                      _MargenErrorH 00A3                                        _MargenErrorT 00A4  
                          __end_of_ApagarAspersores 1E3E                      PedirTodosLosDatos@MargenErrorH 001B  
                    PedirTodosLosDatos@MargenErrorT 0019                                   __size_of_LCD_Char 0050  
                                 __size_of_LCD_Init 0034                                  DHT11_ReadData@data 0002  
                           DatosSensorTH@T_Integral 0006                             ?_Comparar_T_H_Adecuados 0003  
                      __size_of_DatoDigitadoAEntero 0076                                       _DatosSensorTH 1C86  
                                     ??_LCD_Command 0001                                  _MostrarTemperatura 1838  
                                       vfpfcnvrt@ap 0044                                         vfpfcnvrt@fp 0040  
                                       vfpfcnvrt@ll 0048                                      __end_of___wmul 1DE0  
                               ?_MostrarTemperatura 00BA                                      __end_of_strlen 1D30  
                               start_initialization 1CC4                                         __end_of_abs 1C46  
                                       __end_of_pad 15D6                                           _PedirDato 1690  
                 Comparar_T_H_Adecuados@HumDigitada 0009                                         _DHT11_Start 1DE0  
                       __end_of_DHT11_CheckResponse 1D90                                ??_MostrarTemperatura 005E  
                             __end_of_LCD_String_xy 1C86                   DatoDigitadoAEntero@prmTemperatura 0007  
                    __end_of_Comparar_T_H_Adecuados 1446                                         vfprintf@fmt 0052  
                                      ??_PrenderLed 0002                                      ?_DatosSensorTH 0003  
                                          ??___wmul 0005                                       ??_initTeclado 0001  
                                       __pdataBANK0 00A5                              ??_ConfigurarPuertosLCD 0001  
                                          ??_strlen 0003                                 __end_of_LCD_Command 1B7C  
                                     __pcstackBANK0 00B2                                    ___aodiv@dividend 0001  
                                _ApagarVentiladores 1E2C                                         ??_LCD_Clear 0003  
                                        ?_PedirDato 000A                                  PedirDato@vecLlenar 000C  
                                __end_of_PrenderLed 1A8A                       MostrarTemperatura@Temperatura 00BC  
                               ?_ApagarVentiladores 0001                 ControlHumedadAspersor@HumedadActual 0001  
                                          ?___aodiv 0001                                            ?___aomod 0001  
                                  ___aodiv@quotient 0013                            ??_ControlHumedadAspersor 0007  
                              ??_ApagarVentiladores 0001                                      _DHT11_ReadData 19D8  
                                 __size_of_vfprintf 0062                                           _initDHT11 1E20  
                                       __smallconst 0800                                 __end_of_initTeclado 1E48  
                                          ?_keyfind 0001                               LCD_String_xy@location 0009  
                                          ?_sprintf 0058                                      __size_of_fputc 00CA  
                                    __size_of_fputs 0044                                      __size_of_putch 0002  
                                 ?_ApagarCalefactor 0001                                            _LCD_Char 1ADC  
                                  ??_MostrarHumedad 005E                                            _LCD_Init 1D30  
                                ??_ApagarCalefactor 0001                                      ___wmul@product 0005  
                                   ??_DatosSensorTH 0005                                    ??_initActuadores 0001  
                            __end_of_DHT11_ReadData 1A34                                         _LCD_Command 1B2C  
                                         _vfpfcnvrt 0D50                                   ___wmul@multiplier 0001  
                                        ?_initDHT11 0001                  Comparar_T_H_Adecuados@MargenErrorH 000D  
                Comparar_T_H_Adecuados@MargenErrorT 000B                                         ??_PedirDato 0010  
                               _DatoDigitadoAEntero 17C2                                         _INTCON2bits 000FF1  
                                         copy_data0 1CD8                        __size_of_PrenderVentiladores 0006  
                                          _MargenEH 006C                                            _MargenET 006E  
                                 ?_ApagarAspersores 0001                                            __Hrparam 0000  
             ControlHumedadAspersor@HumedadDigitada 0003                                  ??_ApagarAspersores 0001  
                                        vfprintf@ap 0054                                            __Lrparam 0000  
                                        vfprintf@fp 0050                            MostrarTemperatura@Cadena 00BA  
                              ?_DatoDigitadoAEntero 0007                                     ?_DHT11_ReadData 0001  
                                       _initTeclado 1E44                                    __size_of___aodiv 0188  
                                  __size_of___aomod 0164                                          ?_vfpfcnvrt 0040  
                       __size_of_PedirTodosLosDatos 00BA                     __size_of_ControlHumedadAspersor 0046  
                                   DHT11_ReadData@i 0001                                     ___aodiv@divisor 0009  
                                   ___aodiv@counter 0011           Comparar_T_H_Adecuados@TemperaturaAdecuada 0014  
                                        sprintf@fmt 005A                                    __size_of_keyfind 021E  
                                          _dtoa$956 002E                                            __ptext10 1A8A  
                                          __ptext11 1918                                            __ptext20 108C  
                                          __ptext12 0D50                                            __ptext21 0F04  
                                          __ptext13 0850                                            __ptext30 1D64  
                                          __ptext22 1C46                                            __ptext14 1510  
                                          __ptext31 17C2                                            __ptext23 197A  
                                          __ptext15 1CFA                                            __ptext40 1E38  
                                          __ptext32 1DBA                                            __ptext24 1ADC  
                                          __ptext16 1BC2                                            __ptext41 1E3E  
                                          __ptext33 1738                                            __ptext25 1D30  
                                          __ptext17 1446                                            __ptext42 134A  
                                          __ptext34 1E26                                            __ptext26 1B2C  
                                          __ptext18 1E50                                            __ptext43 1A34  
                                          __ptext35 1E48                                            __ptext27 1C86  
                                          __ptext19 1C06                                            __ptext44 1E18  
                                          __ptext36 1E2C                                            __ptext28 1DE0  
                                          __ptext37 1E4C                                            __ptext29 19D8  
                                          __ptext38 1B7C                                            __ptext39 1E32  
                                  __size_of_sprintf 0052                            DatosSensorTH@RH_Integral 0005  
                                     __size_of_main 015A                                       __size_of_dtoa 02E2  
                                      ?_DHT11_Start 0001                                            _temp_col 0070  
                                          isa$xinst 000000                               ??_DatoDigitadoAEntero 0009  
                                          _vfprintf 1918                                          _LCD_String 197A  
                         DatoDigitadoAEntero@Decena 000E                                    ___aomod@dividend 0001  
                                       ??_initDHT11 0001                                     _HumedadAdecuada 0068  
                         DatoDigitadoAEntero@Unidad 000A    ControlTemperaturaVentiladorCalefactor@TempActual 0001  
                            _ControlHumedadAspersor 1B7C                                           sprintf@ap 00B2  
                         PrenderLed@HumedadAdecuada 0001                  ControlHumedadAspersor@MargenErrorH 0005  
                       __size_of_MostrarTemperatura 0070                        __size_of_DHT11_CheckResponse 002C  
                                   ___aomod@divisor 0009                                         ??_vfpfcnvrt 0046  
                                   ___aomod@counter 0011      __end_of_ControlTemperaturaVentiladorCalefactor 17C2  
   __size_of_ControlTemperaturaVentiladorCalefactor 008A            ??_ControlTemperaturaVentiladorCalefactor 0007  
           ?_ControlTemperaturaVentiladorCalefactor 0001              _ControlTemperaturaVentiladorCalefactor 1738  
                                          sprintf@f 00B4                                            sprintf@s 0058  
                               _TemperaturaAdecuada 006A                       __size_of_ConfigurarPuertosLCD 0006  
                            __size_of_LCD_String_xy 0040  ControlTemperaturaVentiladorCalefactor@MargenErrorT 0005  
                                      ___aodiv@sign 0012                                        ___aomod@sign 0012  
