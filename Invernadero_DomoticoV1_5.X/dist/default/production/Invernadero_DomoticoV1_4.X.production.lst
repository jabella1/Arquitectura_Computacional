

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Oct 10 04:06:22 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    50  0000                     
    51                           ; Version 2.20
    52                           ; Generated 12/02/2020 GMT
    53                           ; 
    54                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F4550 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     
    86                           	psect	idataBANK0
    87  001DA0                     __pidataBANK0:
    88                           	callstack 0
    89                           
    90                           ;initializer for _keypad
    91  001DA0  31                 	db	49
    92  001DA1  32                 	db	50
    93  001DA2  33                 	db	51
    94  001DA3  2F                 	db	47
    95  001DA4  34                 	db	52
    96  001DA5  35                 	db	53
    97  001DA6  36                 	db	54
    98  001DA7  2A                 	db	42
    99  001DA8  37                 	db	55
   100  001DA9  38                 	db	56
   101  001DAA  39                 	db	57
   102  001DAB  2D                 	db	45
   103  001DAC  2A                 	db	42
   104  001DAD  30                 	db	48
   105  001DAE  23                 	db	35
   106  001DAF  2B                 	db	43
   107                           
   108                           ;initializer for keypad_getkey@F3168
   109  001DB0  31                 	db	49
   110  001DB1  32                 	db	50
   111  001DB2  33                 	db	51
   112  001DB3  41                 	db	65
   113  001DB4  34                 	db	52
   114  001DB5  35                 	db	53
   115  001DB6  36                 	db	54
   116  001DB7  42                 	db	66
   117  001DB8  37                 	db	55
   118  001DB9  38                 	db	56
   119  001DBA  39                 	db	57
   120  001DBB  43                 	db	67
   121  001DBC  2A                 	db	42
   122  001DBD  30                 	db	48
   123  001DBE  23                 	db	35
   124  001DBF  44                 	db	68
   125  0000                     _TRISAbits	set	3986
   126  0000                     _PORTAbits	set	3968
   127  0000                     _PORTB	set	3969
   128  0000                     _LATB	set	3978
   129  0000                     _TRISB	set	3987
   130  0000                     _PORTDbits	set	3971
   131  0000                     _LATDbits	set	3980
   132  0000                     _PORTD	set	3971
   133  0000                     _INTCON2bits	set	4081
   134  0000                     _LATD	set	3980
   135  0000                     _TRISC	set	3988
   136  0000                     _ADCON1	set	4033
   137  0000                     _OSCCON	set	4051
   138  0000                     _TRISD	set	3989
   139  0000                     _TRISE	set	3990
   140  0000                     _LATA0	set	31816
   141  0000                     _LATD1	set	31841
   142  0000                     _LATD0	set	31840
   143  0000                     _LATC6	set	31838
   144  0000                     _LATC2	set	31834
   145  0000                     _LATC1	set	31833
   146  0000                     _LATC0	set	31832
   147  0000                     _LATE2	set	31850
   148  0000                     _LATE1	set	31849
   149  0000                     _LATE0	set	31848
   150  0000                     _RBPU	set	32655
   151                           
   152                           	psect	smallconst
   153  000800                     __psmallconst:
   154                           	callstack 0
   155  000800  00                 	db	0
   156  000801                     STR_1:
   157  000801  54                 	db	84	;'T'
   158  000802  65                 	db	101	;'e'
   159  000803  6D                 	db	109	;'m'
   160  000804  70                 	db	112	;'p'
   161  000805  2E                 	db	46
   162  000806  20                 	db	32
   163  000807  41                 	db	65	;'A'
   164  000808  64                 	db	100	;'d'
   165  000809  65                 	db	101	;'e'
   166  00080A  63                 	db	99	;'c'
   167  00080B  75                 	db	117	;'u'
   168  00080C  61                 	db	97	;'a'
   169  00080D  64                 	db	100	;'d'
   170  00080E  61                 	db	97	;'a'
   171  00080F  00                 	db	0
   172  000810                     STR_2:
   173  000810  4D                 	db	77	;'M'
   174  000811  67                 	db	103	;'g'
   175  000812  6E                 	db	110	;'n'
   176  000813  20                 	db	32
   177  000814  45                 	db	69	;'E'
   178  000815  72                 	db	114	;'r'
   179  000816  72                 	db	114	;'r'
   180  000817  6F                 	db	111	;'o'
   181  000818  72                 	db	114	;'r'
   182  000819  20                 	db	32
   183  00081A  54                 	db	84	;'T'
   184  00081B  65                 	db	101	;'e'
   185  00081C  6D                 	db	109	;'m'
   186  00081D  70                 	db	112	;'p'
   187  00081E  00                 	db	0
   188  00081F                     STR_3:
   189  00081F  48                 	db	72	;'H'
   190  000820  75                 	db	117	;'u'
   191  000821  6D                 	db	109	;'m'
   192  000822  2E                 	db	46
   193  000823  20                 	db	32
   194  000824  41                 	db	65	;'A'
   195  000825  64                 	db	100	;'d'
   196  000826  65                 	db	101	;'e'
   197  000827  63                 	db	99	;'c'
   198  000828  75                 	db	117	;'u'
   199  000829  61                 	db	97	;'a'
   200  00082A  64                 	db	100	;'d'
   201  00082B  61                 	db	97	;'a'
   202  00082C  00                 	db	0
   203  00082D                     STR_4:
   204  00082D  4D                 	db	77	;'M'
   205  00082E  67                 	db	103	;'g'
   206  00082F  6E                 	db	110	;'n'
   207  000830  20                 	db	32
   208  000831  45                 	db	69	;'E'
   209  000832  72                 	db	114	;'r'
   210  000833  72                 	db	114	;'r'
   211  000834  6F                 	db	111	;'o'
   212  000835  72                 	db	114	;'r'
   213  000836  20                 	db	32
   214  000837  48                 	db	72	;'H'
   215  000838  75                 	db	117	;'u'
   216  000839  6D                 	db	109	;'m'
   217  00083A  00                 	db	0
   218  00083B                     STR_10:
   219  00083B  43                 	db	67	;'C'
   220  00083C  20                 	db	32
   221  00083D  54                 	db	84	;'T'
   222  00083E  65                 	db	101	;'e'
   223  00083F  6D                 	db	109	;'m'
   224  000840  70                 	db	112	;'p'
   225  000841  2E                 	db	46
   226  000842  00                 	db	0
   227  000843                     STR_7:
   228  000843  20                 	db	32
   229  000844  20                 	db	32
   230  000845  48                 	db	72	;'H'
   231  000846  75                 	db	117	;'u'
   232  000847  6D                 	db	109	;'m'
   233  000848  2E                 	db	46
   234  000849  00                 	db	0
   235  00084A                     STR_6:
   236  00084A  2E                 	db	46
   237  00084B  25                 	db	37
   238  00084C  64                 	db	100	;'d'
   239  00084D  00                 	db	0
   240  00084E  00                 	db	0	; dummy byte at the end
   241  0000                     
   242                           ; #config settings
   243                           
   244                           	psect	cinit
   245  001C84                     __pcinit:
   246                           	callstack 0
   247  001C84                     start_initialization:
   248                           	callstack 0
   249  001C84                     __initialization:
   250                           	callstack 0
   251                           
   252                           ; Initialize objects allocated to BANK0 (32 bytes)
   253                           ; load TBLPTR registers with __pidataBANK0
   254  001C84  0EA0               	movlw	low __pidataBANK0
   255  001C86  6EF6               	movwf	tblptrl,c
   256  001C88  0E1D               	movlw	high __pidataBANK0
   257  001C8A  6EF7               	movwf	tblptrh,c
   258  001C8C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   259  001C8E  6EF8               	movwf	tblptru,c
   260  001C90  EE00  F0B0         	lfsr	0,__pdataBANK0
   261  001C94  EE10 F020          	lfsr	1,32
   262  001C98                     copy_data0:
   263  001C98  0009               	tblrd		*+
   264  001C9A  CFF5 FFEE          	movff	tablat,postinc0
   265  001C9E  50E5               	movf	postdec1,w,c
   266  001CA0  50E1               	movf	fsr1l,w,c
   267  001CA2  E1FA               	bnz	copy_data0
   268                           
   269                           ; Clear objects allocated to BANK0 (43 bytes)
   270  001CA4  EE00  F060         	lfsr	0,__pbssBANK0
   271  001CA8  0E2B               	movlw	43
   272  001CAA                     clear_0:
   273  001CAA  6AEE               	clrf	postinc0,c
   274  001CAC  06E8               	decf	wreg,f,c
   275  001CAE  E1FD               	bnz	clear_0
   276  001CB0                     end_of_initialization:
   277                           	callstack 0
   278  001CB0                     __end_of__initialization:
   279                           	callstack 0
   280  001CB0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   281  001CB2  6EF8               	movwf	tblptru,c
   282  001CB4  0100               	movlb	0
   283  001CB6  EF28  F004         	goto	_main	;jump to C main() function
   284                           
   285                           	psect	bssBANK0
   286  000060                     __pbssBANK0:
   287                           	callstack 0
   288  000060                     _nout:
   289                           	callstack 0
   290  000060                     	ds	2
   291  000062                     _width:
   292                           	callstack 0
   293  000062                     	ds	2
   294  000064                     _prec:
   295                           	callstack 0
   296  000064                     	ds	2
   297  000066                     _flags:
   298                           	callstack 0
   299  000066                     	ds	2
   300  000068                     _temp_col:
   301                           	callstack 0
   302  000068                     	ds	1
   303  000069                     _rowloc:
   304                           	callstack 0
   305  000069                     	ds	1
   306  00006A                     _col_loc:
   307                           	callstack 0
   308  00006A                     	ds	1
   309  00006B                     _dbuf:
   310                           	callstack 0
   311  00006B                     	ds	32
   312                           
   313                           	psect	dataBANK0
   314  0000B0                     __pdataBANK0:
   315                           	callstack 0
   316  0000B0                     _keypad:
   317                           	callstack 0
   318  0000B0                     	ds	16
   319  0000C0                     keypad_getkey@F3168:
   320                           	callstack 0
   321  0000C0                     	ds	16
   322                           
   323                           	psect	cstackBANK0
   324  00008B                     __pcstackBANK0:
   325                           	callstack 0
   326  00008B                     sprintf@ap:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0x0
   330  00008B                     	ds	2
   331  00008D                     sprintf@f:
   332                           	callstack 0
   333                           
   334                           ; 6 bytes @ 0x2
   335  00008D                     	ds	6
   336  000093                     main@Cadena:
   337                           	callstack 0
   338                           
   339                           ; 10 bytes @ 0x8
   340  000093                     	ds	10
   341  00009D                     main@Temperatura:
   342                           	callstack 0
   343                           
   344                           ; 2 bytes @ 0x12
   345  00009D                     	ds	2
   346  00009F                     main@Humedad:
   347                           	callstack 0
   348                           
   349                           ; 2 bytes @ 0x14
   350  00009F                     	ds	2
   351  0000A1                     main@indice:
   352                           	callstack 0
   353                           
   354                           ; 2 bytes @ 0x16
   355  0000A1                     	ds	2
   356  0000A3                     main@MargenET:
   357                           	callstack 0
   358                           
   359                           ; 2 bytes @ 0x18
   360  0000A3                     	ds	2
   361  0000A5                     main@MargenEH:
   362                           	callstack 0
   363                           
   364                           ; 2 bytes @ 0x1A
   365  0000A5                     	ds	2
   366  0000A7                     main@TemperaturaAdecuada:
   367                           	callstack 0
   368                           
   369                           ; 2 bytes @ 0x1C
   370  0000A7                     	ds	2
   371  0000A9                     main@HumedadAdecuada:
   372                           	callstack 0
   373                           
   374                           ; 2 bytes @ 0x1E
   375  0000A9                     	ds	2
   376  0000AB                     main@bandera:
   377                           	callstack 0
   378                           
   379                           ; 1 bytes @ 0x20
   380  0000AB                     	ds	1
   381  0000AC                     main@MargenErrorT:
   382                           	callstack 0
   383                           
   384                           ; 1 bytes @ 0x21
   385  0000AC                     	ds	1
   386  0000AD                     main@MargenErrorH:
   387                           	callstack 0
   388                           
   389                           ; 1 bytes @ 0x22
   390  0000AD                     	ds	1
   391  0000AE                     main@Datos:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0x23
   395  0000AE                     	ds	2
   396                           
   397                           	psect	cstackCOMRAM
   398  000001                     __pcstackCOMRAM:
   399                           	callstack 0
   400  000001                     ??_LCD_Char:
   401  000001                     ??_LCD_Command:
   402  000001                     ??_keyfind:
   403  000001                     ??_DHT11_Start:
   404  000001                     ?_strlen:
   405                           	callstack 0
   406  000001                     ?___wmul:
   407                           	callstack 0
   408  000001                     ?___aodiv:
   409                           	callstack 0
   410  000001                     ?___aomod:
   411                           	callstack 0
   412  000001                     PrenderLed@HumedadAdecuada:
   413                           	callstack 0
   414  000001                     DHT11_ReadData@i:
   415                           	callstack 0
   416  000001                     ControlHumedadAspersor@HumedadActual:
   417                           	callstack 0
   418  000001                     ControlTemperaturaVentilador@TempActual:
   419                           	callstack 0
   420  000001                     ___wmul@multiplier:
   421                           	callstack 0
   422  000001                     fputc@c:
   423                           	callstack 0
   424  000001                     strlen@s:
   425                           	callstack 0
   426  000001                     ___aodiv@dividend:
   427                           	callstack 0
   428  000001                     ___aomod@dividend:
   429                           	callstack 0
   430                           
   431                           ; 8 bytes @ 0x0
   432  000001                     	ds	1
   433  000002                     PrenderLed@TemperaturaAdecuada:
   434                           	callstack 0
   435  000002                     LCD_Command@cmd:
   436                           	callstack 0
   437  000002                     LCD_Char@dat:
   438                           	callstack 0
   439  000002                     DHT11_ReadData@data:
   440                           	callstack 0
   441                           
   442                           ; 1 bytes @ 0x1
   443  000002                     	ds	1
   444  000003                     ??_LCD_Init:
   445  000003                     ??_LCD_Clear:
   446  000003                     Comparar_T_H_Adecuados@TempActual:
   447                           	callstack 0
   448  000003                     DatosSensorTH@Datos:
   449                           	callstack 0
   450  000003                     ControlHumedadAspersor@HumedadDigitada:
   451                           	callstack 0
   452  000003                     ControlTemperaturaVentilador@TempDigitada:
   453                           	callstack 0
   454  000003                     LCD_String@msg:
   455                           	callstack 0
   456  000003                     ___wmul@multiplicand:
   457                           	callstack 0
   458  000003                     fputc@fp:
   459                           	callstack 0
   460  000003                     strlen@a:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0x2
   464  000003                     	ds	2
   465  000005                     ??_fputc:
   466  000005                     DatosSensorTH@RH_Integral:
   467                           	callstack 0
   468  000005                     LCD_String_xy@pos:
   469                           	callstack 0
   470  000005                     Comparar_T_H_Adecuados@HumActual:
   471                           	callstack 0
   472  000005                     ControlHumedadAspersor@MargenErrorH:
   473                           	callstack 0
   474  000005                     ControlTemperaturaVentilador@MargenErrorT:
   475                           	callstack 0
   476  000005                     ___wmul@product:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0x4
   480  000005                     	ds	1
   481  000006                     DatosSensorTH@T_Integral:
   482                           	callstack 0
   483  000006                     LCD_String_xy@msg:
   484                           	callstack 0
   485                           
   486                           ; 2 bytes @ 0x5
   487  000006                     	ds	1
   488  000007                     ??_ControlHumedadAspersor:
   489  000007                     ??_ControlTemperaturaVentilador:
   490  000007                     ?_DatoDigitado:
   491                           	callstack 0
   492  000007                     DatoDigitado@prmTemperatura:
   493                           	callstack 0
   494  000007                     Comparar_T_H_Adecuados@TempDigitada:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x6
   498  000007                     	ds	1
   499  000008                     LCD_String_xy@row:
   500                           	callstack 0
   501                           
   502                           ; 1 bytes @ 0x7
   503  000008                     	ds	1
   504  000009                     ??_DatoDigitado:
   505  000009                     LCD_String_xy@location:
   506                           	callstack 0
   507  000009                     Comparar_T_H_Adecuados@HumDigitada:
   508                           	callstack 0
   509  000009                     ___aodiv@divisor:
   510                           	callstack 0
   511  000009                     ___aomod@divisor:
   512                           	callstack 0
   513                           
   514                           ; 8 bytes @ 0x8
   515  000009                     	ds	1
   516  00000A                     DatoDigitado@Unidad:
   517                           	callstack 0
   518  00000A                     PedirDato@Etiqueta:
   519                           	callstack 0
   520  00000A                     fputs@s:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0x9
   524  00000A                     	ds	1
   525  00000B                     Comparar_T_H_Adecuados@MargenErrorT:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0xA
   529  00000B                     	ds	1
   530  00000C                     DatoDigitado@Resultado:
   531                           	callstack 0
   532  00000C                     PedirDato@vecLlenar:
   533                           	callstack 0
   534  00000C                     fputs@fp:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0xB
   538  00000C                     	ds	1
   539  00000D                     Comparar_T_H_Adecuados@MargenErrorH:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0xC
   543  00000D                     	ds	1
   544  00000E                     fputs@c:
   545                           	callstack 0
   546  00000E                     DatoDigitado@Decena:
   547                           	callstack 0
   548  00000E                     PedirDato@CantDatos:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0xD
   552  00000E                     	ds	1
   553  00000F                     ??_Comparar_T_H_Adecuados:
   554  00000F                     fputs@i:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0xE
   558  00000F                     	ds	1
   559  000010                     ??_PedirDato:
   560                           
   561                           ; 1 bytes @ 0xF
   562  000010                     	ds	1
   563  000011                     ?_pad:
   564                           	callstack 0
   565  000011                     ___aodiv@counter:
   566                           	callstack 0
   567  000011                     ___aomod@counter:
   568                           	callstack 0
   569  000011                     pad@fp:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x10
   573  000011                     	ds	1
   574  000012                     ___aodiv@sign:
   575                           	callstack 0
   576  000012                     ___aomod@sign:
   577                           	callstack 0
   578  000012                     PedirDato@i:
   579                           	callstack 0
   580                           
   581                           ; 2 bytes @ 0x11
   582  000012                     	ds	1
   583  000013                     ?_abs:
   584                           	callstack 0
   585  000013                     pad@buf:
   586                           	callstack 0
   587  000013                     abs@a:
   588                           	callstack 0
   589  000013                     ___aodiv@quotient:
   590                           	callstack 0
   591                           
   592                           ; 8 bytes @ 0x12
   593  000013                     	ds	1
   594  000014                     Comparar_T_H_Adecuados@TemperaturaAdecuada:
   595                           	callstack 0
   596  000014                     PedirDato@tecla:
   597                           	callstack 0
   598                           
   599                           ; 1 bytes @ 0x13
   600  000014                     	ds	1
   601  000015                     ??_abs:
   602  000015                     Comparar_T_H_Adecuados@HumedadAdecuada:
   603                           	callstack 0
   604  000015                     pad@p:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x14
   608  000015                     	ds	2
   609  000017                     ??_pad:
   610                           
   611                           ; 1 bytes @ 0x16
   612  000017                     	ds	1
   613  000018                     pad@i:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x17
   617  000018                     	ds	2
   618  00001A                     pad@w:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x19
   622  00001A                     	ds	2
   623  00001C                     ?_dtoa:
   624                           	callstack 0
   625  00001C                     dtoa@fp:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x1B
   629  00001C                     	ds	2
   630  00001E                     dtoa@d:
   631                           	callstack 0
   632                           
   633                           ; 8 bytes @ 0x1D
   634  00001E                     	ds	8
   635  000026                     ??_dtoa:
   636                           
   637                           ; 1 bytes @ 0x25
   638  000026                     	ds	8
   639  00002E                     _dtoa$1046:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x2D
   643  00002E                     	ds	2
   644  000030                     dtoa@p:
   645                           	callstack 0
   646                           
   647                           ; 2 bytes @ 0x2F
   648  000030                     	ds	2
   649  000032                     dtoa@w:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x31
   653  000032                     	ds	2
   654  000034                     dtoa@s:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x33
   658  000034                     	ds	2
   659  000036                     dtoa@n:
   660                           	callstack 0
   661                           
   662                           ; 8 bytes @ 0x35
   663  000036                     	ds	8
   664  00003E                     dtoa@i:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0x3D
   668  00003E                     	ds	2
   669  000040                     ?_vfpfcnvrt:
   670                           	callstack 0
   671  000040                     vfpfcnvrt@fp:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x3F
   675  000040                     	ds	2
   676  000042                     vfpfcnvrt@fmt:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x41
   680  000042                     	ds	2
   681  000044                     vfpfcnvrt@ap:
   682                           	callstack 0
   683                           
   684                           ; 2 bytes @ 0x43
   685  000044                     	ds	2
   686  000046                     ??_vfpfcnvrt:
   687                           
   688                           ; 1 bytes @ 0x45
   689  000046                     	ds	2
   690  000048                     vfpfcnvrt@ll:
   691                           	callstack 0
   692                           
   693                           ; 8 bytes @ 0x47
   694  000048                     	ds	8
   695  000050                     ?_vfprintf:
   696                           	callstack 0
   697  000050                     vfprintf@fp:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0x4F
   701  000050                     	ds	2
   702  000052                     vfprintf@fmt:
   703                           	callstack 0
   704                           
   705                           ; 2 bytes @ 0x51
   706  000052                     	ds	2
   707  000054                     vfprintf@ap:
   708                           	callstack 0
   709                           
   710                           ; 2 bytes @ 0x53
   711  000054                     	ds	2
   712  000056                     vfprintf@cfmt:
   713                           	callstack 0
   714                           
   715                           ; 2 bytes @ 0x55
   716  000056                     	ds	2
   717  000058                     ?_sprintf:
   718                           	callstack 0
   719  000058                     sprintf@s:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0x57
   723  000058                     	ds	2
   724  00005A                     sprintf@fmt:
   725                           	callstack 0
   726                           
   727                           ; 2 bytes @ 0x59
   728  00005A                     	ds	4
   729  00005E                     ??_main:
   730                           
   731                           ; 1 bytes @ 0x5D
   732  00005E                     	ds	2
   733                           
   734 ;;
   735 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   736 ;;
   737 ;; *************** function _main *****************
   738 ;; Defined at:
   739 ;;		line 28 in file "Main_Invernadero.c"
   740 ;; Parameters:    Size  Location     Type
   741 ;;		None
   742 ;; Auto vars:     Size  Location     Type
   743 ;;  Cadena         10    8[BANK0 ] unsigned char [10]
   744 ;;  Datos           2   35[BANK0 ] unsigned char [2]
   745 ;;  Humedad         2   20[BANK0 ] unsigned char [2]
   746 ;;  Temperatura     2   18[BANK0 ] unsigned char [2]
   747 ;;  HumedadAdecu    2   30[BANK0 ] int 
   748 ;;  TemperaturaA    2   28[BANK0 ] int 
   749 ;;  MargenEH        2   26[BANK0 ] int 
   750 ;;  MargenET        2   24[BANK0 ] int 
   751 ;;  indice          2   22[BANK0 ] int 
   752 ;;  MargenErrorH    1   34[BANK0 ] unsigned char [1]
   753 ;;  MargenErrorT    1   33[BANK0 ] unsigned char [1]
   754 ;;  bandera         1   32[BANK0 ] _Bool 
   755 ;; Return value:  Size  Location     Type
   756 ;;                  1    wreg      void 
   757 ;; Registers used:
   758 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   759 ;; Tracked objects:
   760 ;;		On entry : 0/0
   761 ;;		On exit  : 0/0
   762 ;;		Unchanged: 0/0
   763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   764 ;;      Params:         0       0       0       0       0       0       0       0       0
   765 ;;      Locals:         0      29       0       0       0       0       0       0       0
   766 ;;      Temps:          2       0       0       0       0       0       0       0       0
   767 ;;      Totals:         2      29       0       0       0       0       0       0       0
   768 ;;Total ram usage:       31 bytes
   769 ;; Hardware stack levels required when called: 8
   770 ;; This function calls:
   771 ;;		_ApagarAspersores
   772 ;;		_Comparar_T_H_Adecuados
   773 ;;		_ControlHumedadAspersor
   774 ;;		_ControlTemperaturaVentilador
   775 ;;		_DatoDigitado
   776 ;;		_DatosSensorTH
   777 ;;		_LCD_Char
   778 ;;		_LCD_Init
   779 ;;		_LCD_String
   780 ;;		_LCD_String_xy
   781 ;;		_PedirDato
   782 ;;		_sprintf
   783 ;; This function is called by:
   784 ;;		Startup code after reset
   785 ;; This function uses a non-reentrant model
   786 ;;
   787                           
   788                           	psect	text0
   789  000850                     __ptext0:
   790                           	callstack 0
   791  000850                     _main:
   792                           	callstack 23
   793  000850                     
   794                           ;Main_Invernadero.c: 31:     TRISE = 0;
   795  000850  0E00               	movlw	0
   796  000852  6E96               	movwf	150,c	;volatile
   797                           
   798                           ;Main_Invernadero.c: 32:     TRISD=0x00;
   799  000854  0E00               	movlw	0
   800  000856  6E95               	movwf	149,c	;volatile
   801                           
   802                           ;Main_Invernadero.c: 33:     _Bool bandera = 0;
   803  000858  0E00               	movlw	0
   804  00085A  0100               	movlb	0	; () banked
   805  00085C  6FAB               	movwf	main@bandera& (0+255),b
   806                           
   807                           ;Main_Invernadero.c: 34:     unsigned char Temperatura[2];;Main_Invernadero.c: 35:     u
      +                          nsigned char Humedad[2];;Main_Invernadero.c: 36:     unsigned char MargenErrorT[1];;Main
      +                          _Invernadero.c: 37:     unsigned char MargenErrorH[1];;Main_Invernadero.c: 38:     int M
      +                          argenET=0;
   808  00085E  0E00               	movlw	0
   809  000860  6FA4               	movwf	(main@MargenET+1)& (0+255),b
   810  000862  0E00               	movlw	0
   811  000864  6FA3               	movwf	main@MargenET& (0+255),b
   812                           
   813                           ;Main_Invernadero.c: 39:     int MargenEH=0;
   814  000866  0E00               	movlw	0
   815  000868  6FA6               	movwf	(main@MargenEH+1)& (0+255),b
   816  00086A  0E00               	movlw	0
   817  00086C  6FA5               	movwf	main@MargenEH& (0+255),b
   818                           
   819                           ;Main_Invernadero.c: 40:     char Datos[2];;Main_Invernadero.c: 41:     char Cadena[10];
      +                          ;Main_Invernadero.c: 42:     int indice = 0;
   820  00086E  0E00               	movlw	0
   821  000870  6FA2               	movwf	(main@indice+1)& (0+255),b
   822  000872  0E00               	movlw	0
   823  000874  6FA1               	movwf	main@indice& (0+255),b
   824                           
   825                           ;Main_Invernadero.c: 43:     int TemperaturaAdecuada=0;
   826  000876  0E00               	movlw	0
   827  000878  6FA8               	movwf	(main@TemperaturaAdecuada+1)& (0+255),b
   828  00087A  0E00               	movlw	0
   829  00087C  6FA7               	movwf	main@TemperaturaAdecuada& (0+255),b
   830                           
   831                           ;Main_Invernadero.c: 44:     int HumedadAdecuada=0;
   832  00087E  0E00               	movlw	0
   833  000880  6FAA               	movwf	(main@HumedadAdecuada+1)& (0+255),b
   834  000882  0E00               	movlw	0
   835  000884  6FA9               	movwf	main@HumedadAdecuada& (0+255),b
   836                           
   837                           ;Main_Invernadero.c: 47:     OSCCON = 0x72;
   838  000886  0E72               	movlw	114
   839  000888  6ED3               	movwf	211,c	;volatile
   840                           
   841                           ;Main_Invernadero.c: 49:     ADCON1=0x0F;
   842  00088A  0E0F               	movlw	15
   843  00088C  6EC1               	movwf	193,c	;volatile
   844                           
   845                           ;Main_Invernadero.c: 50:     TRISC=0x00;
   846  00088E  0E00               	movlw	0
   847  000890  6E94               	movwf	148,c	;volatile
   848  000892                     
   849                           ; BSR set to: 0
   850                           ;Main_Invernadero.c: 51:     ApagarAspersores();
   851  000892  ECF7  F00E         	call	_ApagarAspersores	;wreg free
   852  000896                     
   853                           ;Main_Invernadero.c: 53:      RBPU=0;
   854  000896  9EF1               	bcf	4081,7,c	;volatile
   855  000898                     
   856                           ;Main_Invernadero.c: 54:      LCD_Init();
   857  000898  EC78  F00E         	call	_LCD_Init	;wreg free
   858  00089C                     l2558:
   859                           
   860                           ;Main_Invernadero.c: 57:      if(indice<2){
   861  00089C  0100               	movlb	0	; () banked
   862  00089E  BFA2               	btfsc	(main@indice+1)& (0+255),7,b
   863  0008A0  EF5D  F004         	goto	u2140
   864  0008A4  51A2               	movf	(main@indice+1)& (0+255),w,b
   865  0008A6  E107               	bnz	u2141
   866  0008A8  0E02               	movlw	2
   867  0008AA  5DA1               	subwf	main@indice& (0+255),w,b
   868  0008AC  B0D8               	btfsc	status,0,c
   869  0008AE  EF5B  F004         	goto	u2141
   870  0008B2  EF5D  F004         	goto	u2140
   871  0008B6                     u2141:
   872  0008B6  EFC0  F004         	goto	l2572
   873  0008BA                     u2140:
   874  0008BA                     
   875                           ; BSR set to: 0
   876                           ;Main_Invernadero.c: 58:        PedirDato("Temp. Adecuada",Temperatura,2);
   877  0008BA  0E01               	movlw	low STR_1
   878  0008BC  6E0A               	movwf	PedirDato@Etiqueta^0,c
   879  0008BE  0E08               	movlw	high STR_1
   880  0008C0  6E0B               	movwf	(PedirDato@Etiqueta+1)^0,c
   881  0008C2  0E9D               	movlw	low main@Temperatura
   882  0008C4  6E0C               	movwf	PedirDato@vecLlenar^0,c
   883  0008C6  0E00               	movlw	high main@Temperatura
   884  0008C8  6E0D               	movwf	(PedirDato@vecLlenar+1)^0,c
   885  0008CA  0E00               	movlw	0
   886  0008CC  6E0F               	movwf	(PedirDato@CantDatos+1)^0,c
   887  0008CE  0E02               	movlw	2
   888  0008D0  6E0E               	movwf	PedirDato@CantDatos^0,c
   889  0008D2  ECCC  F00B         	call	_PedirDato	;wreg free
   890  0008D6                     
   891                           ;Main_Invernadero.c: 59:        _delay((unsigned long)((100)*(8000000L/4000.0)));
   892  0008D6  0E02               	movlw	2
   893  0008D8  6E5F               	movwf	(??_main+1)^0,c
   894  0008DA  0E04               	movlw	4
   895  0008DC  6E5E               	movwf	??_main^0,c
   896  0008DE  0EBA               	movlw	186
   897  0008E0                     u2397:
   898  0008E0  2EE8               	decfsz	wreg,f,c
   899  0008E2  D7FE               	bra	u2397
   900  0008E4  2E5E               	decfsz	??_main^0,f,c
   901  0008E6  D7FC               	bra	u2397
   902  0008E8  2E5F               	decfsz	(??_main+1)^0,f,c
   903  0008EA  D7FA               	bra	u2397
   904  0008EC  D000               	nop2	
   905  0008EE                     
   906                           ;Main_Invernadero.c: 60:        PedirDato("Mgn Error Temp",MargenErrorT,1);
   907  0008EE  0E10               	movlw	low STR_2
   908  0008F0  6E0A               	movwf	PedirDato@Etiqueta^0,c
   909  0008F2  0E08               	movlw	high STR_2
   910  0008F4  6E0B               	movwf	(PedirDato@Etiqueta+1)^0,c
   911  0008F6  0EAC               	movlw	low main@MargenErrorT
   912  0008F8  6E0C               	movwf	PedirDato@vecLlenar^0,c
   913  0008FA  0E00               	movlw	high main@MargenErrorT
   914  0008FC  6E0D               	movwf	(PedirDato@vecLlenar+1)^0,c
   915  0008FE  0E00               	movlw	0
   916  000900  6E0F               	movwf	(PedirDato@CantDatos+1)^0,c
   917  000902  0E01               	movlw	1
   918  000904  6E0E               	movwf	PedirDato@CantDatos^0,c
   919  000906  ECCC  F00B         	call	_PedirDato	;wreg free
   920                           
   921                           ;Main_Invernadero.c: 61:         _delay((unsigned long)((100)*(8000000L/4000.0)));
   922  00090A  0E02               	movlw	2
   923  00090C  6E5F               	movwf	(??_main+1)^0,c
   924  00090E  0E04               	movlw	4
   925  000910  6E5E               	movwf	??_main^0,c
   926  000912  0EBA               	movlw	186
   927  000914                     u2407:
   928  000914  2EE8               	decfsz	wreg,f,c
   929  000916  D7FE               	bra	u2407
   930  000918  2E5E               	decfsz	??_main^0,f,c
   931  00091A  D7FC               	bra	u2407
   932  00091C  2E5F               	decfsz	(??_main+1)^0,f,c
   933  00091E  D7FA               	bra	u2407
   934  000920  D000               	nop2	
   935  000922                     
   936                           ;Main_Invernadero.c: 62:        PedirDato("Hum. Adecuada",Humedad,2);
   937  000922  0E1F               	movlw	low STR_3
   938  000924  6E0A               	movwf	PedirDato@Etiqueta^0,c
   939  000926  0E08               	movlw	high STR_3
   940  000928  6E0B               	movwf	(PedirDato@Etiqueta+1)^0,c
   941  00092A  0E9F               	movlw	low main@Humedad
   942  00092C  6E0C               	movwf	PedirDato@vecLlenar^0,c
   943  00092E  0E00               	movlw	high main@Humedad
   944  000930  6E0D               	movwf	(PedirDato@vecLlenar+1)^0,c
   945  000932  0E00               	movlw	0
   946  000934  6E0F               	movwf	(PedirDato@CantDatos+1)^0,c
   947  000936  0E02               	movlw	2
   948  000938  6E0E               	movwf	PedirDato@CantDatos^0,c
   949  00093A  ECCC  F00B         	call	_PedirDato	;wreg free
   950  00093E                     
   951                           ;Main_Invernadero.c: 63:        _delay((unsigned long)((100)*(8000000L/4000.0)));
   952  00093E  0E02               	movlw	2
   953  000940  6E5F               	movwf	(??_main+1)^0,c
   954  000942  0E04               	movlw	4
   955  000944  6E5E               	movwf	??_main^0,c
   956  000946  0EBA               	movlw	186
   957  000948                     u2417:
   958  000948  2EE8               	decfsz	wreg,f,c
   959  00094A  D7FE               	bra	u2417
   960  00094C  2E5E               	decfsz	??_main^0,f,c
   961  00094E  D7FC               	bra	u2417
   962  000950  2E5F               	decfsz	(??_main+1)^0,f,c
   963  000952  D7FA               	bra	u2417
   964  000954  D000               	nop2	
   965                           
   966                           ;Main_Invernadero.c: 64:        PedirDato("Mgn Error Hum",MargenErrorH,1);
   967  000956  0E2D               	movlw	low STR_4
   968  000958  6E0A               	movwf	PedirDato@Etiqueta^0,c
   969  00095A  0E08               	movlw	high STR_4
   970  00095C  6E0B               	movwf	(PedirDato@Etiqueta+1)^0,c
   971  00095E  0EAD               	movlw	low main@MargenErrorH
   972  000960  6E0C               	movwf	PedirDato@vecLlenar^0,c
   973  000962  0E00               	movlw	high main@MargenErrorH
   974  000964  6E0D               	movwf	(PedirDato@vecLlenar+1)^0,c
   975  000966  0E00               	movlw	0
   976  000968  6E0F               	movwf	(PedirDato@CantDatos+1)^0,c
   977  00096A  0E01               	movlw	1
   978  00096C  6E0E               	movwf	PedirDato@CantDatos^0,c
   979  00096E  ECCC  F00B         	call	_PedirDato	;wreg free
   980  000972                     
   981                           ;Main_Invernadero.c: 65:        indice = 2;
   982  000972  0E00               	movlw	0
   983  000974  0100               	movlb	0	; () banked
   984  000976  6FA2               	movwf	(main@indice+1)& (0+255),b
   985  000978  0E02               	movlw	2
   986  00097A  6FA1               	movwf	main@indice& (0+255),b
   987                           
   988                           ;Main_Invernadero.c: 66:     }else{
   989  00097C  EFEB  F004         	goto	l2582
   990  000980                     l2572:
   991                           
   992                           ; BSR set to: 0
   993                           ;Main_Invernadero.c: 67:         if(bandera==0){
   994  000980  51AB               	movf	main@bandera& (0+255),w,b
   995  000982  A4D8               	btfss	status,2,c
   996  000984  EFC6  F004         	goto	u2151
   997  000988  EFC8  F004         	goto	u2150
   998  00098C                     u2151:
   999  00098C  EFE9  F004         	goto	l2580
  1000  000990                     u2150:
  1001  000990                     
  1002                           ; BSR set to: 0
  1003                           ;Main_Invernadero.c: 68:          TemperaturaAdecuada = DatoDigitado(Temperatura);
  1004  000990  0E9D               	movlw	low main@Temperatura
  1005  000992  6E07               	movwf	DatoDigitado@prmTemperatura^0,c
  1006  000994  0E00               	movlw	high main@Temperatura
  1007  000996  6E08               	movwf	(DatoDigitado@prmTemperatura+1)^0,c
  1008  000998  EC0E  F00C         	call	_DatoDigitado	;wreg free
  1009  00099C  C007  F0A7         	movff	?_DatoDigitado,main@TemperaturaAdecuada
  1010  0009A0  C008  F0A8         	movff	?_DatoDigitado+1,main@TemperaturaAdecuada+1
  1011                           
  1012                           ;Main_Invernadero.c: 69:          HumedadAdecuada = DatoDigitado(Humedad);
  1013  0009A4  0E9F               	movlw	low main@Humedad
  1014  0009A6  6E07               	movwf	DatoDigitado@prmTemperatura^0,c
  1015  0009A8  0E00               	movlw	high main@Humedad
  1016  0009AA  6E08               	movwf	(DatoDigitado@prmTemperatura+1)^0,c
  1017  0009AC  EC0E  F00C         	call	_DatoDigitado	;wreg free
  1018  0009B0  C007  F0A9         	movff	?_DatoDigitado,main@HumedadAdecuada
  1019  0009B4  C008  F0AA         	movff	?_DatoDigitado+1,main@HumedadAdecuada+1
  1020  0009B8                     
  1021                           ;Main_Invernadero.c: 70:          MargenET = MargenErrorT[0]-48;
  1022  0009B8  0ED0               	movlw	208
  1023  0009BA  0100               	movlb	0	; () banked
  1024  0009BC  25AC               	addwf	main@MargenErrorT& (0+255),w,b
  1025  0009BE  6FA3               	movwf	main@MargenET& (0+255),b
  1026  0009C0  6BA4               	clrf	(main@MargenET+1)& (0+255),b
  1027  0009C2  0EFF               	movlw	255
  1028  0009C4  23A4               	addwfc	(main@MargenET+1)& (0+255),f,b
  1029  0009C6                     
  1030                           ; BSR set to: 0
  1031                           ;Main_Invernadero.c: 71:          MargenEH = MargenErrorH[0]-48;
  1032  0009C6  0ED0               	movlw	208
  1033  0009C8  25AD               	addwf	main@MargenErrorH& (0+255),w,b
  1034  0009CA  6FA5               	movwf	main@MargenEH& (0+255),b
  1035  0009CC  6BA6               	clrf	(main@MargenEH+1)& (0+255),b
  1036  0009CE  0EFF               	movlw	255
  1037  0009D0  23A6               	addwfc	(main@MargenEH+1)& (0+255),f,b
  1038  0009D2                     l2580:
  1039                           
  1040                           ; BSR set to: 0
  1041                           ;Main_Invernadero.c: 73:         bandera=1;
  1042  0009D2  0E01               	movlw	1
  1043  0009D4  6FAB               	movwf	main@bandera& (0+255),b
  1044  0009D6                     l2582:
  1045                           
  1046                           ; BSR set to: 0
  1047                           ;Main_Invernadero.c: 75:      if (bandera==1){
  1048  0009D6  05AB               	decf	main@bandera& (0+255),w,b
  1049  0009D8  A4D8               	btfss	status,2,c
  1050  0009DA  EFF1  F004         	goto	u2161
  1051  0009DE  EFF3  F004         	goto	u2160
  1052  0009E2                     u2161:
  1053  0009E2  EF4E  F004         	goto	l2558
  1054  0009E6                     u2160:
  1055  0009E6                     
  1056                           ; BSR set to: 0
  1057                           ;Main_Invernadero.c: 76:         DatosSensorTH(Datos);
  1058  0009E6  0EAE               	movlw	low main@Datos
  1059  0009E8  6E03               	movwf	DatosSensorTH@Datos^0,c
  1060  0009EA  0E00               	movlw	high main@Datos
  1061  0009EC  6E04               	movwf	(DatosSensorTH@Datos+1)^0,c
  1062  0009EE  EC23  F00E         	call	_DatosSensorTH	;wreg free
  1063                           
  1064                           ;Main_Invernadero.c: 77:         Comparar_T_H_Adecuados(&Datos[0],&Datos[1],TemperaturaA
      +                          decuada,HumedadAdecuada,MargenET,MargenEH);
  1065  0009F2  0EAE               	movlw	low main@Datos
  1066  0009F4  6E03               	movwf	Comparar_T_H_Adecuados@TempActual^0,c
  1067  0009F6  0E00               	movlw	high main@Datos
  1068  0009F8  6E04               	movwf	(Comparar_T_H_Adecuados@TempActual+1)^0,c
  1069  0009FA  0EAF               	movlw	low (main@Datos+1)
  1070  0009FC  6E05               	movwf	Comparar_T_H_Adecuados@HumActual^0,c
  1071  0009FE  0E00               	movlw	high (main@Datos+1)
  1072  000A00  6E06               	movwf	(Comparar_T_H_Adecuados@HumActual+1)^0,c
  1073  000A02  C0A7  F007         	movff	main@TemperaturaAdecuada,Comparar_T_H_Adecuados@TempDigitada
  1074  000A06  C0A8  F008         	movff	main@TemperaturaAdecuada+1,Comparar_T_H_Adecuados@TempDigitada+1
  1075  000A0A  C0A9  F009         	movff	main@HumedadAdecuada,Comparar_T_H_Adecuados@HumDigitada
  1076  000A0E  C0AA  F00A         	movff	main@HumedadAdecuada+1,Comparar_T_H_Adecuados@HumDigitada+1
  1077  000A12  C0A3  F00B         	movff	main@MargenET,Comparar_T_H_Adecuados@MargenErrorT
  1078  000A16  C0A4  F00C         	movff	main@MargenET+1,Comparar_T_H_Adecuados@MargenErrorT+1
  1079  000A1A  C0A5  F00D         	movff	main@MargenEH,Comparar_T_H_Adecuados@MargenErrorH
  1080  000A1E  C0A6  F00E         	movff	main@MargenEH+1,Comparar_T_H_Adecuados@MargenErrorH+1
  1081  000A22  EC86  F00A         	call	_Comparar_T_H_Adecuados	;wreg free
  1082                           
  1083                           ;Main_Invernadero.c: 78:         ControlHumedadAspersor(&Datos[1],HumedadAdecuada,Margen
      +                          EH);
  1084  000A26  0EAF               	movlw	low (main@Datos+1)
  1085  000A28  6E01               	movwf	ControlHumedadAspersor@HumedadActual^0,c
  1086  000A2A  0E00               	movlw	high (main@Datos+1)
  1087  000A2C  6E02               	movwf	(ControlHumedadAspersor@HumedadActual+1)^0,c
  1088  000A2E  C0A9  F003         	movff	main@HumedadAdecuada,ControlHumedadAspersor@HumedadDigitada
  1089  000A32  C0AA  F004         	movff	main@HumedadAdecuada+1,ControlHumedadAspersor@HumedadDigitada+1
  1090  000A36  C0A5  F005         	movff	main@MargenEH,ControlHumedadAspersor@MargenErrorH
  1091  000A3A  C0A6  F006         	movff	main@MargenEH+1,ControlHumedadAspersor@MargenErrorH+1
  1092  000A3E  EC9E  F00D         	call	_ControlHumedadAspersor	;wreg free
  1093                           
  1094                           ;Main_Invernadero.c: 79:         ControlTemperaturaVentilador(&Datos[0],TemperaturaAdecu
      +                          ada,MargenET);
  1095  000A42  0EAE               	movlw	low main@Datos
  1096  000A44  6E01               	movwf	ControlTemperaturaVentilador@TempActual^0,c
  1097  000A46  0E00               	movlw	high main@Datos
  1098  000A48  6E02               	movwf	(ControlTemperaturaVentilador@TempActual+1)^0,c
  1099  000A4A  C0A7  F003         	movff	main@TemperaturaAdecuada,ControlTemperaturaVentilador@TempDigitada
  1100  000A4E  C0A8  F004         	movff	main@TemperaturaAdecuada+1,ControlTemperaturaVentilador@TempDigitada+1
  1101  000A52  C0A3  F005         	movff	main@MargenET,ControlTemperaturaVentilador@MargenErrorT
  1102  000A56  C0A4  F006         	movff	main@MargenET+1,ControlTemperaturaVentilador@MargenErrorT+1
  1103  000A5A  EC7B  F00D         	call	_ControlTemperaturaVentilador	;wreg free
  1104  000A5E                     
  1105                           ;Main_Invernadero.c: 82:         sprintf(Cadena,"%d",Datos[1]);
  1106  000A5E  0E93               	movlw	low main@Cadena
  1107  000A60  6E58               	movwf	sprintf@s^0,c
  1108  000A62  0E00               	movlw	high main@Cadena
  1109  000A64  6E59               	movwf	(sprintf@s+1)^0,c
  1110  000A66  0E4B               	movlw	low (STR_6+1)
  1111  000A68  6E5A               	movwf	sprintf@fmt^0,c
  1112  000A6A  0E08               	movlw	high (STR_6+1)
  1113  000A6C  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1114  000A6E  C0AF  F05C         	movff	main@Datos+1,?_sprintf+4
  1115  000A72  6A5D               	clrf	(?_sprintf+5)^0,c
  1116  000A74  EC02  F00D         	call	_sprintf	;wreg free
  1117  000A78                     
  1118                           ;Main_Invernadero.c: 83:         LCD_String_xy(0,0,Cadena);
  1119  000A78  0E00               	movlw	0
  1120  000A7A  6E05               	movwf	LCD_String_xy@pos^0,c
  1121  000A7C  0E93               	movlw	low main@Cadena
  1122  000A7E  6E06               	movwf	LCD_String_xy@msg^0,c
  1123  000A80  0E00               	movlw	high main@Cadena
  1124  000A82  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  1125  000A84  0E00               	movlw	0
  1126  000A86  EC03  F00E         	call	_LCD_String_xy
  1127  000A8A                     
  1128                           ;Main_Invernadero.c: 84:         sprintf(Cadena,".%d",0);
  1129  000A8A  0E93               	movlw	low main@Cadena
  1130  000A8C  6E58               	movwf	sprintf@s^0,c
  1131  000A8E  0E00               	movlw	high main@Cadena
  1132  000A90  6E59               	movwf	(sprintf@s+1)^0,c
  1133  000A92  0E4A               	movlw	low STR_6
  1134  000A94  6E5A               	movwf	sprintf@fmt^0,c
  1135  000A96  0E08               	movlw	high STR_6
  1136  000A98  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1137  000A9A  0E00               	movlw	0
  1138  000A9C  6E5D               	movwf	(?_sprintf+5)^0,c
  1139  000A9E  0E00               	movlw	0
  1140  000AA0  6E5C               	movwf	(?_sprintf+4)^0,c
  1141  000AA2  EC02  F00D         	call	_sprintf	;wreg free
  1142  000AA6                     
  1143                           ;Main_Invernadero.c: 85:         LCD_Char('%');
  1144  000AA6  0E25               	movlw	37
  1145  000AA8  EC2B  F00D         	call	_LCD_Char
  1146                           
  1147                           ;Main_Invernadero.c: 86:         sprintf(Cadena,"  Hum.");
  1148  000AAC  0E93               	movlw	low main@Cadena
  1149  000AAE  6E58               	movwf	sprintf@s^0,c
  1150  000AB0  0E00               	movlw	high main@Cadena
  1151  000AB2  6E59               	movwf	(sprintf@s+1)^0,c
  1152  000AB4  0E43               	movlw	low STR_7
  1153  000AB6  6E5A               	movwf	sprintf@fmt^0,c
  1154  000AB8  0E08               	movlw	high STR_7
  1155  000ABA  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1156  000ABC  EC02  F00D         	call	_sprintf	;wreg free
  1157  000AC0                     
  1158                           ;Main_Invernadero.c: 87:         LCD_String(Cadena);
  1159  000AC0  0E93               	movlw	low main@Cadena
  1160  000AC2  6E03               	movwf	LCD_String@msg^0,c
  1161  000AC4  0E00               	movlw	high main@Cadena
  1162  000AC6  6E04               	movwf	(LCD_String@msg+1)^0,c
  1163  000AC8  EC7A  F00C         	call	_LCD_String	;wreg free
  1164  000ACC                     
  1165                           ;Main_Invernadero.c: 90:        sprintf(Cadena,"%d",Datos[0]);
  1166  000ACC  0E93               	movlw	low main@Cadena
  1167  000ACE  6E58               	movwf	sprintf@s^0,c
  1168  000AD0  0E00               	movlw	high main@Cadena
  1169  000AD2  6E59               	movwf	(sprintf@s+1)^0,c
  1170  000AD4  0E4B               	movlw	low (STR_6+1)
  1171  000AD6  6E5A               	movwf	sprintf@fmt^0,c
  1172  000AD8  0E08               	movlw	high (STR_6+1)
  1173  000ADA  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1174  000ADC  C0AE  F05C         	movff	main@Datos,?_sprintf+4
  1175  000AE0  6A5D               	clrf	(?_sprintf+5)^0,c
  1176  000AE2  EC02  F00D         	call	_sprintf	;wreg free
  1177                           
  1178                           ;Main_Invernadero.c: 91:        LCD_String_xy(2,0,Cadena);
  1179  000AE6  0E00               	movlw	0
  1180  000AE8  6E05               	movwf	LCD_String_xy@pos^0,c
  1181  000AEA  0E93               	movlw	low main@Cadena
  1182  000AEC  6E06               	movwf	LCD_String_xy@msg^0,c
  1183  000AEE  0E00               	movlw	high main@Cadena
  1184  000AF0  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  1185  000AF2  0E02               	movlw	2
  1186  000AF4  EC03  F00E         	call	_LCD_String_xy
  1187  000AF8                     
  1188                           ;Main_Invernadero.c: 92:        sprintf(Cadena,".%d",0);
  1189  000AF8  0E93               	movlw	low main@Cadena
  1190  000AFA  6E58               	movwf	sprintf@s^0,c
  1191  000AFC  0E00               	movlw	high main@Cadena
  1192  000AFE  6E59               	movwf	(sprintf@s+1)^0,c
  1193  000B00  0E4A               	movlw	low STR_6
  1194  000B02  6E5A               	movwf	sprintf@fmt^0,c
  1195  000B04  0E08               	movlw	high STR_6
  1196  000B06  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1197  000B08  0E00               	movlw	0
  1198  000B0A  6E5D               	movwf	(?_sprintf+5)^0,c
  1199  000B0C  0E00               	movlw	0
  1200  000B0E  6E5C               	movwf	(?_sprintf+4)^0,c
  1201  000B10  EC02  F00D         	call	_sprintf	;wreg free
  1202  000B14                     
  1203                           ;Main_Invernadero.c: 93:        LCD_Char(0xdf);
  1204  000B14  0EDF               	movlw	223
  1205  000B16  EC2B  F00D         	call	_LCD_Char
  1206  000B1A                     
  1207                           ;Main_Invernadero.c: 94:        sprintf(Cadena,"C Temp.");
  1208  000B1A  0E93               	movlw	low main@Cadena
  1209  000B1C  6E58               	movwf	sprintf@s^0,c
  1210  000B1E  0E00               	movlw	high main@Cadena
  1211  000B20  6E59               	movwf	(sprintf@s+1)^0,c
  1212  000B22  0E3B               	movlw	low STR_10
  1213  000B24  6E5A               	movwf	sprintf@fmt^0,c
  1214  000B26  0E08               	movlw	high STR_10
  1215  000B28  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1216  000B2A  EC02  F00D         	call	_sprintf	;wreg free
  1217  000B2E                     
  1218                           ;Main_Invernadero.c: 95:        LCD_String(Cadena);
  1219  000B2E  0E93               	movlw	low main@Cadena
  1220  000B30  6E03               	movwf	LCD_String@msg^0,c
  1221  000B32  0E00               	movlw	high main@Cadena
  1222  000B34  6E04               	movwf	(LCD_String@msg+1)^0,c
  1223  000B36  EC7A  F00C         	call	_LCD_String	;wreg free
  1224  000B3A                     
  1225                           ;Main_Invernadero.c: 97:        _delay((unsigned long)((800)*(8000000L/4000.0)));
  1226  000B3A  0E09               	movlw	9
  1227  000B3C  6E5F               	movwf	(??_main+1)^0,c
  1228  000B3E  0E1E               	movlw	30
  1229  000B40  6E5E               	movwf	??_main^0,c
  1230  000B42  0EE4               	movlw	228
  1231  000B44                     u2427:
  1232  000B44  2EE8               	decfsz	wreg,f,c
  1233  000B46  D7FE               	bra	u2427
  1234  000B48  2E5E               	decfsz	??_main^0,f,c
  1235  000B4A  D7FC               	bra	u2427
  1236  000B4C  2E5F               	decfsz	(??_main+1)^0,f,c
  1237  000B4E  D7FA               	bra	u2427
  1238  000B50  D000               	nop2	
  1239  000B52  EF4E  F004         	goto	l2558
  1240  000B56  EF00  F000         	goto	start
  1241  000B5A                     __end_of_main:
  1242                           	callstack 0
  1243                           
  1244 ;; *************** function _sprintf *****************
  1245 ;; Defined at:
  1246 ;;		line 9 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\nf_sprintf.c"
  1247 ;; Parameters:    Size  Location     Type
  1248 ;;  s               2   87[COMRAM] PTR unsigned char 
  1249 ;;		 -> main@Cadena(10), 
  1250 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
  1251 ;;		 -> STR_10(8), STR_9(4), STR_8(3), STR_7(7), 
  1252 ;;		 -> STR_6(4), STR_5(3), 
  1253 ;; Auto vars:     Size  Location     Type
  1254 ;;  f               6    2[BANK0 ] struct _IO_FILE
  1255 ;;  ap              2    0[BANK0 ] PTR void [1]
  1256 ;;		 -> ?_sprintf(2), 
  1257 ;;  ret             2    0        int 
  1258 ;; Return value:  Size  Location     Type
  1259 ;;                  2   87[COMRAM] int 
  1260 ;; Registers used:
  1261 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1262 ;; Tracked objects:
  1263 ;;		On entry : 0/0
  1264 ;;		On exit  : 0/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1267 ;;      Params:         6       0       0       0       0       0       0       0       0
  1268 ;;      Locals:         0       8       0       0       0       0       0       0       0
  1269 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1270 ;;      Totals:         6       8       0       0       0       0       0       0       0
  1271 ;;Total ram usage:       14 bytes
  1272 ;; Hardware stack levels used: 1
  1273 ;; Hardware stack levels required when called: 7
  1274 ;; This function calls:
  1275 ;;		_vfprintf
  1276 ;; This function is called by:
  1277 ;;		_main
  1278 ;; This function uses a non-reentrant model
  1279 ;;
  1280                           
  1281                           	psect	text1
  1282  001A04                     __ptext1:
  1283                           	callstack 0
  1284  001A04                     _sprintf:
  1285                           	callstack 23
  1286  001A04  0E5C               	movlw	low (?_sprintf+4)
  1287  001A06  0100               	movlb	0	; () banked
  1288  001A08  6F8B               	movwf	sprintf@ap& (0+255),b
  1289  001A0A  0E00               	movlw	high (?_sprintf+4)
  1290  001A0C  6F8C               	movwf	(sprintf@ap+1)& (0+255),b
  1291  001A0E  C058  F08D         	movff	sprintf@s,sprintf@f
  1292  001A12  C059  F08E         	movff	sprintf@s+1,sprintf@f+1
  1293  001A16                     
  1294                           ; BSR set to: 0
  1295  001A16  0E00               	movlw	0
  1296  001A18  6F90               	movwf	(sprintf@f+3)& (0+255),b
  1297  001A1A  0E00               	movlw	0
  1298  001A1C  6F8F               	movwf	(sprintf@f+2)& (0+255),b
  1299  001A1E                     
  1300                           ; BSR set to: 0
  1301  001A1E  0E00               	movlw	0
  1302  001A20  6F92               	movwf	(sprintf@f+5)& (0+255),b
  1303  001A22  0E00               	movlw	0
  1304  001A24  6F91               	movwf	(sprintf@f+4)& (0+255),b
  1305  001A26                     
  1306                           ; BSR set to: 0
  1307  001A26  0E8D               	movlw	low sprintf@f
  1308  001A28  6E50               	movwf	vfprintf@fp^0,c
  1309  001A2A  0E00               	movlw	high sprintf@f
  1310  001A2C  6E51               	movwf	(vfprintf@fp+1)^0,c
  1311  001A2E  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
  1312  001A32  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1313  001A36  0E8B               	movlw	low sprintf@ap
  1314  001A38  6E54               	movwf	vfprintf@ap^0,c
  1315  001A3A  0E00               	movlw	high sprintf@ap
  1316  001A3C  6E55               	movwf	(vfprintf@ap+1)^0,c
  1317  001A3E  EC49  F00C         	call	_vfprintf	;wreg free
  1318  001A42  0100               	movlb	0	; () banked
  1319  001A44  518F               	movf	(sprintf@f+2)& (0+255),w,b
  1320  001A46  2458               	addwf	sprintf@s^0,w,c
  1321  001A48  6ED9               	movwf	fsr2l,c
  1322  001A4A  5190               	movf	(sprintf@f+3)& (0+255),w,b
  1323  001A4C  2059               	addwfc	(sprintf@s+1)^0,w,c
  1324  001A4E  6EDA               	movwf	fsr2h,c
  1325  001A50  0E00               	movlw	0
  1326  001A52  6EDF               	movwf	indf2,c
  1327  001A54                     
  1328                           ; BSR set to: 0
  1329  001A54  0012               	return		;funcret
  1330  001A56                     __end_of_sprintf:
  1331                           	callstack 0
  1332                           
  1333 ;; *************** function _vfprintf *****************
  1334 ;; Defined at:
  1335 ;;		line 1390 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c"
  1336 ;; Parameters:    Size  Location     Type
  1337 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  1338 ;;		 -> sprintf@f(6), 
  1339 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  1340 ;;		 -> STR_10(8), STR_9(4), STR_8(3), STR_7(7), 
  1341 ;;		 -> STR_6(4), STR_5(3), 
  1342 ;;  ap              2   83[COMRAM] PTR PTR void 
  1343 ;;		 -> sprintf@ap(2), 
  1344 ;; Auto vars:     Size  Location     Type
  1345 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  1346 ;;		 -> STR_10(8), STR_9(4), STR_8(3), STR_7(7), 
  1347 ;;		 -> STR_6(4), STR_5(3), 
  1348 ;; Return value:  Size  Location     Type
  1349 ;;                  2   79[COMRAM] int 
  1350 ;; Registers used:
  1351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1352 ;; Tracked objects:
  1353 ;;		On entry : 0/0
  1354 ;;		On exit  : 0/0
  1355 ;;		Unchanged: 0/0
  1356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1357 ;;      Params:         6       0       0       0       0       0       0       0       0
  1358 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1359 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1360 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1361 ;;Total ram usage:        8 bytes
  1362 ;; Hardware stack levels used: 1
  1363 ;; Hardware stack levels required when called: 6
  1364 ;; This function calls:
  1365 ;;		_vfpfcnvrt
  1366 ;; This function is called by:
  1367 ;;		_sprintf
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371                           	psect	text2
  1372  001892                     __ptext2:
  1373                           	callstack 0
  1374  001892                     _vfprintf:
  1375                           	callstack 23
  1376  001892                     
  1377                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1390: int vfprintf(FIL
      +                          E *fp, const char *fmt, va_list ap);D:\XC8 compilador para el MPLAB\pic\sources\c99\comm
      +                          on\doprnt.c: 1391: {;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 13
      +                          93:     char *cfmt;;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 139
      +                          5:     cfmt = (char *)fmt;
  1378  001892  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  1379  001896  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1380  00189A                     
  1381                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1396:     nout = 0;
  1382  00189A  0E00               	movlw	0
  1383  00189C  0100               	movlb	0	; () banked
  1384  00189E  6F61               	movwf	(_nout+1)& (0+255),b
  1385  0018A0  0E00               	movlw	0
  1386  0018A2  6F60               	movwf	_nout& (0+255),b
  1387                           
  1388                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1397:     while (*cfmt
      +                          ) {
  1389  0018A4  EF67  F00C         	goto	l2440
  1390  0018A8                     l2438:
  1391                           
  1392                           ; BSR set to: 0
  1393                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1398:         nout += 
      +                          vfpfcnvrt(fp, &cfmt, ap);
  1394  0018A8  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  1395  0018AC  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1396  0018B0  0E56               	movlw	low vfprintf@cfmt
  1397  0018B2  6E42               	movwf	vfpfcnvrt@fmt^0,c
  1398  0018B4  0E00               	movlw	high vfprintf@cfmt
  1399  0018B6  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1400  0018B8  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  1401  0018BC  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1402  0018C0  EC36  F008         	call	_vfpfcnvrt	;wreg free
  1403  0018C4  5040               	movf	?_vfpfcnvrt^0,w,c
  1404  0018C6  0100               	movlb	0	; () banked
  1405  0018C8  2760               	addwf	_nout& (0+255),f,b
  1406  0018CA  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  1407  0018CC  2361               	addwfc	(_nout+1)& (0+255),f,b
  1408  0018CE                     l2440:
  1409                           
  1410                           ; BSR set to: 0
  1411                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1397:     while (*cfmt
      +                          ) {
  1412  0018CE  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  1413  0018D2  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1414  0018D6                     	if	0	;tblptru may be non-zero
  1415  0018D6                     	endif
  1416  0018D6                     	if	0	;tblptru may be non-zero
  1417  0018D6                     	endif
  1418  0018D6  0008               	tblrd		*
  1419  0018D8  50F5               	movf	tablat,w,c
  1420  0018DA  0900               	iorlw	0
  1421  0018DC  A4D8               	btfss	status,2,c
  1422  0018DE  EF73  F00C         	goto	u2061
  1423  0018E2  EF75  F00C         	goto	u2060
  1424  0018E6                     u2061:
  1425  0018E6  EF54  F00C         	goto	l2438
  1426  0018EA                     u2060:
  1427  0018EA                     
  1428                           ; BSR set to: 0
  1429                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1400:     return nout;
  1430  0018EA  C060  F050         	movff	_nout,?_vfprintf
  1431  0018EE  C061  F051         	movff	_nout+1,?_vfprintf+1
  1432  0018F2                     
  1433                           ; BSR set to: 0
  1434  0018F2  0012               	return		;funcret
  1435  0018F4                     __end_of_vfprintf:
  1436                           	callstack 0
  1437                           
  1438 ;; *************** function _vfpfcnvrt *****************
  1439 ;; Defined at:
  1440 ;;		line 692 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c"
  1441 ;; Parameters:    Size  Location     Type
  1442 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  1443 ;;		 -> sprintf@f(6), 
  1444 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  1445 ;;		 -> vfprintf@cfmt(2), 
  1446 ;;  ap              2   67[COMRAM] PTR PTR void 
  1447 ;;		 -> sprintf@ap(2), 
  1448 ;; Auto vars:     Size  Location     Type
  1449 ;;  ll              8   71[COMRAM] long long 
  1450 ;;  llu             8    0        unsigned long long 
  1451 ;;  f               4    0        unsigned long long 
  1452 ;;  vp              3    0        PTR void 
  1453 ;;  ct              3    0        unsigned char [3]
  1454 ;;  cp              3    0        PTR unsigned char 
  1455 ;;  i               2    0        int 
  1456 ;;  done            2    0        int 
  1457 ;;  c               1    0        unsigned char 
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  2   63[COMRAM] int 
  1460 ;; Registers used:
  1461 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1467 ;;      Params:         6       0       0       0       0       0       0       0       0
  1468 ;;      Locals:         8       0       0       0       0       0       0       0       0
  1469 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1470 ;;      Totals:        16       0       0       0       0       0       0       0       0
  1471 ;;Total ram usage:       16 bytes
  1472 ;; Hardware stack levels used: 1
  1473 ;; Hardware stack levels required when called: 5
  1474 ;; This function calls:
  1475 ;;		_dtoa
  1476 ;;		_fputc
  1477 ;; This function is called by:
  1478 ;;		_vfprintf
  1479 ;; This function uses a non-reentrant model
  1480 ;;
  1481                           
  1482                           	psect	text3
  1483  00106C                     __ptext3:
  1484                           	callstack 0
  1485  00106C                     _vfpfcnvrt:
  1486                           	callstack 23
  1487  00106C                     
  1488                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 692: static int vfpfcn
      +                          vrt(FILE *fp, char *fmt[], va_list ap);D:\XC8 compilador para el MPLAB\pic\sources\c99\c
      +                          ommon\doprnt.c: 693: {;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 
      +                          694:     char c, *cp, ct[3];;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\dopr
      +                          nt.c: 695:     int done, i;;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprn
      +                          t.c: 696:     long long ll;;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprn
      +                          t.c: 697:     unsigned long long llu;
  1489  00106C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1490  001070  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1491  001074  CFDE FFF6          	movff	postinc2,tblptrl
  1492  001078  CFDD FFF7          	movff	postdec2,tblptrh
  1493  00107C                     	if	0	;tblptru may be non-zero
  1494  00107C                     	endif
  1495  00107C                     	if	0	;tblptru may be non-zero
  1496  00107C                     	endif
  1497  00107C  0008               	tblrd		*
  1498  00107E  50F5               	movf	tablat,w,c
  1499  001080  0A25               	xorlw	37
  1500  001082  A4D8               	btfss	status,2,c
  1501  001084  EF46  F008         	goto	u1751
  1502  001088  EF48  F008         	goto	u1750
  1503  00108C                     u1751:
  1504  00108C  EFF4  F008         	goto	l2254
  1505  001090                     u1750:
  1506  001090                     
  1507                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 703:         ++*fmt;
  1508  001090  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1509  001094  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1510  001098  2ADE               	incf	postinc2,f,c
  1511  00109A  0E00               	movlw	0
  1512  00109C  22DD               	addwfc	postdec2,f,c
  1513  00109E                     
  1514                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 705:         flags = w
      +                          idth = 0;
  1515  00109E  0E00               	movlw	0
  1516  0010A0  0100               	movlb	0	; () banked
  1517  0010A2  6F63               	movwf	(_width+1)& (0+255),b
  1518  0010A4  0E00               	movlw	0
  1519  0010A6  6F62               	movwf	_width& (0+255),b
  1520  0010A8  C062  F066         	movff	_width,_flags
  1521  0010AC  C063  F067         	movff	_width+1,_flags+1
  1522  0010B0                     
  1523                           ; BSR set to: 0
  1524                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 706:         prec = -1
      +                          ;
  1525  0010B0  6964               	setf	_prec& (0+255),b
  1526  0010B2  6965               	setf	(_prec+1)& (0+255),b
  1527  0010B4                     
  1528                           ; BSR set to: 0
  1529                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 847:         if ((*fmt
      +                          [0] == 'd') || (*fmt[0] == 'i')) {
  1530  0010B4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1531  0010B8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1532  0010BC  CFDE FFF6          	movff	postinc2,tblptrl
  1533  0010C0  CFDD FFF7          	movff	postdec2,tblptrh
  1534  0010C4                     	if	0	;tblptru may be non-zero
  1535  0010C4                     	endif
  1536  0010C4                     	if	0	;tblptru may be non-zero
  1537  0010C4                     	endif
  1538  0010C4  0008               	tblrd		*
  1539  0010C6  50F5               	movf	tablat,w,c
  1540  0010C8  0A64               	xorlw	100
  1541  0010CA  B4D8               	btfsc	status,2,c
  1542  0010CC  EF6A  F008         	goto	u1761
  1543  0010D0  EF6C  F008         	goto	u1760
  1544  0010D4                     u1761:
  1545  0010D4  EF7E  F008         	goto	l2232
  1546  0010D8                     u1760:
  1547  0010D8                     
  1548                           ; BSR set to: 0
  1549  0010D8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1550  0010DC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1551  0010E0  CFDE FFF6          	movff	postinc2,tblptrl
  1552  0010E4  CFDD FFF7          	movff	postdec2,tblptrh
  1553  0010E8                     	if	0	;tblptru may be non-zero
  1554  0010E8                     	endif
  1555  0010E8                     	if	0	;tblptru may be non-zero
  1556  0010E8                     	endif
  1557  0010E8  0008               	tblrd		*
  1558  0010EA  50F5               	movf	tablat,w,c
  1559  0010EC  0A69               	xorlw	105
  1560  0010EE  A4D8               	btfss	status,2,c
  1561  0010F0  EF7C  F008         	goto	u1771
  1562  0010F4  EF7E  F008         	goto	u1770
  1563  0010F8                     u1771:
  1564  0010F8  EFBE  F008         	goto	l2238
  1565  0010FC                     u1770:
  1566  0010FC                     l2232:
  1567                           
  1568                           ; BSR set to: 0
  1569                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 849:             ++*fm
      +                          t;
  1570  0010FC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1571  001100  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1572  001104  2ADE               	incf	postinc2,f,c
  1573  001106  0E00               	movlw	0
  1574  001108  22DD               	addwfc	postdec2,f,c
  1575                           
  1576                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 850:             ll = 
      +                          (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1577  00110A  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1578  00110E  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1579  001112  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1580  001116  0E02               	movlw	2
  1581  001118  26DE               	addwf	postinc2,f,c
  1582  00111A  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1583  00111E  0E00               	movlw	0
  1584  001120  22DD               	addwfc	postdec2,f,c
  1585  001122  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1586  001126  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1587  00112A  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  1588  00112E  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  1589  001132  0E00               	movlw	0
  1590  001134  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1591  001136  0EFF               	movlw	-1
  1592  001138  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  1593  00113A  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  1594  00113C  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  1595  00113E  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  1596  001140  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  1597  001142  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  1598  001144                     
  1599                           ; BSR set to: 0
  1600                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 852:             retur
      +                          n dtoa(fp, ll);
  1601  001144  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1602  001148  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1603  00114C  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  1604  001150  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1605  001154  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1606  001158  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1607  00115C  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1608  001160  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1609  001164  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1610  001168  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1611  00116C  ECAD  F005         	call	_dtoa	;wreg free
  1612  001170  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  1613  001174  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1614  001178  EF0F  F009         	goto	l1159
  1615  00117C                     l2238:
  1616                           
  1617                           ; BSR set to: 0
  1618                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1372:         if ((*fm
      +                          t)[0] == '%') {
  1619  00117C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1620  001180  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1621  001184  CFDE FFF6          	movff	postinc2,tblptrl
  1622  001188  CFDD FFF7          	movff	postdec2,tblptrh
  1623  00118C                     	if	0	;tblptru may be non-zero
  1624  00118C                     	endif
  1625  00118C                     	if	0	;tblptru may be non-zero
  1626  00118C                     	endif
  1627  00118C  0008               	tblrd		*
  1628  00118E  50F5               	movf	tablat,w,c
  1629  001190  0A25               	xorlw	37
  1630  001192  A4D8               	btfss	status,2,c
  1631  001194  EFCE  F008         	goto	u1781
  1632  001198  EFD0  F008         	goto	u1780
  1633  00119C                     u1781:
  1634  00119C  EFE7  F008         	goto	l2248
  1635  0011A0                     u1780:
  1636  0011A0                     
  1637                           ; BSR set to: 0
  1638                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1373:             ++*f
      +                          mt;
  1639  0011A0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1640  0011A4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1641  0011A8  2ADE               	incf	postinc2,f,c
  1642  0011AA  0E00               	movlw	0
  1643  0011AC  22DD               	addwfc	postdec2,f,c
  1644  0011AE                     
  1645                           ; BSR set to: 0
  1646                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1374:             fput
      +                          c((int)'%', fp);
  1647  0011AE  0E00               	movlw	0
  1648  0011B0  6E02               	movwf	(fputc@c+1)^0,c
  1649  0011B2  0E25               	movlw	37
  1650  0011B4  6E01               	movwf	fputc@c^0,c
  1651  0011B6  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1652  0011BA  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1653  0011BE  EC04  F00B         	call	_fputc	;wreg free
  1654  0011C2                     l2244:
  1655                           
  1656                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1375:             retu
      +                          rn 1;
  1657  0011C2  0E00               	movlw	0
  1658  0011C4  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1659  0011C6  0E01               	movlw	1
  1660  0011C8  6E40               	movwf	?_vfpfcnvrt^0,c
  1661  0011CA  EF0F  F009         	goto	l1159
  1662  0011CE                     l2248:
  1663                           
  1664                           ; BSR set to: 0
  1665                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1379:         ++*fmt;
  1666  0011CE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1667  0011D2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1668  0011D6  2ADE               	incf	postinc2,f,c
  1669  0011D8  0E00               	movlw	0
  1670  0011DA  22DD               	addwfc	postdec2,f,c
  1671  0011DC                     
  1672                           ; BSR set to: 0
  1673                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1380:         return 0
      +                          ;
  1674  0011DC  0E00               	movlw	0
  1675  0011DE  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1676  0011E0  0E00               	movlw	0
  1677  0011E2  6E40               	movwf	?_vfpfcnvrt^0,c
  1678  0011E4  EF0F  F009         	goto	l1159
  1679  0011E8                     l2254:
  1680                           
  1681                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1384:     fputc((int)(
      +                          *fmt)[0], fp);
  1682  0011E8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1683  0011EC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1684  0011F0  CFDE FFF6          	movff	postinc2,tblptrl
  1685  0011F4  CFDD FFF7          	movff	postdec2,tblptrh
  1686  0011F8                     	if	0	;tblptru may be non-zero
  1687  0011F8                     	endif
  1688  0011F8                     	if	0	;tblptru may be non-zero
  1689  0011F8                     	endif
  1690  0011F8  0008               	tblrd		*
  1691  0011FA  50F5               	movf	tablat,w,c
  1692  0011FC  6E01               	movwf	fputc@c^0,c
  1693  0011FE  6A02               	clrf	(fputc@c+1)^0,c
  1694  001200  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1695  001204  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1696  001208  EC04  F00B         	call	_fputc	;wreg free
  1697  00120C                     
  1698                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1699  00120C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1700  001210  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1701  001214  2ADE               	incf	postinc2,f,c
  1702  001216  0E00               	movlw	0
  1703  001218  22DD               	addwfc	postdec2,f,c
  1704  00121A  EFE1  F008         	goto	l2244
  1705  00121E                     l1159:
  1706  00121E  0012               	return		;funcret
  1707  001220                     __end_of_vfpfcnvrt:
  1708                           	callstack 0
  1709                           
  1710 ;; *************** function _dtoa *****************
  1711 ;; Defined at:
  1712 ;;		line 287 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c"
  1713 ;; Parameters:    Size  Location     Type
  1714 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1715 ;;		 -> sprintf@f(6), 
  1716 ;;  d               8   29[COMRAM] long long 
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;  n               8   53[COMRAM] long long 
  1719 ;;  i               2   61[COMRAM] int 
  1720 ;;  s               2   51[COMRAM] int 
  1721 ;;  w               2   49[COMRAM] int 
  1722 ;;  p               2   47[COMRAM] int 
  1723 ;; Return value:  Size  Location     Type
  1724 ;;                  2   27[COMRAM] int 
  1725 ;; Registers used:
  1726 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1732 ;;      Params:        10       0       0       0       0       0       0       0       0
  1733 ;;      Locals:        18       0       0       0       0       0       0       0       0
  1734 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1735 ;;      Totals:        36       0       0       0       0       0       0       0       0
  1736 ;;Total ram usage:       36 bytes
  1737 ;; Hardware stack levels used: 1
  1738 ;; Hardware stack levels required when called: 4
  1739 ;; This function calls:
  1740 ;;		___aodiv
  1741 ;;		___aomod
  1742 ;;		_abs
  1743 ;;		_pad
  1744 ;; This function is called by:
  1745 ;;		_vfpfcnvrt
  1746 ;; This function uses a non-reentrant model
  1747 ;;
  1748                           
  1749                           	psect	text4
  1750  000B5A                     __ptext4:
  1751                           	callstack 0
  1752  000B5A                     _dtoa:
  1753                           	callstack 23
  1754  000B5A                     
  1755                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 287: static int dtoa(F
      +                          ILE *fp, long long d);D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 2
      +                          88: {;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 289:     int i, p
      +                          , s, w;;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 290:     long l
      +                          ong n;;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 293:     n = d;
  1756  000B5A  C01E  F036         	movff	dtoa@d,dtoa@n
  1757  000B5E  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  1758  000B62  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  1759  000B66  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  1760  000B6A  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  1761  000B6E  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  1762  000B72  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  1763  000B76  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  1764  000B7A                     
  1765                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 294:     s = n < 0 ? 1
      +                           : 0;
  1766  000B7A  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  1767  000B7C  EFC2  F005         	goto	u1571
  1768  000B80  EFC5  F005         	goto	u1570
  1769  000B84                     u1571:
  1770  000B84  0E01               	movlw	1
  1771  000B86  EFC6  F005         	goto	u1580
  1772  000B8A                     u1570:
  1773  000B8A  0E00               	movlw	0
  1774  000B8C                     u1580:
  1775  000B8C  6E34               	movwf	dtoa@s^0,c
  1776  000B8E  6A35               	clrf	(dtoa@s+1)^0,c
  1777                           
  1778                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1779  000B90  5034               	movf	dtoa@s^0,w,c
  1780  000B92  1035               	iorwf	(dtoa@s+1)^0,w,c
  1781  000B94  B4D8               	btfsc	status,2,c
  1782  000B96  EFCF  F005         	goto	u1591
  1783  000B9A  EFD1  F005         	goto	u1590
  1784  000B9E                     u1591:
  1785  000B9E  EFE1  F005         	goto	l2134
  1786  000BA2                     u1590:
  1787  000BA2                     
  1788                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 296:         n = -n;
  1789  000BA2  1E3D               	comf	(dtoa@n+7)^0,f,c
  1790  000BA4  1E3C               	comf	(dtoa@n+6)^0,f,c
  1791  000BA6  1E3B               	comf	(dtoa@n+5)^0,f,c
  1792  000BA8  1E3A               	comf	(dtoa@n+4)^0,f,c
  1793  000BAA  1E39               	comf	(dtoa@n+3)^0,f,c
  1794  000BAC  1E38               	comf	(dtoa@n+2)^0,f,c
  1795  000BAE  1E37               	comf	(dtoa@n+1)^0,f,c
  1796  000BB0  6C36               	negf	dtoa@n^0,c
  1797  000BB2  0E00               	movlw	0
  1798  000BB4  2237               	addwfc	(dtoa@n+1)^0,f,c
  1799  000BB6  2238               	addwfc	(dtoa@n+2)^0,f,c
  1800  000BB8  2239               	addwfc	(dtoa@n+3)^0,f,c
  1801  000BBA  223A               	addwfc	(dtoa@n+4)^0,f,c
  1802  000BBC  223B               	addwfc	(dtoa@n+5)^0,f,c
  1803  000BBE  223C               	addwfc	(dtoa@n+6)^0,f,c
  1804  000BC0  223D               	addwfc	(dtoa@n+7)^0,f,c
  1805  000BC2                     l2134:
  1806                           
  1807                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 300:     if (!(prec < 
      +                          0)) {
  1808  000BC2  0100               	movlb	0	; () banked
  1809  000BC4  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1810  000BC6  EFE7  F005         	goto	u1601
  1811  000BCA  EFE9  F005         	goto	u1600
  1812  000BCE                     u1601:
  1813  000BCE  EFEA  F005         	goto	l2138
  1814  000BD2                     u1600:
  1815  000BD2                     
  1816                           ; BSR set to: 0
  1817                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 301:         flags &= 
      +                          ~(1 << 1);
  1818  000BD2  9366               	bcf	_flags& (0+255),1,b
  1819  000BD4                     l2138:
  1820                           
  1821                           ; BSR set to: 0
  1822                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 303:     p = (0 < prec
      +                          ) ? prec : 1;
  1823  000BD4  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1824  000BD6  EFF7  F005         	goto	u1610
  1825  000BDA  5165               	movf	(_prec+1)& (0+255),w,b
  1826  000BDC  E106               	bnz	u1611
  1827  000BDE  0564               	decf	_prec& (0+255),w,b
  1828  000BE0  B0D8               	btfsc	status,0,c
  1829  000BE2  EFF5  F005         	goto	u1611
  1830  000BE6  EFF7  F005         	goto	u1610
  1831  000BEA                     u1611:
  1832  000BEA  EFFD  F005         	goto	l1132
  1833  000BEE                     u1610:
  1834  000BEE                     
  1835                           ; BSR set to: 0
  1836  000BEE  0E00               	movlw	0
  1837  000BF0  6E31               	movwf	(dtoa@p+1)^0,c
  1838  000BF2  0E01               	movlw	1
  1839  000BF4  6E30               	movwf	dtoa@p^0,c
  1840  000BF6  EF01  F006         	goto	l1134
  1841  000BFA                     l1132:
  1842                           
  1843                           ; BSR set to: 0
  1844  000BFA  C064  F030         	movff	_prec,dtoa@p
  1845  000BFE  C065  F031         	movff	_prec+1,dtoa@p+1
  1846  000C02                     l1134:
  1847                           
  1848                           ; BSR set to: 0
  1849                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 304:     w = width;
  1850  000C02  C062  F032         	movff	_width,dtoa@w
  1851  000C06  C063  F033         	movff	_width+1,dtoa@w+1
  1852  000C0A                     
  1853                           ; BSR set to: 0
  1854                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 305:     if (s || (fla
      +                          gs & (1 << 2))) {
  1855  000C0A  5034               	movf	dtoa@s^0,w,c
  1856  000C0C  1035               	iorwf	(dtoa@s+1)^0,w,c
  1857  000C0E  A4D8               	btfss	status,2,c
  1858  000C10  EF0C  F006         	goto	u1621
  1859  000C14  EF0E  F006         	goto	u1620
  1860  000C18                     u1621:
  1861  000C18  EF15  F006         	goto	l2146
  1862  000C1C                     u1620:
  1863  000C1C                     
  1864                           ; BSR set to: 0
  1865  000C1C  A566               	btfss	_flags& (0+255),2,b
  1866  000C1E  EF13  F006         	goto	u1631
  1867  000C22  EF15  F006         	goto	u1630
  1868  000C26                     u1631:
  1869  000C26  EF18  F006         	goto	l2148
  1870  000C2A                     u1630:
  1871  000C2A                     l2146:
  1872                           
  1873                           ; BSR set to: 0
  1874                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 306:         --w;
  1875  000C2A  0632               	decf	dtoa@w^0,f,c
  1876  000C2C  A0D8               	btfss	status,0,c
  1877  000C2E  0633               	decf	(dtoa@w+1)^0,f,c
  1878  000C30                     l2148:
  1879                           
  1880                           ; BSR set to: 0
  1881                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 310:     i = sizeof(db
      +                          uf) - 1;
  1882  000C30  0E00               	movlw	0
  1883  000C32  6E3F               	movwf	(dtoa@i+1)^0,c
  1884  000C34  0E1F               	movlw	31
  1885  000C36  6E3E               	movwf	dtoa@i^0,c
  1886  000C38                     
  1887                           ; BSR set to: 0
  1888                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] = '\0
      +                          ';
  1889  000C38  0E00               	movlw	0
  1890  000C3A  6F8A               	movwf	(_dbuf+31)& (0+255),b
  1891                           
  1892                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 312:     while (!(i < 
      +                          1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1893  000C3C  EF9C  F006         	goto	l2162
  1894  000C40                     l2152:
  1895                           
  1896                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 313:         --i;
  1897  000C40  063E               	decf	dtoa@i^0,f,c
  1898  000C42  A0D8               	btfss	status,0,c
  1899  000C44  063F               	decf	(dtoa@i+1)^0,f,c
  1900  000C46                     
  1901                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 314:         dbuf[i] =
      +                           (char)((int)'0' + abs(n % 10));
  1902  000C46  0E6B               	movlw	low _dbuf
  1903  000C48  243E               	addwf	dtoa@i^0,w,c
  1904  000C4A  6ED9               	movwf	fsr2l,c
  1905  000C4C  0E00               	movlw	high _dbuf
  1906  000C4E  203F               	addwfc	(dtoa@i+1)^0,w,c
  1907  000C50  6EDA               	movwf	fsr2h,c
  1908  000C52  C036  F001         	movff	dtoa@n,___aomod@dividend
  1909  000C56  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1910  000C5A  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1911  000C5E  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1912  000C62  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1913  000C66  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1914  000C6A  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1915  000C6E  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1916  000C72  0E0A               	movlw	10
  1917  000C74  6E09               	movwf	___aomod@divisor^0,c
  1918  000C76  0E00               	movlw	0
  1919  000C78  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1920  000C7A  0E00               	movlw	0
  1921  000C7C  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1922  000C7E  0E00               	movlw	0
  1923  000C80  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1924  000C82  0E00               	movlw	0
  1925  000C84  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1926  000C86  0E00               	movlw	0
  1927  000C88  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1928  000C8A  0E00               	movlw	0
  1929  000C8C  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1930  000C8E  0E00               	movlw	0
  1931  000C90  6E10               	movwf	(___aomod@divisor+7)^0,c
  1932  000C92  ECD4  F009         	call	___aomod	;wreg free
  1933  000C96  C001  F026         	movff	?___aomod,??_dtoa
  1934  000C9A  C002  F027         	movff	?___aomod+1,??_dtoa+1
  1935  000C9E  C003  F028         	movff	?___aomod+2,??_dtoa+2
  1936  000CA2  C004  F029         	movff	?___aomod+3,??_dtoa+3
  1937  000CA6  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  1938  000CAA  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  1939  000CAE  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  1940  000CB2  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  1941  000CB6  C026  F013         	movff	??_dtoa,abs@a
  1942  000CBA  C028  F014         	movff	??_dtoa+2,abs@a+1
  1943  000CBE  ECE3  F00D         	call	_abs	;wreg free
  1944  000CC2  5013               	movf	?_abs^0,w,c
  1945  000CC4  0F30               	addlw	48
  1946  000CC6  6EDF               	movwf	indf2,c
  1947  000CC8                     
  1948                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 315:         --p;
  1949  000CC8  0630               	decf	dtoa@p^0,f,c
  1950  000CCA  A0D8               	btfss	status,0,c
  1951  000CCC  0631               	decf	(dtoa@p+1)^0,f,c
  1952  000CCE                     
  1953                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 316:         --w;
  1954  000CCE  0632               	decf	dtoa@w^0,f,c
  1955  000CD0  A0D8               	btfss	status,0,c
  1956  000CD2  0633               	decf	(dtoa@w+1)^0,f,c
  1957  000CD4                     
  1958                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 317:         n = n / 1
      +                          0;
  1959  000CD4  C036  F001         	movff	dtoa@n,___aodiv@dividend
  1960  000CD8  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1961  000CDC  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1962  000CE0  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1963  000CE4  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1964  000CE8  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1965  000CEC  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1966  000CF0  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1967  000CF4  0E0A               	movlw	10
  1968  000CF6  6E09               	movwf	___aodiv@divisor^0,c
  1969  000CF8  0E00               	movlw	0
  1970  000CFA  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1971  000CFC  0E00               	movlw	0
  1972  000CFE  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1973  000D00  0E00               	movlw	0
  1974  000D02  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1975  000D04  0E00               	movlw	0
  1976  000D06  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1977  000D08  0E00               	movlw	0
  1978  000D0A  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1979  000D0C  0E00               	movlw	0
  1980  000D0E  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1981  000D10  0E00               	movlw	0
  1982  000D12  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1983  000D14  EC10  F009         	call	___aodiv	;wreg free
  1984  000D18  C001  F036         	movff	?___aodiv,dtoa@n
  1985  000D1C  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  1986  000D20  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  1987  000D24  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  1988  000D28  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  1989  000D2C  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  1990  000D30  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  1991  000D34  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  1992  000D38                     l2162:
  1993                           
  1994                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 312:     while (!(i < 
      +                          1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1995  000D38  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  1996  000D3A  EFA7  F006         	goto	u1641
  1997  000D3E  503F               	movf	(dtoa@i+1)^0,w,c
  1998  000D40  E108               	bnz	u1640
  1999  000D42  043E               	decf	dtoa@i^0,w,c
  2000  000D44  A0D8               	btfss	status,0,c
  2001  000D46  EFA7  F006         	goto	u1641
  2002  000D4A  EFA9  F006         	goto	u1640
  2003  000D4E                     u1641:
  2004  000D4E  EFDA  F006         	goto	l2172
  2005  000D52                     u1640:
  2006  000D52  5036               	movf	dtoa@n^0,w,c
  2007  000D54  1037               	iorwf	(dtoa@n+1)^0,w,c
  2008  000D56  1038               	iorwf	(dtoa@n+2)^0,w,c
  2009  000D58  1039               	iorwf	(dtoa@n+3)^0,w,c
  2010  000D5A  103A               	iorwf	(dtoa@n+4)^0,w,c
  2011  000D5C  103B               	iorwf	(dtoa@n+5)^0,w,c
  2012  000D5E  103C               	iorwf	(dtoa@n+6)^0,w,c
  2013  000D60  103D               	iorwf	(dtoa@n+7)^0,w,c
  2014  000D62  A4D8               	btfss	status,2,c
  2015  000D64  EFB6  F006         	goto	u1651
  2016  000D68  EFB8  F006         	goto	u1650
  2017  000D6C                     u1651:
  2018  000D6C  EF20  F006         	goto	l2152
  2019  000D70                     u1650:
  2020  000D70  BE31               	btfsc	(dtoa@p+1)^0,7,c
  2021  000D72  EFC5  F006         	goto	u1660
  2022  000D76  5031               	movf	(dtoa@p+1)^0,w,c
  2023  000D78  E106               	bnz	u1661
  2024  000D7A  0430               	decf	dtoa@p^0,w,c
  2025  000D7C  B0D8               	btfsc	status,0,c
  2026  000D7E  EFC3  F006         	goto	u1661
  2027  000D82  EFC5  F006         	goto	u1660
  2028  000D86                     u1661:
  2029  000D86  EF20  F006         	goto	l2152
  2030  000D8A                     u1660:
  2031  000D8A  BE33               	btfsc	(dtoa@w+1)^0,7,c
  2032  000D8C  EFD0  F006         	goto	u1671
  2033  000D90  5033               	movf	(dtoa@w+1)^0,w,c
  2034  000D92  E108               	bnz	u1670
  2035  000D94  0432               	decf	dtoa@w^0,w,c
  2036  000D96  A0D8               	btfss	status,0,c
  2037  000D98  EFD0  F006         	goto	u1671
  2038  000D9C  EFD2  F006         	goto	u1670
  2039  000DA0                     u1671:
  2040  000DA0  EFDA  F006         	goto	l2172
  2041  000DA4                     u1670:
  2042  000DA4  0100               	movlb	0	; () banked
  2043  000DA6  B366               	btfsc	_flags& (0+255),1,b
  2044  000DA8  EFD8  F006         	goto	u1681
  2045  000DAC  EFDA  F006         	goto	u1680
  2046  000DB0                     u1681:
  2047  000DB0  EF20  F006         	goto	l2152
  2048  000DB4                     u1680:
  2049  000DB4                     l2172:
  2050                           
  2051                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 321:     if (s || (fla
      +                          gs & (1 << 2))) {
  2052  000DB4  5034               	movf	dtoa@s^0,w,c
  2053  000DB6  1035               	iorwf	(dtoa@s+1)^0,w,c
  2054  000DB8  A4D8               	btfss	status,2,c
  2055  000DBA  EFE1  F006         	goto	u1691
  2056  000DBE  EFE3  F006         	goto	u1690
  2057  000DC2                     u1691:
  2058  000DC2  EFEB  F006         	goto	l2176
  2059  000DC6                     u1690:
  2060  000DC6  0100               	movlb	0	; () banked
  2061  000DC8  A566               	btfss	_flags& (0+255),2,b
  2062  000DCA  EFE9  F006         	goto	u1701
  2063  000DCE  EFEB  F006         	goto	u1700
  2064  000DD2                     u1701:
  2065  000DD2  EF09  F007         	goto	l2186
  2066  000DD6                     u1700:
  2067  000DD6                     l2176:
  2068                           
  2069                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 322:         --i;
  2070  000DD6  063E               	decf	dtoa@i^0,f,c
  2071  000DD8  A0D8               	btfss	status,0,c
  2072  000DDA  063F               	decf	(dtoa@i+1)^0,f,c
  2073  000DDC                     
  2074                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 323:         dbuf[i] =
      +                           s ? '-' : '+';
  2075  000DDC  5034               	movf	dtoa@s^0,w,c
  2076  000DDE  1035               	iorwf	(dtoa@s+1)^0,w,c
  2077  000DE0  A4D8               	btfss	status,2,c
  2078  000DE2  EFF5  F006         	goto	u1711
  2079  000DE6  EFF7  F006         	goto	u1710
  2080  000DEA                     u1711:
  2081  000DEA  EFFD  F006         	goto	l2182
  2082  000DEE                     u1710:
  2083  000DEE  0E00               	movlw	0
  2084  000DF0  6E2F               	movwf	(_dtoa$1046+1)^0,c
  2085  000DF2  0E2B               	movlw	43
  2086  000DF4  6E2E               	movwf	_dtoa$1046^0,c
  2087  000DF6  EF01  F007         	goto	l2184
  2088  000DFA                     l2182:
  2089  000DFA  0E00               	movlw	0
  2090  000DFC  6E2F               	movwf	(_dtoa$1046+1)^0,c
  2091  000DFE  0E2D               	movlw	45
  2092  000E00  6E2E               	movwf	_dtoa$1046^0,c
  2093  000E02                     l2184:
  2094  000E02  0E6B               	movlw	low _dbuf
  2095  000E04  243E               	addwf	dtoa@i^0,w,c
  2096  000E06  6ED9               	movwf	fsr2l,c
  2097  000E08  0E00               	movlw	high _dbuf
  2098  000E0A  203F               	addwfc	(dtoa@i+1)^0,w,c
  2099  000E0C  6EDA               	movwf	fsr2h,c
  2100  000E0E  C02E  FFDF         	movff	_dtoa$1046,indf2
  2101  000E12                     l2186:
  2102                           
  2103                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 327:     return pad(fp
      +                          , &dbuf[i], w);
  2104  000E12  C01C  F011         	movff	dtoa@fp,pad@fp
  2105  000E16  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  2106  000E1A  0E6B               	movlw	low _dbuf
  2107  000E1C  243E               	addwf	dtoa@i^0,w,c
  2108  000E1E  6E13               	movwf	pad@buf^0,c
  2109  000E20  0E00               	movlw	high _dbuf
  2110  000E22  203F               	addwfc	(dtoa@i+1)^0,w,c
  2111  000E24  6E14               	movwf	(pad@buf+1)^0,c
  2112  000E26  C032  F015         	movff	dtoa@w,pad@p
  2113  000E2A  C033  F016         	movff	dtoa@w+1,pad@p+1
  2114  000E2E  EC69  F00B         	call	_pad	;wreg free
  2115  000E32  C011  F01C         	movff	?_pad,?_dtoa
  2116  000E36  C012  F01D         	movff	?_pad+1,?_dtoa+1
  2117  000E3A  0012               	return		;funcret
  2118  000E3C                     __end_of_dtoa:
  2119                           	callstack 0
  2120                           
  2121 ;; *************** function _pad *****************
  2122 ;; Defined at:
  2123 ;;		line 72 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2126 ;;		 -> sprintf@f(6), 
  2127 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2128 ;;		 -> dbuf(32), 
  2129 ;;  p               2   20[COMRAM] int 
  2130 ;; Auto vars:     Size  Location     Type
  2131 ;;  w               2   25[COMRAM] int 
  2132 ;;  i               2   23[COMRAM] int 
  2133 ;; Return value:  Size  Location     Type
  2134 ;;                  2   16[COMRAM] int 
  2135 ;; Registers used:
  2136 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2137 ;; Tracked objects:
  2138 ;;		On entry : 0/0
  2139 ;;		On exit  : 0/0
  2140 ;;		Unchanged: 0/0
  2141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2142 ;;      Params:         6       0       0       0       0       0       0       0       0
  2143 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2144 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2145 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2146 ;;Total ram usage:       11 bytes
  2147 ;; Hardware stack levels used: 1
  2148 ;; Hardware stack levels required when called: 3
  2149 ;; This function calls:
  2150 ;;		_fputc
  2151 ;;		_fputs
  2152 ;;		_strlen
  2153 ;; This function is called by:
  2154 ;;		_dtoa
  2155 ;; This function uses a non-reentrant model
  2156 ;;
  2157                           
  2158                           	psect	text5
  2159  0016D2                     __ptext5:
  2160                           	callstack 0
  2161  0016D2                     _pad:
  2162                           	callstack 23
  2163  0016D2                     
  2164                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 72: static int pad(FIL
      +                          E *fp, char *buf, int p);D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c
      +                          : 73: {;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 74:     int i, 
      +                          w;;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 77:     if (flags & 
      +                          (1 << 0)) {
  2165  0016D2  0100               	movlb	0	; () banked
  2166  0016D4  A166               	btfss	_flags& (0+255),0,b
  2167  0016D6  EF6F  F00B         	goto	u1521
  2168  0016DA  EF71  F00B         	goto	u1520
  2169  0016DE                     u1521:
  2170  0016DE  EF7B  F00B         	goto	l2086
  2171  0016E2                     u1520:
  2172  0016E2                     
  2173                           ; BSR set to: 0
  2174                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 78:         fputs((con
      +                          st char *)buf, fp);
  2175  0016E2  C013  F00A         	movff	pad@buf,fputs@s
  2176  0016E6  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2177  0016EA  C011  F00C         	movff	pad@fp,fputs@fp
  2178  0016EE  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2179  0016F2  ECC1  F00D         	call	_fputs	;wreg free
  2180  0016F6                     l2086:
  2181                           
  2182                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 82:     w = (p < 0) ? 
      +                          0 : p;
  2183  0016F6  BE16               	btfsc	(pad@p+1)^0,7,c
  2184  0016F8  EF80  F00B         	goto	u1531
  2185  0016FC  EF82  F00B         	goto	u1530
  2186  001700                     u1531:
  2187  001700  EF88  F00B         	goto	l2090
  2188  001704                     u1530:
  2189  001704  C015  F01A         	movff	pad@p,pad@w
  2190  001708  C016  F01B         	movff	pad@p+1,pad@w+1
  2191  00170C  EF8C  F00B         	goto	l1121
  2192  001710                     l2090:
  2193  001710  0E00               	movlw	0
  2194  001712  6E1B               	movwf	(pad@w+1)^0,c
  2195  001714  0E00               	movlw	0
  2196  001716  6E1A               	movwf	pad@w^0,c
  2197  001718                     l1121:
  2198                           
  2199                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2200  001718  0E00               	movlw	0
  2201  00171A  6E19               	movwf	(pad@i+1)^0,c
  2202  00171C  0E00               	movlw	0
  2203  00171E  6E18               	movwf	pad@i^0,c
  2204                           
  2205                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 84:     while (i < w) 
      +                          {
  2206  001720  EF9E  F00B         	goto	l2096
  2207  001724                     l2092:
  2208                           
  2209                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 85:         fputc(' ',
      +                           fp);
  2210  001724  0E00               	movlw	0
  2211  001726  6E02               	movwf	(fputc@c+1)^0,c
  2212  001728  0E20               	movlw	32
  2213  00172A  6E01               	movwf	fputc@c^0,c
  2214  00172C  C011  F003         	movff	pad@fp,fputc@fp
  2215  001730  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2216  001734  EC04  F00B         	call	_fputc	;wreg free
  2217  001738                     
  2218                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2219  001738  4A18               	infsnz	pad@i^0,f,c
  2220  00173A  2A19               	incf	(pad@i+1)^0,f,c
  2221  00173C                     l2096:
  2222                           
  2223                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 84:     while (i < w) 
      +                          {
  2224  00173C  501A               	movf	pad@w^0,w,c
  2225  00173E  5C18               	subwf	pad@i^0,w,c
  2226  001740  5019               	movf	(pad@i+1)^0,w,c
  2227  001742  0A80               	xorlw	128
  2228  001744  6E17               	movwf	??_pad^0,c
  2229  001746  501B               	movf	(pad@w+1)^0,w,c
  2230  001748  0A80               	xorlw	128
  2231  00174A  5817               	subwfb	??_pad^0,w,c
  2232  00174C  A0D8               	btfss	status,0,c
  2233  00174E  EFAB  F00B         	goto	u1541
  2234  001752  EFAD  F00B         	goto	u1540
  2235  001756                     u1541:
  2236  001756  EF92  F00B         	goto	l2092
  2237  00175A                     u1540:
  2238  00175A                     
  2239                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 90:     if (!(flags & 
      +                          (1 << 0))) {
  2240  00175A  0100               	movlb	0	; () banked
  2241  00175C  B166               	btfsc	_flags& (0+255),0,b
  2242  00175E  EFB3  F00B         	goto	u1551
  2243  001762  EFB5  F00B         	goto	u1550
  2244  001766                     u1551:
  2245  001766  EFBF  F00B         	goto	l2100
  2246  00176A                     u1550:
  2247  00176A                     
  2248                           ; BSR set to: 0
  2249                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 91:         fputs((con
      +                          st char *)buf, fp);
  2250  00176A  C013  F00A         	movff	pad@buf,fputs@s
  2251  00176E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2252  001772  C011  F00C         	movff	pad@fp,fputs@fp
  2253  001776  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2254  00177A  ECC1  F00D         	call	_fputs	;wreg free
  2255  00177E                     l2100:
  2256                           
  2257                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 94:     return (int)(s
      +                          trlen(buf) + (size_t)w);
  2258  00177E  C013  F001         	movff	pad@buf,strlen@s
  2259  001782  C014  F002         	movff	pad@buf+1,strlen@s+1
  2260  001786  EC5D  F00E         	call	_strlen	;wreg free
  2261  00178A  501A               	movf	pad@w^0,w,c
  2262  00178C  2401               	addwf	?_strlen^0,w,c
  2263  00178E  6E11               	movwf	?_pad^0,c
  2264  001790  501B               	movf	(pad@w+1)^0,w,c
  2265  001792  2002               	addwfc	(?_strlen+1)^0,w,c
  2266  001794  6E12               	movwf	(?_pad+1)^0,c
  2267  001796  0012               	return		;funcret
  2268  001798                     __end_of_pad:
  2269                           	callstack 0
  2270                           
  2271 ;; *************** function _strlen *****************
  2272 ;; Defined at:
  2273 ;;		line 5 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\strlen.c"
  2274 ;; Parameters:    Size  Location     Type
  2275 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2276 ;;		 -> dbuf(32), 
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2279 ;;		 -> dbuf(32), 
  2280 ;; Return value:  Size  Location     Type
  2281 ;;                  2    0[COMRAM] unsigned int 
  2282 ;; Registers used:
  2283 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2284 ;; Tracked objects:
  2285 ;;		On entry : 0/0
  2286 ;;		On exit  : 0/0
  2287 ;;		Unchanged: 0/0
  2288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2289 ;;      Params:         2       0       0       0       0       0       0       0       0
  2290 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2291 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2292 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2293 ;;Total ram usage:        4 bytes
  2294 ;; Hardware stack levels used: 1
  2295 ;; This function calls:
  2296 ;;		Nothing
  2297 ;; This function is called by:
  2298 ;;		_pad
  2299 ;; This function uses a non-reentrant model
  2300 ;;
  2301                           
  2302                           	psect	text6
  2303  001CBA                     __ptext6:
  2304                           	callstack 0
  2305  001CBA                     _strlen:
  2306                           	callstack 25
  2307  001CBA  C001  F003         	movff	strlen@s,strlen@a
  2308  001CBE  C002  F004         	movff	strlen@s+1,strlen@a+1
  2309  001CC2  EF65  F00E         	goto	l1996
  2310  001CC6                     l1994:
  2311  001CC6  4A01               	infsnz	strlen@s^0,f,c
  2312  001CC8  2A02               	incf	(strlen@s+1)^0,f,c
  2313  001CCA                     l1996:
  2314  001CCA  C001  FFD9         	movff	strlen@s,fsr2l
  2315  001CCE  C002  FFDA         	movff	strlen@s+1,fsr2h
  2316  001CD2  50DF               	movf	indf2,w,c
  2317  001CD4  A4D8               	btfss	status,2,c
  2318  001CD6  EF6F  F00E         	goto	u1381
  2319  001CDA  EF71  F00E         	goto	u1380
  2320  001CDE                     u1381:
  2321  001CDE  EF63  F00E         	goto	l1994
  2322  001CE2                     u1380:
  2323  001CE2  5003               	movf	strlen@a^0,w,c
  2324  001CE4  5C01               	subwf	strlen@s^0,w,c
  2325  001CE6  6E01               	movwf	?_strlen^0,c
  2326  001CE8  5004               	movf	(strlen@a+1)^0,w,c
  2327  001CEA  5802               	subwfb	(strlen@s+1)^0,w,c
  2328  001CEC  6E02               	movwf	(?_strlen+1)^0,c
  2329  001CEE  0012               	return		;funcret
  2330  001CF0                     __end_of_strlen:
  2331                           	callstack 0
  2332                           
  2333 ;; *************** function _fputs *****************
  2334 ;; Defined at:
  2335 ;;		line 8 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\nf_fputs.c"
  2336 ;; Parameters:    Size  Location     Type
  2337 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2338 ;;		 -> dbuf(32), 
  2339 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2340 ;;		 -> sprintf@f(6), 
  2341 ;; Auto vars:     Size  Location     Type
  2342 ;;  i               2   14[COMRAM] int 
  2343 ;;  c               1   13[COMRAM] unsigned char 
  2344 ;; Return value:  Size  Location     Type
  2345 ;;                  2    9[COMRAM] int 
  2346 ;; Registers used:
  2347 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2348 ;; Tracked objects:
  2349 ;;		On entry : 0/0
  2350 ;;		On exit  : 0/0
  2351 ;;		Unchanged: 0/0
  2352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2353 ;;      Params:         4       0       0       0       0       0       0       0       0
  2354 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2355 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2356 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2357 ;;Total ram usage:        7 bytes
  2358 ;; Hardware stack levels used: 1
  2359 ;; Hardware stack levels required when called: 2
  2360 ;; This function calls:
  2361 ;;		_fputc
  2362 ;; This function is called by:
  2363 ;;		_pad
  2364 ;; This function uses a non-reentrant model
  2365 ;;
  2366                           
  2367                           	psect	text7
  2368  001B82                     __ptext7:
  2369                           	callstack 0
  2370  001B82                     _fputs:
  2371                           	callstack 23
  2372  001B82  0E00               	movlw	0
  2373  001B84  6E10               	movwf	(fputs@i+1)^0,c
  2374  001B86  0E00               	movlw	0
  2375  001B88  6E0F               	movwf	fputs@i^0,c
  2376  001B8A  EFD2  F00D         	goto	l1990
  2377  001B8E                     l1986:
  2378  001B8E  C00E  F001         	movff	fputs@c,fputc@c
  2379  001B92  6A02               	clrf	(fputc@c+1)^0,c
  2380  001B94  C00C  F003         	movff	fputs@fp,fputc@fp
  2381  001B98  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2382  001B9C  EC04  F00B         	call	_fputc	;wreg free
  2383  001BA0  4A0F               	infsnz	fputs@i^0,f,c
  2384  001BA2  2A10               	incf	(fputs@i+1)^0,f,c
  2385  001BA4                     l1990:
  2386  001BA4  500F               	movf	fputs@i^0,w,c
  2387  001BA6  240A               	addwf	fputs@s^0,w,c
  2388  001BA8  6ED9               	movwf	fsr2l,c
  2389  001BAA  5010               	movf	(fputs@i+1)^0,w,c
  2390  001BAC  200B               	addwfc	(fputs@s+1)^0,w,c
  2391  001BAE  6EDA               	movwf	fsr2h,c
  2392  001BB0  50DF               	movf	indf2,w,c
  2393  001BB2  6E0E               	movwf	fputs@c^0,c
  2394  001BB4  500E               	movf	fputs@c^0,w,c
  2395  001BB6  A4D8               	btfss	status,2,c
  2396  001BB8  EFE0  F00D         	goto	u1371
  2397  001BBC  EFE2  F00D         	goto	u1370
  2398  001BC0                     u1371:
  2399  001BC0  EFC7  F00D         	goto	l1986
  2400  001BC4                     u1370:
  2401  001BC4  0012               	return		;funcret
  2402  001BC6                     __end_of_fputs:
  2403                           	callstack 0
  2404                           
  2405 ;; *************** function _fputc *****************
  2406 ;; Defined at:
  2407 ;;		line 8 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\nf_fputc.c"
  2408 ;; Parameters:    Size  Location     Type
  2409 ;;  c               2    0[COMRAM] int 
  2410 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2411 ;;		 -> sprintf@f(6), 
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;		None
  2414 ;; Return value:  Size  Location     Type
  2415 ;;                  2    0[COMRAM] int 
  2416 ;; Registers used:
  2417 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2418 ;; Tracked objects:
  2419 ;;		On entry : 0/0
  2420 ;;		On exit  : 0/0
  2421 ;;		Unchanged: 0/0
  2422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2423 ;;      Params:         4       0       0       0       0       0       0       0       0
  2424 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2425 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2426 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2427 ;;Total ram usage:        9 bytes
  2428 ;; Hardware stack levels used: 1
  2429 ;; Hardware stack levels required when called: 1
  2430 ;; This function calls:
  2431 ;;		_putch
  2432 ;; This function is called by:
  2433 ;;		_pad
  2434 ;;		_vfpfcnvrt
  2435 ;;		_fputs
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           	psect	text8
  2440  001608                     __ptext8:
  2441                           	callstack 0
  2442  001608                     _fputc:
  2443                           	callstack 26
  2444  001608  5003               	movf	fputc@fp^0,w,c
  2445  00160A  1004               	iorwf	(fputc@fp+1)^0,w,c
  2446  00160C  B4D8               	btfsc	status,2,c
  2447  00160E  EF0B  F00B         	goto	u1331
  2448  001612  EF0D  F00B         	goto	u1330
  2449  001616                     u1331:
  2450  001616  EF16  F00B         	goto	l1974
  2451  00161A                     u1330:
  2452  00161A  5003               	movf	fputc@fp^0,w,c
  2453  00161C  1004               	iorwf	(fputc@fp+1)^0,w,c
  2454  00161E  A4D8               	btfss	status,2,c
  2455  001620  EF14  F00B         	goto	u1341
  2456  001624  EF16  F00B         	goto	u1340
  2457  001628                     u1341:
  2458  001628  EF1B  F00B         	goto	l1976
  2459  00162C                     u1340:
  2460  00162C                     l1974:
  2461  00162C  5001               	movf	fputc@c^0,w,c
  2462  00162E  ECFA  F00E         	call	_putch
  2463  001632  EF68  F00B         	goto	l1185
  2464  001636                     l1976:
  2465  001636  EE20 F004          	lfsr	2,4
  2466  00163A  5003               	movf	fputc@fp^0,w,c
  2467  00163C  26D9               	addwf	fsr2l,f,c
  2468  00163E  5004               	movf	(fputc@fp+1)^0,w,c
  2469  001640  22DA               	addwfc	fsr2h,f,c
  2470  001642  50DE               	movf	postinc2,w,c
  2471  001644  10DE               	iorwf	postinc2,w,c
  2472  001646  B4D8               	btfsc	status,2,c
  2473  001648  EF28  F00B         	goto	u1351
  2474  00164C  EF2A  F00B         	goto	u1350
  2475  001650                     u1351:
  2476  001650  EF45  F00B         	goto	l1980
  2477  001654                     u1350:
  2478  001654  EE20 F004          	lfsr	2,4
  2479  001658  5003               	movf	fputc@fp^0,w,c
  2480  00165A  26D9               	addwf	fsr2l,f,c
  2481  00165C  5004               	movf	(fputc@fp+1)^0,w,c
  2482  00165E  22DA               	addwfc	fsr2h,f,c
  2483  001660  EE10 F002          	lfsr	1,2
  2484  001664  5003               	movf	fputc@fp^0,w,c
  2485  001666  26E1               	addwf	fsr1l,f,c
  2486  001668  5004               	movf	(fputc@fp+1)^0,w,c
  2487  00166A  22E2               	addwfc	fsr1h,f,c
  2488  00166C  50DE               	movf	postinc2,w,c
  2489  00166E  5CE6               	subwf	postinc1,w,c
  2490  001670  50E6               	movf	postinc1,w,c
  2491  001672  0A80               	xorlw	128
  2492  001674  6E09               	movwf	(??_fputc+4)^0,c
  2493  001676  50DE               	movf	postinc2,w,c
  2494  001678  0A80               	xorlw	128
  2495  00167A  5809               	subwfb	(??_fputc+4)^0,w,c
  2496  00167C  B0D8               	btfsc	status,0,c
  2497  00167E  EF43  F00B         	goto	u1361
  2498  001682  EF45  F00B         	goto	u1360
  2499  001686                     u1361:
  2500  001686  EF68  F00B         	goto	l1185
  2501  00168A                     u1360:
  2502  00168A                     l1980:
  2503  00168A  EE20 F002          	lfsr	2,2
  2504  00168E  5003               	movf	fputc@fp^0,w,c
  2505  001690  26D9               	addwf	fsr2l,f,c
  2506  001692  5004               	movf	(fputc@fp+1)^0,w,c
  2507  001694  22DA               	addwfc	fsr2h,f,c
  2508  001696  CFDE F005          	movff	postinc2,??_fputc
  2509  00169A  CFDD F006          	movff	postdec2,??_fputc+1
  2510  00169E  C003  FFD9         	movff	fputc@fp,fsr2l
  2511  0016A2  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2512  0016A6  CFDE F007          	movff	postinc2,??_fputc+2
  2513  0016AA  CFDD F008          	movff	postdec2,??_fputc+3
  2514  0016AE  5005               	movf	??_fputc^0,w,c
  2515  0016B0  2407               	addwf	(??_fputc+2)^0,w,c
  2516  0016B2  6ED9               	movwf	fsr2l,c
  2517  0016B4  5006               	movf	(??_fputc+1)^0,w,c
  2518  0016B6  2008               	addwfc	(??_fputc+3)^0,w,c
  2519  0016B8  6EDA               	movwf	fsr2h,c
  2520  0016BA  C001  FFDF         	movff	fputc@c,indf2
  2521  0016BE  EE20 F002          	lfsr	2,2
  2522  0016C2  5003               	movf	fputc@fp^0,w,c
  2523  0016C4  26D9               	addwf	fsr2l,f,c
  2524  0016C6  5004               	movf	(fputc@fp+1)^0,w,c
  2525  0016C8  22DA               	addwfc	fsr2h,f,c
  2526  0016CA  2ADE               	incf	postinc2,f,c
  2527  0016CC  0E00               	movlw	0
  2528  0016CE  22DD               	addwfc	postdec2,f,c
  2529  0016D0                     l1185:
  2530  0016D0  0012               	return		;funcret
  2531  0016D2                     __end_of_fputc:
  2532                           	callstack 0
  2533                           
  2534 ;; *************** function _putch *****************
  2535 ;; Defined at:
  2536 ;;		line 7 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\putch.c"
  2537 ;; Parameters:    Size  Location     Type
  2538 ;;  c               1    wreg     unsigned char 
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;  c               1    0[COMRAM] unsigned char 
  2541 ;; Return value:  Size  Location     Type
  2542 ;;                  1    wreg      void 
  2543 ;; Registers used:
  2544 ;;		wreg
  2545 ;; Tracked objects:
  2546 ;;		On entry : 0/0
  2547 ;;		On exit  : 0/0
  2548 ;;		Unchanged: 0/0
  2549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2550 ;;      Params:         0       0       0       0       0       0       0       0       0
  2551 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2552 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2553 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2554 ;;Total ram usage:        0 bytes
  2555 ;; Hardware stack levels used: 1
  2556 ;; This function calls:
  2557 ;;		Nothing
  2558 ;; This function is called by:
  2559 ;;		_fputc
  2560 ;; This function uses a non-reentrant model
  2561 ;;
  2562                           
  2563                           	psect	text9
  2564  001DF4                     __ptext9:
  2565                           	callstack 0
  2566  001DF4                     _putch:
  2567                           	callstack 26
  2568  001DF4  0012               	return		;funcret
  2569  001DF6                     __end_of_putch:
  2570                           	callstack 0
  2571                           
  2572 ;; *************** function _abs *****************
  2573 ;; Defined at:
  2574 ;;		line 1 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\abs.c"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;  a               2   18[COMRAM] int 
  2577 ;; Auto vars:     Size  Location     Type
  2578 ;;		None
  2579 ;; Return value:  Size  Location     Type
  2580 ;;                  2   18[COMRAM] int 
  2581 ;; Registers used:
  2582 ;;		wreg, status,2, status,0
  2583 ;; Tracked objects:
  2584 ;;		On entry : 0/0
  2585 ;;		On exit  : 0/0
  2586 ;;		Unchanged: 0/0
  2587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2588 ;;      Params:         2       0       0       0       0       0       0       0       0
  2589 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2590 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2591 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2592 ;;Total ram usage:        4 bytes
  2593 ;; Hardware stack levels used: 1
  2594 ;; This function calls:
  2595 ;;		Nothing
  2596 ;; This function is called by:
  2597 ;;		_dtoa
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601                           	psect	text10
  2602  001BC6                     __ptext10:
  2603                           	callstack 0
  2604  001BC6                     _abs:
  2605                           	callstack 26
  2606  001BC6  BE14               	btfsc	(abs@a+1)^0,7,c
  2607  001BC8  EFF0  F00D         	goto	u1560
  2608  001BCC  5014               	movf	(abs@a+1)^0,w,c
  2609  001BCE  E106               	bnz	u1561
  2610  001BD0  0413               	decf	abs@a^0,w,c
  2611  001BD2  B0D8               	btfsc	status,0,c
  2612  001BD4  EFEE  F00D         	goto	u1561
  2613  001BD8  EFF0  F00D         	goto	u1560
  2614  001BDC                     u1561:
  2615  001BDC  EFFE  F00D         	goto	l1170
  2616  001BE0                     u1560:
  2617  001BE0  C013  F015         	movff	abs@a,??_abs
  2618  001BE4  C014  F016         	movff	abs@a+1,??_abs+1
  2619  001BE8  1E15               	comf	??_abs^0,f,c
  2620  001BEA  1E16               	comf	(??_abs+1)^0,f,c
  2621  001BEC  4A15               	infsnz	??_abs^0,f,c
  2622  001BEE  2A16               	incf	(??_abs+1)^0,f,c
  2623  001BF0  C015  F013         	movff	??_abs,?_abs
  2624  001BF4  C016  F014         	movff	??_abs+1,?_abs+1
  2625  001BF8  EF02  F00E         	goto	l1173
  2626  001BFC                     l1170:
  2627  001BFC  C013  F013         	movff	abs@a,?_abs
  2628  001C00  C014  F014         	movff	abs@a+1,?_abs+1
  2629  001C04                     l1173:
  2630  001C04  0012               	return		;funcret
  2631  001C06                     __end_of_abs:
  2632                           	callstack 0
  2633                           
  2634 ;; *************** function ___aomod *****************
  2635 ;; Defined at:
  2636 ;;		line 9 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\aomod.c"
  2637 ;; Parameters:    Size  Location     Type
  2638 ;;  dividend        8    0[COMRAM] long long 
  2639 ;;  divisor         8    8[COMRAM] long long 
  2640 ;; Auto vars:     Size  Location     Type
  2641 ;;  sign            1   17[COMRAM] unsigned char 
  2642 ;;  counter         1   16[COMRAM] unsigned char 
  2643 ;; Return value:  Size  Location     Type
  2644 ;;                  8    0[COMRAM] long long 
  2645 ;; Registers used:
  2646 ;;		wreg, status,2, status,0
  2647 ;; Tracked objects:
  2648 ;;		On entry : 0/0
  2649 ;;		On exit  : 0/0
  2650 ;;		Unchanged: 0/0
  2651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2652 ;;      Params:        16       0       0       0       0       0       0       0       0
  2653 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2654 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2655 ;;      Totals:        18       0       0       0       0       0       0       0       0
  2656 ;;Total ram usage:       18 bytes
  2657 ;; Hardware stack levels used: 1
  2658 ;; This function calls:
  2659 ;;		Nothing
  2660 ;; This function is called by:
  2661 ;;		_dtoa
  2662 ;; This function uses a non-reentrant model
  2663 ;;
  2664                           
  2665                           	psect	text11
  2666  0013A8                     __ptext11:
  2667                           	callstack 0
  2668  0013A8                     ___aomod:
  2669                           	callstack 26
  2670  0013A8  0E00               	movlw	0
  2671  0013AA  6E12               	movwf	___aomod@sign^0,c
  2672  0013AC  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2673  0013AE  EFDD  F009         	goto	u1460
  2674  0013B2  EFDB  F009         	goto	u1461
  2675  0013B6                     u1461:
  2676  0013B6  EFEF  F009         	goto	l2054
  2677  0013BA                     u1460:
  2678  0013BA  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2679  0013BC  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2680  0013BE  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2681  0013C0  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2682  0013C2  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2683  0013C4  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2684  0013C6  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2685  0013C8  6C01               	negf	___aomod@dividend^0,c
  2686  0013CA  0E00               	movlw	0
  2687  0013CC  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2688  0013CE  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2689  0013D0  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2690  0013D2  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2691  0013D4  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2692  0013D6  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2693  0013D8  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2694  0013DA  0E01               	movlw	1
  2695  0013DC  6E12               	movwf	___aomod@sign^0,c
  2696  0013DE                     l2054:
  2697  0013DE  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2698  0013E0  EFF6  F009         	goto	u1470
  2699  0013E4  EFF4  F009         	goto	u1471
  2700  0013E8                     u1471:
  2701  0013E8  EF06  F00A         	goto	l2058
  2702  0013EC                     u1470:
  2703  0013EC  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2704  0013EE  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2705  0013F0  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2706  0013F2  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2707  0013F4  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2708  0013F6  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2709  0013F8  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2710  0013FA  6C09               	negf	___aomod@divisor^0,c
  2711  0013FC  0E00               	movlw	0
  2712  0013FE  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2713  001400  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2714  001402  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2715  001404  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2716  001406  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2717  001408  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2718  00140A  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2719  00140C                     l2058:
  2720  00140C  5009               	movf	___aomod@divisor^0,w,c
  2721  00140E  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2722  001410  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2723  001412  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2724  001414  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2725  001416  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2726  001418  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2727  00141A  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2728  00141C  B4D8               	btfsc	status,2,c
  2729  00141E  EF13  F00A         	goto	u1481
  2730  001422  EF15  F00A         	goto	u1480
  2731  001426                     u1481:
  2732  001426  EF5D  F00A         	goto	l2074
  2733  00142A                     u1480:
  2734  00142A  0E01               	movlw	1
  2735  00142C  6E11               	movwf	___aomod@counter^0,c
  2736  00142E  EF23  F00A         	goto	l2064
  2737  001432                     l2062:
  2738  001432  90D8               	bcf	status,0,c
  2739  001434  3609               	rlcf	___aomod@divisor^0,f,c
  2740  001436  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2741  001438  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2742  00143A  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2743  00143C  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2744  00143E  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2745  001440  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2746  001442  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2747  001444  2A11               	incf	___aomod@counter^0,f,c
  2748  001446                     l2064:
  2749  001446  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2750  001448  EF28  F00A         	goto	u1491
  2751  00144C  EF2A  F00A         	goto	u1490
  2752  001450                     u1491:
  2753  001450  EF19  F00A         	goto	l2062
  2754  001454                     u1490:
  2755  001454                     l2066:
  2756  001454  5009               	movf	___aomod@divisor^0,w,c
  2757  001456  5C01               	subwf	___aomod@dividend^0,w,c
  2758  001458  500A               	movf	(___aomod@divisor+1)^0,w,c
  2759  00145A  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2760  00145C  500B               	movf	(___aomod@divisor+2)^0,w,c
  2761  00145E  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2762  001460  500C               	movf	(___aomod@divisor+3)^0,w,c
  2763  001462  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2764  001464  500D               	movf	(___aomod@divisor+4)^0,w,c
  2765  001466  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2766  001468  500E               	movf	(___aomod@divisor+5)^0,w,c
  2767  00146A  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2768  00146C  500F               	movf	(___aomod@divisor+6)^0,w,c
  2769  00146E  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2770  001470  5010               	movf	(___aomod@divisor+7)^0,w,c
  2771  001472  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2772  001474  A0D8               	btfss	status,0,c
  2773  001476  EF3F  F00A         	goto	u1501
  2774  00147A  EF41  F00A         	goto	u1500
  2775  00147E                     u1501:
  2776  00147E  EF51  F00A         	goto	l2070
  2777  001482                     u1500:
  2778  001482  5009               	movf	___aomod@divisor^0,w,c
  2779  001484  5E01               	subwf	___aomod@dividend^0,f,c
  2780  001486  500A               	movf	(___aomod@divisor+1)^0,w,c
  2781  001488  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2782  00148A  500B               	movf	(___aomod@divisor+2)^0,w,c
  2783  00148C  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2784  00148E  500C               	movf	(___aomod@divisor+3)^0,w,c
  2785  001490  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2786  001492  500D               	movf	(___aomod@divisor+4)^0,w,c
  2787  001494  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2788  001496  500E               	movf	(___aomod@divisor+5)^0,w,c
  2789  001498  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2790  00149A  500F               	movf	(___aomod@divisor+6)^0,w,c
  2791  00149C  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2792  00149E  5010               	movf	(___aomod@divisor+7)^0,w,c
  2793  0014A0  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2794  0014A2                     l2070:
  2795  0014A2  90D8               	bcf	status,0,c
  2796  0014A4  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2797  0014A6  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2798  0014A8  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2799  0014AA  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2800  0014AC  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2801  0014AE  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2802  0014B0  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2803  0014B2  3209               	rrcf	___aomod@divisor^0,f,c
  2804  0014B4  2E11               	decfsz	___aomod@counter^0,f,c
  2805  0014B6  EF2A  F00A         	goto	l2066
  2806  0014BA                     l2074:
  2807  0014BA  5012               	movf	___aomod@sign^0,w,c
  2808  0014BC  B4D8               	btfsc	status,2,c
  2809  0014BE  EF63  F00A         	goto	u1511
  2810  0014C2  EF65  F00A         	goto	u1510
  2811  0014C6                     u1511:
  2812  0014C6  EF75  F00A         	goto	l2078
  2813  0014CA                     u1510:
  2814  0014CA  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2815  0014CC  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2816  0014CE  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2817  0014D0  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2818  0014D2  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2819  0014D4  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2820  0014D6  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2821  0014D8  6C01               	negf	___aomod@dividend^0,c
  2822  0014DA  0E00               	movlw	0
  2823  0014DC  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2824  0014DE  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2825  0014E0  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2826  0014E2  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2827  0014E4  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2828  0014E6  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2829  0014E8  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2830  0014EA                     l2078:
  2831  0014EA  C001  F001         	movff	___aomod@dividend,?___aomod
  2832  0014EE  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2833  0014F2  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2834  0014F6  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2835  0014FA  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2836  0014FE  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2837  001502  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2838  001506  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2839  00150A  0012               	return		;funcret
  2840  00150C                     __end_of___aomod:
  2841                           	callstack 0
  2842                           
  2843 ;; *************** function ___aodiv *****************
  2844 ;; Defined at:
  2845 ;;		line 9 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\aodiv.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;  dividend        8    0[COMRAM] long long 
  2848 ;;  divisor         8    8[COMRAM] long long 
  2849 ;; Auto vars:     Size  Location     Type
  2850 ;;  quotient        8   18[COMRAM] long long 
  2851 ;;  sign            1   17[COMRAM] unsigned char 
  2852 ;;  counter         1   16[COMRAM] unsigned char 
  2853 ;; Return value:  Size  Location     Type
  2854 ;;                  8    0[COMRAM] long long 
  2855 ;; Registers used:
  2856 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2857 ;; Tracked objects:
  2858 ;;		On entry : 0/0
  2859 ;;		On exit  : 0/0
  2860 ;;		Unchanged: 0/0
  2861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2862 ;;      Params:        16       0       0       0       0       0       0       0       0
  2863 ;;      Locals:        10       0       0       0       0       0       0       0       0
  2864 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2865 ;;      Totals:        26       0       0       0       0       0       0       0       0
  2866 ;;Total ram usage:       26 bytes
  2867 ;; Hardware stack levels used: 1
  2868 ;; This function calls:
  2869 ;;		Nothing
  2870 ;; This function is called by:
  2871 ;;		_dtoa
  2872 ;; This function uses a non-reentrant model
  2873 ;;
  2874                           
  2875                           	psect	text12
  2876  001220                     __ptext12:
  2877                           	callstack 0
  2878  001220                     ___aodiv:
  2879                           	callstack 26
  2880  001220  0E00               	movlw	0
  2881  001222  6E12               	movwf	___aodiv@sign^0,c
  2882  001224  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  2883  001226  EF19  F009         	goto	u1390
  2884  00122A  EF17  F009         	goto	u1391
  2885  00122E                     u1391:
  2886  00122E  EF2B  F009         	goto	l2010
  2887  001232                     u1390:
  2888  001232  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2889  001234  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2890  001236  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2891  001238  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2892  00123A  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2893  00123C  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2894  00123E  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2895  001240  6C09               	negf	___aodiv@divisor^0,c
  2896  001242  0E00               	movlw	0
  2897  001244  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2898  001246  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2899  001248  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2900  00124A  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2901  00124C  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2902  00124E  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2903  001250  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2904  001252  0E01               	movlw	1
  2905  001254  6E12               	movwf	___aodiv@sign^0,c
  2906  001256                     l2010:
  2907  001256  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2908  001258  EF32  F009         	goto	u1400
  2909  00125C  EF30  F009         	goto	u1401
  2910  001260                     u1401:
  2911  001260  EF44  F009         	goto	l2016
  2912  001264                     u1400:
  2913  001264  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2914  001266  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2915  001268  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2916  00126A  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2917  00126C  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2918  00126E  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2919  001270  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2920  001272  6C01               	negf	___aodiv@dividend^0,c
  2921  001274  0E00               	movlw	0
  2922  001276  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2923  001278  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2924  00127A  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2925  00127C  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2926  00127E  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2927  001280  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2928  001282  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2929  001284  0E01               	movlw	1
  2930  001286  1A12               	xorwf	___aodiv@sign^0,f,c
  2931  001288                     l2016:
  2932  001288  EE20  F013         	lfsr	2,___aodiv@quotient
  2933  00128C  0E07               	movlw	7
  2934  00128E                     u1411:
  2935  00128E  6ADE               	clrf	postinc2,c
  2936  001290  06E8               	decf	wreg,f,c
  2937  001292  E2FD               	bc	u1411
  2938  001294  5009               	movf	___aodiv@divisor^0,w,c
  2939  001296  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2940  001298  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2941  00129A  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2942  00129C  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2943  00129E  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2944  0012A0  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2945  0012A2  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2946  0012A4  B4D8               	btfsc	status,2,c
  2947  0012A6  EF57  F009         	goto	u1421
  2948  0012AA  EF59  F009         	goto	u1420
  2949  0012AE                     u1421:
  2950  0012AE  EFAB  F009         	goto	l2038
  2951  0012B2                     u1420:
  2952  0012B2  0E01               	movlw	1
  2953  0012B4  6E11               	movwf	___aodiv@counter^0,c
  2954  0012B6  EF67  F009         	goto	l2024
  2955  0012BA                     l2022:
  2956  0012BA  90D8               	bcf	status,0,c
  2957  0012BC  3609               	rlcf	___aodiv@divisor^0,f,c
  2958  0012BE  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2959  0012C0  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2960  0012C2  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2961  0012C4  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2962  0012C6  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2963  0012C8  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2964  0012CA  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2965  0012CC  2A11               	incf	___aodiv@counter^0,f,c
  2966  0012CE                     l2024:
  2967  0012CE  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2968  0012D0  EF6C  F009         	goto	u1431
  2969  0012D4  EF6E  F009         	goto	u1430
  2970  0012D8                     u1431:
  2971  0012D8  EF5D  F009         	goto	l2022
  2972  0012DC                     u1430:
  2973  0012DC                     l2026:
  2974  0012DC  90D8               	bcf	status,0,c
  2975  0012DE  3613               	rlcf	___aodiv@quotient^0,f,c
  2976  0012E0  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2977  0012E2  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2978  0012E4  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2979  0012E6  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2980  0012E8  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2981  0012EA  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2982  0012EC  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2983  0012EE  5009               	movf	___aodiv@divisor^0,w,c
  2984  0012F0  5C01               	subwf	___aodiv@dividend^0,w,c
  2985  0012F2  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2986  0012F4  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2987  0012F6  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2988  0012F8  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2989  0012FA  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2990  0012FC  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2991  0012FE  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2992  001300  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2993  001302  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2994  001304  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2995  001306  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2996  001308  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2997  00130A  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2998  00130C  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2999  00130E  A0D8               	btfss	status,0,c
  3000  001310  EF8C  F009         	goto	u1441
  3001  001314  EF8E  F009         	goto	u1440
  3002  001318                     u1441:
  3003  001318  EF9F  F009         	goto	l2034
  3004  00131C                     u1440:
  3005  00131C  5009               	movf	___aodiv@divisor^0,w,c
  3006  00131E  5E01               	subwf	___aodiv@dividend^0,f,c
  3007  001320  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3008  001322  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3009  001324  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3010  001326  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3011  001328  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3012  00132A  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3013  00132C  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3014  00132E  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3015  001330  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3016  001332  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3017  001334  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3018  001336  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3019  001338  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3020  00133A  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  3021  00133C  8013               	bsf	___aodiv@quotient^0,0,c
  3022  00133E                     l2034:
  3023  00133E  90D8               	bcf	status,0,c
  3024  001340  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  3025  001342  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3026  001344  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3027  001346  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3028  001348  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3029  00134A  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3030  00134C  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3031  00134E  3209               	rrcf	___aodiv@divisor^0,f,c
  3032  001350  2E11               	decfsz	___aodiv@counter^0,f,c
  3033  001352  EF6E  F009         	goto	l2026
  3034  001356                     l2038:
  3035  001356  5012               	movf	___aodiv@sign^0,w,c
  3036  001358  B4D8               	btfsc	status,2,c
  3037  00135A  EFB1  F009         	goto	u1451
  3038  00135E  EFB3  F009         	goto	u1450
  3039  001362                     u1451:
  3040  001362  EFC3  F009         	goto	l2042
  3041  001366                     u1450:
  3042  001366  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  3043  001368  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  3044  00136A  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  3045  00136C  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  3046  00136E  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  3047  001370  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  3048  001372  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  3049  001374  6C13               	negf	___aodiv@quotient^0,c
  3050  001376  0E00               	movlw	0
  3051  001378  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3052  00137A  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3053  00137C  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3054  00137E  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3055  001380  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3056  001382  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3057  001384  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3058  001386                     l2042:
  3059  001386  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3060  00138A  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3061  00138E  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3062  001392  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3063  001396  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3064  00139A  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3065  00139E  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3066  0013A2  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3067  0013A6  0012               	return		;funcret
  3068  0013A8                     __end_of___aodiv:
  3069                           	callstack 0
  3070                           
  3071 ;; *************** function _PedirDato *****************
  3072 ;; Defined at:
  3073 ;;		line 145 in file "Main_Invernadero.c"
  3074 ;; Parameters:    Size  Location     Type
  3075 ;;  Etiqueta        2    9[COMRAM] PTR unsigned char 
  3076 ;;		 -> STR_4(14), STR_3(14), STR_2(15), STR_1(15), 
  3077 ;;  vecLlenar       2   11[COMRAM] PTR unsigned char 
  3078 ;;		 -> main@MargenErrorH(1), main@Humedad(2), main@MargenErrorT(1), main@Temperatura(2), 
  3079 ;;  CantDatos       2   13[COMRAM] int 
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;  i               2   17[COMRAM] int 
  3082 ;;  tecla           1   19[COMRAM] unsigned char 
  3083 ;; Return value:  Size  Location     Type
  3084 ;;                  1    wreg      void 
  3085 ;; Registers used:
  3086 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3087 ;; Tracked objects:
  3088 ;;		On entry : 0/0
  3089 ;;		On exit  : 0/0
  3090 ;;		Unchanged: 0/0
  3091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3092 ;;      Params:         6       0       0       0       0       0       0       0       0
  3093 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3094 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3095 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3096 ;;Total ram usage:       11 bytes
  3097 ;; Hardware stack levels used: 1
  3098 ;; Hardware stack levels required when called: 3
  3099 ;; This function calls:
  3100 ;;		_LCD_Char
  3101 ;;		_LCD_Clear
  3102 ;;		_LCD_Command
  3103 ;;		_LCD_String_xy
  3104 ;;		_keyfind
  3105 ;; This function is called by:
  3106 ;;		_main
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110                           	psect	text13
  3111  001798                     __ptext13:
  3112                           	callstack 0
  3113  001798                     _PedirDato:
  3114                           	callstack 27
  3115  001798                     
  3116                           ;Main_Invernadero.c: 146:      LCD_Clear();
  3117  001798  ECA8  F00E         	call	_LCD_Clear	;wreg free
  3118  00179C                     
  3119                           ;Main_Invernadero.c: 148:      unsigned char tecla;;Main_Invernadero.c: 149:      LCD_St
      +                          ring_xy(0,0,Etiqueta);
  3120  00179C  0E00               	movlw	0
  3121  00179E  6E05               	movwf	LCD_String_xy@pos^0,c
  3122  0017A0  C00A  F006         	movff	PedirDato@Etiqueta,LCD_String_xy@msg
  3123  0017A4  C00B  F007         	movff	PedirDato@Etiqueta+1,LCD_String_xy@msg+1
  3124  0017A8  0E00               	movlw	0
  3125  0017AA  EC03  F00E         	call	_LCD_String_xy
  3126  0017AE                     
  3127                           ;Main_Invernadero.c: 150:      LCD_Command(0xC0);
  3128  0017AE  0EC0               	movlw	192
  3129  0017B0  EC53  F00D         	call	_LCD_Command
  3130  0017B4                     
  3131                           ;Main_Invernadero.c: 152:      for(int i=0 ; i < CantDatos ; i++){
  3132  0017B4  0E00               	movlw	0
  3133  0017B6  6E13               	movwf	(PedirDato@i+1)^0,c
  3134  0017B8  0E00               	movlw	0
  3135  0017BA  6E12               	movwf	PedirDato@i^0,c
  3136  0017BC  EFF0  F00B         	goto	l2474
  3137  0017C0                     l2466:
  3138                           
  3139                           ;Main_Invernadero.c: 153:      tecla=keyfind();
  3140  0017C0  EC1E  F007         	call	_keyfind	;wreg free
  3141  0017C4  6E14               	movwf	PedirDato@tecla^0,c
  3142  0017C6                     
  3143                           ;Main_Invernadero.c: 154:      LCD_Char(tecla);
  3144  0017C6  5014               	movf	PedirDato@tecla^0,w,c
  3145  0017C8  EC2B  F00D         	call	_LCD_Char
  3146  0017CC                     
  3147                           ;Main_Invernadero.c: 155:      vecLlenar[i] = tecla;
  3148  0017CC  5012               	movf	PedirDato@i^0,w,c
  3149  0017CE  240C               	addwf	PedirDato@vecLlenar^0,w,c
  3150  0017D0  6ED9               	movwf	fsr2l,c
  3151  0017D2  5013               	movf	(PedirDato@i+1)^0,w,c
  3152  0017D4  200D               	addwfc	(PedirDato@vecLlenar+1)^0,w,c
  3153  0017D6  6EDA               	movwf	fsr2h,c
  3154  0017D8  C014  FFDF         	movff	PedirDato@tecla,indf2
  3155  0017DC                     
  3156                           ;Main_Invernadero.c: 156:      }
  3157  0017DC  4A12               	infsnz	PedirDato@i^0,f,c
  3158  0017DE  2A13               	incf	(PedirDato@i+1)^0,f,c
  3159  0017E0                     l2474:
  3160  0017E0  500E               	movf	PedirDato@CantDatos^0,w,c
  3161  0017E2  5C12               	subwf	PedirDato@i^0,w,c
  3162  0017E4  5013               	movf	(PedirDato@i+1)^0,w,c
  3163  0017E6  0A80               	xorlw	128
  3164  0017E8  6E10               	movwf	??_PedirDato^0,c
  3165  0017EA  500F               	movf	(PedirDato@CantDatos+1)^0,w,c
  3166  0017EC  0A80               	xorlw	128
  3167  0017EE  5810               	subwfb	??_PedirDato^0,w,c
  3168  0017F0  A0D8               	btfss	status,0,c
  3169  0017F2  EFFD  F00B         	goto	u2071
  3170  0017F6  EFFF  F00B         	goto	u2070
  3171  0017FA                     u2071:
  3172  0017FA  EFE0  F00B         	goto	l2466
  3173  0017FE                     u2070:
  3174  0017FE                     
  3175                           ;Main_Invernadero.c: 157:      _delay((unsigned long)((100)*(8000000L/4000.0)));
  3176  0017FE  0E02               	movlw	2
  3177  001800  6E11               	movwf	(??_PedirDato+1)^0,c
  3178  001802  0E04               	movlw	4
  3179  001804  6E10               	movwf	??_PedirDato^0,c
  3180  001806  0EBA               	movlw	186
  3181  001808                     u2437:
  3182  001808  2EE8               	decfsz	wreg,f,c
  3183  00180A  D7FE               	bra	u2437
  3184  00180C  2E10               	decfsz	??_PedirDato^0,f,c
  3185  00180E  D7FC               	bra	u2437
  3186  001810  2E11               	decfsz	(??_PedirDato+1)^0,f,c
  3187  001812  D7FA               	bra	u2437
  3188  001814  D000               	nop2	
  3189  001816                     
  3190                           ;Main_Invernadero.c: 158:      LCD_Clear();
  3191  001816  ECA8  F00E         	call	_LCD_Clear	;wreg free
  3192  00181A  0012               	return		;funcret
  3193  00181C                     __end_of_PedirDato:
  3194                           	callstack 0
  3195                           
  3196 ;; *************** function _keyfind *****************
  3197 ;; Defined at:
  3198 ;;		line 174 in file "keypad.c"
  3199 ;; Parameters:    Size  Location     Type
  3200 ;;		None
  3201 ;; Auto vars:     Size  Location     Type
  3202 ;;  temp1           1    0        unsigned char 
  3203 ;; Return value:  Size  Location     Type
  3204 ;;                  1    wreg      unsigned char 
  3205 ;; Registers used:
  3206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3207 ;; Tracked objects:
  3208 ;;		On entry : 0/0
  3209 ;;		On exit  : 0/0
  3210 ;;		Unchanged: 0/0
  3211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3212 ;;      Params:         0       0       0       0       0       0       0       0       0
  3213 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3214 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3215 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3216 ;;Total ram usage:        1 bytes
  3217 ;; Hardware stack levels used: 1
  3218 ;; This function calls:
  3219 ;;		Nothing
  3220 ;; This function is called by:
  3221 ;;		_PedirDato
  3222 ;; This function uses a non-reentrant model
  3223 ;;
  3224                           
  3225                           	psect	text14
  3226  000E3C                     __ptext14:
  3227                           	callstack 0
  3228  000E3C                     _keyfind:
  3229                           	callstack 29
  3230  000E3C                     
  3231                           ;keypad.c: 177:     TRISB = 0xf0;
  3232  000E3C  0EF0               	movlw	240
  3233  000E3E  6E93               	movwf	147,c	;volatile
  3234                           
  3235                           ;keypad.c: 178:     unsigned char temp1;;keypad.c: 180:         LATB = 0xf0;
  3236  000E40  0EF0               	movlw	240
  3237  000E42  6E8A               	movwf	138,c	;volatile
  3238  000E44                     l2296:
  3239                           
  3240                           ;keypad.c: 184:         {;keypad.c: 186:             col_loc = PORTB & 0xf0;
  3241  000E44  5081               	movf	129,w,c	;volatile
  3242  000E46  0BF0               	andlw	240
  3243  000E48  0100               	movlb	0	; () banked
  3244  000E4A  6F6A               	movwf	_col_loc& (0+255),b
  3245  000E4C                     
  3246                           ; BSR set to: 0
  3247                           ;keypad.c: 188:         }while(col_loc!=0xf0);
  3248  000E4C  0EF0               	movlw	240
  3249  000E4E  196A               	xorwf	_col_loc& (0+255),w,b
  3250  000E50  A4D8               	btfss	status,2,c
  3251  000E52  EF2D  F007         	goto	u1841
  3252  000E56  EF2F  F007         	goto	u1840
  3253  000E5A                     u1841:
  3254  000E5A  EF22  F007         	goto	l2296
  3255  000E5E                     u1840:
  3256  000E5E                     
  3257                           ; BSR set to: 0
  3258                           ;keypad.c: 189:          col_loc = PORTB & 0xf0;
  3259  000E5E  5081               	movf	129,w,c	;volatile
  3260  000E60  0BF0               	andlw	240
  3261  000E62  6F6A               	movwf	_col_loc& (0+255),b
  3262                           
  3263                           ;keypad.c: 190:       }while(col_loc!=0xf0);
  3264  000E64  0EF0               	movlw	240
  3265  000E66  196A               	xorwf	_col_loc& (0+255),w,b
  3266  000E68  A4D8               	btfss	status,2,c
  3267  000E6A  EF39  F007         	goto	u1851
  3268  000E6E  EF3B  F007         	goto	u1850
  3269  000E72                     u1851:
  3270  000E72  EF22  F007         	goto	l2296
  3271  000E76                     u1850:
  3272  000E76                     
  3273                           ; BSR set to: 0
  3274                           ;keypad.c: 192:       _delay((unsigned long)((30)*(8000000L/4000.0)));
  3275  000E76  0E4E               	movlw	78
  3276  000E78  6E01               	movwf	??_keyfind^0,c
  3277  000E7A  0EEB               	movlw	235
  3278  000E7C                     u2447:
  3279  000E7C  2EE8               	decfsz	wreg,f,c
  3280  000E7E  D7FE               	bra	u2447
  3281  000E80  2E01               	decfsz	??_keyfind^0,f,c
  3282  000E82  D7FC               	bra	u2447
  3283  000E84  F000               	nop	
  3284  000E86                     
  3285                           ;keypad.c: 193:         LATB = 0xf0;
  3286  000E86  0EF0               	movlw	240
  3287  000E88  6E8A               	movwf	138,c	;volatile
  3288  000E8A                     l2306:
  3289                           
  3290                           ;keypad.c: 197:             {;keypad.c: 199:                 col_loc = PORTB & 0xf0;
  3291  000E8A  5081               	movf	129,w,c	;volatile
  3292  000E8C  0BF0               	andlw	240
  3293  000E8E  0100               	movlb	0	; () banked
  3294  000E90  6F6A               	movwf	_col_loc& (0+255),b
  3295  000E92                     
  3296                           ; BSR set to: 0
  3297                           ;keypad.c: 200:             }while(col_loc==0xf0);
  3298  000E92  0EF0               	movlw	240
  3299  000E94  196A               	xorwf	_col_loc& (0+255),w,b
  3300  000E96  B4D8               	btfsc	status,2,c
  3301  000E98  EF50  F007         	goto	u1861
  3302  000E9C  EF52  F007         	goto	u1860
  3303  000EA0                     u1861:
  3304  000EA0  EF45  F007         	goto	l2306
  3305  000EA4                     u1860:
  3306  000EA4                     
  3307                           ; BSR set to: 0
  3308                           ;keypad.c: 201:          col_loc = PORTB & 0xf0;
  3309  000EA4  5081               	movf	129,w,c	;volatile
  3310  000EA6  0BF0               	andlw	240
  3311  000EA8  6F6A               	movwf	_col_loc& (0+255),b
  3312                           
  3313                           ;keypad.c: 202:         }while(col_loc==0xf0);
  3314  000EAA  0EF0               	movlw	240
  3315  000EAC  196A               	xorwf	_col_loc& (0+255),w,b
  3316  000EAE  B4D8               	btfsc	status,2,c
  3317  000EB0  EF5C  F007         	goto	u1871
  3318  000EB4  EF5E  F007         	goto	u1870
  3319  000EB8                     u1871:
  3320  000EB8  EF45  F007         	goto	l2306
  3321  000EBC                     u1870:
  3322  000EBC                     
  3323                           ; BSR set to: 0
  3324                           ;keypad.c: 204:         _delay((unsigned long)((30)*(8000000L/4000.0)));
  3325  000EBC  0E4E               	movlw	78
  3326  000EBE  6E01               	movwf	??_keyfind^0,c
  3327  000EC0  0EEB               	movlw	235
  3328  000EC2                     u2457:
  3329  000EC2  2EE8               	decfsz	wreg,f,c
  3330  000EC4  D7FE               	bra	u2457
  3331  000EC6  2E01               	decfsz	??_keyfind^0,f,c
  3332  000EC8  D7FC               	bra	u2457
  3333  000ECA  F000               	nop	
  3334  000ECC                     
  3335                           ;keypad.c: 206:         col_loc = PORTB & 0xf0;
  3336  000ECC  5081               	movf	129,w,c	;volatile
  3337  000ECE  0BF0               	andlw	240
  3338  000ED0  0100               	movlb	0	; () banked
  3339  000ED2  6F6A               	movwf	_col_loc& (0+255),b
  3340  000ED4                     l2316:
  3341                           
  3342                           ; BSR set to: 0
  3343                           ;keypad.c: 211:     {;keypad.c: 212:         LATB = 0xfe;
  3344  000ED4  0EFE               	movlw	254
  3345  000ED6  6E8A               	movwf	138,c	;volatile
  3346  000ED8                     
  3347                           ; BSR set to: 0
  3348                           ;keypad.c: 213:         col_loc = PORTB & 0xf0;
  3349  000ED8  5081               	movf	129,w,c	;volatile
  3350  000EDA  0BF0               	andlw	240
  3351  000EDC  6F6A               	movwf	_col_loc& (0+255),b
  3352  000EDE                     
  3353                           ; BSR set to: 0
  3354                           ;keypad.c: 214:         temp_col=col_loc;
  3355  000EDE  C06A  F068         	movff	_col_loc,_temp_col
  3356  000EE2                     
  3357                           ; BSR set to: 0
  3358                           ;keypad.c: 215:         if(col_loc!=0xf0)
  3359  000EE2  0EF0               	movlw	240
  3360  000EE4  196A               	xorwf	_col_loc& (0+255),w,b
  3361  000EE6  B4D8               	btfsc	status,2,c
  3362  000EE8  EF78  F007         	goto	u1881
  3363  000EEC  EF7A  F007         	goto	u1880
  3364  000EF0                     u1881:
  3365  000EF0  EF8C  F007         	goto	l2328
  3366  000EF4                     u1880:
  3367  000EF4                     
  3368                           ; BSR set to: 0
  3369                           ;keypad.c: 216:         {;keypad.c: 217:             rowloc=0;
  3370  000EF4  0E00               	movlw	0
  3371  000EF6  6F69               	movwf	_rowloc& (0+255),b
  3372                           
  3373                           ;keypad.c: 218:             while(temp_col!=0xf0)
  3374  000EF8  EF81  F007         	goto	l351
  3375  000EFC                     l2326:
  3376                           
  3377                           ; BSR set to: 0
  3378                           ;keypad.c: 219:             {;keypad.c: 220:                 temp_col = PORTB & 0xf0;
  3379  000EFC  5081               	movf	129,w,c	;volatile
  3380  000EFE  0BF0               	andlw	240
  3381  000F00  6F68               	movwf	_temp_col& (0+255),b
  3382  000F02                     l351:
  3383                           
  3384                           ; BSR set to: 0
  3385                           ;keypad.c: 218:             while(temp_col!=0xf0)
  3386  000F02  0EF0               	movlw	240
  3387  000F04  1968               	xorwf	_temp_col& (0+255),w,b
  3388  000F06  A4D8               	btfss	status,2,c
  3389  000F08  EF88  F007         	goto	u1891
  3390  000F0C  EF8A  F007         	goto	u1890
  3391  000F10                     u1891:
  3392  000F10  EF7E  F007         	goto	l2326
  3393  000F14                     u1890:
  3394  000F14  EFF0  F007         	goto	l2364
  3395  000F18                     l2328:
  3396                           
  3397                           ; BSR set to: 0
  3398                           ;keypad.c: 225:         LATB = 0xfd;
  3399  000F18  0EFD               	movlw	253
  3400  000F1A  6E8A               	movwf	138,c	;volatile
  3401  000F1C                     
  3402                           ; BSR set to: 0
  3403                           ;keypad.c: 226:         col_loc = PORTB & 0xf0;
  3404  000F1C  5081               	movf	129,w,c	;volatile
  3405  000F1E  0BF0               	andlw	240
  3406  000F20  6F6A               	movwf	_col_loc& (0+255),b
  3407  000F22                     
  3408                           ; BSR set to: 0
  3409                           ;keypad.c: 227:         temp_col=col_loc;
  3410  000F22  C06A  F068         	movff	_col_loc,_temp_col
  3411  000F26                     
  3412                           ; BSR set to: 0
  3413                           ;keypad.c: 228:         if(col_loc!=0xf0)
  3414  000F26  0EF0               	movlw	240
  3415  000F28  196A               	xorwf	_col_loc& (0+255),w,b
  3416  000F2A  B4D8               	btfsc	status,2,c
  3417  000F2C  EF9A  F007         	goto	u1901
  3418  000F30  EF9C  F007         	goto	u1900
  3419  000F34                     u1901:
  3420  000F34  EFAE  F007         	goto	l2340
  3421  000F38                     u1900:
  3422  000F38                     
  3423                           ; BSR set to: 0
  3424                           ;keypad.c: 229:         {;keypad.c: 230:             rowloc=1;
  3425  000F38  0E01               	movlw	1
  3426  000F3A  6F69               	movwf	_rowloc& (0+255),b
  3427                           
  3428                           ;keypad.c: 231:             while(temp_col!=0xf0)
  3429  000F3C  EFA3  F007         	goto	l356
  3430  000F40                     l2338:
  3431                           
  3432                           ; BSR set to: 0
  3433                           ;keypad.c: 232:             {;keypad.c: 233:                 temp_col = PORTB & 0xf0;
  3434  000F40  5081               	movf	129,w,c	;volatile
  3435  000F42  0BF0               	andlw	240
  3436  000F44  6F68               	movwf	_temp_col& (0+255),b
  3437  000F46                     l356:
  3438                           
  3439                           ; BSR set to: 0
  3440                           ;keypad.c: 231:             while(temp_col!=0xf0)
  3441  000F46  0EF0               	movlw	240
  3442  000F48  1968               	xorwf	_temp_col& (0+255),w,b
  3443  000F4A  A4D8               	btfss	status,2,c
  3444  000F4C  EFAA  F007         	goto	u1911
  3445  000F50  EFAC  F007         	goto	u1910
  3446  000F54                     u1911:
  3447  000F54  EFA0  F007         	goto	l2338
  3448  000F58                     u1910:
  3449  000F58  EFF0  F007         	goto	l2364
  3450  000F5C                     l2340:
  3451                           
  3452                           ; BSR set to: 0
  3453                           ;keypad.c: 238:         LATB = 0xfb;
  3454  000F5C  0EFB               	movlw	251
  3455  000F5E  6E8A               	movwf	138,c	;volatile
  3456  000F60                     
  3457                           ; BSR set to: 0
  3458                           ;keypad.c: 239:         col_loc = PORTB & 0xf0;
  3459  000F60  5081               	movf	129,w,c	;volatile
  3460  000F62  0BF0               	andlw	240
  3461  000F64  6F6A               	movwf	_col_loc& (0+255),b
  3462  000F66                     
  3463                           ; BSR set to: 0
  3464                           ;keypad.c: 240:         temp_col=col_loc;
  3465  000F66  C06A  F068         	movff	_col_loc,_temp_col
  3466  000F6A                     
  3467                           ; BSR set to: 0
  3468                           ;keypad.c: 241:         if(col_loc!=0xf0)
  3469  000F6A  0EF0               	movlw	240
  3470  000F6C  196A               	xorwf	_col_loc& (0+255),w,b
  3471  000F6E  B4D8               	btfsc	status,2,c
  3472  000F70  EFBC  F007         	goto	u1921
  3473  000F74  EFBE  F007         	goto	u1920
  3474  000F78                     u1921:
  3475  000F78  EFD0  F007         	goto	l2352
  3476  000F7C                     u1920:
  3477  000F7C                     
  3478                           ; BSR set to: 0
  3479                           ;keypad.c: 242:         {;keypad.c: 243:             rowloc=2;
  3480  000F7C  0E02               	movlw	2
  3481  000F7E  6F69               	movwf	_rowloc& (0+255),b
  3482                           
  3483                           ;keypad.c: 244:             while(temp_col!=0xf0)
  3484  000F80  EFC5  F007         	goto	l360
  3485  000F84                     l2350:
  3486                           
  3487                           ; BSR set to: 0
  3488                           ;keypad.c: 245:             {;keypad.c: 246:                 temp_col = PORTB & 0xf0;
  3489  000F84  5081               	movf	129,w,c	;volatile
  3490  000F86  0BF0               	andlw	240
  3491  000F88  6F68               	movwf	_temp_col& (0+255),b
  3492  000F8A                     l360:
  3493                           
  3494                           ; BSR set to: 0
  3495                           ;keypad.c: 244:             while(temp_col!=0xf0)
  3496  000F8A  0EF0               	movlw	240
  3497  000F8C  1968               	xorwf	_temp_col& (0+255),w,b
  3498  000F8E  A4D8               	btfss	status,2,c
  3499  000F90  EFCC  F007         	goto	u1931
  3500  000F94  EFCE  F007         	goto	u1930
  3501  000F98                     u1931:
  3502  000F98  EFC2  F007         	goto	l2350
  3503  000F9C                     u1930:
  3504  000F9C  EFF0  F007         	goto	l2364
  3505  000FA0                     l2352:
  3506                           
  3507                           ; BSR set to: 0
  3508                           ;keypad.c: 251:         LATB = 0xf7;
  3509  000FA0  0EF7               	movlw	247
  3510  000FA2  6E8A               	movwf	138,c	;volatile
  3511  000FA4                     
  3512                           ; BSR set to: 0
  3513                           ;keypad.c: 252:         col_loc = PORTB & 0xf0;
  3514  000FA4  5081               	movf	129,w,c	;volatile
  3515  000FA6  0BF0               	andlw	240
  3516  000FA8  6F6A               	movwf	_col_loc& (0+255),b
  3517  000FAA                     
  3518                           ; BSR set to: 0
  3519                           ;keypad.c: 253:         temp_col=col_loc;
  3520  000FAA  C06A  F068         	movff	_col_loc,_temp_col
  3521  000FAE                     
  3522                           ; BSR set to: 0
  3523                           ;keypad.c: 254:         if(col_loc!=0xf0)
  3524  000FAE  0EF0               	movlw	240
  3525  000FB0  196A               	xorwf	_col_loc& (0+255),w,b
  3526  000FB2  B4D8               	btfsc	status,2,c
  3527  000FB4  EFDE  F007         	goto	u1941
  3528  000FB8  EFE0  F007         	goto	u1940
  3529  000FBC                     u1941:
  3530  000FBC  EF6A  F007         	goto	l2316
  3531  000FC0                     u1940:
  3532  000FC0                     
  3533                           ; BSR set to: 0
  3534                           ;keypad.c: 255:         {;keypad.c: 256:             rowloc=3;
  3535  000FC0  0E03               	movlw	3
  3536  000FC2  6F69               	movwf	_rowloc& (0+255),b
  3537                           
  3538                           ;keypad.c: 257:             while(temp_col!=0xf0)
  3539  000FC4  EFE7  F007         	goto	l364
  3540  000FC8                     l2362:
  3541                           
  3542                           ; BSR set to: 0
  3543                           ;keypad.c: 258:             {;keypad.c: 259:                 temp_col = PORTB & 0xf0;
  3544  000FC8  5081               	movf	129,w,c	;volatile
  3545  000FCA  0BF0               	andlw	240
  3546  000FCC  6F68               	movwf	_temp_col& (0+255),b
  3547  000FCE                     l364:
  3548                           
  3549                           ; BSR set to: 0
  3550                           ;keypad.c: 257:             while(temp_col!=0xf0)
  3551  000FCE  0EF0               	movlw	240
  3552  000FD0  1968               	xorwf	_temp_col& (0+255),w,b
  3553  000FD2  A4D8               	btfss	status,2,c
  3554  000FD4  EFEE  F007         	goto	u1951
  3555  000FD8  EFF0  F007         	goto	u1950
  3556  000FDC                     u1951:
  3557  000FDC  EFE4  F007         	goto	l2362
  3558  000FE0                     u1950:
  3559  000FE0                     l2364:
  3560                           
  3561                           ; BSR set to: 0
  3562                           ;keypad.c: 268:     {;keypad.c: 270:         if(col_loc==0xe0)
  3563  000FE0  0EE0               	movlw	224
  3564  000FE2  196A               	xorwf	_col_loc& (0+255),w,b
  3565  000FE4  A4D8               	btfss	status,2,c
  3566  000FE6  EFF7  F007         	goto	u1961
  3567  000FEA  EFF9  F007         	goto	u1960
  3568  000FEE                     u1961:
  3569  000FEE  EF04  F008         	goto	l2372
  3570  000FF2                     u1960:
  3571  000FF2                     
  3572                           ; BSR set to: 0
  3573                           ;keypad.c: 271:         {;keypad.c: 272:              return keypad[rowloc][0];
  3574  000FF2  5169               	movf	_rowloc& (0+255),w,b
  3575  000FF4  0D04               	mullw	4
  3576  000FF6  0EB0               	movlw	low _keypad
  3577  000FF8  24F3               	addwf	243,w,c
  3578  000FFA  6ED9               	movwf	fsr2l,c
  3579  000FFC  0E00               	movlw	high _keypad
  3580  000FFE  20F4               	addwfc	prodh,w,c
  3581  001000  6EDA               	movwf	fsr2h,c
  3582  001002  50DF               	movf	indf2,w,c
  3583  001004  EF35  F008         	goto	l370
  3584  001008                     l2372:
  3585                           
  3586                           ; BSR set to: 0
  3587                           ;keypad.c: 275:             if(col_loc==0xd0)
  3588  001008  0ED0               	movlw	208
  3589  00100A  196A               	xorwf	_col_loc& (0+255),w,b
  3590  00100C  A4D8               	btfss	status,2,c
  3591  00100E  EF0B  F008         	goto	u1971
  3592  001012  EF0D  F008         	goto	u1970
  3593  001016                     u1971:
  3594  001016  EF18  F008         	goto	l2380
  3595  00101A                     u1970:
  3596  00101A                     
  3597                           ; BSR set to: 0
  3598                           ;keypad.c: 276:         {;keypad.c: 277:             return keypad[rowloc][1];
  3599  00101A  5169               	movf	_rowloc& (0+255),w,b
  3600  00101C  0D04               	mullw	4
  3601  00101E  0EB1               	movlw	low (_keypad+1)
  3602  001020  24F3               	addwf	243,w,c
  3603  001022  6ED9               	movwf	fsr2l,c
  3604  001024  0E00               	movlw	high (_keypad+1)
  3605  001026  20F4               	addwfc	prodh,w,c
  3606  001028  6EDA               	movwf	fsr2h,c
  3607  00102A  50DF               	movf	indf2,w,c
  3608  00102C  EF35  F008         	goto	l370
  3609  001030                     l2380:
  3610                           
  3611                           ; BSR set to: 0
  3612                           ;keypad.c: 280:             if(col_loc==0xb0)
  3613  001030  0EB0               	movlw	176
  3614  001032  196A               	xorwf	_col_loc& (0+255),w,b
  3615  001034  A4D8               	btfss	status,2,c
  3616  001036  EF1F  F008         	goto	u1981
  3617  00103A  EF21  F008         	goto	u1980
  3618  00103E                     u1981:
  3619  00103E  EF2C  F008         	goto	l2388
  3620  001042                     u1980:
  3621  001042                     
  3622                           ; BSR set to: 0
  3623                           ;keypad.c: 281:         {;keypad.c: 282:             return keypad[rowloc][2];
  3624  001042  5169               	movf	_rowloc& (0+255),w,b
  3625  001044  0D04               	mullw	4
  3626  001046  0EB2               	movlw	low (_keypad+2)
  3627  001048  24F3               	addwf	243,w,c
  3628  00104A  6ED9               	movwf	fsr2l,c
  3629  00104C  0E00               	movlw	high (_keypad+2)
  3630  00104E  20F4               	addwfc	prodh,w,c
  3631  001050  6EDA               	movwf	fsr2h,c
  3632  001052  50DF               	movf	indf2,w,c
  3633  001054  EF35  F008         	goto	l370
  3634  001058                     l2388:
  3635                           
  3636                           ; BSR set to: 0
  3637                           ;keypad.c: 286:         {;keypad.c: 287:             return keypad[rowloc][3];
  3638  001058  5169               	movf	_rowloc& (0+255),w,b
  3639  00105A  0D04               	mullw	4
  3640  00105C  0EB3               	movlw	low (_keypad+3)
  3641  00105E  24F3               	addwf	243,w,c
  3642  001060  6ED9               	movwf	fsr2l,c
  3643  001062  0E00               	movlw	high (_keypad+3)
  3644  001064  20F4               	addwfc	prodh,w,c
  3645  001066  6EDA               	movwf	fsr2h,c
  3646  001068  50DF               	movf	indf2,w,c
  3647  00106A                     l370:
  3648                           
  3649                           ; BSR set to: 0
  3650  00106A  0012               	return		;funcret
  3651  00106C                     __end_of_keyfind:
  3652                           	callstack 0
  3653                           
  3654 ;; *************** function _LCD_String_xy *****************
  3655 ;; Defined at:
  3656 ;;		line 81 in file "LCD.c"
  3657 ;; Parameters:    Size  Location     Type
  3658 ;;  row             1    wreg     unsigned char 
  3659 ;;  pos             1    4[COMRAM] unsigned char 
  3660 ;;  msg             2    5[COMRAM] PTR const unsigned char 
  3661 ;;		 -> main@Cadena(10), STR_4(14), STR_3(14), STR_2(15), 
  3662 ;;		 -> STR_1(15), 
  3663 ;; Auto vars:     Size  Location     Type
  3664 ;;  row             1    7[COMRAM] unsigned char 
  3665 ;;  location        1    8[COMRAM] unsigned char 
  3666 ;; Return value:  Size  Location     Type
  3667 ;;                  1    wreg      void 
  3668 ;; Registers used:
  3669 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3670 ;; Tracked objects:
  3671 ;;		On entry : 0/0
  3672 ;;		On exit  : 0/0
  3673 ;;		Unchanged: 0/0
  3674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3675 ;;      Params:         3       0       0       0       0       0       0       0       0
  3676 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3677 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3678 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3679 ;;Total ram usage:        5 bytes
  3680 ;; Hardware stack levels used: 1
  3681 ;; Hardware stack levels required when called: 2
  3682 ;; This function calls:
  3683 ;;		_LCD_Command
  3684 ;;		_LCD_String
  3685 ;; This function is called by:
  3686 ;;		_main
  3687 ;;		_PedirDato
  3688 ;; This function uses a non-reentrant model
  3689 ;;
  3690                           
  3691                           	psect	text15
  3692  001C06                     __ptext15:
  3693                           	callstack 0
  3694  001C06                     _LCD_String_xy:
  3695                           	callstack 27
  3696                           
  3697                           ; BSR set to: 0
  3698                           ;incstack = 0
  3699                           ;LCD_String_xy@row stored from wreg
  3700  001C06  6E08               	movwf	LCD_String_xy@row^0,c
  3701  001C08                     
  3702                           ;LCD.c: 84:     if(row<=1)
  3703  001C08  0E02               	movlw	2
  3704  001C0A  6008               	cpfslt	LCD_String_xy@row^0,c
  3705  001C0C  EF0A  F00E         	goto	u1791
  3706  001C10  EF0C  F00E         	goto	u1790
  3707  001C14                     u1791:
  3708  001C14  EF15  F00E         	goto	l2270
  3709  001C18                     u1790:
  3710  001C18                     
  3711                           ;LCD.c: 85:     {;LCD.c: 86:         location = (0x80) | ((pos) & 0x0f);
  3712  001C18  5005               	movf	LCD_String_xy@pos^0,w,c
  3713  001C1A  0B0F               	andlw	15
  3714  001C1C  0980               	iorlw	128
  3715  001C1E  6E09               	movwf	LCD_String_xy@location^0,c
  3716  001C20                     
  3717                           ;LCD.c: 87:         LCD_Command(location);
  3718  001C20  5009               	movf	LCD_String_xy@location^0,w,c
  3719  001C22  EC53  F00D         	call	_LCD_Command
  3720                           
  3721                           ;LCD.c: 88:     }
  3722  001C26  EF1C  F00E         	goto	l2274
  3723  001C2A                     l2270:
  3724                           
  3725                           ;LCD.c: 90:     {;LCD.c: 91:         location = (0xC0) | ((pos) & 0x0f);
  3726  001C2A  5005               	movf	LCD_String_xy@pos^0,w,c
  3727  001C2C  0B0F               	andlw	15
  3728  001C2E  09C0               	iorlw	192
  3729  001C30  6E09               	movwf	LCD_String_xy@location^0,c
  3730  001C32                     
  3731                           ;LCD.c: 92:         LCD_Command(location);
  3732  001C32  5009               	movf	LCD_String_xy@location^0,w,c
  3733  001C34  EC53  F00D         	call	_LCD_Command
  3734  001C38                     l2274:
  3735                           
  3736                           ;LCD.c: 96:     LCD_String(msg);
  3737  001C38  C006  F003         	movff	LCD_String_xy@msg,LCD_String@msg
  3738  001C3C  C007  F004         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  3739  001C40  EC7A  F00C         	call	_LCD_String	;wreg free
  3740  001C44  0012               	return		;funcret
  3741  001C46                     __end_of_LCD_String_xy:
  3742                           	callstack 0
  3743                           
  3744 ;; *************** function _LCD_String *****************
  3745 ;; Defined at:
  3746 ;;		line 71 in file "LCD.c"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;  msg             2    2[COMRAM] PTR const unsigned char 
  3749 ;;		 -> main@Cadena(10), STR_4(14), STR_3(14), STR_2(15), 
  3750 ;;		 -> STR_1(15), 
  3751 ;; Auto vars:     Size  Location     Type
  3752 ;;		None
  3753 ;; Return value:  Size  Location     Type
  3754 ;;                  1    wreg      void 
  3755 ;; Registers used:
  3756 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3757 ;; Tracked objects:
  3758 ;;		On entry : 0/0
  3759 ;;		On exit  : 0/0
  3760 ;;		Unchanged: 0/0
  3761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3762 ;;      Params:         2       0       0       0       0       0       0       0       0
  3763 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3764 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3765 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3766 ;;Total ram usage:        2 bytes
  3767 ;; Hardware stack levels used: 1
  3768 ;; Hardware stack levels required when called: 1
  3769 ;; This function calls:
  3770 ;;		_LCD_Char
  3771 ;; This function is called by:
  3772 ;;		_main
  3773 ;;		_LCD_String_xy
  3774 ;; This function uses a non-reentrant model
  3775 ;;
  3776                           
  3777                           	psect	text16
  3778  0018F4                     __ptext16:
  3779                           	callstack 0
  3780  0018F4                     _LCD_String:
  3781                           	callstack 27
  3782  0018F4                     
  3783                           ;LCD.c: 71: void LCD_String(const char *msg);LCD.c: 72: {;LCD.c: 73:  while((*msg)!=0)
  3784  0018F4  EF90  F00C         	goto	l2196
  3785  0018F8                     l2192:
  3786                           
  3787                           ;LCD.c: 74:  {;LCD.c: 75:    LCD_Char(*msg);
  3788  0018F8  C003  FFF6         	movff	LCD_String@msg,tblptrl
  3789  0018FC  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  3790  001900  6AF8               	clrf	tblptru,c
  3791  001902  0E07               	movlw	(high __ramtop+-1)
  3792  001904  64F7               	cpfsgt	tblptrh,c
  3793  001906  D003               	bra	u1727
  3794  001908  0008               	tblrd		*
  3795  00190A  50F5               	movf	tablat,w,c
  3796  00190C  D005               	bra	u1720
  3797  00190E                     u1727:
  3798  00190E  CFF6 FFE1          	movff	tblptrl,fsr1l
  3799  001912  CFF7 FFE2          	movff	tblptrh,fsr1h
  3800  001916  50E7               	movf	indf1,w,c
  3801  001918                     u1720:
  3802  001918  EC2B  F00D         	call	_LCD_Char
  3803  00191C                     
  3804                           ;LCD.c: 76:    msg++;
  3805  00191C  4A03               	infsnz	LCD_String@msg^0,f,c
  3806  00191E  2A04               	incf	(LCD_String@msg+1)^0,f,c
  3807  001920                     l2196:
  3808                           
  3809                           ;LCD.c: 73:  while((*msg)!=0)
  3810  001920  C003  FFF6         	movff	LCD_String@msg,tblptrl
  3811  001924  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  3812  001928  6AF8               	clrf	tblptru,c
  3813  00192A  0E07               	movlw	(high __ramtop+-1)
  3814  00192C  64F7               	cpfsgt	tblptrh,c
  3815  00192E  D003               	bra	u1737
  3816  001930  0008               	tblrd		*
  3817  001932  50F5               	movf	tablat,w,c
  3818  001934  D005               	bra	u1730
  3819  001936                     u1737:
  3820  001936  CFF6 FFE1          	movff	tblptrl,fsr1l
  3821  00193A  CFF7 FFE2          	movff	tblptrh,fsr1h
  3822  00193E  50E7               	movf	indf1,w,c
  3823  001940                     u1730:
  3824  001940  0900               	iorlw	0
  3825  001942  A4D8               	btfss	status,2,c
  3826  001944  EFA6  F00C         	goto	u1741
  3827  001948  EFA8  F00C         	goto	u1740
  3828  00194C                     u1741:
  3829  00194C  EF7C  F00C         	goto	l2192
  3830  001950                     u1740:
  3831  001950  0012               	return		;funcret
  3832  001952                     __end_of_LCD_String:
  3833                           	callstack 0
  3834                           
  3835 ;; *************** function _LCD_Char *****************
  3836 ;; Defined at:
  3837 ;;		line 57 in file "LCD.c"
  3838 ;; Parameters:    Size  Location     Type
  3839 ;;  dat             1    wreg     unsigned char 
  3840 ;; Auto vars:     Size  Location     Type
  3841 ;;  dat             1    1[COMRAM] unsigned char 
  3842 ;; Return value:  Size  Location     Type
  3843 ;;                  1    wreg      void 
  3844 ;; Registers used:
  3845 ;;		wreg, status,2, status,0
  3846 ;; Tracked objects:
  3847 ;;		On entry : 0/0
  3848 ;;		On exit  : 0/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3851 ;;      Params:         0       0       0       0       0       0       0       0       0
  3852 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3853 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3854 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3855 ;;Total ram usage:        2 bytes
  3856 ;; Hardware stack levels used: 1
  3857 ;; This function calls:
  3858 ;;		Nothing
  3859 ;; This function is called by:
  3860 ;;		_main
  3861 ;;		_PedirDato
  3862 ;;		_LCD_String
  3863 ;; This function uses a non-reentrant model
  3864 ;;
  3865                           
  3866                           	psect	text17
  3867  001A56                     __ptext17:
  3868                           	callstack 0
  3869  001A56                     _LCD_Char:
  3870                           	callstack 27
  3871                           
  3872                           ;incstack = 0
  3873                           ;LCD_Char@dat stored from wreg
  3874  001A56  6E02               	movwf	LCD_Char@dat^0,c
  3875  001A58                     
  3876                           ;LCD.c: 57: void LCD_Char(unsigned char dat);LCD.c: 58: {;LCD.c: 59:  LATD = (LATD & 0x0
      +                          f) | (0xF0 & dat);
  3877  001A58  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  3878  001A5C  0EF0               	movlw	240
  3879  001A5E  1601               	andwf	??_LCD_Char^0,f,c
  3880  001A60  508C               	movf	140,w,c	;volatile
  3881  001A62  0B0F               	andlw	15
  3882  001A64  1001               	iorwf	??_LCD_Char^0,w,c
  3883  001A66  6E8C               	movwf	140,c	;volatile
  3884  001A68                     
  3885                           ;LCD.c: 60:  LATD0 = 1;
  3886  001A68  808C               	bsf	3980,0,c	;volatile
  3887  001A6A                     
  3888                           ;LCD.c: 61:  LATD1 = 1;
  3889  001A6A  828C               	bsf	3980,1,c	;volatile
  3890  001A6C                     
  3891                           ;LCD.c: 62:  __nop();
  3892  001A6C  F000               	nop	
  3893  001A6E                     
  3894                           ;LCD.c: 63:  LATD1 = 0;
  3895  001A6E  928C               	bcf	3980,1,c	;volatile
  3896  001A70                     
  3897                           ;LCD.c: 64:  _delay((unsigned long)((1)*(8000000L/4000.0)));
  3898  001A70  0E03               	movlw	3
  3899  001A72  6E01               	movwf	??_LCD_Char^0,c
  3900  001A74  0E98               	movlw	152
  3901  001A76                     u2467:
  3902  001A76  2EE8               	decfsz	wreg,f,c
  3903  001A78  D7FE               	bra	u2467
  3904  001A7A  2E01               	decfsz	??_LCD_Char^0,f,c
  3905  001A7C  D7FC               	bra	u2467
  3906  001A7E                     
  3907                           ;LCD.c: 65:     LATD = (LATD & 0x0f) | (dat<<4);
  3908  001A7E  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  3909  001A82  3A01               	swapf	??_LCD_Char^0,f,c
  3910  001A84  0EF0               	movlw	240
  3911  001A86  1601               	andwf	??_LCD_Char^0,f,c
  3912  001A88  508C               	movf	140,w,c	;volatile
  3913  001A8A  0B0F               	andlw	15
  3914  001A8C  1001               	iorwf	??_LCD_Char^0,w,c
  3915  001A8E  6E8C               	movwf	140,c	;volatile
  3916  001A90                     
  3917                           ;LCD.c: 66:  LATD1 = 1;
  3918  001A90  828C               	bsf	3980,1,c	;volatile
  3919  001A92                     
  3920                           ;LCD.c: 67:  __nop();
  3921  001A92  F000               	nop	
  3922  001A94                     
  3923                           ;LCD.c: 68:  LATD1 = 0;
  3924  001A94  928C               	bcf	3980,1,c	;volatile
  3925                           
  3926                           ;LCD.c: 69:  _delay((unsigned long)((3)*(8000000L/4000.0)));
  3927  001A96  0E08               	movlw	8
  3928  001A98  6E01               	movwf	??_LCD_Char^0,c
  3929  001A9A  0ECA               	movlw	202
  3930  001A9C                     u2477:
  3931  001A9C  2EE8               	decfsz	wreg,f,c
  3932  001A9E  D7FE               	bra	u2477
  3933  001AA0  2E01               	decfsz	??_LCD_Char^0,f,c
  3934  001AA2  D7FC               	bra	u2477
  3935  001AA4  0012               	return		;funcret
  3936  001AA6                     __end_of_LCD_Char:
  3937                           	callstack 0
  3938                           
  3939 ;; *************** function _LCD_Clear *****************
  3940 ;; Defined at:
  3941 ;;		line 100 in file "LCD.c"
  3942 ;; Parameters:    Size  Location     Type
  3943 ;;		None
  3944 ;; Auto vars:     Size  Location     Type
  3945 ;;		None
  3946 ;; Return value:  Size  Location     Type
  3947 ;;                  1    wreg      void 
  3948 ;; Registers used:
  3949 ;;		wreg, status,2, status,0, cstack
  3950 ;; Tracked objects:
  3951 ;;		On entry : 0/0
  3952 ;;		On exit  : 0/0
  3953 ;;		Unchanged: 0/0
  3954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3955 ;;      Params:         0       0       0       0       0       0       0       0       0
  3956 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3957 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3958 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3959 ;;Total ram usage:        1 bytes
  3960 ;; Hardware stack levels used: 1
  3961 ;; Hardware stack levels required when called: 1
  3962 ;; This function calls:
  3963 ;;		_LCD_Command
  3964 ;; This function is called by:
  3965 ;;		_PedirDato
  3966 ;; This function uses a non-reentrant model
  3967 ;;
  3968                           
  3969                           	psect	text18
  3970  001D50                     __ptext18:
  3971                           	callstack 0
  3972  001D50                     _LCD_Clear:
  3973                           	callstack 28
  3974  001D50                     
  3975                           ;LCD.c: 102:     LCD_Command(0x01);
  3976  001D50  0E01               	movlw	1
  3977  001D52  EC53  F00D         	call	_LCD_Command
  3978  001D56                     
  3979                           ;LCD.c: 103:     _delay((unsigned long)((3)*(8000000L/4000.0)));
  3980  001D56  0E08               	movlw	8
  3981  001D58  6E03               	movwf	??_LCD_Clear^0,c
  3982  001D5A  0ECA               	movlw	202
  3983  001D5C                     u2487:
  3984  001D5C  2EE8               	decfsz	wreg,f,c
  3985  001D5E  D7FE               	bra	u2487
  3986  001D60  2E03               	decfsz	??_LCD_Clear^0,f,c
  3987  001D62  D7FC               	bra	u2487
  3988  001D64                     
  3989                           ;LCD.c: 104:     LCD_Command (0x80);
  3990  001D64  0E80               	movlw	128
  3991  001D66  EC53  F00D         	call	_LCD_Command
  3992                           
  3993                           ;LCD.c: 105:     _delay((unsigned long)((1)*(8000000L/4000.0)));
  3994  001D6A  0E03               	movlw	3
  3995  001D6C  6E03               	movwf	??_LCD_Clear^0,c
  3996  001D6E  0E98               	movlw	152
  3997  001D70                     u2497:
  3998  001D70  2EE8               	decfsz	wreg,f,c
  3999  001D72  D7FE               	bra	u2497
  4000  001D74  2E03               	decfsz	??_LCD_Clear^0,f,c
  4001  001D76  D7FC               	bra	u2497
  4002  001D78  0012               	return		;funcret
  4003  001D7A                     __end_of_LCD_Clear:
  4004                           	callstack 0
  4005                           
  4006 ;; *************** function _LCD_Init *****************
  4007 ;; Defined at:
  4008 ;;		line 26 in file "LCD.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;		None
  4011 ;; Auto vars:     Size  Location     Type
  4012 ;;		None
  4013 ;; Return value:  Size  Location     Type
  4014 ;;                  1    wreg      void 
  4015 ;; Registers used:
  4016 ;;		wreg, status,2, status,0, cstack
  4017 ;; Tracked objects:
  4018 ;;		On entry : 0/0
  4019 ;;		On exit  : 0/0
  4020 ;;		Unchanged: 0/0
  4021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4022 ;;      Params:         0       0       0       0       0       0       0       0       0
  4023 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4024 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4025 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4026 ;;Total ram usage:        1 bytes
  4027 ;; Hardware stack levels used: 1
  4028 ;; Hardware stack levels required when called: 1
  4029 ;; This function calls:
  4030 ;;		_LCD_Command
  4031 ;; This function is called by:
  4032 ;;		_main
  4033 ;; This function uses a non-reentrant model
  4034 ;;
  4035                           
  4036                           	psect	text19
  4037  001CF0                     __ptext19:
  4038                           	callstack 0
  4039  001CF0                     _LCD_Init:
  4040                           	callstack 29
  4041  001CF0                     
  4042                           ;LCD.c: 28:     TRISD = 0;
  4043  001CF0  0E00               	movlw	0
  4044  001CF2  6E95               	movwf	149,c	;volatile
  4045  001CF4                     
  4046                           ;LCD.c: 29:     _delay((unsigned long)((15)*(8000000L/4000.0)));
  4047  001CF4  0E27               	movlw	39
  4048  001CF6  6E03               	movwf	??_LCD_Init^0,c
  4049  001CF8  0EF5               	movlw	245
  4050  001CFA                     u2507:
  4051  001CFA  2EE8               	decfsz	wreg,f,c
  4052  001CFC  D7FE               	bra	u2507
  4053  001CFE  2E03               	decfsz	??_LCD_Init^0,f,c
  4054  001D00  D7FC               	bra	u2507
  4055  001D02  F000               	nop	
  4056  001D04                     
  4057                           ;LCD.c: 30:     LCD_Command(0x02);
  4058  001D04  0E02               	movlw	2
  4059  001D06  EC53  F00D         	call	_LCD_Command
  4060  001D0A                     
  4061                           ;LCD.c: 32:     LCD_Command(0x28);
  4062  001D0A  0E28               	movlw	40
  4063  001D0C  EC53  F00D         	call	_LCD_Command
  4064  001D10                     
  4065                           ;LCD.c: 34:  LCD_Command(0x01);
  4066  001D10  0E01               	movlw	1
  4067  001D12  EC53  F00D         	call	_LCD_Command
  4068  001D16                     
  4069                           ;LCD.c: 35:     LCD_Command(0x0c);
  4070  001D16  0E0C               	movlw	12
  4071  001D18  EC53  F00D         	call	_LCD_Command
  4072  001D1C                     
  4073                           ;LCD.c: 36:  LCD_Command(0x06);
  4074  001D1C  0E06               	movlw	6
  4075  001D1E  EC53  F00D         	call	_LCD_Command
  4076  001D22  0012               	return		;funcret
  4077  001D24                     __end_of_LCD_Init:
  4078                           	callstack 0
  4079                           
  4080 ;; *************** function _LCD_Command *****************
  4081 ;; Defined at:
  4082 ;;		line 39 in file "LCD.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;  cmd             1    wreg     unsigned char 
  4085 ;; Auto vars:     Size  Location     Type
  4086 ;;  cmd             1    1[COMRAM] unsigned char 
  4087 ;; Return value:  Size  Location     Type
  4088 ;;                  1    wreg      void 
  4089 ;; Registers used:
  4090 ;;		wreg, status,2, status,0
  4091 ;; Tracked objects:
  4092 ;;		On entry : 0/0
  4093 ;;		On exit  : 0/0
  4094 ;;		Unchanged: 0/0
  4095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4096 ;;      Params:         0       0       0       0       0       0       0       0       0
  4097 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4098 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4099 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4100 ;;Total ram usage:        2 bytes
  4101 ;; Hardware stack levels used: 1
  4102 ;; This function calls:
  4103 ;;		Nothing
  4104 ;; This function is called by:
  4105 ;;		_PedirDato
  4106 ;;		_LCD_Init
  4107 ;;		_LCD_String_xy
  4108 ;;		_LCD_Clear
  4109 ;; This function uses a non-reentrant model
  4110 ;;
  4111                           
  4112                           	psect	text20
  4113  001AA6                     __ptext20:
  4114                           	callstack 0
  4115  001AA6                     _LCD_Command:
  4116                           	callstack 28
  4117                           
  4118                           ;incstack = 0
  4119                           ;LCD_Command@cmd stored from wreg
  4120  001AA6  6E02               	movwf	LCD_Command@cmd^0,c
  4121  001AA8                     
  4122                           ;LCD.c: 39: void LCD_Command(unsigned char cmd );LCD.c: 40: {;LCD.c: 41:  LATD = (LATD &
      +                           0x0f) |(0xF0 & cmd);
  4123  001AA8  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  4124  001AAC  0EF0               	movlw	240
  4125  001AAE  1601               	andwf	??_LCD_Command^0,f,c
  4126  001AB0  508C               	movf	140,w,c	;volatile
  4127  001AB2  0B0F               	andlw	15
  4128  001AB4  1001               	iorwf	??_LCD_Command^0,w,c
  4129  001AB6  6E8C               	movwf	140,c	;volatile
  4130  001AB8                     
  4131                           ;LCD.c: 42:  LATD0 = 0;
  4132  001AB8  908C               	bcf	3980,0,c	;volatile
  4133  001ABA                     
  4134                           ;LCD.c: 43:  LATD1 = 1;
  4135  001ABA  828C               	bsf	3980,1,c	;volatile
  4136  001ABC                     
  4137                           ;LCD.c: 44:  __nop();
  4138  001ABC  F000               	nop	
  4139  001ABE                     
  4140                           ;LCD.c: 45:  LATD1 = 0;
  4141  001ABE  928C               	bcf	3980,1,c	;volatile
  4142  001AC0                     
  4143                           ;LCD.c: 46:  _delay((unsigned long)((1)*(8000000L/4000.0)));
  4144  001AC0  0E03               	movlw	3
  4145  001AC2  6E01               	movwf	??_LCD_Command^0,c
  4146  001AC4  0E98               	movlw	152
  4147  001AC6                     u2517:
  4148  001AC6  2EE8               	decfsz	wreg,f,c
  4149  001AC8  D7FE               	bra	u2517
  4150  001ACA  2E01               	decfsz	??_LCD_Command^0,f,c
  4151  001ACC  D7FC               	bra	u2517
  4152  001ACE                     
  4153                           ;LCD.c: 47:     LATD = (LATD & 0x0f) | (cmd<<4);
  4154  001ACE  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  4155  001AD2  3A01               	swapf	??_LCD_Command^0,f,c
  4156  001AD4  0EF0               	movlw	240
  4157  001AD6  1601               	andwf	??_LCD_Command^0,f,c
  4158  001AD8  508C               	movf	140,w,c	;volatile
  4159  001ADA  0B0F               	andlw	15
  4160  001ADC  1001               	iorwf	??_LCD_Command^0,w,c
  4161  001ADE  6E8C               	movwf	140,c	;volatile
  4162  001AE0                     
  4163                           ;LCD.c: 48:  LATD1 = 1;
  4164  001AE0  828C               	bsf	3980,1,c	;volatile
  4165  001AE2                     
  4166                           ;LCD.c: 49:  __nop();
  4167  001AE2  F000               	nop	
  4168  001AE4                     
  4169                           ;LCD.c: 50:  LATD1 = 0;
  4170  001AE4  928C               	bcf	3980,1,c	;volatile
  4171                           
  4172                           ;LCD.c: 51:  _delay((unsigned long)((3)*(8000000L/4000.0)));
  4173  001AE6  0E08               	movlw	8
  4174  001AE8  6E01               	movwf	??_LCD_Command^0,c
  4175  001AEA  0ECA               	movlw	202
  4176  001AEC                     u2527:
  4177  001AEC  2EE8               	decfsz	wreg,f,c
  4178  001AEE  D7FE               	bra	u2527
  4179  001AF0  2E01               	decfsz	??_LCD_Command^0,f,c
  4180  001AF2  D7FC               	bra	u2527
  4181  001AF4  0012               	return		;funcret
  4182  001AF6                     __end_of_LCD_Command:
  4183                           	callstack 0
  4184                           
  4185 ;; *************** function _DatosSensorTH *****************
  4186 ;; Defined at:
  4187 ;;		line 161 in file "Main_Invernadero.c"
  4188 ;; Parameters:    Size  Location     Type
  4189 ;;  Datos           2    2[COMRAM] PTR unsigned char 
  4190 ;;		 -> main@Datos(2), 
  4191 ;; Auto vars:     Size  Location     Type
  4192 ;;  T_Integral      1    5[COMRAM] unsigned char 
  4193 ;;  RH_Integral     1    4[COMRAM] unsigned char 
  4194 ;;  Checksum        1    0        unsigned char 
  4195 ;;  T_Decimal       1    0        unsigned char 
  4196 ;;  RH_Decimal      1    0        unsigned char 
  4197 ;; Return value:  Size  Location     Type
  4198 ;;                  1    wreg      void 
  4199 ;; Registers used:
  4200 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4201 ;; Tracked objects:
  4202 ;;		On entry : 0/0
  4203 ;;		On exit  : 0/0
  4204 ;;		Unchanged: 0/0
  4205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4206 ;;      Params:         2       0       0       0       0       0       0       0       0
  4207 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4208 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4209 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4210 ;;Total ram usage:        4 bytes
  4211 ;; Hardware stack levels used: 1
  4212 ;; Hardware stack levels required when called: 1
  4213 ;; This function calls:
  4214 ;;		_DHT11_CheckResponse
  4215 ;;		_DHT11_ReadData
  4216 ;;		_DHT11_Start
  4217 ;; This function is called by:
  4218 ;;		_main
  4219 ;; This function uses a non-reentrant model
  4220 ;;
  4221                           
  4222                           	psect	text21
  4223  001C46                     __ptext21:
  4224                           	callstack 0
  4225  001C46                     _DatosSensorTH:
  4226                           	callstack 29
  4227  001C46                     
  4228                           ;Main_Invernadero.c: 162:          char RH_Decimal,RH_Integral,T_Decimal,T_Integral;;Mai
      +                          n_Invernadero.c: 163:          char Checksum;;Main_Invernadero.c: 164:          DHT11_St
      +                          art();
  4229  001C46  ECE0  F00E         	call	_DHT11_Start	;wreg free
  4230  001C4A                     
  4231                           ;Main_Invernadero.c: 165:          DHT11_CheckResponse();
  4232  001C4A  EC92  F00E         	call	_DHT11_CheckResponse	;wreg free
  4233  001C4E                     
  4234                           ;Main_Invernadero.c: 168:          RH_Integral = DHT11_ReadData();
  4235  001C4E  ECA9  F00C         	call	_DHT11_ReadData	;wreg free
  4236  001C52  6E05               	movwf	DatosSensorTH@RH_Integral^0,c
  4237  001C54  ECA9  F00C         	call	_DHT11_ReadData	;wreg free
  4238  001C58                     
  4239                           ;Main_Invernadero.c: 170:          T_Integral = DHT11_ReadData();
  4240  001C58  ECA9  F00C         	call	_DHT11_ReadData	;wreg free
  4241  001C5C  6E06               	movwf	DatosSensorTH@T_Integral^0,c
  4242  001C5E  ECA9  F00C         	call	_DHT11_ReadData	;wreg free
  4243  001C62  ECA9  F00C         	call	_DHT11_ReadData	;wreg free
  4244  001C66                     
  4245                           ;Main_Invernadero.c: 174:          Datos[0]=T_Integral;
  4246  001C66  C003  FFD9         	movff	DatosSensorTH@Datos,fsr2l
  4247  001C6A  C004  FFDA         	movff	DatosSensorTH@Datos+1,fsr2h
  4248  001C6E  C006  FFDF         	movff	DatosSensorTH@T_Integral,indf2
  4249  001C72                     
  4250                           ;Main_Invernadero.c: 175:          Datos[1]=RH_Integral;
  4251  001C72  EE20 F001          	lfsr	2,1
  4252  001C76  5003               	movf	DatosSensorTH@Datos^0,w,c
  4253  001C78  26D9               	addwf	fsr2l,f,c
  4254  001C7A  5004               	movf	(DatosSensorTH@Datos+1)^0,w,c
  4255  001C7C  22DA               	addwfc	fsr2h,f,c
  4256  001C7E  C005  FFDF         	movff	DatosSensorTH@RH_Integral,indf2
  4257  001C82  0012               	return		;funcret
  4258  001C84                     __end_of_DatosSensorTH:
  4259                           	callstack 0
  4260                           
  4261 ;; *************** function _DHT11_Start *****************
  4262 ;; Defined at:
  4263 ;;		line 22 in file "DHT11.c"
  4264 ;; Parameters:    Size  Location     Type
  4265 ;;		None
  4266 ;; Auto vars:     Size  Location     Type
  4267 ;;		None
  4268 ;; Return value:  Size  Location     Type
  4269 ;;                  1    wreg      void 
  4270 ;; Registers used:
  4271 ;;		wreg
  4272 ;; Tracked objects:
  4273 ;;		On entry : 0/0
  4274 ;;		On exit  : 0/0
  4275 ;;		Unchanged: 0/0
  4276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4277 ;;      Params:         0       0       0       0       0       0       0       0       0
  4278 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4279 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4280 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4281 ;;Total ram usage:        1 bytes
  4282 ;; Hardware stack levels used: 1
  4283 ;; This function calls:
  4284 ;;		Nothing
  4285 ;; This function is called by:
  4286 ;;		_DatosSensorTH
  4287 ;; This function uses a non-reentrant model
  4288 ;;
  4289                           
  4290                           	psect	text22
  4291  001DC0                     __ptext22:
  4292                           	callstack 0
  4293  001DC0                     _DHT11_Start:
  4294                           	callstack 29
  4295  001DC0                     
  4296                           ;DHT11.c: 24:     TRISAbits.RA0 = 0;
  4297  001DC0  9092               	bcf	146,0,c	;volatile
  4298                           
  4299                           ;DHT11.c: 25:     LATA0 = 0;
  4300  001DC2  9089               	bcf	3977,0,c	;volatile
  4301  001DC4                     
  4302                           ;DHT11.c: 26:     _delay((unsigned long)((18)*(8000000L/4000.0)));
  4303  001DC4  0E2F               	movlw	47
  4304  001DC6  6E01               	movwf	??_DHT11_Start^0,c
  4305  001DC8  0EC0               	movlw	192
  4306  001DCA                     u2537:
  4307  001DCA  2EE8               	decfsz	wreg,f,c
  4308  001DCC  D7FE               	bra	u2537
  4309  001DCE  2E01               	decfsz	??_DHT11_Start^0,f,c
  4310  001DD0  D7FC               	bra	u2537
  4311  001DD2                     
  4312                           ;DHT11.c: 27:     LATA0 = 1;
  4313  001DD2  8089               	bsf	3977,0,c	;volatile
  4314                           
  4315                           ;DHT11.c: 28:     _delay((unsigned long)((20)*(8000000L/4000000.0)));
  4316  001DD4  0E0D               	movlw	13
  4317  001DD6                     u2547:
  4318  001DD6  2EE8               	decfsz	wreg,f,c
  4319  001DD8  D7FE               	bra	u2547
  4320  001DDA  F000               	nop	
  4321  001DDC                     
  4322                           ;DHT11.c: 29:     TRISAbits.RA0 = 1;
  4323  001DDC  8092               	bsf	146,0,c	;volatile
  4324  001DDE  0012               	return		;funcret
  4325  001DE0                     __end_of_DHT11_Start:
  4326                           	callstack 0
  4327                           
  4328 ;; *************** function _DHT11_ReadData *****************
  4329 ;; Defined at:
  4330 ;;		line 6 in file "DHT11.c"
  4331 ;; Parameters:    Size  Location     Type
  4332 ;;		None
  4333 ;; Auto vars:     Size  Location     Type
  4334 ;;  data            1    1[COMRAM] unsigned char 
  4335 ;;  i               1    0[COMRAM] unsigned char 
  4336 ;; Return value:  Size  Location     Type
  4337 ;;                  1    wreg      unsigned char 
  4338 ;; Registers used:
  4339 ;;		wreg, status,2, status,0
  4340 ;; Tracked objects:
  4341 ;;		On entry : 0/0
  4342 ;;		On exit  : 0/0
  4343 ;;		Unchanged: 0/0
  4344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4345 ;;      Params:         0       0       0       0       0       0       0       0       0
  4346 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4347 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4348 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4349 ;;Total ram usage:        2 bytes
  4350 ;; Hardware stack levels used: 1
  4351 ;; This function calls:
  4352 ;;		Nothing
  4353 ;; This function is called by:
  4354 ;;		_DatosSensorTH
  4355 ;; This function uses a non-reentrant model
  4356 ;;
  4357                           
  4358                           	psect	text23
  4359  001952                     __ptext23:
  4360                           	callstack 0
  4361  001952                     _DHT11_ReadData:
  4362                           	callstack 29
  4363  001952                     
  4364                           ;DHT11.c: 8:   char i,data = 0;
  4365  001952  0E00               	movlw	0
  4366  001954  6E02               	movwf	DHT11_ReadData@data^0,c
  4367                           
  4368                           ;DHT11.c: 9:     for(i=0;i<8;i++)
  4369  001956  0E00               	movlw	0
  4370  001958  6E01               	movwf	DHT11_ReadData@i^0,c
  4371  00195A                     l390:
  4372  00195A  A080               	btfss	128,0,c	;volatile
  4373  00195C  EFB2  F00C         	goto	u2021
  4374  001960  EFB4  F00C         	goto	u2020
  4375  001964                     u2021:
  4376  001964  EFAD  F00C         	goto	l390
  4377  001968                     u2020:
  4378  001968                     
  4379                           ;DHT11.c: 12:         _delay((unsigned long)((30)*(8000000L/4000000.0)));
  4380  001968  0E14               	movlw	20
  4381  00196A                     u2557:
  4382  00196A  2EE8               	decfsz	wreg,f,c
  4383  00196C  D7FE               	bra	u2557
  4384  00196E                     
  4385                           ;DHT11.c: 13:         if(PORTAbits.RA0 & 1)
  4386  00196E  A080               	btfss	128,0,c	;volatile
  4387  001970  EFBC  F00C         	goto	u2031
  4388  001974  EFBE  F00C         	goto	u2030
  4389  001978                     u2031:
  4390  001978  EFC2  F00C         	goto	l2416
  4391  00197C                     u2030:
  4392  00197C                     
  4393                           ;DHT11.c: 14:           data = ((data<<1) | 1);
  4394  00197C  80D8               	bsf	status,0,c
  4395  00197E  3602               	rlcf	DHT11_ReadData@data^0,f,c
  4396  001980  EFC5  F00C         	goto	l395
  4397  001984                     l2416:
  4398                           
  4399                           ;DHT11.c: 16:           data = (data<<1);
  4400  001984  5002               	movf	DHT11_ReadData@data^0,w,c
  4401  001986  2402               	addwf	DHT11_ReadData@data^0,w,c
  4402  001988  6E02               	movwf	DHT11_ReadData@data^0,c
  4403  00198A                     l395:
  4404  00198A  B080               	btfsc	128,0,c	;volatile
  4405  00198C  EFCA  F00C         	goto	u2041
  4406  001990  EFCC  F00C         	goto	u2040
  4407  001994                     u2041:
  4408  001994  EFC5  F00C         	goto	l395
  4409  001998                     u2040:
  4410  001998                     
  4411                           ;DHT11.c: 18:     }
  4412  001998  2A01               	incf	DHT11_ReadData@i^0,f,c
  4413  00199A  0E07               	movlw	7
  4414  00199C  6401               	cpfsgt	DHT11_ReadData@i^0,c
  4415  00199E  EFD3  F00C         	goto	u2051
  4416  0019A2  EFD5  F00C         	goto	u2050
  4417  0019A6                     u2051:
  4418  0019A6  EFAD  F00C         	goto	l390
  4419  0019AA                     u2050:
  4420  0019AA                     
  4421                           ;DHT11.c: 19:   return data;
  4422  0019AA  5002               	movf	DHT11_ReadData@data^0,w,c
  4423  0019AC  0012               	return		;funcret
  4424  0019AE                     __end_of_DHT11_ReadData:
  4425                           	callstack 0
  4426                           
  4427 ;; *************** function _DHT11_CheckResponse *****************
  4428 ;; Defined at:
  4429 ;;		line 35 in file "DHT11.c"
  4430 ;; Parameters:    Size  Location     Type
  4431 ;;		None
  4432 ;; Auto vars:     Size  Location     Type
  4433 ;;		None
  4434 ;; Return value:  Size  Location     Type
  4435 ;;                  1    wreg      void 
  4436 ;; Registers used:
  4437 ;;		None
  4438 ;; Tracked objects:
  4439 ;;		On entry : 0/0
  4440 ;;		On exit  : 0/0
  4441 ;;		Unchanged: 0/0
  4442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4443 ;;      Params:         0       0       0       0       0       0       0       0       0
  4444 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4445 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4446 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4447 ;;Total ram usage:        0 bytes
  4448 ;; Hardware stack levels used: 1
  4449 ;; This function calls:
  4450 ;;		Nothing
  4451 ;; This function is called by:
  4452 ;;		_DatosSensorTH
  4453 ;; This function uses a non-reentrant model
  4454 ;;
  4455                           
  4456                           	psect	text24
  4457  001D24                     __ptext24:
  4458                           	callstack 0
  4459  001D24                     _DHT11_CheckResponse:
  4460                           	callstack 29
  4461  001D24                     l404:
  4462  001D24  B080               	btfsc	128,0,c	;volatile
  4463  001D26  EF97  F00E         	goto	u1991
  4464  001D2A  EF99  F00E         	goto	u1990
  4465  001D2E                     u1991:
  4466  001D2E  EF92  F00E         	goto	l404
  4467  001D32                     u1990:
  4468  001D32                     l407:
  4469  001D32  A080               	btfss	128,0,c	;volatile
  4470  001D34  EF9E  F00E         	goto	u2001
  4471  001D38  EFA0  F00E         	goto	u2000
  4472  001D3C                     u2001:
  4473  001D3C  EF99  F00E         	goto	l407
  4474  001D40                     u2000:
  4475  001D40                     l410:
  4476  001D40  B080               	btfsc	128,0,c	;volatile
  4477  001D42  EFA5  F00E         	goto	u2011
  4478  001D46  EFA7  F00E         	goto	u2010
  4479  001D4A                     u2011:
  4480  001D4A  EFA0  F00E         	goto	l410
  4481  001D4E                     u2010:
  4482  001D4E  0012               	return		;funcret
  4483  001D50                     __end_of_DHT11_CheckResponse:
  4484                           	callstack 0
  4485                           
  4486 ;; *************** function _DatoDigitado *****************
  4487 ;; Defined at:
  4488 ;;		line 115 in file "Main_Invernadero.c"
  4489 ;; Parameters:    Size  Location     Type
  4490 ;;  prmTemperatu    2    6[COMRAM] PTR unsigned char 
  4491 ;;		 -> main@Humedad(2), main@Temperatura(2), 
  4492 ;; Auto vars:     Size  Location     Type
  4493 ;;  Decena          2   13[COMRAM] int 
  4494 ;;  Resultado       2   11[COMRAM] int 
  4495 ;;  Unidad          2    9[COMRAM] int 
  4496 ;; Return value:  Size  Location     Type
  4497 ;;                  2    6[COMRAM] int 
  4498 ;; Registers used:
  4499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4500 ;; Tracked objects:
  4501 ;;		On entry : 0/0
  4502 ;;		On exit  : 0/0
  4503 ;;		Unchanged: 0/0
  4504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4505 ;;      Params:         2       0       0       0       0       0       0       0       0
  4506 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4507 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4508 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4509 ;;Total ram usage:        9 bytes
  4510 ;; Hardware stack levels used: 1
  4511 ;; Hardware stack levels required when called: 1
  4512 ;; This function calls:
  4513 ;;		___wmul
  4514 ;; This function is called by:
  4515 ;;		_main
  4516 ;; This function uses a non-reentrant model
  4517 ;;
  4518                           
  4519                           	psect	text25
  4520  00181C                     __ptext25:
  4521                           	callstack 0
  4522  00181C                     _DatoDigitado:
  4523                           	callstack 29
  4524  00181C                     
  4525                           ;Main_Invernadero.c: 117:     int Unidad = 0;
  4526  00181C  0E00               	movlw	0
  4527  00181E  6E0B               	movwf	(DatoDigitado@Unidad+1)^0,c
  4528  001820  0E00               	movlw	0
  4529  001822  6E0A               	movwf	DatoDigitado@Unidad^0,c
  4530                           
  4531                           ;Main_Invernadero.c: 119:     int Resultado=0;
  4532  001824  0E00               	movlw	0
  4533  001826  6E0D               	movwf	(DatoDigitado@Resultado+1)^0,c
  4534  001828  0E00               	movlw	0
  4535  00182A  6E0C               	movwf	DatoDigitado@Resultado^0,c
  4536  00182C                     
  4537                           ;Main_Invernadero.c: 121:     Decena = prmTemperatura[0]-'0';
  4538  00182C  C007  FFD9         	movff	DatoDigitado@prmTemperatura,fsr2l
  4539  001830  C008  FFDA         	movff	DatoDigitado@prmTemperatura+1,fsr2h
  4540  001834  50DF               	movf	indf2,w,c
  4541  001836  6E09               	movwf	??_DatoDigitado^0,c
  4542  001838  0ED0               	movlw	208
  4543  00183A  2409               	addwf	??_DatoDigitado^0,w,c
  4544  00183C  6E0E               	movwf	DatoDigitado@Decena^0,c
  4545  00183E  6A0F               	clrf	(DatoDigitado@Decena+1)^0,c
  4546  001840  0EFF               	movlw	255
  4547  001842  220F               	addwfc	(DatoDigitado@Decena+1)^0,f,c
  4548  001844                     
  4549                           ;Main_Invernadero.c: 122:     Unidad = prmTemperatura[1]-'0';
  4550  001844  EE20 F001          	lfsr	2,1
  4551  001848  5007               	movf	DatoDigitado@prmTemperatura^0,w,c
  4552  00184A  26D9               	addwf	fsr2l,f,c
  4553  00184C  5008               	movf	(DatoDigitado@prmTemperatura+1)^0,w,c
  4554  00184E  22DA               	addwfc	fsr2h,f,c
  4555  001850  50DF               	movf	indf2,w,c
  4556  001852  6E09               	movwf	??_DatoDigitado^0,c
  4557  001854  0ED0               	movlw	208
  4558  001856  2409               	addwf	??_DatoDigitado^0,w,c
  4559  001858  6E0A               	movwf	DatoDigitado@Unidad^0,c
  4560  00185A  6A0B               	clrf	(DatoDigitado@Unidad+1)^0,c
  4561  00185C  0EFF               	movlw	255
  4562  00185E  220B               	addwfc	(DatoDigitado@Unidad+1)^0,f,c
  4563  001860                     
  4564                           ;Main_Invernadero.c: 124:     Decena = Decena * 10;
  4565  001860  C00E  F001         	movff	DatoDigitado@Decena,___wmul@multiplier
  4566  001864  C00F  F002         	movff	DatoDigitado@Decena+1,___wmul@multiplier+1
  4567  001868  0E00               	movlw	0
  4568  00186A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4569  00186C  0E0A               	movlw	10
  4570  00186E  6E03               	movwf	___wmul@multiplicand^0,c
  4571  001870  ECBD  F00E         	call	___wmul	;wreg free
  4572  001874  C001  F00E         	movff	?___wmul,DatoDigitado@Decena
  4573  001878  C002  F00F         	movff	?___wmul+1,DatoDigitado@Decena+1
  4574  00187C                     
  4575                           ;Main_Invernadero.c: 125:     Resultado = Decena + Unidad;
  4576  00187C  500A               	movf	DatoDigitado@Unidad^0,w,c
  4577  00187E  240E               	addwf	DatoDigitado@Decena^0,w,c
  4578  001880  6E0C               	movwf	DatoDigitado@Resultado^0,c
  4579  001882  500B               	movf	(DatoDigitado@Unidad+1)^0,w,c
  4580  001884  200F               	addwfc	(DatoDigitado@Decena+1)^0,w,c
  4581  001886  6E0D               	movwf	(DatoDigitado@Resultado+1)^0,c
  4582  001888                     
  4583                           ;Main_Invernadero.c: 127:     return Resultado;
  4584  001888  C00C  F007         	movff	DatoDigitado@Resultado,?_DatoDigitado
  4585  00188C  C00D  F008         	movff	DatoDigitado@Resultado+1,?_DatoDigitado+1
  4586  001890  0012               	return		;funcret
  4587  001892                     __end_of_DatoDigitado:
  4588                           	callstack 0
  4589                           
  4590 ;; *************** function ___wmul *****************
  4591 ;; Defined at:
  4592 ;;		line 15 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\Umul16.c"
  4593 ;; Parameters:    Size  Location     Type
  4594 ;;  multiplier      2    0[COMRAM] unsigned int 
  4595 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4596 ;; Auto vars:     Size  Location     Type
  4597 ;;  product         2    4[COMRAM] unsigned int 
  4598 ;; Return value:  Size  Location     Type
  4599 ;;                  2    0[COMRAM] unsigned int 
  4600 ;; Registers used:
  4601 ;;		wreg, status,2, status,0, prodl, prodh
  4602 ;; Tracked objects:
  4603 ;;		On entry : 0/0
  4604 ;;		On exit  : 0/0
  4605 ;;		Unchanged: 0/0
  4606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4607 ;;      Params:         4       0       0       0       0       0       0       0       0
  4608 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4609 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4610 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4611 ;;Total ram usage:        6 bytes
  4612 ;; Hardware stack levels used: 1
  4613 ;; This function calls:
  4614 ;;		Nothing
  4615 ;; This function is called by:
  4616 ;;		_DatoDigitado
  4617 ;; This function uses a non-reentrant model
  4618 ;;
  4619                           
  4620                           	psect	text26
  4621  001D7A                     __ptext26:
  4622                           	callstack 0
  4623  001D7A                     ___wmul:
  4624                           	callstack 29
  4625  001D7A  5001               	movf	___wmul@multiplier^0,w,c
  4626  001D7C  0203               	mulwf	___wmul@multiplicand^0,c
  4627  001D7E  CFF3 F005          	movff	prodl,___wmul@product
  4628  001D82  CFF4 F006          	movff	prodh,___wmul@product+1
  4629  001D86  5001               	movf	___wmul@multiplier^0,w,c
  4630  001D88  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  4631  001D8A  50F3               	movf	243,w,c
  4632  001D8C  2606               	addwf	(___wmul@product+1)^0,f,c
  4633  001D8E  5002               	movf	(___wmul@multiplier+1)^0,w,c
  4634  001D90  0203               	mulwf	___wmul@multiplicand^0,c
  4635  001D92  50F3               	movf	243,w,c
  4636  001D94  2606               	addwf	(___wmul@product+1)^0,f,c
  4637  001D96  C005  F001         	movff	___wmul@product,?___wmul
  4638  001D9A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4639  001D9E  0012               	return		;funcret
  4640  001DA0                     __end_of___wmul:
  4641                           	callstack 0
  4642                           
  4643 ;; *************** function _ControlTemperaturaVentilador *****************
  4644 ;; Defined at:
  4645 ;;		line 193 in file "Main_Invernadero.c"
  4646 ;; Parameters:    Size  Location     Type
  4647 ;;  TempActual      2    0[COMRAM] PTR unsigned char 
  4648 ;;		 -> main@Datos(2), 
  4649 ;;  TempDigitada    2    2[COMRAM] int 
  4650 ;;  MargenErrorT    2    4[COMRAM] int 
  4651 ;; Auto vars:     Size  Location     Type
  4652 ;;		None
  4653 ;; Return value:  Size  Location     Type
  4654 ;;                  1    wreg      void 
  4655 ;; Registers used:
  4656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4657 ;; Tracked objects:
  4658 ;;		On entry : 0/0
  4659 ;;		On exit  : 0/0
  4660 ;;		Unchanged: 0/0
  4661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4662 ;;      Params:         6       0       0       0       0       0       0       0       0
  4663 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4664 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4665 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4666 ;;Total ram usage:       11 bytes
  4667 ;; Hardware stack levels used: 1
  4668 ;; Hardware stack levels required when called: 1
  4669 ;; This function calls:
  4670 ;;		_ApagarVentiladores
  4671 ;; This function is called by:
  4672 ;;		_main
  4673 ;; This function uses a non-reentrant model
  4674 ;;
  4675                           
  4676                           	psect	text27
  4677  001AF6                     __ptext27:
  4678                           	callstack 0
  4679  001AF6                     _ControlTemperaturaVentilador:
  4680                           	callstack 29
  4681  001AF6                     
  4682                           ;Main_Invernadero.c: 194:     if(*TempActual>TempDigitada+MargenErrorT){
  4683  001AF6  C001  FFD9         	movff	ControlTemperaturaVentilador@TempActual,fsr2l
  4684  001AFA  C002  FFDA         	movff	ControlTemperaturaVentilador@TempActual+1,fsr2h
  4685  001AFE  50DF               	movf	indf2,w,c
  4686  001B00  6E07               	movwf	??_ControlTemperaturaVentilador^0,c
  4687  001B02  6A08               	clrf	(??_ControlTemperaturaVentilador+1)^0,c
  4688  001B04  5005               	movf	ControlTemperaturaVentilador@MargenErrorT^0,w,c
  4689  001B06  2403               	addwf	ControlTemperaturaVentilador@TempDigitada^0,w,c
  4690  001B08  6E09               	movwf	(??_ControlTemperaturaVentilador+2)^0,c
  4691  001B0A  5006               	movf	(ControlTemperaturaVentilador@MargenErrorT+1)^0,w,c
  4692  001B0C  2004               	addwfc	(ControlTemperaturaVentilador@TempDigitada+1)^0,w,c
  4693  001B0E  6E0A               	movwf	(??_ControlTemperaturaVentilador+3)^0,c
  4694  001B10  5007               	movf	??_ControlTemperaturaVentilador^0,w,c
  4695  001B12  5C09               	subwf	(??_ControlTemperaturaVentilador+2)^0,w,c
  4696  001B14  500A               	movf	(??_ControlTemperaturaVentilador+3)^0,w,c
  4697  001B16  0A80               	xorlw	128
  4698  001B18  6E0B               	movwf	(??_ControlTemperaturaVentilador+4)^0,c
  4699  001B1A  5008               	movf	(??_ControlTemperaturaVentilador+1)^0,w,c
  4700  001B1C  0A80               	xorlw	128
  4701  001B1E  580B               	subwfb	(??_ControlTemperaturaVentilador+4)^0,w,c
  4702  001B20  B0D8               	btfsc	status,0,c
  4703  001B22  EF95  F00D         	goto	u2131
  4704  001B26  EF97  F00D         	goto	u2130
  4705  001B2A                     u2131:
  4706  001B2A  EF9B  F00D         	goto	l2536
  4707  001B2E                     u2130:
  4708  001B2E                     
  4709                           ;Main_Invernadero.c: 195:         LATC2=1;
  4710  001B2E  848B               	bsf	3979,2,c	;volatile
  4711                           
  4712                           ;Main_Invernadero.c: 196:         LATC6=1;
  4713  001B30  8C8B               	bsf	3979,6,c	;volatile
  4714                           
  4715                           ;Main_Invernadero.c: 197:     }else{
  4716  001B32  EF9D  F00D         	goto	l123
  4717  001B36                     l2536:
  4718                           
  4719                           ;Main_Invernadero.c: 198:         ApagarVentiladores();
  4720  001B36  ECF4  F00E         	call	_ApagarVentiladores	;wreg free
  4721  001B3A                     l123:
  4722  001B3A  0012               	return		;funcret
  4723  001B3C                     __end_of_ControlTemperaturaVentilador:
  4724                           	callstack 0
  4725                           
  4726 ;; *************** function _ApagarVentiladores *****************
  4727 ;; Defined at:
  4728 ;;		line 205 in file "Main_Invernadero.c"
  4729 ;; Parameters:    Size  Location     Type
  4730 ;;		None
  4731 ;; Auto vars:     Size  Location     Type
  4732 ;;		None
  4733 ;; Return value:  Size  Location     Type
  4734 ;;                  1    wreg      void 
  4735 ;; Registers used:
  4736 ;;		None
  4737 ;; Tracked objects:
  4738 ;;		On entry : 0/0
  4739 ;;		On exit  : 0/0
  4740 ;;		Unchanged: 0/0
  4741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4742 ;;      Params:         0       0       0       0       0       0       0       0       0
  4743 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4744 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4745 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4746 ;;Total ram usage:        0 bytes
  4747 ;; Hardware stack levels used: 1
  4748 ;; This function calls:
  4749 ;;		Nothing
  4750 ;; This function is called by:
  4751 ;;		_ControlTemperaturaVentilador
  4752 ;; This function uses a non-reentrant model
  4753 ;;
  4754                           
  4755                           	psect	text28
  4756  001DE8                     __ptext28:
  4757                           	callstack 0
  4758  001DE8                     _ApagarVentiladores:
  4759                           	callstack 29
  4760  001DE8                     
  4761                           ;Main_Invernadero.c: 206:     LATC2=0;
  4762  001DE8  948B               	bcf	3979,2,c	;volatile
  4763                           
  4764                           ;Main_Invernadero.c: 207:     LATC6=0;
  4765  001DEA  9C8B               	bcf	3979,6,c	;volatile
  4766  001DEC  0012               	return		;funcret
  4767  001DEE                     __end_of_ApagarVentiladores:
  4768                           	callstack 0
  4769                           
  4770 ;; *************** function _ControlHumedadAspersor *****************
  4771 ;; Defined at:
  4772 ;;		line 182 in file "Main_Invernadero.c"
  4773 ;; Parameters:    Size  Location     Type
  4774 ;;  HumedadActua    2    0[COMRAM] PTR unsigned char 
  4775 ;;		 -> main@Datos(2), 
  4776 ;;  HumedadDigit    2    2[COMRAM] int 
  4777 ;;  MargenErrorH    2    4[COMRAM] int 
  4778 ;; Auto vars:     Size  Location     Type
  4779 ;;		None
  4780 ;; Return value:  Size  Location     Type
  4781 ;;                  1    wreg      void 
  4782 ;; Registers used:
  4783 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4784 ;; Tracked objects:
  4785 ;;		On entry : 0/0
  4786 ;;		On exit  : 0/0
  4787 ;;		Unchanged: 0/0
  4788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4789 ;;      Params:         6       0       0       0       0       0       0       0       0
  4790 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4791 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4792 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4793 ;;Total ram usage:       11 bytes
  4794 ;; Hardware stack levels used: 1
  4795 ;; This function calls:
  4796 ;;		Nothing
  4797 ;; This function is called by:
  4798 ;;		_main
  4799 ;; This function uses a non-reentrant model
  4800 ;;
  4801                           
  4802                           	psect	text29
  4803  001B3C                     __ptext29:
  4804                           	callstack 0
  4805  001B3C                     _ControlHumedadAspersor:
  4806                           	callstack 30
  4807  001B3C                     
  4808                           ;Main_Invernadero.c: 183:     if(*HumedadActual<HumedadDigitada-MargenErrorH){
  4809  001B3C  5005               	movf	ControlHumedadAspersor@MargenErrorH^0,w,c
  4810  001B3E  5C03               	subwf	ControlHumedadAspersor@HumedadDigitada^0,w,c
  4811  001B40  6E07               	movwf	??_ControlHumedadAspersor^0,c
  4812  001B42  5006               	movf	(ControlHumedadAspersor@MargenErrorH+1)^0,w,c
  4813  001B44  5804               	subwfb	(ControlHumedadAspersor@HumedadDigitada+1)^0,w,c
  4814  001B46  6E08               	movwf	(??_ControlHumedadAspersor+1)^0,c
  4815  001B48  C001  FFD9         	movff	ControlHumedadAspersor@HumedadActual,fsr2l
  4816  001B4C  C002  FFDA         	movff	ControlHumedadAspersor@HumedadActual+1,fsr2h
  4817  001B50  50DF               	movf	indf2,w,c
  4818  001B52  6E09               	movwf	(??_ControlHumedadAspersor+2)^0,c
  4819  001B54  6A0A               	clrf	(??_ControlHumedadAspersor+3)^0,c
  4820  001B56  5007               	movf	??_ControlHumedadAspersor^0,w,c
  4821  001B58  5C09               	subwf	(??_ControlHumedadAspersor+2)^0,w,c
  4822  001B5A  500A               	movf	(??_ControlHumedadAspersor+3)^0,w,c
  4823  001B5C  0A80               	xorlw	128
  4824  001B5E  6E0B               	movwf	(??_ControlHumedadAspersor+4)^0,c
  4825  001B60  5008               	movf	(??_ControlHumedadAspersor+1)^0,w,c
  4826  001B62  0A80               	xorlw	128
  4827  001B64  580B               	subwfb	(??_ControlHumedadAspersor+4)^0,w,c
  4828  001B66  B0D8               	btfsc	status,0,c
  4829  001B68  EFB8  F00D         	goto	u2121
  4830  001B6C  EFBA  F00D         	goto	u2120
  4831  001B70                     u2121:
  4832  001B70  EFBE  F00D         	goto	l116
  4833  001B74                     u2120:
  4834  001B74                     
  4835                           ;Main_Invernadero.c: 184:         LATC0=1;
  4836  001B74  808B               	bsf	3979,0,c	;volatile
  4837                           
  4838                           ;Main_Invernadero.c: 185:         LATC1=1;
  4839  001B76  828B               	bsf	3979,1,c	;volatile
  4840                           
  4841                           ;Main_Invernadero.c: 186:     }else{
  4842  001B78  EFC0  F00D         	goto	l118
  4843  001B7C                     l116:
  4844                           
  4845                           ;Main_Invernadero.c: 188:         LATC0=0;
  4846  001B7C  908B               	bcf	3979,0,c	;volatile
  4847                           
  4848                           ;Main_Invernadero.c: 189:         LATC1=0;
  4849  001B7E  928B               	bcf	3979,1,c	;volatile
  4850  001B80                     l118:
  4851  001B80  0012               	return		;funcret
  4852  001B82                     __end_of_ControlHumedadAspersor:
  4853                           	callstack 0
  4854                           
  4855 ;; *************** function _Comparar_T_H_Adecuados *****************
  4856 ;; Defined at:
  4857 ;;		line 131 in file "Main_Invernadero.c"
  4858 ;; Parameters:    Size  Location     Type
  4859 ;;  TempActual      2    2[COMRAM] PTR unsigned char 
  4860 ;;		 -> main@Datos(2), 
  4861 ;;  HumActual       2    4[COMRAM] PTR unsigned char 
  4862 ;;		 -> main@Datos(2), 
  4863 ;;  TempDigitada    2    6[COMRAM] int 
  4864 ;;  HumDigitada     2    8[COMRAM] int 
  4865 ;;  MargenErrorT    2   10[COMRAM] int 
  4866 ;;  MargenErrorH    2   12[COMRAM] int 
  4867 ;; Auto vars:     Size  Location     Type
  4868 ;;  HumedadAdecu    1   20[COMRAM] _Bool 
  4869 ;;  TemperaturaA    1   19[COMRAM] _Bool 
  4870 ;; Return value:  Size  Location     Type
  4871 ;;                  1    wreg      void 
  4872 ;; Registers used:
  4873 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4874 ;; Tracked objects:
  4875 ;;		On entry : 0/0
  4876 ;;		On exit  : 0/0
  4877 ;;		Unchanged: 0/0
  4878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4879 ;;      Params:        12       0       0       0       0       0       0       0       0
  4880 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4881 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4882 ;;      Totals:        19       0       0       0       0       0       0       0       0
  4883 ;;Total ram usage:       19 bytes
  4884 ;; Hardware stack levels used: 1
  4885 ;; Hardware stack levels required when called: 2
  4886 ;; This function calls:
  4887 ;;		_PrenderLed
  4888 ;; This function is called by:
  4889 ;;		_main
  4890 ;; This function uses a non-reentrant model
  4891 ;;
  4892                           
  4893                           	psect	text30
  4894  00150C                     __ptext30:
  4895                           	callstack 0
  4896  00150C                     _Comparar_T_H_Adecuados:
  4897                           	callstack 28
  4898  00150C                     
  4899                           ;Main_Invernadero.c: 131: void Comparar_T_H_Adecuados(char *TempActual,char *HumActual,i
      +                          nt TempDigitada,;Main_Invernadero.c: 132:         int HumDigitada,int MargenErrorT,int M
      +                          argenErrorH){;Main_Invernadero.c: 133:     _Bool TemperaturaAdecuada= 1;
  4900  00150C  0E01               	movlw	1
  4901  00150E  6E14               	movwf	Comparar_T_H_Adecuados@TemperaturaAdecuada^0,c
  4902                           
  4903                           ;Main_Invernadero.c: 134:     _Bool HumedadAdecuada =1;
  4904  001510  0E01               	movlw	1
  4905  001512  6E15               	movwf	Comparar_T_H_Adecuados@HumedadAdecuada^0,c
  4906  001514                     
  4907                           ;Main_Invernadero.c: 135:     if(*TempActual<TempDigitada-MargenErrorT || *TempActual >T
      +                          empDigitada+MargenErrorT){
  4908  001514  500B               	movf	Comparar_T_H_Adecuados@MargenErrorT^0,w,c
  4909  001516  5C07               	subwf	Comparar_T_H_Adecuados@TempDigitada^0,w,c
  4910  001518  6E0F               	movwf	??_Comparar_T_H_Adecuados^0,c
  4911  00151A  500C               	movf	(Comparar_T_H_Adecuados@MargenErrorT+1)^0,w,c
  4912  00151C  5808               	subwfb	(Comparar_T_H_Adecuados@TempDigitada+1)^0,w,c
  4913  00151E  6E10               	movwf	(??_Comparar_T_H_Adecuados+1)^0,c
  4914  001520  C003  FFD9         	movff	Comparar_T_H_Adecuados@TempActual,fsr2l
  4915  001524  C004  FFDA         	movff	Comparar_T_H_Adecuados@TempActual+1,fsr2h
  4916  001528  50DF               	movf	indf2,w,c
  4917  00152A  6E11               	movwf	(??_Comparar_T_H_Adecuados+2)^0,c
  4918  00152C  6A12               	clrf	(??_Comparar_T_H_Adecuados+3)^0,c
  4919  00152E  500F               	movf	??_Comparar_T_H_Adecuados^0,w,c
  4920  001530  5C11               	subwf	(??_Comparar_T_H_Adecuados+2)^0,w,c
  4921  001532  5012               	movf	(??_Comparar_T_H_Adecuados+3)^0,w,c
  4922  001534  0A80               	xorlw	128
  4923  001536  6E13               	movwf	(??_Comparar_T_H_Adecuados+4)^0,c
  4924  001538  5010               	movf	(??_Comparar_T_H_Adecuados+1)^0,w,c
  4925  00153A  0A80               	xorlw	128
  4926  00153C  5813               	subwfb	(??_Comparar_T_H_Adecuados+4)^0,w,c
  4927  00153E  A0D8               	btfss	status,0,c
  4928  001540  EFA4  F00A         	goto	u2081
  4929  001544  EFA6  F00A         	goto	u2080
  4930  001548                     u2081:
  4931  001548  EFC2  F00A         	goto	l2518
  4932  00154C                     u2080:
  4933  00154C  C003  FFD9         	movff	Comparar_T_H_Adecuados@TempActual,fsr2l
  4934  001550  C004  FFDA         	movff	Comparar_T_H_Adecuados@TempActual+1,fsr2h
  4935  001554  50DF               	movf	indf2,w,c
  4936  001556  6E0F               	movwf	??_Comparar_T_H_Adecuados^0,c
  4937  001558  6A10               	clrf	(??_Comparar_T_H_Adecuados+1)^0,c
  4938  00155A  500B               	movf	Comparar_T_H_Adecuados@MargenErrorT^0,w,c
  4939  00155C  2407               	addwf	Comparar_T_H_Adecuados@TempDigitada^0,w,c
  4940  00155E  6E11               	movwf	(??_Comparar_T_H_Adecuados+2)^0,c
  4941  001560  500C               	movf	(Comparar_T_H_Adecuados@MargenErrorT+1)^0,w,c
  4942  001562  2008               	addwfc	(Comparar_T_H_Adecuados@TempDigitada+1)^0,w,c
  4943  001564  6E12               	movwf	(??_Comparar_T_H_Adecuados+3)^0,c
  4944  001566  500F               	movf	??_Comparar_T_H_Adecuados^0,w,c
  4945  001568  5C11               	subwf	(??_Comparar_T_H_Adecuados+2)^0,w,c
  4946  00156A  5012               	movf	(??_Comparar_T_H_Adecuados+3)^0,w,c
  4947  00156C  0A80               	xorlw	128
  4948  00156E  6E13               	movwf	(??_Comparar_T_H_Adecuados+4)^0,c
  4949  001570  5010               	movf	(??_Comparar_T_H_Adecuados+1)^0,w,c
  4950  001572  0A80               	xorlw	128
  4951  001574  5813               	subwfb	(??_Comparar_T_H_Adecuados+4)^0,w,c
  4952  001576  B0D8               	btfsc	status,0,c
  4953  001578  EFC0  F00A         	goto	u2091
  4954  00157C  EFC2  F00A         	goto	u2090
  4955  001580                     u2091:
  4956  001580  EFC4  F00A         	goto	l2520
  4957  001584                     u2090:
  4958  001584                     l2518:
  4959                           
  4960                           ;Main_Invernadero.c: 136:            TemperaturaAdecuada=0;
  4961  001584  0E00               	movlw	0
  4962  001586  6E14               	movwf	Comparar_T_H_Adecuados@TemperaturaAdecuada^0,c
  4963  001588                     l2520:
  4964                           
  4965                           ;Main_Invernadero.c: 138:     if(*HumActual<HumDigitada-MargenErrorH || *HumActual>HumDi
      +                          gitada+MargenErrorH){
  4966  001588  500D               	movf	Comparar_T_H_Adecuados@MargenErrorH^0,w,c
  4967  00158A  5C09               	subwf	Comparar_T_H_Adecuados@HumDigitada^0,w,c
  4968  00158C  6E0F               	movwf	??_Comparar_T_H_Adecuados^0,c
  4969  00158E  500E               	movf	(Comparar_T_H_Adecuados@MargenErrorH+1)^0,w,c
  4970  001590  580A               	subwfb	(Comparar_T_H_Adecuados@HumDigitada+1)^0,w,c
  4971  001592  6E10               	movwf	(??_Comparar_T_H_Adecuados+1)^0,c
  4972  001594  C005  FFD9         	movff	Comparar_T_H_Adecuados@HumActual,fsr2l
  4973  001598  C006  FFDA         	movff	Comparar_T_H_Adecuados@HumActual+1,fsr2h
  4974  00159C  50DF               	movf	indf2,w,c
  4975  00159E  6E11               	movwf	(??_Comparar_T_H_Adecuados+2)^0,c
  4976  0015A0  6A12               	clrf	(??_Comparar_T_H_Adecuados+3)^0,c
  4977  0015A2  500F               	movf	??_Comparar_T_H_Adecuados^0,w,c
  4978  0015A4  5C11               	subwf	(??_Comparar_T_H_Adecuados+2)^0,w,c
  4979  0015A6  5012               	movf	(??_Comparar_T_H_Adecuados+3)^0,w,c
  4980  0015A8  0A80               	xorlw	128
  4981  0015AA  6E13               	movwf	(??_Comparar_T_H_Adecuados+4)^0,c
  4982  0015AC  5010               	movf	(??_Comparar_T_H_Adecuados+1)^0,w,c
  4983  0015AE  0A80               	xorlw	128
  4984  0015B0  5813               	subwfb	(??_Comparar_T_H_Adecuados+4)^0,w,c
  4985  0015B2  A0D8               	btfss	status,0,c
  4986  0015B4  EFDE  F00A         	goto	u2101
  4987  0015B8  EFE0  F00A         	goto	u2100
  4988  0015BC                     u2101:
  4989  0015BC  EFFC  F00A         	goto	l2524
  4990  0015C0                     u2100:
  4991  0015C0  C005  FFD9         	movff	Comparar_T_H_Adecuados@HumActual,fsr2l
  4992  0015C4  C006  FFDA         	movff	Comparar_T_H_Adecuados@HumActual+1,fsr2h
  4993  0015C8  50DF               	movf	indf2,w,c
  4994  0015CA  6E0F               	movwf	??_Comparar_T_H_Adecuados^0,c
  4995  0015CC  6A10               	clrf	(??_Comparar_T_H_Adecuados+1)^0,c
  4996  0015CE  500D               	movf	Comparar_T_H_Adecuados@MargenErrorH^0,w,c
  4997  0015D0  2409               	addwf	Comparar_T_H_Adecuados@HumDigitada^0,w,c
  4998  0015D2  6E11               	movwf	(??_Comparar_T_H_Adecuados+2)^0,c
  4999  0015D4  500E               	movf	(Comparar_T_H_Adecuados@MargenErrorH+1)^0,w,c
  5000  0015D6  200A               	addwfc	(Comparar_T_H_Adecuados@HumDigitada+1)^0,w,c
  5001  0015D8  6E12               	movwf	(??_Comparar_T_H_Adecuados+3)^0,c
  5002  0015DA  500F               	movf	??_Comparar_T_H_Adecuados^0,w,c
  5003  0015DC  5C11               	subwf	(??_Comparar_T_H_Adecuados+2)^0,w,c
  5004  0015DE  5012               	movf	(??_Comparar_T_H_Adecuados+3)^0,w,c
  5005  0015E0  0A80               	xorlw	128
  5006  0015E2  6E13               	movwf	(??_Comparar_T_H_Adecuados+4)^0,c
  5007  0015E4  5010               	movf	(??_Comparar_T_H_Adecuados+1)^0,w,c
  5008  0015E6  0A80               	xorlw	128
  5009  0015E8  5813               	subwfb	(??_Comparar_T_H_Adecuados+4)^0,w,c
  5010  0015EA  B0D8               	btfsc	status,0,c
  5011  0015EC  EFFA  F00A         	goto	u2111
  5012  0015F0  EFFC  F00A         	goto	u2110
  5013  0015F4                     u2111:
  5014  0015F4  EFFE  F00A         	goto	l2526
  5015  0015F8                     u2110:
  5016  0015F8                     l2524:
  5017                           
  5018                           ;Main_Invernadero.c: 139:         HumedadAdecuada=0;
  5019  0015F8  0E00               	movlw	0
  5020  0015FA  6E15               	movwf	Comparar_T_H_Adecuados@HumedadAdecuada^0,c
  5021  0015FC                     l2526:
  5022                           
  5023                           ;Main_Invernadero.c: 142:    PrenderLed(TemperaturaAdecuada,HumedadAdecuada);
  5024  0015FC  C015  F001         	movff	Comparar_T_H_Adecuados@HumedadAdecuada,PrenderLed@HumedadAdecuada
  5025  001600  5014               	movf	Comparar_T_H_Adecuados@TemperaturaAdecuada^0,w,c
  5026  001602  ECD7  F00C         	call	_PrenderLed
  5027  001606  0012               	return		;funcret
  5028  001608                     __end_of_Comparar_T_H_Adecuados:
  5029                           	callstack 0
  5030                           
  5031 ;; *************** function _PrenderLed *****************
  5032 ;; Defined at:
  5033 ;;		line 104 in file "Main_Invernadero.c"
  5034 ;; Parameters:    Size  Location     Type
  5035 ;;  TemperaturaA    1    wreg     _Bool 
  5036 ;;  HumedadAdecu    1    0[COMRAM] _Bool 
  5037 ;; Auto vars:     Size  Location     Type
  5038 ;;  TemperaturaA    1    1[COMRAM] _Bool 
  5039 ;; Return value:  Size  Location     Type
  5040 ;;                  1    wreg      void 
  5041 ;; Registers used:
  5042 ;;		wreg, status,2, cstack
  5043 ;; Tracked objects:
  5044 ;;		On entry : 0/0
  5045 ;;		On exit  : 0/0
  5046 ;;		Unchanged: 0/0
  5047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5048 ;;      Params:         1       0       0       0       0       0       0       0       0
  5049 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5050 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5051 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5052 ;;Total ram usage:        2 bytes
  5053 ;; Hardware stack levels used: 1
  5054 ;; Hardware stack levels required when called: 1
  5055 ;; This function calls:
  5056 ;;		_InicializarLeds
  5057 ;; This function is called by:
  5058 ;;		_Comparar_T_H_Adecuados
  5059 ;; This function uses a non-reentrant model
  5060 ;;
  5061                           
  5062                           	psect	text31
  5063  0019AE                     __ptext31:
  5064                           	callstack 0
  5065  0019AE                     _PrenderLed:
  5066                           	callstack 28
  5067                           
  5068                           ;incstack = 0
  5069                           ;PrenderLed@TemperaturaAdecuada stored from wreg
  5070  0019AE  6E02               	movwf	PrenderLed@TemperaturaAdecuada^0,c
  5071  0019B0                     
  5072                           ;Main_Invernadero.c: 105:     InicializarLeds();
  5073  0019B0  ECF0  F00E         	call	_InicializarLeds	;wreg free
  5074  0019B4                     
  5075                           ;Main_Invernadero.c: 106:     if(TemperaturaAdecuada==0 && HumedadAdecuada==0){
  5076  0019B4  5002               	movf	PrenderLed@TemperaturaAdecuada^0,w,c
  5077  0019B6  A4D8               	btfss	status,2,c
  5078  0019B8  EFE0  F00C         	goto	u1801
  5079  0019BC  EFE2  F00C         	goto	u1800
  5080  0019C0                     u1801:
  5081  0019C0  EFED  F00C         	goto	l2284
  5082  0019C4                     u1800:
  5083  0019C4  5001               	movf	PrenderLed@HumedadAdecuada^0,w,c
  5084  0019C6  A4D8               	btfss	status,2,c
  5085  0019C8  EFE8  F00C         	goto	u1811
  5086  0019CC  EFEA  F00C         	goto	u1810
  5087  0019D0                     u1811:
  5088  0019D0  EFED  F00C         	goto	l2284
  5089  0019D4                     u1810:
  5090  0019D4                     
  5091                           ;Main_Invernadero.c: 107:        LATE0=1;
  5092  0019D4  808D               	bsf	3981,0,c	;volatile
  5093                           
  5094                           ;Main_Invernadero.c: 108:     }else if(TemperaturaAdecuada==0 || HumedadAdecuada==0){
  5095  0019D6  EF01  F00D         	goto	l89
  5096  0019DA                     l2284:
  5097  0019DA  5002               	movf	PrenderLed@TemperaturaAdecuada^0,w,c
  5098  0019DC  B4D8               	btfsc	status,2,c
  5099  0019DE  EFF3  F00C         	goto	u1821
  5100  0019E2  EFF5  F00C         	goto	u1820
  5101  0019E6                     u1821:
  5102  0019E6  EFFD  F00C         	goto	l87
  5103  0019EA                     u1820:
  5104  0019EA  5001               	movf	PrenderLed@HumedadAdecuada^0,w,c
  5105  0019EC  A4D8               	btfss	status,2,c
  5106  0019EE  EFFB  F00C         	goto	u1831
  5107  0019F2  EFFD  F00C         	goto	u1830
  5108  0019F6                     u1831:
  5109  0019F6  EF00  F00D         	goto	l85
  5110  0019FA                     u1830:
  5111  0019FA                     l87:
  5112                           
  5113                           ;Main_Invernadero.c: 109:         LATE1=1;
  5114  0019FA  828D               	bsf	3981,1,c	;volatile
  5115                           
  5116                           ;Main_Invernadero.c: 110:     }else{
  5117  0019FC  EF01  F00D         	goto	l89
  5118  001A00                     l85:
  5119                           
  5120                           ;Main_Invernadero.c: 111:         LATE2=1;
  5121  001A00  848D               	bsf	3981,2,c	;volatile
  5122  001A02                     l89:
  5123  001A02  0012               	return		;funcret
  5124  001A04                     __end_of_PrenderLed:
  5125                           	callstack 0
  5126                           
  5127 ;; *************** function _InicializarLeds *****************
  5128 ;; Defined at:
  5129 ;;		line 177 in file "Main_Invernadero.c"
  5130 ;; Parameters:    Size  Location     Type
  5131 ;;		None
  5132 ;; Auto vars:     Size  Location     Type
  5133 ;;		None
  5134 ;; Return value:  Size  Location     Type
  5135 ;;                  1    wreg      void 
  5136 ;; Registers used:
  5137 ;;		None
  5138 ;; Tracked objects:
  5139 ;;		On entry : 0/0
  5140 ;;		On exit  : 0/0
  5141 ;;		Unchanged: 0/0
  5142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5143 ;;      Params:         0       0       0       0       0       0       0       0       0
  5144 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5145 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5146 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5147 ;;Total ram usage:        0 bytes
  5148 ;; Hardware stack levels used: 1
  5149 ;; This function calls:
  5150 ;;		Nothing
  5151 ;; This function is called by:
  5152 ;;		_PrenderLed
  5153 ;; This function uses a non-reentrant model
  5154 ;;
  5155                           
  5156                           	psect	text32
  5157  001DE0                     __ptext32:
  5158                           	callstack 0
  5159  001DE0                     _InicializarLeds:
  5160                           	callstack 28
  5161  001DE0                     
  5162                           ;Main_Invernadero.c: 178:     LATE1=0;
  5163  001DE0  928D               	bcf	3981,1,c	;volatile
  5164                           
  5165                           ;Main_Invernadero.c: 179:     LATE0=0;
  5166  001DE2  908D               	bcf	3981,0,c	;volatile
  5167                           
  5168                           ;Main_Invernadero.c: 180:     LATE2=0;
  5169  001DE4  948D               	bcf	3981,2,c	;volatile
  5170  001DE6  0012               	return		;funcret
  5171  001DE8                     __end_of_InicializarLeds:
  5172                           	callstack 0
  5173                           
  5174 ;; *************** function _ApagarAspersores *****************
  5175 ;; Defined at:
  5176 ;;		line 201 in file "Main_Invernadero.c"
  5177 ;; Parameters:    Size  Location     Type
  5178 ;;		None
  5179 ;; Auto vars:     Size  Location     Type
  5180 ;;		None
  5181 ;; Return value:  Size  Location     Type
  5182 ;;                  1    wreg      void 
  5183 ;; Registers used:
  5184 ;;		None
  5185 ;; Tracked objects:
  5186 ;;		On entry : 0/0
  5187 ;;		On exit  : 0/0
  5188 ;;		Unchanged: 0/0
  5189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5190 ;;      Params:         0       0       0       0       0       0       0       0       0
  5191 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5192 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5193 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5194 ;;Total ram usage:        0 bytes
  5195 ;; Hardware stack levels used: 1
  5196 ;; This function calls:
  5197 ;;		Nothing
  5198 ;; This function is called by:
  5199 ;;		_main
  5200 ;; This function uses a non-reentrant model
  5201 ;;
  5202                           
  5203                           	psect	text33
  5204  001DEE                     __ptext33:
  5205                           	callstack 0
  5206  001DEE                     _ApagarAspersores:
  5207                           	callstack 30
  5208  001DEE                     
  5209                           ;Main_Invernadero.c: 202:     LATC0=0;
  5210  001DEE  908B               	bcf	3979,0,c	;volatile
  5211                           
  5212                           ;Main_Invernadero.c: 203:     LATC1=0;
  5213  001DF0  928B               	bcf	3979,1,c	;volatile
  5214  001DF2  0012               	return		;funcret
  5215  001DF4                     __end_of_ApagarAspersores:
  5216                           	callstack 0
  5217                           
  5218                           	psect	rparam
  5219  0000                     
  5220                           	psect	idloc
  5221                           
  5222                           ;Config register IDLOC0 @ 0x200000
  5223                           ;	unspecified, using default values
  5224  200000                     	org	2097152
  5225  200000  FF                 	db	255
  5226                           
  5227                           ;Config register IDLOC1 @ 0x200001
  5228                           ;	unspecified, using default values
  5229  200001                     	org	2097153
  5230  200001  FF                 	db	255
  5231                           
  5232                           ;Config register IDLOC2 @ 0x200002
  5233                           ;	unspecified, using default values
  5234  200002                     	org	2097154
  5235  200002  FF                 	db	255
  5236                           
  5237                           ;Config register IDLOC3 @ 0x200003
  5238                           ;	unspecified, using default values
  5239  200003                     	org	2097155
  5240  200003  FF                 	db	255
  5241                           
  5242                           ;Config register IDLOC4 @ 0x200004
  5243                           ;	unspecified, using default values
  5244  200004                     	org	2097156
  5245  200004  FF                 	db	255
  5246                           
  5247                           ;Config register IDLOC5 @ 0x200005
  5248                           ;	unspecified, using default values
  5249  200005                     	org	2097157
  5250  200005  FF                 	db	255
  5251                           
  5252                           ;Config register IDLOC6 @ 0x200006
  5253                           ;	unspecified, using default values
  5254  200006                     	org	2097158
  5255  200006  FF                 	db	255
  5256                           
  5257                           ;Config register IDLOC7 @ 0x200007
  5258                           ;	unspecified, using default values
  5259  200007                     	org	2097159
  5260  200007  FF                 	db	255
  5261                           
  5262                           	psect	config
  5263                           
  5264                           ;Config register CONFIG1L @ 0x300000
  5265                           ;	unspecified, using default values
  5266                           ;	PLL Prescaler Selection bits
  5267                           ;	PLLDIV = 0x0, unprogrammed default
  5268                           ;	System Clock Postscaler Selection bits
  5269                           ;	CPUDIV = 0x0, unprogrammed default
  5270                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  5271                           ;	USBDIV = 0x0, unprogrammed default
  5272  300000                     	org	3145728
  5273  300000  00                 	db	0
  5274                           
  5275                           ;Config register CONFIG1H @ 0x300001
  5276                           ;	Oscillator Selection bits
  5277                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  5278                           ;	Fail-Safe Clock Monitor Enable bit
  5279                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5280                           ;	Internal/External Oscillator Switchover bit
  5281                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5282  300001                     	org	3145729
  5283  300001  09                 	db	9
  5284                           
  5285                           ;Config register CONFIG2L @ 0x300002
  5286                           ;	Power-up Timer Enable bit
  5287                           ;	PWRT = OFF, PWRT disabled
  5288                           ;	Brown-out Reset Enable bits
  5289                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  5290                           ;	Brown-out Reset Voltage bits
  5291                           ;	BORV = 3, Minimum setting 2.05V
  5292                           ;	USB Voltage Regulator Enable bit
  5293                           ;	VREGEN = OFF, USB voltage regulator disabled
  5294  300002                     	org	3145730
  5295  300002  1F                 	db	31
  5296                           
  5297                           ;Config register CONFIG2H @ 0x300003
  5298                           ;	Watchdog Timer Enable bit
  5299                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5300                           ;	Watchdog Timer Postscale Select bits
  5301                           ;	WDTPS = 32768, 1:32768
  5302  300003                     	org	3145731
  5303  300003  1E                 	db	30
  5304                           
  5305                           ; Padding undefined space
  5306  300004                     	org	3145732
  5307  300004  FF                 	db	255
  5308                           
  5309                           ;Config register CONFIG3H @ 0x300005
  5310                           ;	CCP2 MUX bit
  5311                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  5312                           ;	PORTB A/D Enable bit
  5313                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5314                           ;	Low-Power Timer 1 Oscillator Enable bit
  5315                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5316                           ;	MCLR Pin Enable bit
  5317                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5318  300005                     	org	3145733
  5319  300005  81                 	db	129
  5320                           
  5321                           ;Config register CONFIG4L @ 0x300006
  5322                           ;	Stack Full/Underflow Reset Enable bit
  5323                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5324                           ;	Single-Supply ICSP Enable bit
  5325                           ;	LVP = OFF, Single-Supply ICSP disabled
  5326                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  5327                           ;	ICPRT = OFF, ICPORT disabled
  5328                           ;	Extended Instruction Set Enable bit
  5329                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5330                           ;	Background Debugger Enable bit
  5331                           ;	DEBUG = 0x1, unprogrammed default
  5332  300006                     	org	3145734
  5333  300006  81                 	db	129
  5334                           
  5335                           ; Padding undefined space
  5336  300007                     	org	3145735
  5337  300007  FF                 	db	255
  5338                           
  5339                           ;Config register CONFIG5L @ 0x300008
  5340                           ;	Code Protection bit
  5341                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  5342                           ;	Code Protection bit
  5343                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  5344                           ;	Code Protection bit
  5345                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  5346                           ;	Code Protection bit
  5347                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  5348  300008                     	org	3145736
  5349  300008  0F                 	db	15
  5350                           
  5351                           ;Config register CONFIG5H @ 0x300009
  5352                           ;	Boot Block Code Protection bit
  5353                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  5354                           ;	Data EEPROM Code Protection bit
  5355                           ;	CPD = OFF, Data EEPROM is not code-protected
  5356  300009                     	org	3145737
  5357  300009  C0                 	db	192
  5358                           
  5359                           ;Config register CONFIG6L @ 0x30000A
  5360                           ;	Write Protection bit
  5361                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  5362                           ;	Write Protection bit
  5363                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  5364                           ;	Write Protection bit
  5365                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  5366                           ;	Write Protection bit
  5367                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  5368  30000A                     	org	3145738
  5369  30000A  0F                 	db	15
  5370                           
  5371                           ;Config register CONFIG6H @ 0x30000B
  5372                           ;	Configuration Register Write Protection bit
  5373                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  5374                           ;	Boot Block Write Protection bit
  5375                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  5376                           ;	Data EEPROM Write Protection bit
  5377                           ;	WRTD = OFF, Data EEPROM is not write-protected
  5378  30000B                     	org	3145739
  5379  30000B  E0                 	db	224
  5380                           
  5381                           ;Config register CONFIG7L @ 0x30000C
  5382                           ;	Table Read Protection bit
  5383                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5384                           ;	Table Read Protection bit
  5385                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5386                           ;	Table Read Protection bit
  5387                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5388                           ;	Table Read Protection bit
  5389                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5390  30000C                     	org	3145740
  5391  30000C  0F                 	db	15
  5392                           
  5393                           ;Config register CONFIG7H @ 0x30000D
  5394                           ;	Boot Block Table Read Protection bit
  5395                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  5396  30000D                     	org	3145741
  5397  30000D  40                 	db	64
  5398                           tosu	equ	0xFFF
  5399                           tosh	equ	0xFFE
  5400                           tosl	equ	0xFFD
  5401                           stkptr	equ	0xFFC
  5402                           pclatu	equ	0xFFB
  5403                           pclath	equ	0xFFA
  5404                           pcl	equ	0xFF9
  5405                           tblptru	equ	0xFF8
  5406                           tblptrh	equ	0xFF7
  5407                           tblptrl	equ	0xFF6
  5408                           tablat	equ	0xFF5
  5409                           prodh	equ	0xFF4
  5410                           prodl	equ	0xFF3
  5411                           indf0	equ	0xFEF
  5412                           postinc0	equ	0xFEE
  5413                           postdec0	equ	0xFED
  5414                           preinc0	equ	0xFEC
  5415                           plusw0	equ	0xFEB
  5416                           fsr0h	equ	0xFEA
  5417                           fsr0l	equ	0xFE9
  5418                           wreg	equ	0xFE8
  5419                           indf1	equ	0xFE7
  5420                           postinc1	equ	0xFE6
  5421                           postdec1	equ	0xFE5
  5422                           preinc1	equ	0xFE4
  5423                           plusw1	equ	0xFE3
  5424                           fsr1h	equ	0xFE2
  5425                           fsr1l	equ	0xFE1
  5426                           bsr	equ	0xFE0
  5427                           indf2	equ	0xFDF
  5428                           postinc2	equ	0xFDE
  5429                           postdec2	equ	0xFDD
  5430                           preinc2	equ	0xFDC
  5431                           plusw2	equ	0xFDB
  5432                           fsr2h	equ	0xFDA
  5433                           fsr2l	equ	0xFD9
  5434                           status	equ	0xFD8

Data Sizes:
    Strings     77
    Constant    0
    Data        32
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     37     112
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@Cadena(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_10(CODE[8]), STR_9(CODE[4]), STR_8(CODE[3]), STR_7(CODE[7]), 
		 -> STR_6(CODE[4]), STR_5(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 8
		 -> STR_10(CODE[8]), STR_9(CODE[4]), STR_8(CODE[3]), STR_7(CODE[7]), 
		 -> STR_6(CODE[4]), STR_5(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_10(CODE[8]), STR_9(CODE[4]), STR_8(CODE[3]), STR_7(CODE[7]), 
		 -> STR_6(CODE[4]), STR_5(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> main@Cadena(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S973_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@Cadena(BANK0[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@Cadena(BANK0[10]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 15
		 -> main@Cadena(BANK0[10]), STR_4(CODE[14]), STR_3(CODE[14]), STR_2(CODE[15]), 
		 -> STR_1(CODE[15]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 15
		 -> main@Cadena(BANK0[10]), STR_4(CODE[14]), STR_3(CODE[14]), STR_2(CODE[15]), 
		 -> STR_1(CODE[15]), 

    ControlTemperaturaVentilador@TempActual	PTR unsigned char  size(2) Largest target is 2
		 -> main@Datos(BANK0[2]), 

    ControlHumedadAspersor@HumedadActual	PTR unsigned char  size(2) Largest target is 2
		 -> main@Datos(BANK0[2]), 

    DatosSensorTH@Datos	PTR unsigned char  size(2) Largest target is 2
		 -> main@Datos(BANK0[2]), 

    PedirDato@vecLlenar	PTR unsigned char  size(2) Largest target is 2
		 -> main@MargenErrorH(BANK0[1]), main@Humedad(BANK0[2]), main@MargenErrorT(BANK0[1]), main@Temperatura(BANK0[2]), 

    PedirDato@Etiqueta	PTR unsigned char  size(2) Largest target is 15
		 -> STR_4(CODE[14]), STR_3(CODE[14]), STR_2(CODE[15]), STR_1(CODE[15]), 

    Comparar_T_H_Adecuados@HumActual	PTR unsigned char  size(2) Largest target is 2
		 -> main@Datos(BANK0[2]), 

    Comparar_T_H_Adecuados@TempActual	PTR unsigned char  size(2) Largest target is 2
		 -> main@Datos(BANK0[2]), 

    DatoDigitado@prmTemperatura	PTR unsigned char  size(2) Largest target is 2
		 -> main@Humedad(BANK0[2]), main@Temperatura(BANK0[2]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _PedirDato->_LCD_String_xy
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Clear->_LCD_Command
    _LCD_Init->_LCD_Command
    _DatosSensorTH->_DHT11_ReadData
    _DatoDigitado->___wmul
    _Comparar_T_H_Adecuados->_PrenderLed

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                31    31      0   14057
                                             93 COMRAM     2     2      0
                                              8 BANK0     29    29      0
                   _ApagarAspersores
             _Comparar_T_H_Adecuados
             _ControlHumedadAspersor
       _ControlTemperaturaVentilador
                       _DatoDigitado
                      _DatosSensorTH
                           _LCD_Char
                           _LCD_Init
                         _LCD_String
                      _LCD_String_xy
                          _PedirDato
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    7216
                                             87 COMRAM     6     0      6
                                              0 BANK0      8     8      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _PedirDato                                           11     5      6    2153
                                              9 COMRAM    11     5      6
                           _LCD_Char
                          _LCD_Clear
                        _LCD_Command
                      _LCD_String_xy
                            _keyfind
 ---------------------------------------------------------------------------------
 (2) _keyfind                                              2     2      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        5     2      3     952
                                              4 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2     317
                                              2 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            1     1      0      44
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      44
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DatosSensorTH                                        7     5      2     284
                                              2 COMRAM     4     2      2
                _DHT11_CheckResponse
                     _DHT11_ReadData
                        _DHT11_Start
 ---------------------------------------------------------------------------------
 (2) _DHT11_Start                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DHT11_ReadData                                       2     2      0     115
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _DHT11_CheckResponse                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DatoDigitado                                         9     7      2     694
                                              6 COMRAM     9     7      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _ControlTemperaturaVentilador                        11     5      6     294
                                              0 COMRAM    11     5      6
                 _ApagarVentiladores
 ---------------------------------------------------------------------------------
 (2) _ApagarVentiladores                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlHumedadAspersor                              11     5      6     294
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (1) _Comparar_T_H_Adecuados                              19     7     12     932
                                              2 COMRAM    19     7     12
                         _PrenderLed
 ---------------------------------------------------------------------------------
 (2) _PrenderLed                                           2     1      1     164
                                              0 COMRAM     2     1      1
                    _InicializarLeds
 ---------------------------------------------------------------------------------
 (3) _InicializarLeds                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ApagarAspersores                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ApagarAspersores
   _Comparar_T_H_Adecuados
     _PrenderLed
       _InicializarLeds
   _ControlHumedadAspersor
   _ControlTemperaturaVentilador
     _ApagarVentiladores
   _DatoDigitado
     ___wmul
   _DatosSensorTH
     _DHT11_CheckResponse
     _DHT11_ReadData
     _DHT11_Start
   _LCD_Char
   _LCD_Init
     _LCD_Command
   _LCD_String
     _LCD_Char
   _LCD_String_xy
     _LCD_Command
     _LCD_String
   _PedirDato
     _LCD_Char
     _LCD_Clear
       _LCD_Command
     _LCD_Command
     _LCD_String_xy
     _keyfind
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     25      70       5       70.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CF      20        0.0%
DATA                 0      0      CF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Oct 10 04:06:22 2021

       Comparar_T_H_Adecuados@TempDigitada 0007                               ?_LCD_Command 0001  
                                       l92 1890                                         l85 1A00  
                                       l87 19FA                                         l89 1A02  
                      ___wmul@multiplicand 0003                                main@Humedad 009F  
                              ?_LCD_String 0003                __size_of_ApagarVentiladores 0006  
                                      l101 1606                                        l110 1C82  
                                      l113 1DE6                                        l123 1B3A  
                                      l107 181A                                        l116 1B7C  
                                      l126 1DF2                                        l118 1B80  
                                      l152 1AA4                                        l129 1DEC  
                                      l401 1DDE                                        l410 1D40  
                                      l146 1D22                                        l163 1C44  
                                      l404 1D24                                        l413 1D4E  
                                      l149 1AF4                                        l166 1D78  
                                      l158 1950                                        l407 1D32  
                                      l351 0F02                                        l416 1D9E  
                                      l360 0F8A                                        l370 106A  
                                      l530 13A6                                        l364 0FCE  
                                      l356 0F46                                        l390 195A  
                                      l543 150A                                        l395 198A  
                                      l398 19AC                               main@MargenEH 00A5  
                             main@MargenET 00A3                                        _abs 1BC6  
                                      _pad 16D2                                        prod 000FF3  
                                      wreg 000FE8                                main@bandera 00AB  
                              LCD_Char@dat 0002                             PedirDato@tecla 0014  
                                     l1121 1718                                       l2010 1256  
                                     l2002 1220                                       l1202 1CEE  
                                     ?_abs 0013                                       l2020 12B2  
                                     l2012 1264                                       l2004 1224  
                                     l2100 177E                                       l1124 175A  
                                     l1132 0BFA                                       l2110 1A68  
                                     l2030 131C                                       l2022 12BA  
                                     l2014 1284                                       l2006 1232  
                                     l1126 1796                                       l1134 0C02  
                                     l2200 1AA8                                       l2120 1A7E  
                                     l2112 1A6A                                       l2040 1366  
                                     l2032 133C                                       l2024 12CE  
                                     l2016 1288                                       l2008 1252  
                                     l2104 1BC6                                       l1152 0E3A  
                                     l2210 1AC0                                       l2202 1AB8  
                                     l2122 1A90                                       l2114 1A6C  
                                     l2042 1386                                       l2034 133E  
                                     l2026 12DC                                       l2018 1294  
                                     l2050 13BA                                       l2106 1BE0  
                                     l1170 1BFC                                       l2130 0B7A  
                                     l2212 1ACE                                       l2204 1ABA  
                                     l2124 1A92                                       l2116 1A6E  
                                     l2108 1A58                                       l2300 0E5E  
                                     l2036 1350                                       l2028 12EE  
                                     l2060 142A                                       l2052 13DA  
                                     l2140 0BEE                                       l2132 0BA2  
                                     l2220 106C                                       l1173 1C04  
                                     l1165 18EA                                       l2214 1AE0  
                                     l2206 1ABC                                       l2126 1A94  
                                     l2118 1A70                                       l2310 0EA4  
                                     l2302 0E76                                       l2038 1356  
                                     l2070 14A2                                       l2062 1432  
                                     l2054 13DE                                       l2046 13A8  
                                     l2150 0C38                                       l2142 0C0A  
                                     l2134 0BC2                                       l2230 10D8  
                                     l2222 1090                                       l1166 18F2  
                                     l1094 1A54                                       l1159 121E  
                                     l2400 1DDC                                       l2216 1AE2  
                                     l2208 1ABE                                       l2320 0EDE  
                                     l2312 0EBC                                       l2304 0E86  
                                     l2072 14B4                                       l2064 1446  
                                     l2056 13EC                                       l2048 13AC  
                                     l2160 0CD4                                       l2152 0C40  
                                     l2144 0C1C                                       l2136 0BD2  
                                     l2128 0B5A                                       l2240 11A0  
                                     l2232 10FC                                       l2224 109E  
                                     l1185 16D0                                       l1193 1BC4  
                                     l2402 1D24                                       l2410 1968  
                                     l2218 1AE4                                       l2330 0F1C  
                                     l2322 0EE2                                       l2314 0ECC  
                                     l2306 0E8A                                       l2066 1454  
                                     l2074 14BA                                       l2058 140C  
                                     l2090 1710                                       l2082 16D2  
                                     l2170 0DA4                                       l2154 0C46  
                                     l2162 0D38                                       l2146 0C2A  
                                     l2138 0BD4                                       l2250 11DC  
                                     l2242 11AE                                       l2234 1144  
                                     l2226 10B0                                       l2420 199A  
                                     l2412 196E                                       l2404 1952  
                                     l2500 1C54                                       l2340 0F5C  
                                     l2332 0F22                                       l2324 0EF4  
                                     l2316 0ED4                                       l2308 0E92  
                                     l2076 14CA                                       l2068 1482  
                                     l1196 1DF4                                       l2092 1724  
                                     l2084 16E2                                       l2180 0DEE  
                                     l2164 0D52                                       l2172 0DB4  
                                     l2156 0CC8                                       l2148 0C30  
                                     l2244 11C2                                       l2228 10B4  
                                     l2430 1D96                                       l2422 19AA  
                                     l2414 197C                                       l2510 1C72  
                                     l2502 1C58                                       l2190 18F4  
                                     l2270 1C2A                                       l2262 1C08  
                                     l2350 0F84                                       l2342 0F60  
                                     l2334 0F26                                       l2326 0EFC  
                                     l2318 0ED8                                       l2078 14EA  
                                     l2094 1738                                       l2086 16F6  
                                     l2182 0DFA                                       l2174 0DC6  
                                     l2166 0D70                                       l2158 0CCE  
                                     l2238 117C                                       l2254 11E8  
                                     l2280 19C4                                       l2520 1588  
                                     l2512 150C                                       l2416 1984  
                                     l2504 1C5E                                       l2192 18F8  
                                     l2272 1C32                                       l2264 1C08  
                                     l2360 0FC0                                       l2352 0FA0  
                                     l2344 0F66                                       l2336 0F38  
                                     l2328 0F18                                       l2096 173C  
                                     l2088 1704                                       l2184 0E02  
                                     l2176 0DD6                                       l2168 0D8A  
                                     l2256 120C                                       l2248 11CE  
                                     l2440 18CE                                       l2600 0B14  
                                     l2442 1DEE                                       l2282 19D4  
                                     l2522 15C0                                       l2514 1514  
                                     l2530 1B74                                       l2426 1DE8  
                                     l2418 1998                                       l2506 1C62  
                                     l2450 1D0A                                       l2290 1D56  
                                     l2194 191C                                       l2274 1C38  
                                     l2266 1C18                                       l2362 0FC8  
                                     l2354 0FA4                                       l2346 0F6A  
                                     l2338 0F40                                       l2098 176A  
                                     l2178 0DDC                                       l2186 0E12  
                                     l2434 1892                                       l2602 0B1A  
                                     l2284 19DA                                       l2276 19B0  
                                     l2524 15F8                                       l2516 154C  
                                     l2532 1AF6                                       l2428 1D7A  
                                     l2508 1C66                                       l2452 1D10  
                                     l2444 1CF0                                       l2292 1D64  
                                     l2196 1920                                       l2268 1C20  
                                     l2380 1030                                       l2372 1008  
                                     l2356 0FAA                                       l2348 0F7C  
                                     l2364 0FE0                                       l2460 179C  
                                     l2436 189A                                       l2540 1A16  
                                     l2604 0B2E                                       l2198 1DE0  
                                     l2286 19EA                                       l2278 19B4  
                                     l2526 15FC                                       l2518 1584  
                                     l2534 1B2E                                       l2454 1D16  
                                     l2446 1CF4                                       l2382 1042  
                                     l2374 101A                                       l2366 0FF2  
                                     l2358 0FAE                                       l2294 0E3C  
                                     l2470 17CC                                       l2462 17AE  
                                     l2438 18A8                                       l2542 1A1E  
                                     l2606 0B3A                                       l2550 0850  
                                     l2528 1B3C                                       l2536 1B36  
                                     l2480 181C                                       l2456 1D1C  
                                     l2448 1D04                                       l2288 1D50  
                                     l2296 0E44                                       l2472 17DC  
                                     l2464 17B4                                       l2544 1A26  
                                     l2560 08BA                                       l2552 0892  
                                     l2490 1888                                       l2482 182C  
                                     l2394 1DC0                                       l2298 0E4C  
                                     l2466 17C0                                       l2474 17E0  
                                     l2458 1798                                       l2546 1A42  
                                     l2538 1A04                                       l2570 0972  
                                     l2562 08D6                                       l2554 0896  
                                     l2484 1844                                       l2396 1DC4  
                                     l2388 1058                                       l2476 17FE  
                                     l2468 17C6                                       l2580 09D2  
                                     l2564 08EE                                       l2572 0980  
                                     l2556 0898                                       l2486 1860  
                                     l2398 1DD2                                       l2494 1C46  
                                     l2478 1816                                       l2590 0A8A  
                                     l2574 0990                                       l2582 09D6  
                                     l2566 0922                                       l2558 089C  
                                     l2488 187C                                       l2496 1C4A  
                                     l2592 0AA6                                       l2584 09E6  
                                     l2576 09B8                                       l2568 093E  
                                     l2498 1C4E                                       l1970 1608  
                                     l2594 0AC0                                       l2586 0A5E  
                                     l2578 09C6                                       l1980 168A  
                                     l1972 161A                                       l2596 0ACC  
                                     l2588 0A78                                       l1974 162C  
                                     l1990 1BA4                                       l2598 0AF8  
                                     ?_pad 0011                                       l1976 1636  
                                     l1984 1B82                                       l1992 1CBA  
                                     l1978 1654                                       l1986 1B8E  
                                     l1994 1CC6                                       l1988 1BA0  
                                     l1996 1CCA                                       l1998 1CE2  
                                     STR_1 0801                                       STR_2 0810  
                                     STR_3 081F                                       STR_4 082D  
                                     STR_5 084B                                       STR_6 084A  
                                     STR_7 0843                                       STR_8 084B  
                                     STR_9 084A                                       u2000 1D40  
                                     u2001 1D3C                                       u2010 1D4E  
                                     u2011 1D4A                                       u2100 15C0  
                                     u2020 1968                                       u2101 15BC  
                                     u2021 1964                                       u2110 15F8  
                                     u2030 197C                                       u2111 15F4  
                                     u2031 1978                                       u2120 1B74  
                                     u2040 1998                                       u1400 1264  
                                     u2121 1B70                                       u2041 1994  
                                     u1401 1260                                       u2130 1B2E  
                                     u2050 19AA                                       u1330 161A  
                                     u2131 1B2A                                       u2051 19A6  
                                     u1411 128E                                       u1331 1616  
                                     u1420 12B2                                       u1500 1482  
                                     u1340 162C                                       u2060 18EA  
                                     u2140 08BA                                       u1421 12AE  
                                     u1501 147E                                       u1341 1628  
                                     u2061 18E6                                       u2141 08B6  
                                     u2070 17FE                                       u1430 12DC  
                                     u1510 14CA                                       u1350 1654  
                                     u2150 0990                                       _LATB 000F8A  
                                     u2071 17FA                                       u1431 12D8  
                                     u1511 14C6                                       u1351 1650  
                                     u2151 098C                                       u2080 154C  
                                     u1440 131C                                       u1360 168A  
                                     u1520 16E2                                       u1600 0BD2  
                                     u2160 09E6                                       _LATD 000F8C  
                                     u2081 1548                                       u1441 1318  
                                     u1361 1686                                       u1521 16DE  
                                     u1601 0BCE                                       u2161 09E2  
                                     u2090 1584                                       u1450 1366  
                                     u1370 1BC4                                       u1530 1704  
                                     u1610 0BEE                                       u2091 1580  
                                     u1451 1362                                       u1371 1BC0  
                                     u1531 1700                                       u1611 0BEA  
                                     u1460 13BA                                       u1380 1CE2  
                                     u1540 175A                                       u1700 0DD6  
                                     u1620 0C1C                                       u1461 13B6  
                                     u1381 1CDE                                       u1541 1756  
                                     u1701 0DD2                                       u1621 0C18  
                                     u1390 1232                                       u1470 13EC  
                                     u1550 176A                                       u1710 0DEE  
                                     u1630 0C2A                                       u1391 122E  
                                     u1471 13E8                                       u1551 1766  
                                     u1711 0DEA                                       u1631 0C26  
                                     u2407 0914                                       u1800 19C4  
                                     u1720 1918                                       u1480 142A  
                                     u1560 1BE0                                       u1640 0D52  
                                     u1801 19C0                                       u1481 1426  
                                     u1561 1BDC                                       u1641 0D4E  
                                     u2417 0948                                       u1810 19D4  
                                     u1730 1940                                       u1490 1454  
                                     u1650 0D70                                       u1570 0B8A  
                                     u1811 19D0                                       u2507 1CFA  
                                     u1491 1450                                       u1651 0D6C  
                                     u1571 0B84                                       u2427 0B44  
                                     u1820 19EA                                       u1740 1950  
                                     u1900 0F38                                       u1660 0D8A  
                                     u1580 0B8C                                       u1821 19E6  
                                     u2517 1AC6                                       u1741 194C  
                                     u1901 0F34                                       u2437 1808  
                                     u1661 0D86                                       u1830 19FA  
                                     u1910 0F58                                       u1670 0DA4  
                                     u1590 0BA2                                       u1750 1090  
                                     u1831 19F6                                       u2527 1AEC  
                                     u1727 190E                                       u1911 0F54  
                                     u2447 0E7C                                       u1671 0DA0  
                                     u1591 0B9E                                       u1751 108C  
                                     u1920 0F7C                                       u1840 0E5E  
                                     u1680 0DB4                                       u1760 10D8  
                                     u2537 1DCA                                       u1737 1936  
                                     u1921 0F78                                       u2457 0EC2  
                                     u1841 0E5A                                       u1681 0DB0  
                                     u1761 10D4                                       u1930 0F9C  
                                     u1850 0E76                                       u1690 0DC6  
                                     u1770 10FC                                       u2547 1DD6  
                                     u2467 1A76                                       u1931 0F98  
                                     u1851 0E72                                       u1691 0DC2  
                                     u1771 10F8                                       u1940 0FC0  
                                     u1860 0EA4                                       u1780 11A0  
                                     u2557 196A                                       u2477 1A9C  
                                     u1941 0FBC                                       u1861 0EA0  
                                     u1781 119C                                       u2397 08E0  
                                     u1790 1C18                                       u1950 0FE0  
                                     u1870 0EBC                                       u2487 1D5C  
                                     u1791 1C14                                       u1951 0FDC  
                                     u1871 0EB8                                       u1960 0FF2  
                                     u1880 0EF4                                       u2497 1D70  
                                     u1961 0FEE                                       u1881 0EF0  
                                     u1970 101A                                       u1890 0F14  
                                     u1971 1016                                       u1891 0F10  
                                     u1980 1042                                       u1981 103E  
                                     u1990 1D32                                       u1991 1D2E  
                                     _RBPU 007F8F                   ??_Comparar_T_H_Adecuados 000F  
                                     abs@a 0013                                       _dbuf 006B  
                                     _main 0850                                       _dtoa 0B5A  
                       __size_of_LCD_Clear 002A                                       _prec 0064  
                                     _nout 0060                                       pad@i 0018  
                                     pad@p 0015                                       fsr1h 000FE2  
                                     fsr2h 000FDA                                       indf1 000FE7  
                                     indf2 000FDF                                       fsr1l 000FE1  
                                     pad@w 001A                                       fsr2l 000FD9  
                                     prodh 000FF4                                       prodl 000FF3  
                                     start 0000                           ??_DHT11_ReadData 0001  
                            _LCD_String_xy 1C06                       __size_of_DHT11_Start 0020  
                               PedirDato@i 0012                               ___param_bank 000000  
                    __end_of_DatosSensorTH 1C84                                      ??_abs 0015  
                                    ??_pad 0017                           __end_of_LCD_Char 1AA6  
                         __end_of_LCD_Init 1D24                            __end_of___aodiv 13A8  
                                    ?_main 0001                                      ?_dtoa 001C  
                          __end_of___aomod 150C                                      STR_10 083B  
                __size_of_ApagarAspersores 0006                                      _LATA0 007C48  
                                    _LATC0 007C58                                      _LATC1 007C59  
                                    _LATC2 007C5A                                      _LATD0 007C60  
                                    _LATD1 007C61                                      _LATE0 007C68  
                                    _LATE1 007C69                                      _LATE2 007C6A  
                                    _LATC6 007C5E                               vfpfcnvrt@fmt 0042  
                                    _PORTB 000F81                                      _PORTD 000F83  
                                    _TRISB 000F93                                      _TRISC 000F94  
                                    _TRISD 000F95                                      _TRISE 000F96  
               DatoDigitado@prmTemperatura 0007                            _InicializarLeds 1DE0  
                                    _flags 0066                                      _fputc 1608  
                          __end_of_keyfind 106C                                      _fputs 1B82  
                                    pad@fp 0011                                      _width 0062  
                                    _putch 1DF4                                      dtoa@d 001E  
                                    dtoa@i 003E                                      dtoa@n 0036  
                                    dtoa@p 0030                                      dtoa@s 0034  
                                    dtoa@w 0032                                      tablat 000FF5  
    Comparar_T_H_Adecuados@HumedadAdecuada 0015                                      status 000FD8  
                      __size_of_LCD_String 005E                            __end_of_sprintf 1A56  
                           ?_LCD_String_xy 0005                            __initialization 1C84  
                             __end_of_main 0B5A                               __end_of_dtoa 0E3C  
                    __size_of_DatoDigitado 0076            Comparar_T_H_Adecuados@HumActual 0005  
                                   ??_main 005E                                     ??_dtoa 0026  
                        __end_of_LCD_Clear 1D7A                              __activetblptr 000002  
                  ?_ControlHumedadAspersor 0001                                     _ADCON1 000FC1  
                                   ?_fputc 0001                                     ?_fputs 000A  
                                   ?_putch 0001                        _DHT11_CheckResponse 1D24  
                         LCD_String_xy@msg 0006                           LCD_String_xy@pos 0005  
                         LCD_String_xy@row 0008                                     _OSCCON 000FD3  
          __size_of_Comparar_T_H_Adecuados 00FC                         __size_of_PedirDato 0084  
                             _DatoDigitado 181C                               vfprintf@cfmt 0056  
                               _PrenderLed 19AE                                  ??___aodiv 0011  
                                ??___aomod 0011                                     ___wmul 1D7A  
                     ?_DHT11_CheckResponse 0001                                     _keypad 00B0  
                                   clear_0 1CAA   ControlTemperaturaVentilador@MargenErrorT 0005  
                                   isa$std 000001                    __end_of_InicializarLeds 1DE8  
                                   pad@buf 0013                                     _rowloc 0069  
                     __size_of_LCD_Command 0050                                     dtoa@fp 001C  
                                   _strlen 1CBA                                     fputc@c 0001  
                                   fputs@c 000E                                     fputs@i 000F  
                                   fputs@s 000A                                  ??_keyfind 0001  
           __end_of_ControlHumedadAspersor 1B82                               __mediumconst 0000  
                                   tblptrh 000FF7                                     tblptrl 000FF6  
                                   tblptru 000FF8                                     putch@c 0001  
                         __end_of_vfprintf 18F4                                  ??_sprintf 005E  
     __end_of_ControlTemperaturaVentilador 1B3C      __size_of_ControlTemperaturaVentilador 0046  
             _ControlTemperaturaVentilador 1AF6                          PedirDato@Etiqueta 000A  
                                ?_LCD_Char 0001                                 __accesstop 0060  
                  __end_of__initialization 1CB0                                  ?_LCD_Init 0001  
                          ??_LCD_String_xy 0008                              ___rparam_used 000001  
                           __pcstackCOMRAM 0001                               __pidataBANK0 1DA0  
                    ??_DHT11_CheckResponse 0001                              __end_of_fputc 16D2  
                            __end_of_fputs 1BC6                              __end_of_putch 1DF6  
                             ??_LCD_String 0005                     _Comparar_T_H_Adecuados 150C  
                         _ApagarAspersores 1DEE                          __end_of_PedirDato 181C  
                       DatosSensorTH@Datos 0003                                    ??_fputc 0005  
                                  ??_fputs 000E                                    ??_putch 0001  
                               __pbssBANK0 0060                                 ??_LCD_Char 0001  
                               ??_LCD_Init 0003              ?_ControlTemperaturaVentilador 0001  
                       __end_of_LCD_String 1952                                ?_PrenderLed 0001  
                                  ?___wmul 0001                 __end_of_ApagarVentiladores 1DEE  
                          main@Temperatura 009D                           ?_InicializarLeds 0001  
         Comparar_T_H_Adecuados@TempActual 0003                                    ?_strlen 0001  
                       __size_of_vfpfcnvrt 01B4                      DatoDigitado@Resultado 000C  
                         main@MargenErrorH 00AD                           main@MargenErrorT 00AC  
                            ??_DHT11_Start 0001                              LCD_String@msg 0003  
                                  __Hparam 0000                                    __Lparam 0000  
                                  ___aodiv 1220                                    ___aomod 13A8  
                          __size_of___wmul 0026                         DatoDigitado@Decena 000E  
                                ?_vfprintf 0050                               __psmallconst 0800  
                                  __pcinit 1C84                                    __ramtop 0800  
            PrenderLed@TemperaturaAdecuada 0002                                    __ptext0 0850  
                                  __ptext1 1A04                                    __ptext2 1892  
                                  __ptext3 106C                                    __ptext4 0B5A  
                                  __ptext5 16D2                                    __ptext6 1CBA  
                                  __ptext7 1B82                                    __ptext8 1608  
                                  __ptext9 1DF4                                    _col_loc 006A  
                       DatoDigitado@Unidad 000A                            __size_of_strlen 0036  
                             __size_of_abs 0040                               __size_of_pad 00C6  
                                  _keyfind 0E3C                                  _LCD_Clear 1D50  
                                  _sprintf 1A04                        __size_of_PrenderLed 0056  
                       PedirDato@CantDatos 000E                     __size_of_DatosSensorTH 003E  
                     end_of_initialization 1CB0                                    fputc@fp 0003  
                           LCD_Command@cmd 0002                              __Lmediumconst 0000  
                                  fputs@fp 000C   ControlTemperaturaVentilador@TempDigitada 0003  
           ??_ControlTemperaturaVentilador 0007                          __end_of_vfpfcnvrt 1220  
                      __end_of_DHT11_Start 1DE0                                    postdec1 000FE5  
                                  postdec2 000FDD                                    postinc0 000FEE  
                                  postinc1 000FE6                                    postinc2 000FDE  
                               ??_vfprintf 0056                                    strlen@a 0003  
                                  strlen@s 0001                                  _PORTAbits 000F80  
                                _PORTDbits 000F83                    __size_of_DHT11_ReadData 005C  
                                _TRISAbits 000F92                                 main@Cadena 0093  
                               ?_LCD_Clear 0001                   __end_of_ApagarAspersores 1DF4  
                               main@indice 00A1                          __size_of_LCD_Char 0050  
                        __size_of_LCD_Init 0034                         DHT11_ReadData@data 0002  
                  DatosSensorTH@T_Integral 0006                    ?_Comparar_T_H_Adecuados 0003  
                            _DatosSensorTH 1C46                              ??_LCD_Command 0001  
                              vfpfcnvrt@ap 0044                                vfpfcnvrt@fp 0040  
                              vfpfcnvrt@ll 0048                             __end_of___wmul 1DA0  
                           __end_of_strlen 1CF0                         keypad_getkey@F3168 00C0  
                      start_initialization 1C84                                __end_of_abs 1C06  
                              __end_of_pad 1798                                  _PedirDato 1798  
        Comparar_T_H_Adecuados@HumDigitada 0009                                _DHT11_Start 1DC0  
              __end_of_DHT11_CheckResponse 1D50                      __end_of_LCD_String_xy 1C46  
           __end_of_Comparar_T_H_Adecuados 1608                                vfprintf@fmt 0052  
                             ??_PrenderLed 0002                             ?_DatosSensorTH 0003  
                                 ??___wmul 0005                                __pdataBANK0 00B0  
                                 ??_strlen 0003                        __end_of_LCD_Command 1AF6  
                            __pcstackBANK0 008B                           ___aodiv@dividend 0001  
                       _ApagarVentiladores 1DE8                                ??_LCD_Clear 0003  
                               ?_PedirDato 000A                         PedirDato@vecLlenar 000C  
                       __end_of_PrenderLed 1A04                        ?_ApagarVentiladores 0001  
      ControlHumedadAspersor@HumedadActual 0001                                  _dtoa$1046 002E  
                                 ?___aodiv 0001                                   ?___aomod 0001  
                         ___aodiv@quotient 0013                   ??_ControlHumedadAspersor 0007  
                     ??_ApagarVentiladores 0001                             _DHT11_ReadData 1952  
                        __size_of_vfprintf 0062                                __smallconst 0800  
                                 ?_keyfind 0001                      LCD_String_xy@location 0009  
                 __size_of_InicializarLeds 0008                                   ?_sprintf 0058  
                           __size_of_fputc 00CA                             __size_of_fputs 0044  
                           __size_of_putch 0002     ControlTemperaturaVentilador@TempActual 0001  
                                 _LCD_Char 1A56                                   _LCD_Init 1CF0  
                           ___wmul@product 0005                                   _LATDbits 000F8C  
                            ?_DatoDigitado 0007                            ??_DatosSensorTH 0005  
                   __end_of_DHT11_ReadData 19AE                                _LCD_Command 1AA6  
                                _vfpfcnvrt 106C                                  main@Datos 00AE  
                  main@TemperaturaAdecuada 00A7                          ___wmul@multiplier 0001  
       Comparar_T_H_Adecuados@MargenErrorH 000D         Comparar_T_H_Adecuados@MargenErrorT 000B  
                              ??_PedirDato 0010                                _INTCON2bits 000FF1  
                                copy_data0 1C98                             ??_DatoDigitado 0009  
                        ?_ApagarAspersores 0001                                   __Hrparam 0000  
    ControlHumedadAspersor@HumedadDigitada 0003                         ??_ApagarAspersores 0001  
                               vfprintf@ap 0054                                   __Lrparam 0000  
                               vfprintf@fp 0050                            ?_DHT11_ReadData 0001  
                         __size_of___aodiv 0188                           __size_of___aomod 0164  
                               ?_vfpfcnvrt 0040            __size_of_ControlHumedadAspersor 0046  
                          DHT11_ReadData@i 0001                        main@HumedadAdecuada 00A9  
                          ___aodiv@divisor 0009                            ___aodiv@counter 0011  
Comparar_T_H_Adecuados@TemperaturaAdecuada 0014                                 sprintf@fmt 005A  
                         __size_of_keyfind 0230                                   __ptext10 1BC6  
                                 __ptext11 13A8                                   __ptext20 1AA6  
                                 __ptext12 1220                                   __ptext21 1C46  
                                 __ptext13 1798                                   __ptext30 150C  
                                 __ptext22 1DC0                                   __ptext14 0E3C  
                                 __ptext31 19AE                                   __ptext23 1952  
                                 __ptext15 1C06                                   __ptext32 1DE0  
                                 __ptext24 1D24                                   __ptext16 18F4  
                                 __ptext33 1DEE                                   __ptext25 181C  
                                 __ptext17 1A56                                   __ptext26 1D7A  
                                 __ptext18 1D50                                   __ptext27 1AF6  
                                 __ptext19 1CF0                                   __ptext28 1DE8  
                                 __ptext29 1B3C                           __size_of_sprintf 0052  
                 DatosSensorTH@RH_Integral 0005                              __size_of_main 030A  
                            __size_of_dtoa 02E2                               ?_DHT11_Start 0001  
                        ??_InicializarLeds 0001                                   _temp_col 0068  
                                 isa$xinst 000000                                   _vfprintf 1892  
                               _LCD_String 18F4                           ___aomod@dividend 0001  
                   _ControlHumedadAspersor 1B3C                                  sprintf@ap 008B  
                PrenderLed@HumedadAdecuada 0001         ControlHumedadAspersor@MargenErrorH 0005  
             __size_of_DHT11_CheckResponse 002C                            ___aomod@divisor 0009  
                              ??_vfpfcnvrt 0046                            ___aomod@counter 0011  
                                 sprintf@f 008D                                   sprintf@s 0058  
                     __end_of_DatoDigitado 1892                     __size_of_LCD_String_xy 0040  
                             ___aodiv@sign 0012                               ___aomod@sign 0012  
