

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Oct 09 18:09:45 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    46  0000                     
    47                           ; Version 2.20
    48                           ; Generated 12/02/2020 GMT
    49                           ; 
    50                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F4550 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     
    82                           	psect	idataBANK0
    83  001C1A                     __pidataBANK0:
    84                           	callstack 0
    85                           
    86                           ;initializer for _keypad
    87  001C1A  31                 	db	49
    88  001C1B  32                 	db	50
    89  001C1C  33                 	db	51
    90  001C1D  2F                 	db	47
    91  001C1E  34                 	db	52
    92  001C1F  35                 	db	53
    93  001C20  36                 	db	54
    94  001C21  2A                 	db	42
    95  001C22  37                 	db	55
    96  001C23  38                 	db	56
    97  001C24  39                 	db	57
    98  001C25  2D                 	db	45
    99  001C26  2A                 	db	42
   100  001C27  30                 	db	48
   101  001C28  23                 	db	35
   102  001C29  2B                 	db	43
   103                           
   104                           ;initializer for keypad_getkey@F3168
   105  001C2A  31                 	db	49
   106  001C2B  32                 	db	50
   107  001C2C  33                 	db	51
   108  001C2D  41                 	db	65
   109  001C2E  34                 	db	52
   110  001C2F  35                 	db	53
   111  001C30  36                 	db	54
   112  001C31  42                 	db	66
   113  001C32  37                 	db	55
   114  001C33  38                 	db	56
   115  001C34  39                 	db	57
   116  001C35  43                 	db	67
   117  001C36  2A                 	db	42
   118  001C37  30                 	db	48
   119  001C38  23                 	db	35
   120  001C39  44                 	db	68
   121  0000                     _TRISAbits	set	3986
   122  0000                     _PORTAbits	set	3968
   123  0000                     _ADRESH	set	4036
   124  0000                     _ADCON2bits	set	4032
   125  0000                     _ADCON0bits	set	4034
   126  0000                     _ADCON1bits	set	4033
   127  0000                     _PORTB	set	3969
   128  0000                     _LATB	set	3978
   129  0000                     _TRISB	set	3987
   130  0000                     _PORTDbits	set	3971
   131  0000                     _LATDbits	set	3980
   132  0000                     _PORTD	set	3971
   133  0000                     _INTCON2bits	set	4081
   134  0000                     _LATD	set	3980
   135  0000                     _ADCON1	set	4033
   136  0000                     _OSCCON	set	4051
   137  0000                     _TRISD	set	3989
   138  0000                     _TRISE	set	3990
   139  0000                     _LATA0	set	31816
   140  0000                     _LATD1	set	31841
   141  0000                     _LATD0	set	31840
   142  0000                     _LATE2	set	31850
   143  0000                     _LATE1	set	31849
   144  0000                     _LATE0	set	31848
   145  0000                     _RBPU	set	32655
   146                           
   147                           	psect	smallconst
   148  000800                     __psmallconst:
   149                           	callstack 0
   150  000800  00                 	db	0
   151  000801                     STR_1:
   152  000801  54                 	db	84	;'T'
   153  000802  65                 	db	101	;'e'
   154  000803  6D                 	db	109	;'m'
   155  000804  70                 	db	112	;'p'
   156  000805  2E                 	db	46
   157  000806  20                 	db	32
   158  000807  41                 	db	65	;'A'
   159  000808  64                 	db	100	;'d'
   160  000809  65                 	db	101	;'e'
   161  00080A  63                 	db	99	;'c'
   162  00080B  75                 	db	117	;'u'
   163  00080C  61                 	db	97	;'a'
   164  00080D  64                 	db	100	;'d'
   165  00080E  61                 	db	97	;'a'
   166  00080F  00                 	db	0
   167  000810                     STR_2:
   168  000810  48                 	db	72	;'H'
   169  000811  75                 	db	117	;'u'
   170  000812  6D                 	db	109	;'m'
   171  000813  2E                 	db	46
   172  000814  20                 	db	32
   173  000815  41                 	db	65	;'A'
   174  000816  64                 	db	100	;'d'
   175  000817  65                 	db	101	;'e'
   176  000818  63                 	db	99	;'c'
   177  000819  75                 	db	117	;'u'
   178  00081A  61                 	db	97	;'a'
   179  00081B  64                 	db	100	;'d'
   180  00081C  61                 	db	97	;'a'
   181  00081D  00                 	db	0
   182  00081E                     STR_8:
   183  00081E  43                 	db	67	;'C'
   184  00081F  20                 	db	32
   185  000820  54                 	db	84	;'T'
   186  000821  65                 	db	101	;'e'
   187  000822  6D                 	db	109	;'m'
   188  000823  70                 	db	112	;'p'
   189  000824  2E                 	db	46
   190  000825  00                 	db	0
   191  000826                     STR_5:
   192  000826  20                 	db	32
   193  000827  20                 	db	32
   194  000828  48                 	db	72	;'H'
   195  000829  75                 	db	117	;'u'
   196  00082A  6D                 	db	109	;'m'
   197  00082B  2E                 	db	46
   198  00082C  00                 	db	0
   199  00082D                     STR_4:
   200  00082D  2E                 	db	46
   201  00082E  25                 	db	37
   202  00082F  64                 	db	100	;'d'
   203  000830  00                 	db	0
   204  000831  00                 	db	0	; dummy byte at the end
   205  0000                     
   206                           ; #config settings
   207                           
   208                           	psect	cinit
   209  001AFE                     __pcinit:
   210                           	callstack 0
   211  001AFE                     start_initialization:
   212                           	callstack 0
   213  001AFE                     __initialization:
   214                           	callstack 0
   215                           
   216                           ; Initialize objects allocated to BANK0 (32 bytes)
   217                           ; load TBLPTR registers with __pidataBANK0
   218  001AFE  0E1A               	movlw	low __pidataBANK0
   219  001B00  6EF6               	movwf	tblptrl,c
   220  001B02  0E1C               	movlw	high __pidataBANK0
   221  001B04  6EF7               	movwf	tblptrh,c
   222  001B06  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   223  001B08  6EF8               	movwf	tblptru,c
   224  001B0A  EE00  F08B         	lfsr	0,__pdataBANK0
   225  001B0E  EE10 F020          	lfsr	1,32
   226  001B12                     copy_data0:
   227  001B12  0009               	tblrd		*+
   228  001B14  CFF5 FFEE          	movff	tablat,postinc0
   229  001B18  50E5               	movf	postdec1,w,c
   230  001B1A  50E1               	movf	fsr1l,w,c
   231  001B1C  E1FA               	bnz	copy_data0
   232                           
   233                           ; Clear objects allocated to BANK0 (43 bytes)
   234  001B1E  EE00  F060         	lfsr	0,__pbssBANK0
   235  001B22  0E2B               	movlw	43
   236  001B24                     clear_0:
   237  001B24  6AEE               	clrf	postinc0,c
   238  001B26  06E8               	decf	wreg,f,c
   239  001B28  E1FD               	bnz	clear_0
   240  001B2A                     end_of_initialization:
   241                           	callstack 0
   242  001B2A                     __end_of__initialization:
   243                           	callstack 0
   244  001B2A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   245  001B2C  6EF8               	movwf	tblptru,c
   246  001B2E  0100               	movlb	0
   247  001B30  EFA2  F006         	goto	_main	;jump to C main() function
   248                           
   249                           	psect	bssBANK0
   250  000060                     __pbssBANK0:
   251                           	callstack 0
   252  000060                     _nout:
   253                           	callstack 0
   254  000060                     	ds	2
   255  000062                     _width:
   256                           	callstack 0
   257  000062                     	ds	2
   258  000064                     _prec:
   259                           	callstack 0
   260  000064                     	ds	2
   261  000066                     _flags:
   262                           	callstack 0
   263  000066                     	ds	2
   264  000068                     _temp_col:
   265                           	callstack 0
   266  000068                     	ds	1
   267  000069                     _rowloc:
   268                           	callstack 0
   269  000069                     	ds	1
   270  00006A                     _col_loc:
   271                           	callstack 0
   272  00006A                     	ds	1
   273  00006B                     _dbuf:
   274                           	callstack 0
   275  00006B                     	ds	32
   276                           
   277                           	psect	dataBANK0
   278  00008B                     __pdataBANK0:
   279                           	callstack 0
   280  00008B                     _keypad:
   281                           	callstack 0
   282  00008B                     	ds	16
   283  00009B                     keypad_getkey@F3168:
   284                           	callstack 0
   285  00009B                     	ds	16
   286                           
   287                           	psect	cstackBANK0
   288  0000AB                     __pcstackBANK0:
   289                           	callstack 0
   290  0000AB                     sprintf@ap:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0x0
   294  0000AB                     	ds	2
   295  0000AD                     sprintf@f:
   296                           	callstack 0
   297                           
   298                           ; 6 bytes @ 0x2
   299  0000AD                     	ds	6
   300  0000B3                     main@Cadena:
   301                           	callstack 0
   302                           
   303                           ; 10 bytes @ 0x8
   304  0000B3                     	ds	10
   305  0000BD                     main@Temperatura:
   306                           	callstack 0
   307                           
   308                           ; 2 bytes @ 0x12
   309  0000BD                     	ds	2
   310  0000BF                     main@Humedad:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0x14
   314  0000BF                     	ds	2
   315  0000C1                     main@indice:
   316                           	callstack 0
   317                           
   318                           ; 2 bytes @ 0x16
   319  0000C1                     	ds	2
   320  0000C3                     main@TemperaturaAdecuada:
   321                           	callstack 0
   322                           
   323                           ; 2 bytes @ 0x18
   324  0000C3                     	ds	2
   325  0000C5                     main@HumedadAdecuada:
   326                           	callstack 0
   327                           
   328                           ; 2 bytes @ 0x1A
   329  0000C5                     	ds	2
   330  0000C7                     main@bandera:
   331                           	callstack 0
   332                           
   333                           ; 1 bytes @ 0x1C
   334  0000C7                     	ds	1
   335  0000C8                     main@Datos:
   336                           	callstack 0
   337                           
   338                           ; 2 bytes @ 0x1D
   339  0000C8                     	ds	2
   340                           
   341                           	psect	cstackCOMRAM
   342  000001                     __pcstackCOMRAM:
   343                           	callstack 0
   344  000001                     ??_LCD_Char:
   345  000001                     ??_LCD_Command:
   346  000001                     ??_keyfind:
   347  000001                     ??_DHT11_Start:
   348  000001                     ?_strlen:
   349                           	callstack 0
   350  000001                     ?___wmul:
   351                           	callstack 0
   352  000001                     ?___aodiv:
   353                           	callstack 0
   354  000001                     ?___aomod:
   355                           	callstack 0
   356  000001                     PrenderLed@HumedadAdecuada:
   357                           	callstack 0
   358  000001                     DHT11_ReadData@i:
   359                           	callstack 0
   360  000001                     ___wmul@multiplier:
   361                           	callstack 0
   362  000001                     fputc@c:
   363                           	callstack 0
   364  000001                     strlen@s:
   365                           	callstack 0
   366  000001                     ___aodiv@dividend:
   367                           	callstack 0
   368  000001                     ___aomod@dividend:
   369                           	callstack 0
   370                           
   371                           ; 8 bytes @ 0x0
   372  000001                     	ds	1
   373  000002                     PrenderLed@TemperaturaAdecuada:
   374                           	callstack 0
   375  000002                     LCD_Command@cmd:
   376                           	callstack 0
   377  000002                     LCD_Char@dat:
   378                           	callstack 0
   379  000002                     DHT11_ReadData@data:
   380                           	callstack 0
   381                           
   382                           ; 1 bytes @ 0x1
   383  000002                     	ds	1
   384  000003                     ??_LCD_Init:
   385  000003                     ??_LCD_Clear:
   386  000003                     CompararTemperatura@TempActual:
   387                           	callstack 0
   388  000003                     DatosSensorTH@Datos:
   389                           	callstack 0
   390  000003                     LCD_String@msg:
   391                           	callstack 0
   392  000003                     ___wmul@multiplicand:
   393                           	callstack 0
   394  000003                     fputc@fp:
   395                           	callstack 0
   396  000003                     strlen@a:
   397                           	callstack 0
   398                           
   399                           ; 2 bytes @ 0x2
   400  000003                     	ds	2
   401  000005                     ??_fputc:
   402  000005                     DatosSensorTH@RH_Integral:
   403                           	callstack 0
   404  000005                     LCD_String_xy@pos:
   405                           	callstack 0
   406  000005                     CompararTemperatura@HumActual:
   407                           	callstack 0
   408  000005                     ___wmul@product:
   409                           	callstack 0
   410                           
   411                           ; 2 bytes @ 0x4
   412  000005                     	ds	1
   413  000006                     DatosSensorTH@T_Integral:
   414                           	callstack 0
   415  000006                     LCD_String_xy@msg:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x5
   419  000006                     	ds	1
   420  000007                     ?_TemperaturaDigitada:
   421                           	callstack 0
   422  000007                     TemperaturaDigitada@prmTemperatura:
   423                           	callstack 0
   424  000007                     CompararTemperatura@TempDigitada:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0x6
   428  000007                     	ds	1
   429  000008                     LCD_String_xy@row:
   430                           	callstack 0
   431                           
   432                           ; 1 bytes @ 0x7
   433  000008                     	ds	1
   434  000009                     ??_TemperaturaDigitada:
   435  000009                     LCD_String_xy@location:
   436                           	callstack 0
   437  000009                     CompararTemperatura@HumDigitada:
   438                           	callstack 0
   439  000009                     ___aodiv@divisor:
   440                           	callstack 0
   441  000009                     ___aomod@divisor:
   442                           	callstack 0
   443                           
   444                           ; 8 bytes @ 0x8
   445  000009                     	ds	1
   446  00000A                     TemperaturaDigitada@Unidad:
   447                           	callstack 0
   448  00000A                     PedirDato@Etiqueta:
   449                           	callstack 0
   450  00000A                     fputs@s:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0x9
   454  00000A                     	ds	1
   455  00000B                     ??_CompararTemperatura:
   456                           
   457                           ; 1 bytes @ 0xA
   458  00000B                     	ds	1
   459  00000C                     TemperaturaDigitada@Resultado:
   460                           	callstack 0
   461  00000C                     PedirDato@vecLlenar:
   462                           	callstack 0
   463  00000C                     fputs@fp:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0xB
   467  00000C                     	ds	2
   468  00000E                     ??_PedirDato:
   469  00000E                     fputs@c:
   470                           	callstack 0
   471  00000E                     TemperaturaDigitada@Decena:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0xD
   475  00000E                     	ds	1
   476  00000F                     fputs@i:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0xE
   480  00000F                     	ds	1
   481  000010                     PedirDato@tecla:
   482                           	callstack 0
   483                           
   484                           ; 1 bytes @ 0xF
   485  000010                     	ds	1
   486  000011                     ?_pad:
   487                           	callstack 0
   488  000011                     ___aodiv@counter:
   489                           	callstack 0
   490  000011                     ___aomod@counter:
   491                           	callstack 0
   492  000011                     PedirDato@i:
   493                           	callstack 0
   494  000011                     pad@fp:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x10
   498  000011                     	ds	1
   499  000012                     CompararTemperatura@TemperaturaAdecuada:
   500                           	callstack 0
   501  000012                     ___aodiv@sign:
   502                           	callstack 0
   503  000012                     ___aomod@sign:
   504                           	callstack 0
   505                           
   506                           ; 1 bytes @ 0x11
   507  000012                     	ds	1
   508  000013                     ?_abs:
   509                           	callstack 0
   510  000013                     CompararTemperatura@HumedadAdecuada:
   511                           	callstack 0
   512  000013                     pad@buf:
   513                           	callstack 0
   514  000013                     abs@a:
   515                           	callstack 0
   516  000013                     ___aodiv@quotient:
   517                           	callstack 0
   518                           
   519                           ; 8 bytes @ 0x12
   520  000013                     	ds	2
   521  000015                     ??_abs:
   522  000015                     pad@p:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x14
   526  000015                     	ds	2
   527  000017                     ??_pad:
   528                           
   529                           ; 1 bytes @ 0x16
   530  000017                     	ds	1
   531  000018                     pad@i:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x17
   535  000018                     	ds	2
   536  00001A                     pad@w:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0x19
   540  00001A                     	ds	2
   541  00001C                     ?_dtoa:
   542                           	callstack 0
   543  00001C                     dtoa@fp:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x1B
   547  00001C                     	ds	2
   548  00001E                     dtoa@d:
   549                           	callstack 0
   550                           
   551                           ; 8 bytes @ 0x1D
   552  00001E                     	ds	8
   553  000026                     ??_dtoa:
   554                           
   555                           ; 1 bytes @ 0x25
   556  000026                     	ds	8
   557  00002E                     _dtoa$1142:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x2D
   561  00002E                     	ds	2
   562  000030                     dtoa@p:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0x2F
   566  000030                     	ds	2
   567  000032                     dtoa@w:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x31
   571  000032                     	ds	2
   572  000034                     dtoa@s:
   573                           	callstack 0
   574                           
   575                           ; 2 bytes @ 0x33
   576  000034                     	ds	2
   577  000036                     dtoa@n:
   578                           	callstack 0
   579                           
   580                           ; 8 bytes @ 0x35
   581  000036                     	ds	8
   582  00003E                     dtoa@i:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x3D
   586  00003E                     	ds	2
   587  000040                     ?_vfpfcnvrt:
   588                           	callstack 0
   589  000040                     vfpfcnvrt@fp:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x3F
   593  000040                     	ds	2
   594  000042                     vfpfcnvrt@fmt:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x41
   598  000042                     	ds	2
   599  000044                     vfpfcnvrt@ap:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x43
   603  000044                     	ds	2
   604  000046                     ??_vfpfcnvrt:
   605                           
   606                           ; 1 bytes @ 0x45
   607  000046                     	ds	2
   608  000048                     vfpfcnvrt@ll:
   609                           	callstack 0
   610                           
   611                           ; 8 bytes @ 0x47
   612  000048                     	ds	8
   613  000050                     ?_vfprintf:
   614                           	callstack 0
   615  000050                     vfprintf@fp:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x4F
   619  000050                     	ds	2
   620  000052                     vfprintf@fmt:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x51
   624  000052                     	ds	2
   625  000054                     vfprintf@ap:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x53
   629  000054                     	ds	2
   630  000056                     vfprintf@cfmt:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x55
   634  000056                     	ds	2
   635  000058                     ?_sprintf:
   636                           	callstack 0
   637  000058                     sprintf@s:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0x57
   641  000058                     	ds	2
   642  00005A                     sprintf@fmt:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x59
   646  00005A                     	ds	4
   647  00005E                     ??_main:
   648                           
   649                           ; 1 bytes @ 0x5D
   650  00005E                     	ds	2
   651                           
   652 ;;
   653 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   654 ;;
   655 ;; *************** function _main *****************
   656 ;; Defined at:
   657 ;;		line 25 in file "Main_Invernadero.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;		None
   660 ;; Auto vars:     Size  Location     Type
   661 ;;  Cadena         10    8[BANK0 ] unsigned char [10]
   662 ;;  Datos           2   29[BANK0 ] unsigned char [2]
   663 ;;  Humedad         2   20[BANK0 ] unsigned char [2]
   664 ;;  Temperatura     2   18[BANK0 ] unsigned char [2]
   665 ;;  HumedadAdecu    2   26[BANK0 ] int 
   666 ;;  TemperaturaA    2   24[BANK0 ] int 
   667 ;;  indice          2   22[BANK0 ] int 
   668 ;;  bandera         1   28[BANK0 ] _Bool 
   669 ;; Return value:  Size  Location     Type
   670 ;;                  1    wreg      void 
   671 ;; Registers used:
   672 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   673 ;; Tracked objects:
   674 ;;		On entry : 0/0
   675 ;;		On exit  : 0/0
   676 ;;		Unchanged: 0/0
   677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   678 ;;      Params:         0       0       0       0       0       0       0       0       0
   679 ;;      Locals:         0      23       0       0       0       0       0       0       0
   680 ;;      Temps:          2       0       0       0       0       0       0       0       0
   681 ;;      Totals:         2      23       0       0       0       0       0       0       0
   682 ;;Total ram usage:       25 bytes
   683 ;; Hardware stack levels required when called: 8
   684 ;; This function calls:
   685 ;;		_CompararTemperatura
   686 ;;		_DatosSensorTH
   687 ;;		_InicializarLeds
   688 ;;		_LCD_Char
   689 ;;		_LCD_Init
   690 ;;		_LCD_String
   691 ;;		_LCD_String_xy
   692 ;;		_PedirDato
   693 ;;		_TemperaturaDigitada
   694 ;;		_sprintf
   695 ;; This function is called by:
   696 ;;		Startup code after reset
   697 ;; This function uses a non-reentrant model
   698 ;;
   699                           
   700                           	psect	text0
   701  000D44                     __ptext0:
   702                           	callstack 0
   703  000D44                     _main:
   704                           	callstack 23
   705  000D44                     
   706                           ;Main_Invernadero.c: 28:     TRISE = 0;
   707  000D44  0E00               	movlw	0
   708  000D46  6E96               	movwf	150,c	;volatile
   709                           
   710                           ;Main_Invernadero.c: 29:     TRISD=0x00;
   711  000D48  0E00               	movlw	0
   712  000D4A  6E95               	movwf	149,c	;volatile
   713                           
   714                           ;Main_Invernadero.c: 30:     _Bool bandera = 0;
   715  000D4C  0E00               	movlw	0
   716  000D4E  0100               	movlb	0	; () banked
   717  000D50  6FC7               	movwf	main@bandera& (0+255),b
   718                           
   719                           ;Main_Invernadero.c: 31:     unsigned char Temperatura[2];;Main_Invernadero.c: 32:     u
      +                          nsigned char Humedad[2];;Main_Invernadero.c: 33:     char Datos[2];;Main_Invernadero.c: 
      +                          34:     char Cadena[10];;Main_Invernadero.c: 35:     int indice = 0;
   720  000D52  0E00               	movlw	0
   721  000D54  6FC2               	movwf	(main@indice+1)& (0+255),b
   722  000D56  0E00               	movlw	0
   723  000D58  6FC1               	movwf	main@indice& (0+255),b
   724                           
   725                           ;Main_Invernadero.c: 36:     int TemperaturaAdecuada=0;
   726  000D5A  0E00               	movlw	0
   727  000D5C  6FC4               	movwf	(main@TemperaturaAdecuada+1)& (0+255),b
   728  000D5E  0E00               	movlw	0
   729  000D60  6FC3               	movwf	main@TemperaturaAdecuada& (0+255),b
   730                           
   731                           ;Main_Invernadero.c: 37:     int HumedadAdecuada=0;
   732  000D62  0E00               	movlw	0
   733  000D64  6FC6               	movwf	(main@HumedadAdecuada+1)& (0+255),b
   734  000D66  0E00               	movlw	0
   735  000D68  6FC5               	movwf	main@HumedadAdecuada& (0+255),b
   736                           
   737                           ;Main_Invernadero.c: 40:     OSCCON = 0x72;
   738  000D6A  0E72               	movlw	114
   739  000D6C  6ED3               	movwf	211,c	;volatile
   740                           
   741                           ;Main_Invernadero.c: 42:     ADCON1=0x0F;
   742  000D6E  0E0F               	movlw	15
   743  000D70  6EC1               	movwf	193,c	;volatile
   744  000D72                     
   745                           ; BSR set to: 0
   746                           ;Main_Invernadero.c: 43:      RBPU=0;
   747  000D72  9EF1               	bcf	4081,7,c	;volatile
   748  000D74                     
   749                           ; BSR set to: 0
   750                           ;Main_Invernadero.c: 44:      LCD_Init();
   751  000D74  ECB5  F00D         	call	_LCD_Init	;wreg free
   752  000D78                     
   753                           ;Main_Invernadero.c: 45:      InicializarLeds();
   754  000D78  EC2D  F00E         	call	_InicializarLeds	;wreg free
   755  000D7C                     l2500:
   756                           
   757                           ;Main_Invernadero.c: 47:      if(indice<2){
   758  000D7C  0100               	movlb	0	; () banked
   759  000D7E  BFC2               	btfsc	(main@indice+1)& (0+255),7,b
   760  000D80  EFCD  F006         	goto	u2090
   761  000D84  51C2               	movf	(main@indice+1)& (0+255),w,b
   762  000D86  E107               	bnz	u2091
   763  000D88  0E02               	movlw	2
   764  000D8A  5DC1               	subwf	main@indice& (0+255),w,b
   765  000D8C  B0D8               	btfsc	status,0,c
   766  000D8E  EFCB  F006         	goto	u2091
   767  000D92  EFCD  F006         	goto	u2090
   768  000D96                     u2091:
   769  000D96  EFF4  F006         	goto	l2510
   770  000D9A                     u2090:
   771  000D9A                     
   772                           ; BSR set to: 0
   773                           ;Main_Invernadero.c: 48:        PedirDato("Temp. Adecuada",Temperatura);
   774  000D9A  0E01               	movlw	low STR_1
   775  000D9C  6E0A               	movwf	PedirDato@Etiqueta^0,c
   776  000D9E  0E08               	movlw	high STR_1
   777  000DA0  6E0B               	movwf	(PedirDato@Etiqueta+1)^0,c
   778  000DA2  0EBD               	movlw	low main@Temperatura
   779  000DA4  6E0C               	movwf	PedirDato@vecLlenar^0,c
   780  000DA6  0E00               	movlw	high main@Temperatura
   781  000DA8  6E0D               	movwf	(PedirDato@vecLlenar+1)^0,c
   782  000DAA  EC52  F00B         	call	_PedirDato	;wreg free
   783  000DAE                     
   784                           ;Main_Invernadero.c: 49:        _delay((unsigned long)((100)*(8000000/4000.0)));
   785  000DAE  0E02               	movlw	2
   786  000DB0  6E5F               	movwf	(??_main+1)^0,c
   787  000DB2  0E04               	movlw	4
   788  000DB4  6E5E               	movwf	??_main^0,c
   789  000DB6  0EBA               	movlw	186
   790  000DB8                     u2347:
   791  000DB8  2EE8               	decfsz	wreg,f,c
   792  000DBA  D7FE               	bra	u2347
   793  000DBC  2E5E               	decfsz	??_main^0,f,c
   794  000DBE  D7FC               	bra	u2347
   795  000DC0  2E5F               	decfsz	(??_main+1)^0,f,c
   796  000DC2  D7FA               	bra	u2347
   797  000DC4  D000               	nop2	
   798  000DC6                     
   799                           ;Main_Invernadero.c: 50:        PedirDato("Hum. Adecuada",Humedad);
   800  000DC6  0E10               	movlw	low STR_2
   801  000DC8  6E0A               	movwf	PedirDato@Etiqueta^0,c
   802  000DCA  0E08               	movlw	high STR_2
   803  000DCC  6E0B               	movwf	(PedirDato@Etiqueta+1)^0,c
   804  000DCE  0EBF               	movlw	low main@Humedad
   805  000DD0  6E0C               	movwf	PedirDato@vecLlenar^0,c
   806  000DD2  0E00               	movlw	high main@Humedad
   807  000DD4  6E0D               	movwf	(PedirDato@vecLlenar+1)^0,c
   808  000DD6  EC52  F00B         	call	_PedirDato	;wreg free
   809  000DDA                     
   810                           ;Main_Invernadero.c: 51:        indice = 2;
   811  000DDA  0E00               	movlw	0
   812  000DDC  0100               	movlb	0	; () banked
   813  000DDE  6FC2               	movwf	(main@indice+1)& (0+255),b
   814  000DE0  0E02               	movlw	2
   815  000DE2  6FC1               	movwf	main@indice& (0+255),b
   816                           
   817                           ;Main_Invernadero.c: 52:     }else{
   818  000DE4  EF13  F007         	goto	l2516
   819  000DE8                     l2510:
   820                           
   821                           ; BSR set to: 0
   822                           ;Main_Invernadero.c: 53:         if(bandera==0){
   823  000DE8  51C7               	movf	main@bandera& (0+255),w,b
   824  000DEA  A4D8               	btfss	status,2,c
   825  000DEC  EFFA  F006         	goto	u2101
   826  000DF0  EFFC  F006         	goto	u2100
   827  000DF4                     u2101:
   828  000DF4  EF10  F007         	goto	l2514
   829  000DF8                     u2100:
   830  000DF8                     
   831                           ; BSR set to: 0
   832                           ;Main_Invernadero.c: 54:          TemperaturaAdecuada = TemperaturaDigitada(Temperatura)
      +                          ;
   833  000DF8  0EBD               	movlw	low main@Temperatura
   834  000DFA  6E07               	movwf	TemperaturaDigitada@prmTemperatura^0,c
   835  000DFC  0E00               	movlw	high main@Temperatura
   836  000DFE  6E08               	movwf	(TemperaturaDigitada@prmTemperatura+1)^0,c
   837  000E00  EC91  F00B         	call	_TemperaturaDigitada	;wreg free
   838  000E04  C007  F0C3         	movff	?_TemperaturaDigitada,main@TemperaturaAdecuada
   839  000E08  C008  F0C4         	movff	?_TemperaturaDigitada+1,main@TemperaturaAdecuada+1
   840                           
   841                           ;Main_Invernadero.c: 55:          HumedadAdecuada = TemperaturaDigitada(Humedad);
   842  000E0C  0EBF               	movlw	low main@Humedad
   843  000E0E  6E07               	movwf	TemperaturaDigitada@prmTemperatura^0,c
   844  000E10  0E00               	movlw	high main@Humedad
   845  000E12  6E08               	movwf	(TemperaturaDigitada@prmTemperatura+1)^0,c
   846  000E14  EC91  F00B         	call	_TemperaturaDigitada	;wreg free
   847  000E18  C007  F0C5         	movff	?_TemperaturaDigitada,main@HumedadAdecuada
   848  000E1C  C008  F0C6         	movff	?_TemperaturaDigitada+1,main@HumedadAdecuada+1
   849  000E20                     l2514:
   850                           
   851                           ;Main_Invernadero.c: 57:        bandera=1;
   852  000E20  0E01               	movlw	1
   853  000E22  0100               	movlb	0	; () banked
   854  000E24  6FC7               	movwf	main@bandera& (0+255),b
   855  000E26                     l2516:
   856                           
   857                           ; BSR set to: 0
   858                           ;Main_Invernadero.c: 59:      if (bandera==1){
   859  000E26  05C7               	decf	main@bandera& (0+255),w,b
   860  000E28  A4D8               	btfss	status,2,c
   861  000E2A  EF19  F007         	goto	u2111
   862  000E2E  EF1B  F007         	goto	u2110
   863  000E32                     u2111:
   864  000E32  EFBE  F006         	goto	l2500
   865  000E36                     u2110:
   866  000E36                     
   867                           ; BSR set to: 0
   868                           ;Main_Invernadero.c: 60:         DatosSensorTH(Datos);
   869  000E36  0EC8               	movlw	low main@Datos
   870  000E38  6E03               	movwf	DatosSensorTH@Datos^0,c
   871  000E3A  0E00               	movlw	high main@Datos
   872  000E3C  6E04               	movwf	(DatosSensorTH@Datos+1)^0,c
   873  000E3E  EC60  F00D         	call	_DatosSensorTH	;wreg free
   874                           
   875                           ;Main_Invernadero.c: 61:         CompararTemperatura(&Datos[0],&Datos[1],TemperaturaAdec
      +                          uada,HumedadAdecuada);
   876  000E42  0EC8               	movlw	low main@Datos
   877  000E44  6E03               	movwf	CompararTemperatura@TempActual^0,c
   878  000E46  0E00               	movlw	high main@Datos
   879  000E48  6E04               	movwf	(CompararTemperatura@TempActual+1)^0,c
   880  000E4A  0EC9               	movlw	low (main@Datos+1)
   881  000E4C  6E05               	movwf	CompararTemperatura@HumActual^0,c
   882  000E4E  0E00               	movlw	high (main@Datos+1)
   883  000E50  6E06               	movwf	(CompararTemperatura@HumActual+1)^0,c
   884  000E52  C0C3  F007         	movff	main@TemperaturaAdecuada,CompararTemperatura@TempDigitada
   885  000E56  C0C4  F008         	movff	main@TemperaturaAdecuada+1,CompararTemperatura@TempDigitada+1
   886  000E5A  C0C5  F009         	movff	main@HumedadAdecuada,CompararTemperatura@HumDigitada
   887  000E5E  C0C6  F00A         	movff	main@HumedadAdecuada+1,CompararTemperatura@HumDigitada+1
   888  000E62  EC00  F00A         	call	_CompararTemperatura	;wreg free
   889  000E66                     
   890                           ;Main_Invernadero.c: 64:     sprintf(Cadena,"%d",Datos[1]);
   891  000E66  0EB3               	movlw	low main@Cadena
   892  000E68  6E58               	movwf	sprintf@s^0,c
   893  000E6A  0E00               	movlw	high main@Cadena
   894  000E6C  6E59               	movwf	(sprintf@s+1)^0,c
   895  000E6E  0E2E               	movlw	low (STR_4+1)
   896  000E70  6E5A               	movwf	sprintf@fmt^0,c
   897  000E72  0E08               	movlw	high (STR_4+1)
   898  000E74  6E5B               	movwf	(sprintf@fmt+1)^0,c
   899  000E76  C0C9  F05C         	movff	main@Datos+1,?_sprintf+4
   900  000E7A  6A5D               	clrf	(?_sprintf+5)^0,c
   901  000E7C  EC85  F00C         	call	_sprintf	;wreg free
   902  000E80                     
   903                           ;Main_Invernadero.c: 65:     LCD_String_xy(0,0,Cadena);
   904  000E80  0E00               	movlw	0
   905  000E82  6E05               	movwf	LCD_String_xy@pos^0,c
   906  000E84  0EB3               	movlw	low main@Cadena
   907  000E86  6E06               	movwf	LCD_String_xy@msg^0,c
   908  000E88  0E00               	movlw	high main@Cadena
   909  000E8A  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
   910  000E8C  0E00               	movlw	0
   911  000E8E  EC40  F00D         	call	_LCD_String_xy
   912  000E92                     
   913                           ;Main_Invernadero.c: 66:     sprintf(Cadena,".%d",0);
   914  000E92  0EB3               	movlw	low main@Cadena
   915  000E94  6E58               	movwf	sprintf@s^0,c
   916  000E96  0E00               	movlw	high main@Cadena
   917  000E98  6E59               	movwf	(sprintf@s+1)^0,c
   918  000E9A  0E2D               	movlw	low STR_4
   919  000E9C  6E5A               	movwf	sprintf@fmt^0,c
   920  000E9E  0E08               	movlw	high STR_4
   921  000EA0  6E5B               	movwf	(sprintf@fmt+1)^0,c
   922  000EA2  0E00               	movlw	0
   923  000EA4  6E5D               	movwf	(?_sprintf+5)^0,c
   924  000EA6  0E00               	movlw	0
   925  000EA8  6E5C               	movwf	(?_sprintf+4)^0,c
   926  000EAA  EC85  F00C         	call	_sprintf	;wreg free
   927  000EAE                     
   928                           ;Main_Invernadero.c: 67:     LCD_Char('%');
   929  000EAE  0E25               	movlw	37
   930  000EB0  ECAE  F00C         	call	_LCD_Char
   931                           
   932                           ;Main_Invernadero.c: 68:     sprintf(Cadena,"  Hum.");
   933  000EB4  0EB3               	movlw	low main@Cadena
   934  000EB6  6E58               	movwf	sprintf@s^0,c
   935  000EB8  0E00               	movlw	high main@Cadena
   936  000EBA  6E59               	movwf	(sprintf@s+1)^0,c
   937  000EBC  0E26               	movlw	low STR_5
   938  000EBE  6E5A               	movwf	sprintf@fmt^0,c
   939  000EC0  0E08               	movlw	high STR_5
   940  000EC2  6E5B               	movwf	(sprintf@fmt+1)^0,c
   941  000EC4  EC85  F00C         	call	_sprintf	;wreg free
   942  000EC8                     
   943                           ;Main_Invernadero.c: 69:      LCD_String(Cadena);
   944  000EC8  0EB3               	movlw	low main@Cadena
   945  000ECA  6E03               	movwf	LCD_String@msg^0,c
   946  000ECC  0E00               	movlw	high main@Cadena
   947  000ECE  6E04               	movwf	(LCD_String@msg+1)^0,c
   948  000ED0  ECFD  F00B         	call	_LCD_String	;wreg free
   949  000ED4                     
   950                           ;Main_Invernadero.c: 72:     sprintf(Cadena,"%d",Datos[0]);
   951  000ED4  0EB3               	movlw	low main@Cadena
   952  000ED6  6E58               	movwf	sprintf@s^0,c
   953  000ED8  0E00               	movlw	high main@Cadena
   954  000EDA  6E59               	movwf	(sprintf@s+1)^0,c
   955  000EDC  0E2E               	movlw	low (STR_4+1)
   956  000EDE  6E5A               	movwf	sprintf@fmt^0,c
   957  000EE0  0E08               	movlw	high (STR_4+1)
   958  000EE2  6E5B               	movwf	(sprintf@fmt+1)^0,c
   959  000EE4  C0C8  F05C         	movff	main@Datos,?_sprintf+4
   960  000EE8  6A5D               	clrf	(?_sprintf+5)^0,c
   961  000EEA  EC85  F00C         	call	_sprintf	;wreg free
   962                           
   963                           ;Main_Invernadero.c: 73:     LCD_String_xy(2,0,Cadena);
   964  000EEE  0E00               	movlw	0
   965  000EF0  6E05               	movwf	LCD_String_xy@pos^0,c
   966  000EF2  0EB3               	movlw	low main@Cadena
   967  000EF4  6E06               	movwf	LCD_String_xy@msg^0,c
   968  000EF6  0E00               	movlw	high main@Cadena
   969  000EF8  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
   970  000EFA  0E02               	movlw	2
   971  000EFC  EC40  F00D         	call	_LCD_String_xy
   972  000F00                     
   973                           ;Main_Invernadero.c: 74:     sprintf(Cadena,".%d",0);
   974  000F00  0EB3               	movlw	low main@Cadena
   975  000F02  6E58               	movwf	sprintf@s^0,c
   976  000F04  0E00               	movlw	high main@Cadena
   977  000F06  6E59               	movwf	(sprintf@s+1)^0,c
   978  000F08  0E2D               	movlw	low STR_4
   979  000F0A  6E5A               	movwf	sprintf@fmt^0,c
   980  000F0C  0E08               	movlw	high STR_4
   981  000F0E  6E5B               	movwf	(sprintf@fmt+1)^0,c
   982  000F10  0E00               	movlw	0
   983  000F12  6E5D               	movwf	(?_sprintf+5)^0,c
   984  000F14  0E00               	movlw	0
   985  000F16  6E5C               	movwf	(?_sprintf+4)^0,c
   986  000F18  EC85  F00C         	call	_sprintf	;wreg free
   987  000F1C                     
   988                           ;Main_Invernadero.c: 75:     LCD_Char(0xdf);
   989  000F1C  0EDF               	movlw	223
   990  000F1E  ECAE  F00C         	call	_LCD_Char
   991  000F22                     
   992                           ;Main_Invernadero.c: 76:     sprintf(Cadena,"C Temp.");
   993  000F22  0EB3               	movlw	low main@Cadena
   994  000F24  6E58               	movwf	sprintf@s^0,c
   995  000F26  0E00               	movlw	high main@Cadena
   996  000F28  6E59               	movwf	(sprintf@s+1)^0,c
   997  000F2A  0E1E               	movlw	low STR_8
   998  000F2C  6E5A               	movwf	sprintf@fmt^0,c
   999  000F2E  0E08               	movlw	high STR_8
  1000  000F30  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1001  000F32  EC85  F00C         	call	_sprintf	;wreg free
  1002  000F36                     
  1003                           ;Main_Invernadero.c: 77:     LCD_String(Cadena);
  1004  000F36  0EB3               	movlw	low main@Cadena
  1005  000F38  6E03               	movwf	LCD_String@msg^0,c
  1006  000F3A  0E00               	movlw	high main@Cadena
  1007  000F3C  6E04               	movwf	(LCD_String@msg+1)^0,c
  1008  000F3E  ECFD  F00B         	call	_LCD_String	;wreg free
  1009  000F42                     
  1010                           ;Main_Invernadero.c: 79:        _delay((unsigned long)((500)*(8000000/4000.0)));
  1011  000F42  0E06               	movlw	6
  1012  000F44  6E5F               	movwf	(??_main+1)^0,c
  1013  000F46  0E13               	movlw	19
  1014  000F48  6E5E               	movwf	??_main^0,c
  1015  000F4A  0EAE               	movlw	174
  1016  000F4C                     u2357:
  1017  000F4C  2EE8               	decfsz	wreg,f,c
  1018  000F4E  D7FE               	bra	u2357
  1019  000F50  2E5E               	decfsz	??_main^0,f,c
  1020  000F52  D7FC               	bra	u2357
  1021  000F54  2E5F               	decfsz	(??_main+1)^0,f,c
  1022  000F56  D7FA               	bra	u2357
  1023  000F58  EFBE  F006         	goto	l2500
  1024  000F5C  EF00  F000         	goto	start
  1025  000F60                     __end_of_main:
  1026                           	callstack 0
  1027                           
  1028 ;; *************** function _sprintf *****************
  1029 ;; Defined at:
  1030 ;;		line 9 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\nf_sprintf.c"
  1031 ;; Parameters:    Size  Location     Type
  1032 ;;  s               2   87[COMRAM] PTR unsigned char 
  1033 ;;		 -> main@Cadena(10), 
  1034 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
  1035 ;;		 -> STR_8(8), STR_7(4), STR_6(3), STR_5(7), 
  1036 ;;		 -> STR_4(4), STR_3(3), 
  1037 ;; Auto vars:     Size  Location     Type
  1038 ;;  f               6    2[BANK0 ] struct _IO_FILE
  1039 ;;  ap              2    0[BANK0 ] PTR void [1]
  1040 ;;		 -> ?_sprintf(2), 
  1041 ;;  ret             2    0        int 
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  2   87[COMRAM] int 
  1044 ;; Registers used:
  1045 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1046 ;; Tracked objects:
  1047 ;;		On entry : 0/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1051 ;;      Params:         6       0       0       0       0       0       0       0       0
  1052 ;;      Locals:         0       8       0       0       0       0       0       0       0
  1053 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1054 ;;      Totals:         6       8       0       0       0       0       0       0       0
  1055 ;;Total ram usage:       14 bytes
  1056 ;; Hardware stack levels used: 1
  1057 ;; Hardware stack levels required when called: 7
  1058 ;; This function calls:
  1059 ;;		_vfprintf
  1060 ;; This function is called by:
  1061 ;;		_main
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065                           	psect	text1
  1066  00190A                     __ptext1:
  1067                           	callstack 0
  1068  00190A                     _sprintf:
  1069                           	callstack 23
  1070  00190A  0E5C               	movlw	low (?_sprintf+4)
  1071  00190C  0100               	movlb	0	; () banked
  1072  00190E  6FAB               	movwf	sprintf@ap& (0+255),b
  1073  001910  0E00               	movlw	high (?_sprintf+4)
  1074  001912  6FAC               	movwf	(sprintf@ap+1)& (0+255),b
  1075  001914  C058  F0AD         	movff	sprintf@s,sprintf@f
  1076  001918  C059  F0AE         	movff	sprintf@s+1,sprintf@f+1
  1077  00191C                     
  1078                           ; BSR set to: 0
  1079  00191C  0E00               	movlw	0
  1080  00191E  6FB0               	movwf	(sprintf@f+3)& (0+255),b
  1081  001920  0E00               	movlw	0
  1082  001922  6FAF               	movwf	(sprintf@f+2)& (0+255),b
  1083  001924                     
  1084                           ; BSR set to: 0
  1085  001924  0E00               	movlw	0
  1086  001926  6FB2               	movwf	(sprintf@f+5)& (0+255),b
  1087  001928  0E00               	movlw	0
  1088  00192A  6FB1               	movwf	(sprintf@f+4)& (0+255),b
  1089  00192C                     
  1090                           ; BSR set to: 0
  1091  00192C  0EAD               	movlw	low sprintf@f
  1092  00192E  6E50               	movwf	vfprintf@fp^0,c
  1093  001930  0E00               	movlw	high sprintf@f
  1094  001932  6E51               	movwf	(vfprintf@fp+1)^0,c
  1095  001934  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
  1096  001938  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1097  00193C  0EAB               	movlw	low sprintf@ap
  1098  00193E  6E54               	movwf	vfprintf@ap^0,c
  1099  001940  0E00               	movlw	high sprintf@ap
  1100  001942  6E55               	movwf	(vfprintf@ap+1)^0,c
  1101  001944  ECCC  F00B         	call	_vfprintf	;wreg free
  1102  001948  0100               	movlb	0	; () banked
  1103  00194A  51AF               	movf	(sprintf@f+2)& (0+255),w,b
  1104  00194C  2458               	addwf	sprintf@s^0,w,c
  1105  00194E  6ED9               	movwf	fsr2l,c
  1106  001950  51B0               	movf	(sprintf@f+3)& (0+255),w,b
  1107  001952  2059               	addwfc	(sprintf@s+1)^0,w,c
  1108  001954  6EDA               	movwf	fsr2h,c
  1109  001956  0E00               	movlw	0
  1110  001958  6EDF               	movwf	indf2,c
  1111  00195A                     
  1112                           ; BSR set to: 0
  1113  00195A  0012               	return		;funcret
  1114  00195C                     __end_of_sprintf:
  1115                           	callstack 0
  1116                           
  1117 ;; *************** function _vfprintf *****************
  1118 ;; Defined at:
  1119 ;;		line 1390 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c"
  1120 ;; Parameters:    Size  Location     Type
  1121 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  1122 ;;		 -> sprintf@f(6), 
  1123 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  1124 ;;		 -> STR_8(8), STR_7(4), STR_6(3), STR_5(7), 
  1125 ;;		 -> STR_4(4), STR_3(3), 
  1126 ;;  ap              2   83[COMRAM] PTR PTR void 
  1127 ;;		 -> sprintf@ap(2), 
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  1130 ;;		 -> STR_8(8), STR_7(4), STR_6(3), STR_5(7), 
  1131 ;;		 -> STR_4(4), STR_3(3), 
  1132 ;; Return value:  Size  Location     Type
  1133 ;;                  2   79[COMRAM] int 
  1134 ;; Registers used:
  1135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1136 ;; Tracked objects:
  1137 ;;		On entry : 0/0
  1138 ;;		On exit  : 0/0
  1139 ;;		Unchanged: 0/0
  1140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1141 ;;      Params:         6       0       0       0       0       0       0       0       0
  1142 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1143 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1144 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1145 ;;Total ram usage:        8 bytes
  1146 ;; Hardware stack levels used: 1
  1147 ;; Hardware stack levels required when called: 6
  1148 ;; This function calls:
  1149 ;;		_vfpfcnvrt
  1150 ;; This function is called by:
  1151 ;;		_sprintf
  1152 ;; This function uses a non-reentrant model
  1153 ;;
  1154                           
  1155                           	psect	text2
  1156  001798                     __ptext2:
  1157                           	callstack 0
  1158  001798                     _vfprintf:
  1159                           	callstack 23
  1160  001798                     
  1161                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1390: int vfprintf(FIL
      +                          E *fp, const char *fmt, va_list ap);D:\XC8 compilador para el MPLAB\pic\sources\c99\comm
      +                          on\doprnt.c: 1391: {;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 13
      +                          93:     char *cfmt;;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 139
      +                          5:     cfmt = (char *)fmt;
  1162  001798  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  1163  00179C  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1164  0017A0                     
  1165                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1396:     nout = 0;
  1166  0017A0  0E00               	movlw	0
  1167  0017A2  0100               	movlb	0	; () banked
  1168  0017A4  6F61               	movwf	(_nout+1)& (0+255),b
  1169  0017A6  0E00               	movlw	0
  1170  0017A8  6F60               	movwf	_nout& (0+255),b
  1171                           
  1172                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1397:     while (*cfmt
      +                          ) {
  1173  0017AA  EFEA  F00B         	goto	l2390
  1174  0017AE                     l2388:
  1175                           
  1176                           ; BSR set to: 0
  1177                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1398:         nout += 
      +                          vfpfcnvrt(fp, &cfmt, ap);
  1178  0017AE  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  1179  0017B2  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1180  0017B6  0E56               	movlw	low vfprintf@cfmt
  1181  0017B8  6E42               	movwf	vfpfcnvrt@fmt^0,c
  1182  0017BA  0E00               	movlw	high vfprintf@cfmt
  1183  0017BC  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1184  0017BE  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  1185  0017C2  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1186  0017C6  ECB0  F007         	call	_vfpfcnvrt	;wreg free
  1187  0017CA  5040               	movf	?_vfpfcnvrt^0,w,c
  1188  0017CC  0100               	movlb	0	; () banked
  1189  0017CE  2760               	addwf	_nout& (0+255),f,b
  1190  0017D0  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  1191  0017D2  2361               	addwfc	(_nout+1)& (0+255),f,b
  1192  0017D4                     l2390:
  1193                           
  1194                           ; BSR set to: 0
  1195                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1397:     while (*cfmt
      +                          ) {
  1196  0017D4  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  1197  0017D8  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1198  0017DC                     	if	0	;tblptru may be non-zero
  1199  0017DC                     	endif
  1200  0017DC                     	if	0	;tblptru may be non-zero
  1201  0017DC                     	endif
  1202  0017DC  0008               	tblrd		*
  1203  0017DE  50F5               	movf	tablat,w,c
  1204  0017E0  0900               	iorlw	0
  1205  0017E2  A4D8               	btfss	status,2,c
  1206  0017E4  EFF6  F00B         	goto	u2031
  1207  0017E8  EFF8  F00B         	goto	u2030
  1208  0017EC                     u2031:
  1209  0017EC  EFD7  F00B         	goto	l2388
  1210  0017F0                     u2030:
  1211  0017F0                     
  1212                           ; BSR set to: 0
  1213                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1400:     return nout;
  1214  0017F0  C060  F050         	movff	_nout,?_vfprintf
  1215  0017F4  C061  F051         	movff	_nout+1,?_vfprintf+1
  1216  0017F8                     
  1217                           ; BSR set to: 0
  1218  0017F8  0012               	return		;funcret
  1219  0017FA                     __end_of_vfprintf:
  1220                           	callstack 0
  1221                           
  1222 ;; *************** function _vfpfcnvrt *****************
  1223 ;; Defined at:
  1224 ;;		line 692 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c"
  1225 ;; Parameters:    Size  Location     Type
  1226 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  1227 ;;		 -> sprintf@f(6), 
  1228 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  1229 ;;		 -> vfprintf@cfmt(2), 
  1230 ;;  ap              2   67[COMRAM] PTR PTR void 
  1231 ;;		 -> sprintf@ap(2), 
  1232 ;; Auto vars:     Size  Location     Type
  1233 ;;  ll              8   71[COMRAM] long long 
  1234 ;;  llu             8    0        unsigned long long 
  1235 ;;  f               4    0        unsigned long long 
  1236 ;;  vp              3    0        PTR void 
  1237 ;;  ct              3    0        unsigned char [3]
  1238 ;;  cp              3    0        PTR unsigned char 
  1239 ;;  i               2    0        int 
  1240 ;;  done            2    0        int 
  1241 ;;  c               1    0        unsigned char 
  1242 ;; Return value:  Size  Location     Type
  1243 ;;                  2   63[COMRAM] int 
  1244 ;; Registers used:
  1245 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1246 ;; Tracked objects:
  1247 ;;		On entry : 0/0
  1248 ;;		On exit  : 0/0
  1249 ;;		Unchanged: 0/0
  1250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1251 ;;      Params:         6       0       0       0       0       0       0       0       0
  1252 ;;      Locals:         8       0       0       0       0       0       0       0       0
  1253 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1254 ;;      Totals:        16       0       0       0       0       0       0       0       0
  1255 ;;Total ram usage:       16 bytes
  1256 ;; Hardware stack levels used: 1
  1257 ;; Hardware stack levels required when called: 5
  1258 ;; This function calls:
  1259 ;;		_dtoa
  1260 ;;		_fputc
  1261 ;; This function is called by:
  1262 ;;		_vfprintf
  1263 ;; This function uses a non-reentrant model
  1264 ;;
  1265                           
  1266                           	psect	text3
  1267  000F60                     __ptext3:
  1268                           	callstack 0
  1269  000F60                     _vfpfcnvrt:
  1270                           	callstack 23
  1271  000F60                     
  1272                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 692: static int vfpfcn
      +                          vrt(FILE *fp, char *fmt[], va_list ap);D:\XC8 compilador para el MPLAB\pic\sources\c99\c
      +                          ommon\doprnt.c: 693: {;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 
      +                          694:     char c, *cp, ct[3];;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\dopr
      +                          nt.c: 695:     int done, i;;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprn
      +                          t.c: 696:     long long ll;;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprn
      +                          t.c: 697:     unsigned long long llu;
  1273  000F60  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1274  000F64  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1275  000F68  CFDE FFF6          	movff	postinc2,tblptrl
  1276  000F6C  CFDD FFF7          	movff	postdec2,tblptrh
  1277  000F70                     	if	0	;tblptru may be non-zero
  1278  000F70                     	endif
  1279  000F70                     	if	0	;tblptru may be non-zero
  1280  000F70                     	endif
  1281  000F70  0008               	tblrd		*
  1282  000F72  50F5               	movf	tablat,w,c
  1283  000F74  0A25               	xorlw	37
  1284  000F76  A4D8               	btfss	status,2,c
  1285  000F78  EFC0  F007         	goto	u1721
  1286  000F7C  EFC2  F007         	goto	u1720
  1287  000F80                     u1721:
  1288  000F80  EF6E  F008         	goto	l2206
  1289  000F84                     u1720:
  1290  000F84                     
  1291                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 703:         ++*fmt;
  1292  000F84  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1293  000F88  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1294  000F8C  2ADE               	incf	postinc2,f,c
  1295  000F8E  0E00               	movlw	0
  1296  000F90  22DD               	addwfc	postdec2,f,c
  1297  000F92                     
  1298                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 705:         flags = w
      +                          idth = 0;
  1299  000F92  0E00               	movlw	0
  1300  000F94  0100               	movlb	0	; () banked
  1301  000F96  6F63               	movwf	(_width+1)& (0+255),b
  1302  000F98  0E00               	movlw	0
  1303  000F9A  6F62               	movwf	_width& (0+255),b
  1304  000F9C  C062  F066         	movff	_width,_flags
  1305  000FA0  C063  F067         	movff	_width+1,_flags+1
  1306  000FA4                     
  1307                           ; BSR set to: 0
  1308                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 706:         prec = -1
      +                          ;
  1309  000FA4  6964               	setf	_prec& (0+255),b
  1310  000FA6  6965               	setf	(_prec+1)& (0+255),b
  1311  000FA8                     
  1312                           ; BSR set to: 0
  1313                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 847:         if ((*fmt
      +                          [0] == 'd') || (*fmt[0] == 'i')) {
  1314  000FA8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1315  000FAC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1316  000FB0  CFDE FFF6          	movff	postinc2,tblptrl
  1317  000FB4  CFDD FFF7          	movff	postdec2,tblptrh
  1318  000FB8                     	if	0	;tblptru may be non-zero
  1319  000FB8                     	endif
  1320  000FB8                     	if	0	;tblptru may be non-zero
  1321  000FB8                     	endif
  1322  000FB8  0008               	tblrd		*
  1323  000FBA  50F5               	movf	tablat,w,c
  1324  000FBC  0A64               	xorlw	100
  1325  000FBE  B4D8               	btfsc	status,2,c
  1326  000FC0  EFE4  F007         	goto	u1731
  1327  000FC4  EFE6  F007         	goto	u1730
  1328  000FC8                     u1731:
  1329  000FC8  EFF8  F007         	goto	l2184
  1330  000FCC                     u1730:
  1331  000FCC                     
  1332                           ; BSR set to: 0
  1333  000FCC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1334  000FD0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1335  000FD4  CFDE FFF6          	movff	postinc2,tblptrl
  1336  000FD8  CFDD FFF7          	movff	postdec2,tblptrh
  1337  000FDC                     	if	0	;tblptru may be non-zero
  1338  000FDC                     	endif
  1339  000FDC                     	if	0	;tblptru may be non-zero
  1340  000FDC                     	endif
  1341  000FDC  0008               	tblrd		*
  1342  000FDE  50F5               	movf	tablat,w,c
  1343  000FE0  0A69               	xorlw	105
  1344  000FE2  A4D8               	btfss	status,2,c
  1345  000FE4  EFF6  F007         	goto	u1741
  1346  000FE8  EFF8  F007         	goto	u1740
  1347  000FEC                     u1741:
  1348  000FEC  EF38  F008         	goto	l2190
  1349  000FF0                     u1740:
  1350  000FF0                     l2184:
  1351                           
  1352                           ; BSR set to: 0
  1353                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 849:             ++*fm
      +                          t;
  1354  000FF0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1355  000FF4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1356  000FF8  2ADE               	incf	postinc2,f,c
  1357  000FFA  0E00               	movlw	0
  1358  000FFC  22DD               	addwfc	postdec2,f,c
  1359                           
  1360                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 850:             ll = 
      +                          (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1361  000FFE  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1362  001002  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1363  001006  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1364  00100A  0E02               	movlw	2
  1365  00100C  26DE               	addwf	postinc2,f,c
  1366  00100E  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1367  001012  0E00               	movlw	0
  1368  001014  22DD               	addwfc	postdec2,f,c
  1369  001016  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1370  00101A  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1371  00101E  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  1372  001022  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  1373  001026  0E00               	movlw	0
  1374  001028  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1375  00102A  0EFF               	movlw	-1
  1376  00102C  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  1377  00102E  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  1378  001030  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  1379  001032  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  1380  001034  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  1381  001036  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  1382  001038                     
  1383                           ; BSR set to: 0
  1384                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 852:             retur
      +                          n dtoa(fp, ll);
  1385  001038  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1386  00103C  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1387  001040  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  1388  001044  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1389  001048  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1390  00104C  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1391  001050  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1392  001054  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1393  001058  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1394  00105C  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1395  001060  EC19  F004         	call	_dtoa	;wreg free
  1396  001064  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  1397  001068  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1398  00106C  EF89  F008         	goto	l1133
  1399  001070                     l2190:
  1400                           
  1401                           ; BSR set to: 0
  1402                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1372:         if ((*fm
      +                          t)[0] == '%') {
  1403  001070  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1404  001074  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1405  001078  CFDE FFF6          	movff	postinc2,tblptrl
  1406  00107C  CFDD FFF7          	movff	postdec2,tblptrh
  1407  001080                     	if	0	;tblptru may be non-zero
  1408  001080                     	endif
  1409  001080                     	if	0	;tblptru may be non-zero
  1410  001080                     	endif
  1411  001080  0008               	tblrd		*
  1412  001082  50F5               	movf	tablat,w,c
  1413  001084  0A25               	xorlw	37
  1414  001086  A4D8               	btfss	status,2,c
  1415  001088  EF48  F008         	goto	u1751
  1416  00108C  EF4A  F008         	goto	u1750
  1417  001090                     u1751:
  1418  001090  EF61  F008         	goto	l2200
  1419  001094                     u1750:
  1420  001094                     
  1421                           ; BSR set to: 0
  1422                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1373:             ++*f
      +                          mt;
  1423  001094  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1424  001098  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1425  00109C  2ADE               	incf	postinc2,f,c
  1426  00109E  0E00               	movlw	0
  1427  0010A0  22DD               	addwfc	postdec2,f,c
  1428  0010A2                     
  1429                           ; BSR set to: 0
  1430                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1374:             fput
      +                          c((int)'%', fp);
  1431  0010A2  0E00               	movlw	0
  1432  0010A4  6E02               	movwf	(fputc@c+1)^0,c
  1433  0010A6  0E25               	movlw	37
  1434  0010A8  6E01               	movwf	fputc@c^0,c
  1435  0010AA  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1436  0010AE  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1437  0010B2  EC8A  F00A         	call	_fputc	;wreg free
  1438  0010B6                     l2196:
  1439                           
  1440                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1375:             retu
      +                          rn 1;
  1441  0010B6  0E00               	movlw	0
  1442  0010B8  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1443  0010BA  0E01               	movlw	1
  1444  0010BC  6E40               	movwf	?_vfpfcnvrt^0,c
  1445  0010BE  EF89  F008         	goto	l1133
  1446  0010C2                     l2200:
  1447                           
  1448                           ; BSR set to: 0
  1449                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1379:         ++*fmt;
  1450  0010C2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1451  0010C6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1452  0010CA  2ADE               	incf	postinc2,f,c
  1453  0010CC  0E00               	movlw	0
  1454  0010CE  22DD               	addwfc	postdec2,f,c
  1455  0010D0                     
  1456                           ; BSR set to: 0
  1457                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1380:         return 0
      +                          ;
  1458  0010D0  0E00               	movlw	0
  1459  0010D2  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1460  0010D4  0E00               	movlw	0
  1461  0010D6  6E40               	movwf	?_vfpfcnvrt^0,c
  1462  0010D8  EF89  F008         	goto	l1133
  1463  0010DC                     l2206:
  1464                           
  1465                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1384:     fputc((int)(
      +                          *fmt)[0], fp);
  1466  0010DC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1467  0010E0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1468  0010E4  CFDE FFF6          	movff	postinc2,tblptrl
  1469  0010E8  CFDD FFF7          	movff	postdec2,tblptrh
  1470  0010EC                     	if	0	;tblptru may be non-zero
  1471  0010EC                     	endif
  1472  0010EC                     	if	0	;tblptru may be non-zero
  1473  0010EC                     	endif
  1474  0010EC  0008               	tblrd		*
  1475  0010EE  50F5               	movf	tablat,w,c
  1476  0010F0  6E01               	movwf	fputc@c^0,c
  1477  0010F2  6A02               	clrf	(fputc@c+1)^0,c
  1478  0010F4  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1479  0010F8  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1480  0010FC  EC8A  F00A         	call	_fputc	;wreg free
  1481  001100                     
  1482                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1483  001100  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1484  001104  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1485  001108  2ADE               	incf	postinc2,f,c
  1486  00110A  0E00               	movlw	0
  1487  00110C  22DD               	addwfc	postdec2,f,c
  1488  00110E  EF5B  F008         	goto	l2196
  1489  001112                     l1133:
  1490  001112  0012               	return		;funcret
  1491  001114                     __end_of_vfpfcnvrt:
  1492                           	callstack 0
  1493                           
  1494 ;; *************** function _dtoa *****************
  1495 ;; Defined at:
  1496 ;;		line 287 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c"
  1497 ;; Parameters:    Size  Location     Type
  1498 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1499 ;;		 -> sprintf@f(6), 
  1500 ;;  d               8   29[COMRAM] long long 
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;  n               8   53[COMRAM] long long 
  1503 ;;  i               2   61[COMRAM] int 
  1504 ;;  s               2   51[COMRAM] int 
  1505 ;;  w               2   49[COMRAM] int 
  1506 ;;  p               2   47[COMRAM] int 
  1507 ;; Return value:  Size  Location     Type
  1508 ;;                  2   27[COMRAM] int 
  1509 ;; Registers used:
  1510 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1511 ;; Tracked objects:
  1512 ;;		On entry : 0/0
  1513 ;;		On exit  : 0/0
  1514 ;;		Unchanged: 0/0
  1515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1516 ;;      Params:        10       0       0       0       0       0       0       0       0
  1517 ;;      Locals:        18       0       0       0       0       0       0       0       0
  1518 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1519 ;;      Totals:        36       0       0       0       0       0       0       0       0
  1520 ;;Total ram usage:       36 bytes
  1521 ;; Hardware stack levels used: 1
  1522 ;; Hardware stack levels required when called: 4
  1523 ;; This function calls:
  1524 ;;		___aodiv
  1525 ;;		___aomod
  1526 ;;		_abs
  1527 ;;		_pad
  1528 ;; This function is called by:
  1529 ;;		_vfpfcnvrt
  1530 ;; This function uses a non-reentrant model
  1531 ;;
  1532                           
  1533                           	psect	text4
  1534  000832                     __ptext4:
  1535                           	callstack 0
  1536  000832                     _dtoa:
  1537                           	callstack 23
  1538  000832                     
  1539                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 287: static int dtoa(F
      +                          ILE *fp, long long d);D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 2
      +                          88: {;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 289:     int i, p
      +                          , s, w;;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 290:     long l
      +                          ong n;;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 293:     n = d;
  1540  000832  C01E  F036         	movff	dtoa@d,dtoa@n
  1541  000836  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  1542  00083A  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  1543  00083E  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  1544  000842  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  1545  000846  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  1546  00084A  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  1547  00084E  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  1548  000852                     
  1549                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 294:     s = n < 0 ? 1
      +                           : 0;
  1550  000852  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  1551  000854  EF2E  F004         	goto	u1541
  1552  000858  EF31  F004         	goto	u1540
  1553  00085C                     u1541:
  1554  00085C  0E01               	movlw	1
  1555  00085E  EF32  F004         	goto	u1550
  1556  000862                     u1540:
  1557  000862  0E00               	movlw	0
  1558  000864                     u1550:
  1559  000864  6E34               	movwf	dtoa@s^0,c
  1560  000866  6A35               	clrf	(dtoa@s+1)^0,c
  1561                           
  1562                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1563  000868  5034               	movf	dtoa@s^0,w,c
  1564  00086A  1035               	iorwf	(dtoa@s+1)^0,w,c
  1565  00086C  B4D8               	btfsc	status,2,c
  1566  00086E  EF3B  F004         	goto	u1561
  1567  000872  EF3D  F004         	goto	u1560
  1568  000876                     u1561:
  1569  000876  EF4D  F004         	goto	l2086
  1570  00087A                     u1560:
  1571  00087A                     
  1572                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 296:         n = -n;
  1573  00087A  1E3D               	comf	(dtoa@n+7)^0,f,c
  1574  00087C  1E3C               	comf	(dtoa@n+6)^0,f,c
  1575  00087E  1E3B               	comf	(dtoa@n+5)^0,f,c
  1576  000880  1E3A               	comf	(dtoa@n+4)^0,f,c
  1577  000882  1E39               	comf	(dtoa@n+3)^0,f,c
  1578  000884  1E38               	comf	(dtoa@n+2)^0,f,c
  1579  000886  1E37               	comf	(dtoa@n+1)^0,f,c
  1580  000888  6C36               	negf	dtoa@n^0,c
  1581  00088A  0E00               	movlw	0
  1582  00088C  2237               	addwfc	(dtoa@n+1)^0,f,c
  1583  00088E  2238               	addwfc	(dtoa@n+2)^0,f,c
  1584  000890  2239               	addwfc	(dtoa@n+3)^0,f,c
  1585  000892  223A               	addwfc	(dtoa@n+4)^0,f,c
  1586  000894  223B               	addwfc	(dtoa@n+5)^0,f,c
  1587  000896  223C               	addwfc	(dtoa@n+6)^0,f,c
  1588  000898  223D               	addwfc	(dtoa@n+7)^0,f,c
  1589  00089A                     l2086:
  1590                           
  1591                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 300:     if (!(prec < 
      +                          0)) {
  1592  00089A  0100               	movlb	0	; () banked
  1593  00089C  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1594  00089E  EF53  F004         	goto	u1571
  1595  0008A2  EF55  F004         	goto	u1570
  1596  0008A6                     u1571:
  1597  0008A6  EF56  F004         	goto	l2090
  1598  0008AA                     u1570:
  1599  0008AA                     
  1600                           ; BSR set to: 0
  1601                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 301:         flags &= 
      +                          ~(1 << 1);
  1602  0008AA  9366               	bcf	_flags& (0+255),1,b
  1603  0008AC                     l2090:
  1604                           
  1605                           ; BSR set to: 0
  1606                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 303:     p = (0 < prec
      +                          ) ? prec : 1;
  1607  0008AC  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1608  0008AE  EF63  F004         	goto	u1580
  1609  0008B2  5165               	movf	(_prec+1)& (0+255),w,b
  1610  0008B4  E106               	bnz	u1581
  1611  0008B6  0564               	decf	_prec& (0+255),w,b
  1612  0008B8  B0D8               	btfsc	status,0,c
  1613  0008BA  EF61  F004         	goto	u1581
  1614  0008BE  EF63  F004         	goto	u1580
  1615  0008C2                     u1581:
  1616  0008C2  EF69  F004         	goto	l1106
  1617  0008C6                     u1580:
  1618  0008C6                     
  1619                           ; BSR set to: 0
  1620  0008C6  0E00               	movlw	0
  1621  0008C8  6E31               	movwf	(dtoa@p+1)^0,c
  1622  0008CA  0E01               	movlw	1
  1623  0008CC  6E30               	movwf	dtoa@p^0,c
  1624  0008CE  EF6D  F004         	goto	l1108
  1625  0008D2                     l1106:
  1626                           
  1627                           ; BSR set to: 0
  1628  0008D2  C064  F030         	movff	_prec,dtoa@p
  1629  0008D6  C065  F031         	movff	_prec+1,dtoa@p+1
  1630  0008DA                     l1108:
  1631                           
  1632                           ; BSR set to: 0
  1633                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 304:     w = width;
  1634  0008DA  C062  F032         	movff	_width,dtoa@w
  1635  0008DE  C063  F033         	movff	_width+1,dtoa@w+1
  1636  0008E2                     
  1637                           ; BSR set to: 0
  1638                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 305:     if (s || (fla
      +                          gs & (1 << 2))) {
  1639  0008E2  5034               	movf	dtoa@s^0,w,c
  1640  0008E4  1035               	iorwf	(dtoa@s+1)^0,w,c
  1641  0008E6  A4D8               	btfss	status,2,c
  1642  0008E8  EF78  F004         	goto	u1591
  1643  0008EC  EF7A  F004         	goto	u1590
  1644  0008F0                     u1591:
  1645  0008F0  EF81  F004         	goto	l2098
  1646  0008F4                     u1590:
  1647  0008F4                     
  1648                           ; BSR set to: 0
  1649  0008F4  A566               	btfss	_flags& (0+255),2,b
  1650  0008F6  EF7F  F004         	goto	u1601
  1651  0008FA  EF81  F004         	goto	u1600
  1652  0008FE                     u1601:
  1653  0008FE  EF84  F004         	goto	l2100
  1654  000902                     u1600:
  1655  000902                     l2098:
  1656                           
  1657                           ; BSR set to: 0
  1658                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 306:         --w;
  1659  000902  0632               	decf	dtoa@w^0,f,c
  1660  000904  A0D8               	btfss	status,0,c
  1661  000906  0633               	decf	(dtoa@w+1)^0,f,c
  1662  000908                     l2100:
  1663                           
  1664                           ; BSR set to: 0
  1665                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 310:     i = sizeof(db
      +                          uf) - 1;
  1666  000908  0E00               	movlw	0
  1667  00090A  6E3F               	movwf	(dtoa@i+1)^0,c
  1668  00090C  0E1F               	movlw	31
  1669  00090E  6E3E               	movwf	dtoa@i^0,c
  1670  000910                     
  1671                           ; BSR set to: 0
  1672                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] = '\0
      +                          ';
  1673  000910  0E00               	movlw	0
  1674  000912  6F8A               	movwf	(_dbuf+31)& (0+255),b
  1675                           
  1676                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 312:     while (!(i < 
      +                          1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1677  000914  EF08  F005         	goto	l2114
  1678  000918                     l2104:
  1679                           
  1680                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 313:         --i;
  1681  000918  063E               	decf	dtoa@i^0,f,c
  1682  00091A  A0D8               	btfss	status,0,c
  1683  00091C  063F               	decf	(dtoa@i+1)^0,f,c
  1684  00091E                     
  1685                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 314:         dbuf[i] =
      +                           (char)((int)'0' + abs(n % 10));
  1686  00091E  0E6B               	movlw	low _dbuf
  1687  000920  243E               	addwf	dtoa@i^0,w,c
  1688  000922  6ED9               	movwf	fsr2l,c
  1689  000924  0E00               	movlw	high _dbuf
  1690  000926  203F               	addwfc	(dtoa@i+1)^0,w,c
  1691  000928  6EDA               	movwf	fsr2h,c
  1692  00092A  C036  F001         	movff	dtoa@n,___aomod@dividend
  1693  00092E  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1694  000932  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1695  000936  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1696  00093A  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1697  00093E  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1698  000942  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1699  000946  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1700  00094A  0E0A               	movlw	10
  1701  00094C  6E09               	movwf	___aomod@divisor^0,c
  1702  00094E  0E00               	movlw	0
  1703  000950  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1704  000952  0E00               	movlw	0
  1705  000954  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1706  000956  0E00               	movlw	0
  1707  000958  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1708  00095A  0E00               	movlw	0
  1709  00095C  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1710  00095E  0E00               	movlw	0
  1711  000960  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1712  000962  0E00               	movlw	0
  1713  000964  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1714  000966  0E00               	movlw	0
  1715  000968  6E10               	movwf	(___aomod@divisor+7)^0,c
  1716  00096A  EC4E  F009         	call	___aomod	;wreg free
  1717  00096E  C001  F026         	movff	?___aomod,??_dtoa
  1718  000972  C002  F027         	movff	?___aomod+1,??_dtoa+1
  1719  000976  C003  F028         	movff	?___aomod+2,??_dtoa+2
  1720  00097A  C004  F029         	movff	?___aomod+3,??_dtoa+3
  1721  00097E  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  1722  000982  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  1723  000986  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  1724  00098A  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  1725  00098E  C026  F013         	movff	??_dtoa,abs@a
  1726  000992  C028  F014         	movff	??_dtoa+2,abs@a+1
  1727  000996  EC20  F00D         	call	_abs	;wreg free
  1728  00099A  5013               	movf	?_abs^0,w,c
  1729  00099C  0F30               	addlw	48
  1730  00099E  6EDF               	movwf	indf2,c
  1731  0009A0                     
  1732                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 315:         --p;
  1733  0009A0  0630               	decf	dtoa@p^0,f,c
  1734  0009A2  A0D8               	btfss	status,0,c
  1735  0009A4  0631               	decf	(dtoa@p+1)^0,f,c
  1736  0009A6                     
  1737                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 316:         --w;
  1738  0009A6  0632               	decf	dtoa@w^0,f,c
  1739  0009A8  A0D8               	btfss	status,0,c
  1740  0009AA  0633               	decf	(dtoa@w+1)^0,f,c
  1741  0009AC                     
  1742                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 317:         n = n / 1
      +                          0;
  1743  0009AC  C036  F001         	movff	dtoa@n,___aodiv@dividend
  1744  0009B0  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1745  0009B4  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1746  0009B8  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1747  0009BC  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1748  0009C0  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1749  0009C4  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1750  0009C8  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1751  0009CC  0E0A               	movlw	10
  1752  0009CE  6E09               	movwf	___aodiv@divisor^0,c
  1753  0009D0  0E00               	movlw	0
  1754  0009D2  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1755  0009D4  0E00               	movlw	0
  1756  0009D6  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1757  0009D8  0E00               	movlw	0
  1758  0009DA  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1759  0009DC  0E00               	movlw	0
  1760  0009DE  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1761  0009E0  0E00               	movlw	0
  1762  0009E2  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1763  0009E4  0E00               	movlw	0
  1764  0009E6  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1765  0009E8  0E00               	movlw	0
  1766  0009EA  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1767  0009EC  EC8A  F008         	call	___aodiv	;wreg free
  1768  0009F0  C001  F036         	movff	?___aodiv,dtoa@n
  1769  0009F4  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  1770  0009F8  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  1771  0009FC  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  1772  000A00  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  1773  000A04  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  1774  000A08  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  1775  000A0C  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  1776  000A10                     l2114:
  1777                           
  1778                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 312:     while (!(i < 
      +                          1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1779  000A10  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  1780  000A12  EF13  F005         	goto	u1611
  1781  000A16  503F               	movf	(dtoa@i+1)^0,w,c
  1782  000A18  E108               	bnz	u1610
  1783  000A1A  043E               	decf	dtoa@i^0,w,c
  1784  000A1C  A0D8               	btfss	status,0,c
  1785  000A1E  EF13  F005         	goto	u1611
  1786  000A22  EF15  F005         	goto	u1610
  1787  000A26                     u1611:
  1788  000A26  EF46  F005         	goto	l2124
  1789  000A2A                     u1610:
  1790  000A2A  5036               	movf	dtoa@n^0,w,c
  1791  000A2C  1037               	iorwf	(dtoa@n+1)^0,w,c
  1792  000A2E  1038               	iorwf	(dtoa@n+2)^0,w,c
  1793  000A30  1039               	iorwf	(dtoa@n+3)^0,w,c
  1794  000A32  103A               	iorwf	(dtoa@n+4)^0,w,c
  1795  000A34  103B               	iorwf	(dtoa@n+5)^0,w,c
  1796  000A36  103C               	iorwf	(dtoa@n+6)^0,w,c
  1797  000A38  103D               	iorwf	(dtoa@n+7)^0,w,c
  1798  000A3A  A4D8               	btfss	status,2,c
  1799  000A3C  EF22  F005         	goto	u1621
  1800  000A40  EF24  F005         	goto	u1620
  1801  000A44                     u1621:
  1802  000A44  EF8C  F004         	goto	l2104
  1803  000A48                     u1620:
  1804  000A48  BE31               	btfsc	(dtoa@p+1)^0,7,c
  1805  000A4A  EF31  F005         	goto	u1630
  1806  000A4E  5031               	movf	(dtoa@p+1)^0,w,c
  1807  000A50  E106               	bnz	u1631
  1808  000A52  0430               	decf	dtoa@p^0,w,c
  1809  000A54  B0D8               	btfsc	status,0,c
  1810  000A56  EF2F  F005         	goto	u1631
  1811  000A5A  EF31  F005         	goto	u1630
  1812  000A5E                     u1631:
  1813  000A5E  EF8C  F004         	goto	l2104
  1814  000A62                     u1630:
  1815  000A62  BE33               	btfsc	(dtoa@w+1)^0,7,c
  1816  000A64  EF3C  F005         	goto	u1641
  1817  000A68  5033               	movf	(dtoa@w+1)^0,w,c
  1818  000A6A  E108               	bnz	u1640
  1819  000A6C  0432               	decf	dtoa@w^0,w,c
  1820  000A6E  A0D8               	btfss	status,0,c
  1821  000A70  EF3C  F005         	goto	u1641
  1822  000A74  EF3E  F005         	goto	u1640
  1823  000A78                     u1641:
  1824  000A78  EF46  F005         	goto	l2124
  1825  000A7C                     u1640:
  1826  000A7C  0100               	movlb	0	; () banked
  1827  000A7E  B366               	btfsc	_flags& (0+255),1,b
  1828  000A80  EF44  F005         	goto	u1651
  1829  000A84  EF46  F005         	goto	u1650
  1830  000A88                     u1651:
  1831  000A88  EF8C  F004         	goto	l2104
  1832  000A8C                     u1650:
  1833  000A8C                     l2124:
  1834                           
  1835                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 321:     if (s || (fla
      +                          gs & (1 << 2))) {
  1836  000A8C  5034               	movf	dtoa@s^0,w,c
  1837  000A8E  1035               	iorwf	(dtoa@s+1)^0,w,c
  1838  000A90  A4D8               	btfss	status,2,c
  1839  000A92  EF4D  F005         	goto	u1661
  1840  000A96  EF4F  F005         	goto	u1660
  1841  000A9A                     u1661:
  1842  000A9A  EF57  F005         	goto	l2128
  1843  000A9E                     u1660:
  1844  000A9E  0100               	movlb	0	; () banked
  1845  000AA0  A566               	btfss	_flags& (0+255),2,b
  1846  000AA2  EF55  F005         	goto	u1671
  1847  000AA6  EF57  F005         	goto	u1670
  1848  000AAA                     u1671:
  1849  000AAA  EF75  F005         	goto	l2138
  1850  000AAE                     u1670:
  1851  000AAE                     l2128:
  1852                           
  1853                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 322:         --i;
  1854  000AAE  063E               	decf	dtoa@i^0,f,c
  1855  000AB0  A0D8               	btfss	status,0,c
  1856  000AB2  063F               	decf	(dtoa@i+1)^0,f,c
  1857  000AB4                     
  1858                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 323:         dbuf[i] =
      +                           s ? '-' : '+';
  1859  000AB4  5034               	movf	dtoa@s^0,w,c
  1860  000AB6  1035               	iorwf	(dtoa@s+1)^0,w,c
  1861  000AB8  A4D8               	btfss	status,2,c
  1862  000ABA  EF61  F005         	goto	u1681
  1863  000ABE  EF63  F005         	goto	u1680
  1864  000AC2                     u1681:
  1865  000AC2  EF69  F005         	goto	l2134
  1866  000AC6                     u1680:
  1867  000AC6  0E00               	movlw	0
  1868  000AC8  6E2F               	movwf	(_dtoa$1142+1)^0,c
  1869  000ACA  0E2B               	movlw	43
  1870  000ACC  6E2E               	movwf	_dtoa$1142^0,c
  1871  000ACE  EF6D  F005         	goto	l2136
  1872  000AD2                     l2134:
  1873  000AD2  0E00               	movlw	0
  1874  000AD4  6E2F               	movwf	(_dtoa$1142+1)^0,c
  1875  000AD6  0E2D               	movlw	45
  1876  000AD8  6E2E               	movwf	_dtoa$1142^0,c
  1877  000ADA                     l2136:
  1878  000ADA  0E6B               	movlw	low _dbuf
  1879  000ADC  243E               	addwf	dtoa@i^0,w,c
  1880  000ADE  6ED9               	movwf	fsr2l,c
  1881  000AE0  0E00               	movlw	high _dbuf
  1882  000AE2  203F               	addwfc	(dtoa@i+1)^0,w,c
  1883  000AE4  6EDA               	movwf	fsr2h,c
  1884  000AE6  C02E  FFDF         	movff	_dtoa$1142,indf2
  1885  000AEA                     l2138:
  1886                           
  1887                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 327:     return pad(fp
      +                          , &dbuf[i], w);
  1888  000AEA  C01C  F011         	movff	dtoa@fp,pad@fp
  1889  000AEE  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  1890  000AF2  0E6B               	movlw	low _dbuf
  1891  000AF4  243E               	addwf	dtoa@i^0,w,c
  1892  000AF6  6E13               	movwf	pad@buf^0,c
  1893  000AF8  0E00               	movlw	high _dbuf
  1894  000AFA  203F               	addwfc	(dtoa@i+1)^0,w,c
  1895  000AFC  6E14               	movwf	(pad@buf+1)^0,c
  1896  000AFE  C032  F015         	movff	dtoa@w,pad@p
  1897  000B02  C033  F016         	movff	dtoa@w+1,pad@p+1
  1898  000B06  ECEF  F00A         	call	_pad	;wreg free
  1899  000B0A  C011  F01C         	movff	?_pad,?_dtoa
  1900  000B0E  C012  F01D         	movff	?_pad+1,?_dtoa+1
  1901  000B12  0012               	return		;funcret
  1902  000B14                     __end_of_dtoa:
  1903                           	callstack 0
  1904                           
  1905 ;; *************** function _pad *****************
  1906 ;; Defined at:
  1907 ;;		line 72 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1910 ;;		 -> sprintf@f(6), 
  1911 ;;  buf             2   18[COMRAM] PTR unsigned char 
  1912 ;;		 -> dbuf(32), 
  1913 ;;  p               2   20[COMRAM] int 
  1914 ;; Auto vars:     Size  Location     Type
  1915 ;;  w               2   25[COMRAM] int 
  1916 ;;  i               2   23[COMRAM] int 
  1917 ;; Return value:  Size  Location     Type
  1918 ;;                  2   16[COMRAM] int 
  1919 ;; Registers used:
  1920 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1921 ;; Tracked objects:
  1922 ;;		On entry : 0/0
  1923 ;;		On exit  : 0/0
  1924 ;;		Unchanged: 0/0
  1925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1926 ;;      Params:         6       0       0       0       0       0       0       0       0
  1927 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1928 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1929 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1930 ;;Total ram usage:       11 bytes
  1931 ;; Hardware stack levels used: 1
  1932 ;; Hardware stack levels required when called: 3
  1933 ;; This function calls:
  1934 ;;		_fputc
  1935 ;;		_fputs
  1936 ;;		_strlen
  1937 ;; This function is called by:
  1938 ;;		_dtoa
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942                           	psect	text5
  1943  0015DE                     __ptext5:
  1944                           	callstack 0
  1945  0015DE                     _pad:
  1946                           	callstack 23
  1947  0015DE                     
  1948                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 72: static int pad(FIL
      +                          E *fp, char *buf, int p);D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c
      +                          : 73: {;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 74:     int i, 
      +                          w;;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 77:     if (flags & 
      +                          (1 << 0)) {
  1949  0015DE  0100               	movlb	0	; () banked
  1950  0015E0  A166               	btfss	_flags& (0+255),0,b
  1951  0015E2  EFF5  F00A         	goto	u1491
  1952  0015E6  EFF7  F00A         	goto	u1490
  1953  0015EA                     u1491:
  1954  0015EA  EF01  F00B         	goto	l2038
  1955  0015EE                     u1490:
  1956  0015EE                     
  1957                           ; BSR set to: 0
  1958                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 78:         fputs((con
      +                          st char *)buf, fp);
  1959  0015EE  C013  F00A         	movff	pad@buf,fputs@s
  1960  0015F2  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1961  0015F6  C011  F00C         	movff	pad@fp,fputs@fp
  1962  0015FA  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1963  0015FE  ECFE  F00C         	call	_fputs	;wreg free
  1964  001602                     l2038:
  1965                           
  1966                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 82:     w = (p < 0) ? 
      +                          0 : p;
  1967  001602  BE16               	btfsc	(pad@p+1)^0,7,c
  1968  001604  EF06  F00B         	goto	u1501
  1969  001608  EF08  F00B         	goto	u1500
  1970  00160C                     u1501:
  1971  00160C  EF0E  F00B         	goto	l2042
  1972  001610                     u1500:
  1973  001610  C015  F01A         	movff	pad@p,pad@w
  1974  001614  C016  F01B         	movff	pad@p+1,pad@w+1
  1975  001618  EF12  F00B         	goto	l1095
  1976  00161C                     l2042:
  1977  00161C  0E00               	movlw	0
  1978  00161E  6E1B               	movwf	(pad@w+1)^0,c
  1979  001620  0E00               	movlw	0
  1980  001622  6E1A               	movwf	pad@w^0,c
  1981  001624                     l1095:
  1982                           
  1983                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  1984  001624  0E00               	movlw	0
  1985  001626  6E19               	movwf	(pad@i+1)^0,c
  1986  001628  0E00               	movlw	0
  1987  00162A  6E18               	movwf	pad@i^0,c
  1988                           
  1989                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 84:     while (i < w) 
      +                          {
  1990  00162C  EF24  F00B         	goto	l2048
  1991  001630                     l2044:
  1992                           
  1993                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 85:         fputc(' ',
      +                           fp);
  1994  001630  0E00               	movlw	0
  1995  001632  6E02               	movwf	(fputc@c+1)^0,c
  1996  001634  0E20               	movlw	32
  1997  001636  6E01               	movwf	fputc@c^0,c
  1998  001638  C011  F003         	movff	pad@fp,fputc@fp
  1999  00163C  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2000  001640  EC8A  F00A         	call	_fputc	;wreg free
  2001  001644                     
  2002                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2003  001644  4A18               	infsnz	pad@i^0,f,c
  2004  001646  2A19               	incf	(pad@i+1)^0,f,c
  2005  001648                     l2048:
  2006                           
  2007                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 84:     while (i < w) 
      +                          {
  2008  001648  501A               	movf	pad@w^0,w,c
  2009  00164A  5C18               	subwf	pad@i^0,w,c
  2010  00164C  5019               	movf	(pad@i+1)^0,w,c
  2011  00164E  0A80               	xorlw	128
  2012  001650  6E17               	movwf	??_pad^0,c
  2013  001652  501B               	movf	(pad@w+1)^0,w,c
  2014  001654  0A80               	xorlw	128
  2015  001656  5817               	subwfb	??_pad^0,w,c
  2016  001658  A0D8               	btfss	status,0,c
  2017  00165A  EF31  F00B         	goto	u1511
  2018  00165E  EF33  F00B         	goto	u1510
  2019  001662                     u1511:
  2020  001662  EF18  F00B         	goto	l2044
  2021  001666                     u1510:
  2022  001666                     
  2023                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 90:     if (!(flags & 
      +                          (1 << 0))) {
  2024  001666  0100               	movlb	0	; () banked
  2025  001668  B166               	btfsc	_flags& (0+255),0,b
  2026  00166A  EF39  F00B         	goto	u1521
  2027  00166E  EF3B  F00B         	goto	u1520
  2028  001672                     u1521:
  2029  001672  EF45  F00B         	goto	l2052
  2030  001676                     u1520:
  2031  001676                     
  2032                           ; BSR set to: 0
  2033                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 91:         fputs((con
      +                          st char *)buf, fp);
  2034  001676  C013  F00A         	movff	pad@buf,fputs@s
  2035  00167A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2036  00167E  C011  F00C         	movff	pad@fp,fputs@fp
  2037  001682  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2038  001686  ECFE  F00C         	call	_fputs	;wreg free
  2039  00168A                     l2052:
  2040                           
  2041                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 94:     return (int)(s
      +                          trlen(buf) + (size_t)w);
  2042  00168A  C013  F001         	movff	pad@buf,strlen@s
  2043  00168E  C014  F002         	movff	pad@buf+1,strlen@s+1
  2044  001692  EC9A  F00D         	call	_strlen	;wreg free
  2045  001696  501A               	movf	pad@w^0,w,c
  2046  001698  2401               	addwf	?_strlen^0,w,c
  2047  00169A  6E11               	movwf	?_pad^0,c
  2048  00169C  501B               	movf	(pad@w+1)^0,w,c
  2049  00169E  2002               	addwfc	(?_strlen+1)^0,w,c
  2050  0016A0  6E12               	movwf	(?_pad+1)^0,c
  2051  0016A2  0012               	return		;funcret
  2052  0016A4                     __end_of_pad:
  2053                           	callstack 0
  2054                           
  2055 ;; *************** function _strlen *****************
  2056 ;; Defined at:
  2057 ;;		line 5 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\strlen.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2060 ;;		 -> dbuf(32), 
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2063 ;;		 -> dbuf(32), 
  2064 ;; Return value:  Size  Location     Type
  2065 ;;                  2    0[COMRAM] unsigned int 
  2066 ;; Registers used:
  2067 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2073 ;;      Params:         2       0       0       0       0       0       0       0       0
  2074 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2075 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2076 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2077 ;;Total ram usage:        4 bytes
  2078 ;; Hardware stack levels used: 1
  2079 ;; This function calls:
  2080 ;;		Nothing
  2081 ;; This function is called by:
  2082 ;;		_pad
  2083 ;; This function uses a non-reentrant model
  2084 ;;
  2085                           
  2086                           	psect	text6
  2087  001B34                     __ptext6:
  2088                           	callstack 0
  2089  001B34                     _strlen:
  2090                           	callstack 25
  2091  001B34  C001  F003         	movff	strlen@s,strlen@a
  2092  001B38  C002  F004         	movff	strlen@s+1,strlen@a+1
  2093  001B3C  EFA2  F00D         	goto	l1948
  2094  001B40                     l1946:
  2095  001B40  4A01               	infsnz	strlen@s^0,f,c
  2096  001B42  2A02               	incf	(strlen@s+1)^0,f,c
  2097  001B44                     l1948:
  2098  001B44  C001  FFD9         	movff	strlen@s,fsr2l
  2099  001B48  C002  FFDA         	movff	strlen@s+1,fsr2h
  2100  001B4C  50DF               	movf	indf2,w,c
  2101  001B4E  A4D8               	btfss	status,2,c
  2102  001B50  EFAC  F00D         	goto	u1351
  2103  001B54  EFAE  F00D         	goto	u1350
  2104  001B58                     u1351:
  2105  001B58  EFA0  F00D         	goto	l1946
  2106  001B5C                     u1350:
  2107  001B5C  5003               	movf	strlen@a^0,w,c
  2108  001B5E  5C01               	subwf	strlen@s^0,w,c
  2109  001B60  6E01               	movwf	?_strlen^0,c
  2110  001B62  5004               	movf	(strlen@a+1)^0,w,c
  2111  001B64  5802               	subwfb	(strlen@s+1)^0,w,c
  2112  001B66  6E02               	movwf	(?_strlen+1)^0,c
  2113  001B68  0012               	return		;funcret
  2114  001B6A                     __end_of_strlen:
  2115                           	callstack 0
  2116                           
  2117 ;; *************** function _fputs *****************
  2118 ;; Defined at:
  2119 ;;		line 8 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\nf_fputs.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2122 ;;		 -> dbuf(32), 
  2123 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2124 ;;		 -> sprintf@f(6), 
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;  i               2   14[COMRAM] int 
  2127 ;;  c               1   13[COMRAM] unsigned char 
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  2    9[COMRAM] int 
  2130 ;; Registers used:
  2131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2137 ;;      Params:         4       0       0       0       0       0       0       0       0
  2138 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2139 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2140 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2141 ;;Total ram usage:        7 bytes
  2142 ;; Hardware stack levels used: 1
  2143 ;; Hardware stack levels required when called: 2
  2144 ;; This function calls:
  2145 ;;		_fputc
  2146 ;; This function is called by:
  2147 ;;		_pad
  2148 ;; This function uses a non-reentrant model
  2149 ;;
  2150                           
  2151                           	psect	text7
  2152  0019FC                     __ptext7:
  2153                           	callstack 0
  2154  0019FC                     _fputs:
  2155                           	callstack 23
  2156  0019FC  0E00               	movlw	0
  2157  0019FE  6E10               	movwf	(fputs@i+1)^0,c
  2158  001A00  0E00               	movlw	0
  2159  001A02  6E0F               	movwf	fputs@i^0,c
  2160  001A04  EF0F  F00D         	goto	l1942
  2161  001A08                     l1938:
  2162  001A08  C00E  F001         	movff	fputs@c,fputc@c
  2163  001A0C  6A02               	clrf	(fputc@c+1)^0,c
  2164  001A0E  C00C  F003         	movff	fputs@fp,fputc@fp
  2165  001A12  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2166  001A16  EC8A  F00A         	call	_fputc	;wreg free
  2167  001A1A  4A0F               	infsnz	fputs@i^0,f,c
  2168  001A1C  2A10               	incf	(fputs@i+1)^0,f,c
  2169  001A1E                     l1942:
  2170  001A1E  500F               	movf	fputs@i^0,w,c
  2171  001A20  240A               	addwf	fputs@s^0,w,c
  2172  001A22  6ED9               	movwf	fsr2l,c
  2173  001A24  5010               	movf	(fputs@i+1)^0,w,c
  2174  001A26  200B               	addwfc	(fputs@s+1)^0,w,c
  2175  001A28  6EDA               	movwf	fsr2h,c
  2176  001A2A  50DF               	movf	indf2,w,c
  2177  001A2C  6E0E               	movwf	fputs@c^0,c
  2178  001A2E  500E               	movf	fputs@c^0,w,c
  2179  001A30  A4D8               	btfss	status,2,c
  2180  001A32  EF1D  F00D         	goto	u1341
  2181  001A36  EF1F  F00D         	goto	u1340
  2182  001A3A                     u1341:
  2183  001A3A  EF04  F00D         	goto	l1938
  2184  001A3E                     u1340:
  2185  001A3E  0012               	return		;funcret
  2186  001A40                     __end_of_fputs:
  2187                           	callstack 0
  2188                           
  2189 ;; *************** function _fputc *****************
  2190 ;; Defined at:
  2191 ;;		line 8 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\nf_fputc.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;  c               2    0[COMRAM] int 
  2194 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2195 ;;		 -> sprintf@f(6), 
  2196 ;; Auto vars:     Size  Location     Type
  2197 ;;		None
  2198 ;; Return value:  Size  Location     Type
  2199 ;;                  2    0[COMRAM] int 
  2200 ;; Registers used:
  2201 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2202 ;; Tracked objects:
  2203 ;;		On entry : 0/0
  2204 ;;		On exit  : 0/0
  2205 ;;		Unchanged: 0/0
  2206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2207 ;;      Params:         4       0       0       0       0       0       0       0       0
  2208 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2209 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2210 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2211 ;;Total ram usage:        9 bytes
  2212 ;; Hardware stack levels used: 1
  2213 ;; Hardware stack levels required when called: 1
  2214 ;; This function calls:
  2215 ;;		_putch
  2216 ;; This function is called by:
  2217 ;;		_pad
  2218 ;;		_vfpfcnvrt
  2219 ;;		_fputs
  2220 ;; This function uses a non-reentrant model
  2221 ;;
  2222                           
  2223                           	psect	text8
  2224  001514                     __ptext8:
  2225                           	callstack 0
  2226  001514                     _fputc:
  2227                           	callstack 26
  2228  001514  5003               	movf	fputc@fp^0,w,c
  2229  001516  1004               	iorwf	(fputc@fp+1)^0,w,c
  2230  001518  B4D8               	btfsc	status,2,c
  2231  00151A  EF91  F00A         	goto	u1301
  2232  00151E  EF93  F00A         	goto	u1300
  2233  001522                     u1301:
  2234  001522  EF9C  F00A         	goto	l1926
  2235  001526                     u1300:
  2236  001526  5003               	movf	fputc@fp^0,w,c
  2237  001528  1004               	iorwf	(fputc@fp+1)^0,w,c
  2238  00152A  A4D8               	btfss	status,2,c
  2239  00152C  EF9A  F00A         	goto	u1311
  2240  001530  EF9C  F00A         	goto	u1310
  2241  001534                     u1311:
  2242  001534  EFA1  F00A         	goto	l1928
  2243  001538                     u1310:
  2244  001538                     l1926:
  2245  001538  5001               	movf	fputc@c^0,w,c
  2246  00153A  EC31  F00E         	call	_putch
  2247  00153E  EFEE  F00A         	goto	l1159
  2248  001542                     l1928:
  2249  001542  EE20 F004          	lfsr	2,4
  2250  001546  5003               	movf	fputc@fp^0,w,c
  2251  001548  26D9               	addwf	fsr2l,f,c
  2252  00154A  5004               	movf	(fputc@fp+1)^0,w,c
  2253  00154C  22DA               	addwfc	fsr2h,f,c
  2254  00154E  50DE               	movf	postinc2,w,c
  2255  001550  10DE               	iorwf	postinc2,w,c
  2256  001552  B4D8               	btfsc	status,2,c
  2257  001554  EFAE  F00A         	goto	u1321
  2258  001558  EFB0  F00A         	goto	u1320
  2259  00155C                     u1321:
  2260  00155C  EFCB  F00A         	goto	l1932
  2261  001560                     u1320:
  2262  001560  EE20 F004          	lfsr	2,4
  2263  001564  5003               	movf	fputc@fp^0,w,c
  2264  001566  26D9               	addwf	fsr2l,f,c
  2265  001568  5004               	movf	(fputc@fp+1)^0,w,c
  2266  00156A  22DA               	addwfc	fsr2h,f,c
  2267  00156C  EE10 F002          	lfsr	1,2
  2268  001570  5003               	movf	fputc@fp^0,w,c
  2269  001572  26E1               	addwf	fsr1l,f,c
  2270  001574  5004               	movf	(fputc@fp+1)^0,w,c
  2271  001576  22E2               	addwfc	fsr1h,f,c
  2272  001578  50DE               	movf	postinc2,w,c
  2273  00157A  5CE6               	subwf	postinc1,w,c
  2274  00157C  50E6               	movf	postinc1,w,c
  2275  00157E  0A80               	xorlw	128
  2276  001580  6E09               	movwf	(??_fputc+4)^0,c
  2277  001582  50DE               	movf	postinc2,w,c
  2278  001584  0A80               	xorlw	128
  2279  001586  5809               	subwfb	(??_fputc+4)^0,w,c
  2280  001588  B0D8               	btfsc	status,0,c
  2281  00158A  EFC9  F00A         	goto	u1331
  2282  00158E  EFCB  F00A         	goto	u1330
  2283  001592                     u1331:
  2284  001592  EFEE  F00A         	goto	l1159
  2285  001596                     u1330:
  2286  001596                     l1932:
  2287  001596  EE20 F002          	lfsr	2,2
  2288  00159A  5003               	movf	fputc@fp^0,w,c
  2289  00159C  26D9               	addwf	fsr2l,f,c
  2290  00159E  5004               	movf	(fputc@fp+1)^0,w,c
  2291  0015A0  22DA               	addwfc	fsr2h,f,c
  2292  0015A2  CFDE F005          	movff	postinc2,??_fputc
  2293  0015A6  CFDD F006          	movff	postdec2,??_fputc+1
  2294  0015AA  C003  FFD9         	movff	fputc@fp,fsr2l
  2295  0015AE  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2296  0015B2  CFDE F007          	movff	postinc2,??_fputc+2
  2297  0015B6  CFDD F008          	movff	postdec2,??_fputc+3
  2298  0015BA  5005               	movf	??_fputc^0,w,c
  2299  0015BC  2407               	addwf	(??_fputc+2)^0,w,c
  2300  0015BE  6ED9               	movwf	fsr2l,c
  2301  0015C0  5006               	movf	(??_fputc+1)^0,w,c
  2302  0015C2  2008               	addwfc	(??_fputc+3)^0,w,c
  2303  0015C4  6EDA               	movwf	fsr2h,c
  2304  0015C6  C001  FFDF         	movff	fputc@c,indf2
  2305  0015CA  EE20 F002          	lfsr	2,2
  2306  0015CE  5003               	movf	fputc@fp^0,w,c
  2307  0015D0  26D9               	addwf	fsr2l,f,c
  2308  0015D2  5004               	movf	(fputc@fp+1)^0,w,c
  2309  0015D4  22DA               	addwfc	fsr2h,f,c
  2310  0015D6  2ADE               	incf	postinc2,f,c
  2311  0015D8  0E00               	movlw	0
  2312  0015DA  22DD               	addwfc	postdec2,f,c
  2313  0015DC                     l1159:
  2314  0015DC  0012               	return		;funcret
  2315  0015DE                     __end_of_fputc:
  2316                           	callstack 0
  2317                           
  2318 ;; *************** function _putch *****************
  2319 ;; Defined at:
  2320 ;;		line 7 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\putch.c"
  2321 ;; Parameters:    Size  Location     Type
  2322 ;;  c               1    wreg     unsigned char 
  2323 ;; Auto vars:     Size  Location     Type
  2324 ;;  c               1    0[COMRAM] unsigned char 
  2325 ;; Return value:  Size  Location     Type
  2326 ;;                  1    wreg      void 
  2327 ;; Registers used:
  2328 ;;		wreg
  2329 ;; Tracked objects:
  2330 ;;		On entry : 0/0
  2331 ;;		On exit  : 0/0
  2332 ;;		Unchanged: 0/0
  2333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2334 ;;      Params:         0       0       0       0       0       0       0       0       0
  2335 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2336 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2337 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2338 ;;Total ram usage:        0 bytes
  2339 ;; Hardware stack levels used: 1
  2340 ;; This function calls:
  2341 ;;		Nothing
  2342 ;; This function is called by:
  2343 ;;		_fputc
  2344 ;; This function uses a non-reentrant model
  2345 ;;
  2346                           
  2347                           	psect	text9
  2348  001C62                     __ptext9:
  2349                           	callstack 0
  2350  001C62                     _putch:
  2351                           	callstack 26
  2352  001C62  0012               	return		;funcret
  2353  001C64                     __end_of_putch:
  2354                           	callstack 0
  2355                           
  2356 ;; *************** function _abs *****************
  2357 ;; Defined at:
  2358 ;;		line 1 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\abs.c"
  2359 ;; Parameters:    Size  Location     Type
  2360 ;;  a               2   18[COMRAM] int 
  2361 ;; Auto vars:     Size  Location     Type
  2362 ;;		None
  2363 ;; Return value:  Size  Location     Type
  2364 ;;                  2   18[COMRAM] int 
  2365 ;; Registers used:
  2366 ;;		wreg, status,2, status,0
  2367 ;; Tracked objects:
  2368 ;;		On entry : 0/0
  2369 ;;		On exit  : 0/0
  2370 ;;		Unchanged: 0/0
  2371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2372 ;;      Params:         2       0       0       0       0       0       0       0       0
  2373 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2374 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2375 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2376 ;;Total ram usage:        4 bytes
  2377 ;; Hardware stack levels used: 1
  2378 ;; This function calls:
  2379 ;;		Nothing
  2380 ;; This function is called by:
  2381 ;;		_dtoa
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           	psect	text10
  2386  001A40                     __ptext10:
  2387                           	callstack 0
  2388  001A40                     _abs:
  2389                           	callstack 26
  2390  001A40  BE14               	btfsc	(abs@a+1)^0,7,c
  2391  001A42  EF2D  F00D         	goto	u1530
  2392  001A46  5014               	movf	(abs@a+1)^0,w,c
  2393  001A48  E106               	bnz	u1531
  2394  001A4A  0413               	decf	abs@a^0,w,c
  2395  001A4C  B0D8               	btfsc	status,0,c
  2396  001A4E  EF2B  F00D         	goto	u1531
  2397  001A52  EF2D  F00D         	goto	u1530
  2398  001A56                     u1531:
  2399  001A56  EF3B  F00D         	goto	l1144
  2400  001A5A                     u1530:
  2401  001A5A  C013  F015         	movff	abs@a,??_abs
  2402  001A5E  C014  F016         	movff	abs@a+1,??_abs+1
  2403  001A62  1E15               	comf	??_abs^0,f,c
  2404  001A64  1E16               	comf	(??_abs+1)^0,f,c
  2405  001A66  4A15               	infsnz	??_abs^0,f,c
  2406  001A68  2A16               	incf	(??_abs+1)^0,f,c
  2407  001A6A  C015  F013         	movff	??_abs,?_abs
  2408  001A6E  C016  F014         	movff	??_abs+1,?_abs+1
  2409  001A72  EF3F  F00D         	goto	l1147
  2410  001A76                     l1144:
  2411  001A76  C013  F013         	movff	abs@a,?_abs
  2412  001A7A  C014  F014         	movff	abs@a+1,?_abs+1
  2413  001A7E                     l1147:
  2414  001A7E  0012               	return		;funcret
  2415  001A80                     __end_of_abs:
  2416                           	callstack 0
  2417                           
  2418 ;; *************** function ___aomod *****************
  2419 ;; Defined at:
  2420 ;;		line 9 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\aomod.c"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;  dividend        8    0[COMRAM] long long 
  2423 ;;  divisor         8    8[COMRAM] long long 
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;  sign            1   17[COMRAM] unsigned char 
  2426 ;;  counter         1   16[COMRAM] unsigned char 
  2427 ;; Return value:  Size  Location     Type
  2428 ;;                  8    0[COMRAM] long long 
  2429 ;; Registers used:
  2430 ;;		wreg, status,2, status,0
  2431 ;; Tracked objects:
  2432 ;;		On entry : 0/0
  2433 ;;		On exit  : 0/0
  2434 ;;		Unchanged: 0/0
  2435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2436 ;;      Params:        16       0       0       0       0       0       0       0       0
  2437 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2438 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2439 ;;      Totals:        18       0       0       0       0       0       0       0       0
  2440 ;;Total ram usage:       18 bytes
  2441 ;; Hardware stack levels used: 1
  2442 ;; This function calls:
  2443 ;;		Nothing
  2444 ;; This function is called by:
  2445 ;;		_dtoa
  2446 ;; This function uses a non-reentrant model
  2447 ;;
  2448                           
  2449                           	psect	text11
  2450  00129C                     __ptext11:
  2451                           	callstack 0
  2452  00129C                     ___aomod:
  2453                           	callstack 26
  2454  00129C  0E00               	movlw	0
  2455  00129E  6E12               	movwf	___aomod@sign^0,c
  2456  0012A0  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2457  0012A2  EF57  F009         	goto	u1430
  2458  0012A6  EF55  F009         	goto	u1431
  2459  0012AA                     u1431:
  2460  0012AA  EF69  F009         	goto	l2006
  2461  0012AE                     u1430:
  2462  0012AE  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2463  0012B0  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2464  0012B2  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2465  0012B4  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2466  0012B6  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2467  0012B8  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2468  0012BA  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2469  0012BC  6C01               	negf	___aomod@dividend^0,c
  2470  0012BE  0E00               	movlw	0
  2471  0012C0  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2472  0012C2  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2473  0012C4  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2474  0012C6  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2475  0012C8  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2476  0012CA  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2477  0012CC  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2478  0012CE  0E01               	movlw	1
  2479  0012D0  6E12               	movwf	___aomod@sign^0,c
  2480  0012D2                     l2006:
  2481  0012D2  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2482  0012D4  EF70  F009         	goto	u1440
  2483  0012D8  EF6E  F009         	goto	u1441
  2484  0012DC                     u1441:
  2485  0012DC  EF80  F009         	goto	l2010
  2486  0012E0                     u1440:
  2487  0012E0  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2488  0012E2  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2489  0012E4  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2490  0012E6  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2491  0012E8  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2492  0012EA  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2493  0012EC  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2494  0012EE  6C09               	negf	___aomod@divisor^0,c
  2495  0012F0  0E00               	movlw	0
  2496  0012F2  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2497  0012F4  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2498  0012F6  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2499  0012F8  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2500  0012FA  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2501  0012FC  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2502  0012FE  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2503  001300                     l2010:
  2504  001300  5009               	movf	___aomod@divisor^0,w,c
  2505  001302  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2506  001304  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2507  001306  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2508  001308  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2509  00130A  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2510  00130C  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2511  00130E  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2512  001310  B4D8               	btfsc	status,2,c
  2513  001312  EF8D  F009         	goto	u1451
  2514  001316  EF8F  F009         	goto	u1450
  2515  00131A                     u1451:
  2516  00131A  EFD7  F009         	goto	l2026
  2517  00131E                     u1450:
  2518  00131E  0E01               	movlw	1
  2519  001320  6E11               	movwf	___aomod@counter^0,c
  2520  001322  EF9D  F009         	goto	l2016
  2521  001326                     l2014:
  2522  001326  90D8               	bcf	status,0,c
  2523  001328  3609               	rlcf	___aomod@divisor^0,f,c
  2524  00132A  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2525  00132C  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2526  00132E  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2527  001330  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2528  001332  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2529  001334  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2530  001336  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2531  001338  2A11               	incf	___aomod@counter^0,f,c
  2532  00133A                     l2016:
  2533  00133A  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2534  00133C  EFA2  F009         	goto	u1461
  2535  001340  EFA4  F009         	goto	u1460
  2536  001344                     u1461:
  2537  001344  EF93  F009         	goto	l2014
  2538  001348                     u1460:
  2539  001348                     l2018:
  2540  001348  5009               	movf	___aomod@divisor^0,w,c
  2541  00134A  5C01               	subwf	___aomod@dividend^0,w,c
  2542  00134C  500A               	movf	(___aomod@divisor+1)^0,w,c
  2543  00134E  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2544  001350  500B               	movf	(___aomod@divisor+2)^0,w,c
  2545  001352  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2546  001354  500C               	movf	(___aomod@divisor+3)^0,w,c
  2547  001356  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2548  001358  500D               	movf	(___aomod@divisor+4)^0,w,c
  2549  00135A  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2550  00135C  500E               	movf	(___aomod@divisor+5)^0,w,c
  2551  00135E  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2552  001360  500F               	movf	(___aomod@divisor+6)^0,w,c
  2553  001362  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2554  001364  5010               	movf	(___aomod@divisor+7)^0,w,c
  2555  001366  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2556  001368  A0D8               	btfss	status,0,c
  2557  00136A  EFB9  F009         	goto	u1471
  2558  00136E  EFBB  F009         	goto	u1470
  2559  001372                     u1471:
  2560  001372  EFCB  F009         	goto	l2022
  2561  001376                     u1470:
  2562  001376  5009               	movf	___aomod@divisor^0,w,c
  2563  001378  5E01               	subwf	___aomod@dividend^0,f,c
  2564  00137A  500A               	movf	(___aomod@divisor+1)^0,w,c
  2565  00137C  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2566  00137E  500B               	movf	(___aomod@divisor+2)^0,w,c
  2567  001380  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2568  001382  500C               	movf	(___aomod@divisor+3)^0,w,c
  2569  001384  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2570  001386  500D               	movf	(___aomod@divisor+4)^0,w,c
  2571  001388  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2572  00138A  500E               	movf	(___aomod@divisor+5)^0,w,c
  2573  00138C  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2574  00138E  500F               	movf	(___aomod@divisor+6)^0,w,c
  2575  001390  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2576  001392  5010               	movf	(___aomod@divisor+7)^0,w,c
  2577  001394  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2578  001396                     l2022:
  2579  001396  90D8               	bcf	status,0,c
  2580  001398  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2581  00139A  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2582  00139C  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2583  00139E  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2584  0013A0  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2585  0013A2  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2586  0013A4  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2587  0013A6  3209               	rrcf	___aomod@divisor^0,f,c
  2588  0013A8  2E11               	decfsz	___aomod@counter^0,f,c
  2589  0013AA  EFA4  F009         	goto	l2018
  2590  0013AE                     l2026:
  2591  0013AE  5012               	movf	___aomod@sign^0,w,c
  2592  0013B0  B4D8               	btfsc	status,2,c
  2593  0013B2  EFDD  F009         	goto	u1481
  2594  0013B6  EFDF  F009         	goto	u1480
  2595  0013BA                     u1481:
  2596  0013BA  EFEF  F009         	goto	l2030
  2597  0013BE                     u1480:
  2598  0013BE  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2599  0013C0  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2600  0013C2  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2601  0013C4  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2602  0013C6  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2603  0013C8  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2604  0013CA  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2605  0013CC  6C01               	negf	___aomod@dividend^0,c
  2606  0013CE  0E00               	movlw	0
  2607  0013D0  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2608  0013D2  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2609  0013D4  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2610  0013D6  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2611  0013D8  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2612  0013DA  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2613  0013DC  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2614  0013DE                     l2030:
  2615  0013DE  C001  F001         	movff	___aomod@dividend,?___aomod
  2616  0013E2  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2617  0013E6  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2618  0013EA  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2619  0013EE  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2620  0013F2  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2621  0013F6  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2622  0013FA  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2623  0013FE  0012               	return		;funcret
  2624  001400                     __end_of___aomod:
  2625                           	callstack 0
  2626                           
  2627 ;; *************** function ___aodiv *****************
  2628 ;; Defined at:
  2629 ;;		line 9 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\aodiv.c"
  2630 ;; Parameters:    Size  Location     Type
  2631 ;;  dividend        8    0[COMRAM] long long 
  2632 ;;  divisor         8    8[COMRAM] long long 
  2633 ;; Auto vars:     Size  Location     Type
  2634 ;;  quotient        8   18[COMRAM] long long 
  2635 ;;  sign            1   17[COMRAM] unsigned char 
  2636 ;;  counter         1   16[COMRAM] unsigned char 
  2637 ;; Return value:  Size  Location     Type
  2638 ;;                  8    0[COMRAM] long long 
  2639 ;; Registers used:
  2640 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2641 ;; Tracked objects:
  2642 ;;		On entry : 0/0
  2643 ;;		On exit  : 0/0
  2644 ;;		Unchanged: 0/0
  2645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2646 ;;      Params:        16       0       0       0       0       0       0       0       0
  2647 ;;      Locals:        10       0       0       0       0       0       0       0       0
  2648 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2649 ;;      Totals:        26       0       0       0       0       0       0       0       0
  2650 ;;Total ram usage:       26 bytes
  2651 ;; Hardware stack levels used: 1
  2652 ;; This function calls:
  2653 ;;		Nothing
  2654 ;; This function is called by:
  2655 ;;		_dtoa
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659                           	psect	text12
  2660  001114                     __ptext12:
  2661                           	callstack 0
  2662  001114                     ___aodiv:
  2663                           	callstack 26
  2664  001114  0E00               	movlw	0
  2665  001116  6E12               	movwf	___aodiv@sign^0,c
  2666  001118  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  2667  00111A  EF93  F008         	goto	u1360
  2668  00111E  EF91  F008         	goto	u1361
  2669  001122                     u1361:
  2670  001122  EFA5  F008         	goto	l1962
  2671  001126                     u1360:
  2672  001126  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2673  001128  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2674  00112A  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2675  00112C  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2676  00112E  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2677  001130  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2678  001132  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2679  001134  6C09               	negf	___aodiv@divisor^0,c
  2680  001136  0E00               	movlw	0
  2681  001138  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2682  00113A  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2683  00113C  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2684  00113E  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2685  001140  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2686  001142  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2687  001144  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2688  001146  0E01               	movlw	1
  2689  001148  6E12               	movwf	___aodiv@sign^0,c
  2690  00114A                     l1962:
  2691  00114A  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2692  00114C  EFAC  F008         	goto	u1370
  2693  001150  EFAA  F008         	goto	u1371
  2694  001154                     u1371:
  2695  001154  EFBE  F008         	goto	l1968
  2696  001158                     u1370:
  2697  001158  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2698  00115A  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2699  00115C  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2700  00115E  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2701  001160  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2702  001162  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2703  001164  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2704  001166  6C01               	negf	___aodiv@dividend^0,c
  2705  001168  0E00               	movlw	0
  2706  00116A  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2707  00116C  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2708  00116E  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2709  001170  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2710  001172  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2711  001174  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2712  001176  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2713  001178  0E01               	movlw	1
  2714  00117A  1A12               	xorwf	___aodiv@sign^0,f,c
  2715  00117C                     l1968:
  2716  00117C  EE20  F013         	lfsr	2,___aodiv@quotient
  2717  001180  0E07               	movlw	7
  2718  001182                     u1381:
  2719  001182  6ADE               	clrf	postinc2,c
  2720  001184  06E8               	decf	wreg,f,c
  2721  001186  E2FD               	bc	u1381
  2722  001188  5009               	movf	___aodiv@divisor^0,w,c
  2723  00118A  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2724  00118C  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2725  00118E  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2726  001190  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2727  001192  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2728  001194  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2729  001196  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2730  001198  B4D8               	btfsc	status,2,c
  2731  00119A  EFD1  F008         	goto	u1391
  2732  00119E  EFD3  F008         	goto	u1390
  2733  0011A2                     u1391:
  2734  0011A2  EF25  F009         	goto	l1990
  2735  0011A6                     u1390:
  2736  0011A6  0E01               	movlw	1
  2737  0011A8  6E11               	movwf	___aodiv@counter^0,c
  2738  0011AA  EFE1  F008         	goto	l1976
  2739  0011AE                     l1974:
  2740  0011AE  90D8               	bcf	status,0,c
  2741  0011B0  3609               	rlcf	___aodiv@divisor^0,f,c
  2742  0011B2  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2743  0011B4  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2744  0011B6  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2745  0011B8  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2746  0011BA  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2747  0011BC  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2748  0011BE  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2749  0011C0  2A11               	incf	___aodiv@counter^0,f,c
  2750  0011C2                     l1976:
  2751  0011C2  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2752  0011C4  EFE6  F008         	goto	u1401
  2753  0011C8  EFE8  F008         	goto	u1400
  2754  0011CC                     u1401:
  2755  0011CC  EFD7  F008         	goto	l1974
  2756  0011D0                     u1400:
  2757  0011D0                     l1978:
  2758  0011D0  90D8               	bcf	status,0,c
  2759  0011D2  3613               	rlcf	___aodiv@quotient^0,f,c
  2760  0011D4  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2761  0011D6  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2762  0011D8  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2763  0011DA  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2764  0011DC  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2765  0011DE  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2766  0011E0  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2767  0011E2  5009               	movf	___aodiv@divisor^0,w,c
  2768  0011E4  5C01               	subwf	___aodiv@dividend^0,w,c
  2769  0011E6  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2770  0011E8  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2771  0011EA  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2772  0011EC  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2773  0011EE  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2774  0011F0  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2775  0011F2  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2776  0011F4  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2777  0011F6  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2778  0011F8  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2779  0011FA  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2780  0011FC  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2781  0011FE  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2782  001200  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2783  001202  A0D8               	btfss	status,0,c
  2784  001204  EF06  F009         	goto	u1411
  2785  001208  EF08  F009         	goto	u1410
  2786  00120C                     u1411:
  2787  00120C  EF19  F009         	goto	l1986
  2788  001210                     u1410:
  2789  001210  5009               	movf	___aodiv@divisor^0,w,c
  2790  001212  5E01               	subwf	___aodiv@dividend^0,f,c
  2791  001214  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2792  001216  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2793  001218  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2794  00121A  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2795  00121C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2796  00121E  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2797  001220  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2798  001222  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2799  001224  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2800  001226  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2801  001228  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2802  00122A  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2803  00122C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2804  00122E  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2805  001230  8013               	bsf	___aodiv@quotient^0,0,c
  2806  001232                     l1986:
  2807  001232  90D8               	bcf	status,0,c
  2808  001234  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2809  001236  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2810  001238  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2811  00123A  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2812  00123C  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2813  00123E  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2814  001240  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2815  001242  3209               	rrcf	___aodiv@divisor^0,f,c
  2816  001244  2E11               	decfsz	___aodiv@counter^0,f,c
  2817  001246  EFE8  F008         	goto	l1978
  2818  00124A                     l1990:
  2819  00124A  5012               	movf	___aodiv@sign^0,w,c
  2820  00124C  B4D8               	btfsc	status,2,c
  2821  00124E  EF2B  F009         	goto	u1421
  2822  001252  EF2D  F009         	goto	u1420
  2823  001256                     u1421:
  2824  001256  EF3D  F009         	goto	l1994
  2825  00125A                     u1420:
  2826  00125A  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2827  00125C  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2828  00125E  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2829  001260  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2830  001262  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2831  001264  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2832  001266  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2833  001268  6C13               	negf	___aodiv@quotient^0,c
  2834  00126A  0E00               	movlw	0
  2835  00126C  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  2836  00126E  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  2837  001270  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  2838  001272  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  2839  001274  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  2840  001276  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  2841  001278  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  2842  00127A                     l1994:
  2843  00127A  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2844  00127E  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2845  001282  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2846  001286  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2847  00128A  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2848  00128E  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2849  001292  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2850  001296  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2851  00129A  0012               	return		;funcret
  2852  00129C                     __end_of___aodiv:
  2853                           	callstack 0
  2854                           
  2855 ;; *************** function _TemperaturaDigitada *****************
  2856 ;; Defined at:
  2857 ;;		line 97 in file "Main_Invernadero.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;  prmTemperatu    2    6[COMRAM] PTR unsigned char 
  2860 ;;		 -> main@Humedad(2), main@Temperatura(2), 
  2861 ;; Auto vars:     Size  Location     Type
  2862 ;;  Decena          2   13[COMRAM] int 
  2863 ;;  Resultado       2   11[COMRAM] int 
  2864 ;;  Unidad          2    9[COMRAM] int 
  2865 ;; Return value:  Size  Location     Type
  2866 ;;                  2    6[COMRAM] int 
  2867 ;; Registers used:
  2868 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2869 ;; Tracked objects:
  2870 ;;		On entry : 0/0
  2871 ;;		On exit  : 0/0
  2872 ;;		Unchanged: 0/0
  2873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2874 ;;      Params:         2       0       0       0       0       0       0       0       0
  2875 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2876 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2877 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2878 ;;Total ram usage:        9 bytes
  2879 ;; Hardware stack levels used: 1
  2880 ;; Hardware stack levels required when called: 1
  2881 ;; This function calls:
  2882 ;;		___wmul
  2883 ;; This function is called by:
  2884 ;;		_main
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           
  2888                           	psect	text13
  2889  001722                     __ptext13:
  2890                           	callstack 0
  2891  001722                     _TemperaturaDigitada:
  2892                           	callstack 29
  2893  001722                     
  2894                           ;Main_Invernadero.c: 99:     int Unidad = 0;
  2895  001722  0E00               	movlw	0
  2896  001724  6E0B               	movwf	(TemperaturaDigitada@Unidad+1)^0,c
  2897  001726  0E00               	movlw	0
  2898  001728  6E0A               	movwf	TemperaturaDigitada@Unidad^0,c
  2899                           
  2900                           ;Main_Invernadero.c: 101:     int Resultado=0;
  2901  00172A  0E00               	movlw	0
  2902  00172C  6E0D               	movwf	(TemperaturaDigitada@Resultado+1)^0,c
  2903  00172E  0E00               	movlw	0
  2904  001730  6E0C               	movwf	TemperaturaDigitada@Resultado^0,c
  2905  001732                     
  2906                           ;Main_Invernadero.c: 103:     Decena = prmTemperatura[0]-'0';
  2907  001732  C007  FFD9         	movff	TemperaturaDigitada@prmTemperatura,fsr2l
  2908  001736  C008  FFDA         	movff	TemperaturaDigitada@prmTemperatura+1,fsr2h
  2909  00173A  50DF               	movf	indf2,w,c
  2910  00173C  6E09               	movwf	??_TemperaturaDigitada^0,c
  2911  00173E  0ED0               	movlw	208
  2912  001740  2409               	addwf	??_TemperaturaDigitada^0,w,c
  2913  001742  6E0E               	movwf	TemperaturaDigitada@Decena^0,c
  2914  001744  6A0F               	clrf	(TemperaturaDigitada@Decena+1)^0,c
  2915  001746  0EFF               	movlw	255
  2916  001748  220F               	addwfc	(TemperaturaDigitada@Decena+1)^0,f,c
  2917  00174A                     
  2918                           ;Main_Invernadero.c: 104:     Unidad = prmTemperatura[1]-'0';
  2919  00174A  EE20 F001          	lfsr	2,1
  2920  00174E  5007               	movf	TemperaturaDigitada@prmTemperatura^0,w,c
  2921  001750  26D9               	addwf	fsr2l,f,c
  2922  001752  5008               	movf	(TemperaturaDigitada@prmTemperatura+1)^0,w,c
  2923  001754  22DA               	addwfc	fsr2h,f,c
  2924  001756  50DF               	movf	indf2,w,c
  2925  001758  6E09               	movwf	??_TemperaturaDigitada^0,c
  2926  00175A  0ED0               	movlw	208
  2927  00175C  2409               	addwf	??_TemperaturaDigitada^0,w,c
  2928  00175E  6E0A               	movwf	TemperaturaDigitada@Unidad^0,c
  2929  001760  6A0B               	clrf	(TemperaturaDigitada@Unidad+1)^0,c
  2930  001762  0EFF               	movlw	255
  2931  001764  220B               	addwfc	(TemperaturaDigitada@Unidad+1)^0,f,c
  2932  001766                     
  2933                           ;Main_Invernadero.c: 106:     Decena = Decena * 10;
  2934  001766  C00E  F001         	movff	TemperaturaDigitada@Decena,___wmul@multiplier
  2935  00176A  C00F  F002         	movff	TemperaturaDigitada@Decena+1,___wmul@multiplier+1
  2936  00176E  0E00               	movlw	0
  2937  001770  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2938  001772  0E0A               	movlw	10
  2939  001774  6E03               	movwf	___wmul@multiplicand^0,c
  2940  001776  ECFA  F00D         	call	___wmul	;wreg free
  2941  00177A  C001  F00E         	movff	?___wmul,TemperaturaDigitada@Decena
  2942  00177E  C002  F00F         	movff	?___wmul+1,TemperaturaDigitada@Decena+1
  2943  001782                     
  2944                           ;Main_Invernadero.c: 107:     Resultado = Decena + Unidad;
  2945  001782  500A               	movf	TemperaturaDigitada@Unidad^0,w,c
  2946  001784  240E               	addwf	TemperaturaDigitada@Decena^0,w,c
  2947  001786  6E0C               	movwf	TemperaturaDigitada@Resultado^0,c
  2948  001788  500B               	movf	(TemperaturaDigitada@Unidad+1)^0,w,c
  2949  00178A  200F               	addwfc	(TemperaturaDigitada@Decena+1)^0,w,c
  2950  00178C  6E0D               	movwf	(TemperaturaDigitada@Resultado+1)^0,c
  2951  00178E                     
  2952                           ;Main_Invernadero.c: 109:     return Resultado;
  2953  00178E  C00C  F007         	movff	TemperaturaDigitada@Resultado,?_TemperaturaDigitada
  2954  001792  C00D  F008         	movff	TemperaturaDigitada@Resultado+1,?_TemperaturaDigitada+1
  2955  001796  0012               	return		;funcret
  2956  001798                     __end_of_TemperaturaDigitada:
  2957                           	callstack 0
  2958                           
  2959 ;; *************** function ___wmul *****************
  2960 ;; Defined at:
  2961 ;;		line 15 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\Umul16.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;  multiplier      2    0[COMRAM] unsigned int 
  2964 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2965 ;; Auto vars:     Size  Location     Type
  2966 ;;  product         2    4[COMRAM] unsigned int 
  2967 ;; Return value:  Size  Location     Type
  2968 ;;                  2    0[COMRAM] unsigned int 
  2969 ;; Registers used:
  2970 ;;		wreg, status,2, status,0, prodl, prodh
  2971 ;; Tracked objects:
  2972 ;;		On entry : 0/0
  2973 ;;		On exit  : 0/0
  2974 ;;		Unchanged: 0/0
  2975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2976 ;;      Params:         4       0       0       0       0       0       0       0       0
  2977 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2978 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2979 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2980 ;;Total ram usage:        6 bytes
  2981 ;; Hardware stack levels used: 1
  2982 ;; This function calls:
  2983 ;;		Nothing
  2984 ;; This function is called by:
  2985 ;;		_TemperaturaDigitada
  2986 ;; This function uses a non-reentrant model
  2987 ;;
  2988                           
  2989                           	psect	text14
  2990  001BF4                     __ptext14:
  2991                           	callstack 0
  2992  001BF4                     ___wmul:
  2993                           	callstack 29
  2994  001BF4  5001               	movf	___wmul@multiplier^0,w,c
  2995  001BF6  0203               	mulwf	___wmul@multiplicand^0,c
  2996  001BF8  CFF3 F005          	movff	prodl,___wmul@product
  2997  001BFC  CFF4 F006          	movff	prodh,___wmul@product+1
  2998  001C00  5001               	movf	___wmul@multiplier^0,w,c
  2999  001C02  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3000  001C04  50F3               	movf	243,w,c
  3001  001C06  2606               	addwf	(___wmul@product+1)^0,f,c
  3002  001C08  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3003  001C0A  0203               	mulwf	___wmul@multiplicand^0,c
  3004  001C0C  50F3               	movf	243,w,c
  3005  001C0E  2606               	addwf	(___wmul@product+1)^0,f,c
  3006  001C10  C005  F001         	movff	___wmul@product,?___wmul
  3007  001C14  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3008  001C18  0012               	return		;funcret
  3009  001C1A                     __end_of___wmul:
  3010                           	callstack 0
  3011                           
  3012 ;; *************** function _PedirDato *****************
  3013 ;; Defined at:
  3014 ;;		line 126 in file "Main_Invernadero.c"
  3015 ;; Parameters:    Size  Location     Type
  3016 ;;  Etiqueta        2    9[COMRAM] PTR unsigned char 
  3017 ;;		 -> STR_2(14), STR_1(15), 
  3018 ;;  vecLlenar       2   11[COMRAM] PTR unsigned char 
  3019 ;;		 -> main@Humedad(2), main@Temperatura(2), 
  3020 ;; Auto vars:     Size  Location     Type
  3021 ;;  i               2   16[COMRAM] int 
  3022 ;;  tecla           1   15[COMRAM] unsigned char 
  3023 ;; Return value:  Size  Location     Type
  3024 ;;                  1    wreg      void 
  3025 ;; Registers used:
  3026 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3027 ;; Tracked objects:
  3028 ;;		On entry : 0/0
  3029 ;;		On exit  : 0/0
  3030 ;;		Unchanged: 0/0
  3031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3032 ;;      Params:         4       0       0       0       0       0       0       0       0
  3033 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3034 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3035 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3036 ;;Total ram usage:        9 bytes
  3037 ;; Hardware stack levels used: 1
  3038 ;; Hardware stack levels required when called: 3
  3039 ;; This function calls:
  3040 ;;		_LCD_Char
  3041 ;;		_LCD_Clear
  3042 ;;		_LCD_Command
  3043 ;;		_LCD_String_xy
  3044 ;;		_keyfind
  3045 ;; This function is called by:
  3046 ;;		_main
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050                           	psect	text15
  3051  0016A4                     __ptext15:
  3052                           	callstack 0
  3053  0016A4                     _PedirDato:
  3054                           	callstack 27
  3055  0016A4                     
  3056                           ;Main_Invernadero.c: 127:      LCD_Clear();
  3057  0016A4  ECE5  F00D         	call	_LCD_Clear	;wreg free
  3058  0016A8                     
  3059                           ;Main_Invernadero.c: 129:      unsigned char tecla;;Main_Invernadero.c: 130:      LCD_St
      +                          ring_xy(0,0,Etiqueta);
  3060  0016A8  0E00               	movlw	0
  3061  0016AA  6E05               	movwf	LCD_String_xy@pos^0,c
  3062  0016AC  C00A  F006         	movff	PedirDato@Etiqueta,LCD_String_xy@msg
  3063  0016B0  C00B  F007         	movff	PedirDato@Etiqueta+1,LCD_String_xy@msg+1
  3064  0016B4  0E00               	movlw	0
  3065  0016B6  EC40  F00D         	call	_LCD_String_xy
  3066  0016BA                     
  3067                           ;Main_Invernadero.c: 131:      LCD_Command(0xC0);
  3068  0016BA  0EC0               	movlw	192
  3069  0016BC  ECD6  F00C         	call	_LCD_Command
  3070  0016C0                     
  3071                           ;Main_Invernadero.c: 133:      for(int i=0 ; i < 2 ; i++){
  3072  0016C0  0E00               	movlw	0
  3073  0016C2  6E12               	movwf	(PedirDato@i+1)^0,c
  3074  0016C4  0E00               	movlw	0
  3075  0016C6  6E11               	movwf	PedirDato@i^0,c
  3076  0016C8                     l2418:
  3077                           
  3078                           ;Main_Invernadero.c: 134:      tecla=keyfind();
  3079  0016C8  EC8A  F005         	call	_keyfind	;wreg free
  3080  0016CC  6E10               	movwf	PedirDato@tecla^0,c
  3081  0016CE                     
  3082                           ;Main_Invernadero.c: 135:      LCD_Char(tecla);
  3083  0016CE  5010               	movf	PedirDato@tecla^0,w,c
  3084  0016D0  ECAE  F00C         	call	_LCD_Char
  3085  0016D4                     
  3086                           ;Main_Invernadero.c: 136:      vecLlenar[i] = tecla;
  3087  0016D4  5011               	movf	PedirDato@i^0,w,c
  3088  0016D6  240C               	addwf	PedirDato@vecLlenar^0,w,c
  3089  0016D8  6ED9               	movwf	fsr2l,c
  3090  0016DA  5012               	movf	(PedirDato@i+1)^0,w,c
  3091  0016DC  200D               	addwfc	(PedirDato@vecLlenar+1)^0,w,c
  3092  0016DE  6EDA               	movwf	fsr2h,c
  3093  0016E0  C010  FFDF         	movff	PedirDato@tecla,indf2
  3094  0016E4                     
  3095                           ;Main_Invernadero.c: 137:      }
  3096  0016E4  4A11               	infsnz	PedirDato@i^0,f,c
  3097  0016E6  2A12               	incf	(PedirDato@i+1)^0,f,c
  3098  0016E8  BE12               	btfsc	(PedirDato@i+1)^0,7,c
  3099  0016EA  EF80  F00B         	goto	u2041
  3100  0016EE  5012               	movf	(PedirDato@i+1)^0,w,c
  3101  0016F0  E109               	bnz	u2040
  3102  0016F2  0E02               	movlw	2
  3103  0016F4  5C11               	subwf	PedirDato@i^0,w,c
  3104  0016F6  A0D8               	btfss	status,0,c
  3105  0016F8  EF80  F00B         	goto	u2041
  3106  0016FC  EF82  F00B         	goto	u2040
  3107  001700                     u2041:
  3108  001700  EF64  F00B         	goto	l2418
  3109  001704                     u2040:
  3110  001704                     
  3111                           ;Main_Invernadero.c: 138:      _delay((unsigned long)((100)*(8000000/4000.0)));
  3112  001704  0E02               	movlw	2
  3113  001706  6E0F               	movwf	(??_PedirDato+1)^0,c
  3114  001708  0E04               	movlw	4
  3115  00170A  6E0E               	movwf	??_PedirDato^0,c
  3116  00170C  0EBA               	movlw	186
  3117  00170E                     u2367:
  3118  00170E  2EE8               	decfsz	wreg,f,c
  3119  001710  D7FE               	bra	u2367
  3120  001712  2E0E               	decfsz	??_PedirDato^0,f,c
  3121  001714  D7FC               	bra	u2367
  3122  001716  2E0F               	decfsz	(??_PedirDato+1)^0,f,c
  3123  001718  D7FA               	bra	u2367
  3124  00171A  D000               	nop2	
  3125  00171C                     
  3126                           ;Main_Invernadero.c: 139:      LCD_Clear();
  3127  00171C  ECE5  F00D         	call	_LCD_Clear	;wreg free
  3128  001720  0012               	return		;funcret
  3129  001722                     __end_of_PedirDato:
  3130                           	callstack 0
  3131                           
  3132 ;; *************** function _keyfind *****************
  3133 ;; Defined at:
  3134 ;;		line 174 in file "keypad.c"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;		None
  3137 ;; Auto vars:     Size  Location     Type
  3138 ;;  temp1           1    0        unsigned char 
  3139 ;; Return value:  Size  Location     Type
  3140 ;;                  1    wreg      unsigned char 
  3141 ;; Registers used:
  3142 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3143 ;; Tracked objects:
  3144 ;;		On entry : 0/0
  3145 ;;		On exit  : 0/0
  3146 ;;		Unchanged: 0/0
  3147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3148 ;;      Params:         0       0       0       0       0       0       0       0       0
  3149 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3150 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3151 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3152 ;;Total ram usage:        1 bytes
  3153 ;; Hardware stack levels used: 1
  3154 ;; This function calls:
  3155 ;;		Nothing
  3156 ;; This function is called by:
  3157 ;;		_PedirDato
  3158 ;; This function uses a non-reentrant model
  3159 ;;
  3160                           
  3161                           	psect	text16
  3162  000B14                     __ptext16:
  3163                           	callstack 0
  3164  000B14                     _keyfind:
  3165                           	callstack 29
  3166  000B14                     
  3167                           ;keypad.c: 177:     TRISB = 0xf0;
  3168  000B14  0EF0               	movlw	240
  3169  000B16  6E93               	movwf	147,c	;volatile
  3170                           
  3171                           ;keypad.c: 178:     unsigned char temp1;;keypad.c: 180:         LATB = 0xf0;
  3172  000B18  0EF0               	movlw	240
  3173  000B1A  6E8A               	movwf	138,c	;volatile
  3174  000B1C                     l2248:
  3175                           
  3176                           ;keypad.c: 184:         {;keypad.c: 186:             col_loc = PORTB & 0xf0;
  3177  000B1C  5081               	movf	129,w,c	;volatile
  3178  000B1E  0BF0               	andlw	240
  3179  000B20  0100               	movlb	0	; () banked
  3180  000B22  6F6A               	movwf	_col_loc& (0+255),b
  3181  000B24                     
  3182                           ; BSR set to: 0
  3183                           ;keypad.c: 188:         }while(col_loc!=0xf0);
  3184  000B24  0EF0               	movlw	240
  3185  000B26  196A               	xorwf	_col_loc& (0+255),w,b
  3186  000B28  A4D8               	btfss	status,2,c
  3187  000B2A  EF99  F005         	goto	u1811
  3188  000B2E  EF9B  F005         	goto	u1810
  3189  000B32                     u1811:
  3190  000B32  EF8E  F005         	goto	l2248
  3191  000B36                     u1810:
  3192  000B36                     
  3193                           ; BSR set to: 0
  3194                           ;keypad.c: 189:          col_loc = PORTB & 0xf0;
  3195  000B36  5081               	movf	129,w,c	;volatile
  3196  000B38  0BF0               	andlw	240
  3197  000B3A  6F6A               	movwf	_col_loc& (0+255),b
  3198                           
  3199                           ;keypad.c: 190:       }while(col_loc!=0xf0);
  3200  000B3C  0EF0               	movlw	240
  3201  000B3E  196A               	xorwf	_col_loc& (0+255),w,b
  3202  000B40  A4D8               	btfss	status,2,c
  3203  000B42  EFA5  F005         	goto	u1821
  3204  000B46  EFA7  F005         	goto	u1820
  3205  000B4A                     u1821:
  3206  000B4A  EF8E  F005         	goto	l2248
  3207  000B4E                     u1820:
  3208  000B4E                     
  3209                           ; BSR set to: 0
  3210                           ;keypad.c: 192:       _delay((unsigned long)((30)*(8000000/4000.0)));
  3211  000B4E  0E4E               	movlw	78
  3212  000B50  6E01               	movwf	??_keyfind^0,c
  3213  000B52  0EEB               	movlw	235
  3214  000B54                     u2377:
  3215  000B54  2EE8               	decfsz	wreg,f,c
  3216  000B56  D7FE               	bra	u2377
  3217  000B58  2E01               	decfsz	??_keyfind^0,f,c
  3218  000B5A  D7FC               	bra	u2377
  3219  000B5C  F000               	nop	
  3220  000B5E                     
  3221                           ;keypad.c: 193:         LATB = 0xf0;
  3222  000B5E  0EF0               	movlw	240
  3223  000B60  6E8A               	movwf	138,c	;volatile
  3224  000B62                     l2258:
  3225                           
  3226                           ;keypad.c: 197:             {;keypad.c: 199:                 col_loc = PORTB & 0xf0;
  3227  000B62  5081               	movf	129,w,c	;volatile
  3228  000B64  0BF0               	andlw	240
  3229  000B66  0100               	movlb	0	; () banked
  3230  000B68  6F6A               	movwf	_col_loc& (0+255),b
  3231  000B6A                     
  3232                           ; BSR set to: 0
  3233                           ;keypad.c: 200:             }while(col_loc==0xf0);
  3234  000B6A  0EF0               	movlw	240
  3235  000B6C  196A               	xorwf	_col_loc& (0+255),w,b
  3236  000B6E  B4D8               	btfsc	status,2,c
  3237  000B70  EFBC  F005         	goto	u1831
  3238  000B74  EFBE  F005         	goto	u1830
  3239  000B78                     u1831:
  3240  000B78  EFB1  F005         	goto	l2258
  3241  000B7C                     u1830:
  3242  000B7C                     
  3243                           ; BSR set to: 0
  3244                           ;keypad.c: 201:          col_loc = PORTB & 0xf0;
  3245  000B7C  5081               	movf	129,w,c	;volatile
  3246  000B7E  0BF0               	andlw	240
  3247  000B80  6F6A               	movwf	_col_loc& (0+255),b
  3248                           
  3249                           ;keypad.c: 202:         }while(col_loc==0xf0);
  3250  000B82  0EF0               	movlw	240
  3251  000B84  196A               	xorwf	_col_loc& (0+255),w,b
  3252  000B86  B4D8               	btfsc	status,2,c
  3253  000B88  EFC8  F005         	goto	u1841
  3254  000B8C  EFCA  F005         	goto	u1840
  3255  000B90                     u1841:
  3256  000B90  EFB1  F005         	goto	l2258
  3257  000B94                     u1840:
  3258  000B94                     
  3259                           ; BSR set to: 0
  3260                           ;keypad.c: 204:         _delay((unsigned long)((30)*(8000000/4000.0)));
  3261  000B94  0E4E               	movlw	78
  3262  000B96  6E01               	movwf	??_keyfind^0,c
  3263  000B98  0EEB               	movlw	235
  3264  000B9A                     u2387:
  3265  000B9A  2EE8               	decfsz	wreg,f,c
  3266  000B9C  D7FE               	bra	u2387
  3267  000B9E  2E01               	decfsz	??_keyfind^0,f,c
  3268  000BA0  D7FC               	bra	u2387
  3269  000BA2  F000               	nop	
  3270  000BA4                     
  3271                           ;keypad.c: 206:         col_loc = PORTB & 0xf0;
  3272  000BA4  5081               	movf	129,w,c	;volatile
  3273  000BA6  0BF0               	andlw	240
  3274  000BA8  0100               	movlb	0	; () banked
  3275  000BAA  6F6A               	movwf	_col_loc& (0+255),b
  3276  000BAC                     l2268:
  3277                           
  3278                           ; BSR set to: 0
  3279                           ;keypad.c: 211:     {;keypad.c: 212:         LATB = 0xfe;
  3280  000BAC  0EFE               	movlw	254
  3281  000BAE  6E8A               	movwf	138,c	;volatile
  3282  000BB0                     
  3283                           ; BSR set to: 0
  3284                           ;keypad.c: 213:         col_loc = PORTB & 0xf0;
  3285  000BB0  5081               	movf	129,w,c	;volatile
  3286  000BB2  0BF0               	andlw	240
  3287  000BB4  6F6A               	movwf	_col_loc& (0+255),b
  3288  000BB6                     
  3289                           ; BSR set to: 0
  3290                           ;keypad.c: 214:         temp_col=col_loc;
  3291  000BB6  C06A  F068         	movff	_col_loc,_temp_col
  3292  000BBA                     
  3293                           ; BSR set to: 0
  3294                           ;keypad.c: 215:         if(col_loc!=0xf0)
  3295  000BBA  0EF0               	movlw	240
  3296  000BBC  196A               	xorwf	_col_loc& (0+255),w,b
  3297  000BBE  B4D8               	btfsc	status,2,c
  3298  000BC0  EFE4  F005         	goto	u1851
  3299  000BC4  EFE6  F005         	goto	u1850
  3300  000BC8                     u1851:
  3301  000BC8  EFF8  F005         	goto	l2280
  3302  000BCC                     u1850:
  3303  000BCC                     
  3304                           ; BSR set to: 0
  3305                           ;keypad.c: 216:         {;keypad.c: 217:             rowloc=0;
  3306  000BCC  0E00               	movlw	0
  3307  000BCE  6F69               	movwf	_rowloc& (0+255),b
  3308                           
  3309                           ;keypad.c: 218:             while(temp_col!=0xf0)
  3310  000BD0  EFED  F005         	goto	l308
  3311  000BD4                     l2278:
  3312                           
  3313                           ; BSR set to: 0
  3314                           ;keypad.c: 219:             {;keypad.c: 220:                 temp_col = PORTB & 0xf0;
  3315  000BD4  5081               	movf	129,w,c	;volatile
  3316  000BD6  0BF0               	andlw	240
  3317  000BD8  6F68               	movwf	_temp_col& (0+255),b
  3318  000BDA                     l308:
  3319                           
  3320                           ; BSR set to: 0
  3321                           ;keypad.c: 218:             while(temp_col!=0xf0)
  3322  000BDA  0EF0               	movlw	240
  3323  000BDC  1968               	xorwf	_temp_col& (0+255),w,b
  3324  000BDE  A4D8               	btfss	status,2,c
  3325  000BE0  EFF4  F005         	goto	u1861
  3326  000BE4  EFF6  F005         	goto	u1860
  3327  000BE8                     u1861:
  3328  000BE8  EFEA  F005         	goto	l2278
  3329  000BEC                     u1860:
  3330  000BEC  EF5C  F006         	goto	l2316
  3331  000BF0                     l2280:
  3332                           
  3333                           ; BSR set to: 0
  3334                           ;keypad.c: 225:         LATB = 0xfd;
  3335  000BF0  0EFD               	movlw	253
  3336  000BF2  6E8A               	movwf	138,c	;volatile
  3337  000BF4                     
  3338                           ; BSR set to: 0
  3339                           ;keypad.c: 226:         col_loc = PORTB & 0xf0;
  3340  000BF4  5081               	movf	129,w,c	;volatile
  3341  000BF6  0BF0               	andlw	240
  3342  000BF8  6F6A               	movwf	_col_loc& (0+255),b
  3343  000BFA                     
  3344                           ; BSR set to: 0
  3345                           ;keypad.c: 227:         temp_col=col_loc;
  3346  000BFA  C06A  F068         	movff	_col_loc,_temp_col
  3347  000BFE                     
  3348                           ; BSR set to: 0
  3349                           ;keypad.c: 228:         if(col_loc!=0xf0)
  3350  000BFE  0EF0               	movlw	240
  3351  000C00  196A               	xorwf	_col_loc& (0+255),w,b
  3352  000C02  B4D8               	btfsc	status,2,c
  3353  000C04  EF06  F006         	goto	u1871
  3354  000C08  EF08  F006         	goto	u1870
  3355  000C0C                     u1871:
  3356  000C0C  EF1A  F006         	goto	l2292
  3357  000C10                     u1870:
  3358  000C10                     
  3359                           ; BSR set to: 0
  3360                           ;keypad.c: 229:         {;keypad.c: 230:             rowloc=1;
  3361  000C10  0E01               	movlw	1
  3362  000C12  6F69               	movwf	_rowloc& (0+255),b
  3363                           
  3364                           ;keypad.c: 231:             while(temp_col!=0xf0)
  3365  000C14  EF0F  F006         	goto	l313
  3366  000C18                     l2290:
  3367                           
  3368                           ; BSR set to: 0
  3369                           ;keypad.c: 232:             {;keypad.c: 233:                 temp_col = PORTB & 0xf0;
  3370  000C18  5081               	movf	129,w,c	;volatile
  3371  000C1A  0BF0               	andlw	240
  3372  000C1C  6F68               	movwf	_temp_col& (0+255),b
  3373  000C1E                     l313:
  3374                           
  3375                           ; BSR set to: 0
  3376                           ;keypad.c: 231:             while(temp_col!=0xf0)
  3377  000C1E  0EF0               	movlw	240
  3378  000C20  1968               	xorwf	_temp_col& (0+255),w,b
  3379  000C22  A4D8               	btfss	status,2,c
  3380  000C24  EF16  F006         	goto	u1881
  3381  000C28  EF18  F006         	goto	u1880
  3382  000C2C                     u1881:
  3383  000C2C  EF0C  F006         	goto	l2290
  3384  000C30                     u1880:
  3385  000C30  EF5C  F006         	goto	l2316
  3386  000C34                     l2292:
  3387                           
  3388                           ; BSR set to: 0
  3389                           ;keypad.c: 238:         LATB = 0xfb;
  3390  000C34  0EFB               	movlw	251
  3391  000C36  6E8A               	movwf	138,c	;volatile
  3392  000C38                     
  3393                           ; BSR set to: 0
  3394                           ;keypad.c: 239:         col_loc = PORTB & 0xf0;
  3395  000C38  5081               	movf	129,w,c	;volatile
  3396  000C3A  0BF0               	andlw	240
  3397  000C3C  6F6A               	movwf	_col_loc& (0+255),b
  3398  000C3E                     
  3399                           ; BSR set to: 0
  3400                           ;keypad.c: 240:         temp_col=col_loc;
  3401  000C3E  C06A  F068         	movff	_col_loc,_temp_col
  3402  000C42                     
  3403                           ; BSR set to: 0
  3404                           ;keypad.c: 241:         if(col_loc!=0xf0)
  3405  000C42  0EF0               	movlw	240
  3406  000C44  196A               	xorwf	_col_loc& (0+255),w,b
  3407  000C46  B4D8               	btfsc	status,2,c
  3408  000C48  EF28  F006         	goto	u1891
  3409  000C4C  EF2A  F006         	goto	u1890
  3410  000C50                     u1891:
  3411  000C50  EF3C  F006         	goto	l2304
  3412  000C54                     u1890:
  3413  000C54                     
  3414                           ; BSR set to: 0
  3415                           ;keypad.c: 242:         {;keypad.c: 243:             rowloc=2;
  3416  000C54  0E02               	movlw	2
  3417  000C56  6F69               	movwf	_rowloc& (0+255),b
  3418                           
  3419                           ;keypad.c: 244:             while(temp_col!=0xf0)
  3420  000C58  EF31  F006         	goto	l317
  3421  000C5C                     l2302:
  3422                           
  3423                           ; BSR set to: 0
  3424                           ;keypad.c: 245:             {;keypad.c: 246:                 temp_col = PORTB & 0xf0;
  3425  000C5C  5081               	movf	129,w,c	;volatile
  3426  000C5E  0BF0               	andlw	240
  3427  000C60  6F68               	movwf	_temp_col& (0+255),b
  3428  000C62                     l317:
  3429                           
  3430                           ; BSR set to: 0
  3431                           ;keypad.c: 244:             while(temp_col!=0xf0)
  3432  000C62  0EF0               	movlw	240
  3433  000C64  1968               	xorwf	_temp_col& (0+255),w,b
  3434  000C66  A4D8               	btfss	status,2,c
  3435  000C68  EF38  F006         	goto	u1901
  3436  000C6C  EF3A  F006         	goto	u1900
  3437  000C70                     u1901:
  3438  000C70  EF2E  F006         	goto	l2302
  3439  000C74                     u1900:
  3440  000C74  EF5C  F006         	goto	l2316
  3441  000C78                     l2304:
  3442                           
  3443                           ; BSR set to: 0
  3444                           ;keypad.c: 251:         LATB = 0xf7;
  3445  000C78  0EF7               	movlw	247
  3446  000C7A  6E8A               	movwf	138,c	;volatile
  3447  000C7C                     
  3448                           ; BSR set to: 0
  3449                           ;keypad.c: 252:         col_loc = PORTB & 0xf0;
  3450  000C7C  5081               	movf	129,w,c	;volatile
  3451  000C7E  0BF0               	andlw	240
  3452  000C80  6F6A               	movwf	_col_loc& (0+255),b
  3453  000C82                     
  3454                           ; BSR set to: 0
  3455                           ;keypad.c: 253:         temp_col=col_loc;
  3456  000C82  C06A  F068         	movff	_col_loc,_temp_col
  3457  000C86                     
  3458                           ; BSR set to: 0
  3459                           ;keypad.c: 254:         if(col_loc!=0xf0)
  3460  000C86  0EF0               	movlw	240
  3461  000C88  196A               	xorwf	_col_loc& (0+255),w,b
  3462  000C8A  B4D8               	btfsc	status,2,c
  3463  000C8C  EF4A  F006         	goto	u1911
  3464  000C90  EF4C  F006         	goto	u1910
  3465  000C94                     u1911:
  3466  000C94  EFD6  F005         	goto	l2268
  3467  000C98                     u1910:
  3468  000C98                     
  3469                           ; BSR set to: 0
  3470                           ;keypad.c: 255:         {;keypad.c: 256:             rowloc=3;
  3471  000C98  0E03               	movlw	3
  3472  000C9A  6F69               	movwf	_rowloc& (0+255),b
  3473                           
  3474                           ;keypad.c: 257:             while(temp_col!=0xf0)
  3475  000C9C  EF53  F006         	goto	l321
  3476  000CA0                     l2314:
  3477                           
  3478                           ; BSR set to: 0
  3479                           ;keypad.c: 258:             {;keypad.c: 259:                 temp_col = PORTB & 0xf0;
  3480  000CA0  5081               	movf	129,w,c	;volatile
  3481  000CA2  0BF0               	andlw	240
  3482  000CA4  6F68               	movwf	_temp_col& (0+255),b
  3483  000CA6                     l321:
  3484                           
  3485                           ; BSR set to: 0
  3486                           ;keypad.c: 257:             while(temp_col!=0xf0)
  3487  000CA6  0EF0               	movlw	240
  3488  000CA8  1968               	xorwf	_temp_col& (0+255),w,b
  3489  000CAA  A4D8               	btfss	status,2,c
  3490  000CAC  EF5A  F006         	goto	u1921
  3491  000CB0  EF5C  F006         	goto	u1920
  3492  000CB4                     u1921:
  3493  000CB4  EF50  F006         	goto	l2314
  3494  000CB8                     u1920:
  3495  000CB8                     l2316:
  3496                           
  3497                           ; BSR set to: 0
  3498                           ;keypad.c: 268:     {;keypad.c: 270:         if(col_loc==0xe0)
  3499  000CB8  0EE0               	movlw	224
  3500  000CBA  196A               	xorwf	_col_loc& (0+255),w,b
  3501  000CBC  A4D8               	btfss	status,2,c
  3502  000CBE  EF63  F006         	goto	u1931
  3503  000CC2  EF65  F006         	goto	u1930
  3504  000CC6                     u1931:
  3505  000CC6  EF70  F006         	goto	l2324
  3506  000CCA                     u1930:
  3507  000CCA                     
  3508                           ; BSR set to: 0
  3509                           ;keypad.c: 271:         {;keypad.c: 272:              return keypad[rowloc][0];
  3510  000CCA  5169               	movf	_rowloc& (0+255),w,b
  3511  000CCC  0D04               	mullw	4
  3512  000CCE  0E8B               	movlw	low _keypad
  3513  000CD0  24F3               	addwf	243,w,c
  3514  000CD2  6ED9               	movwf	fsr2l,c
  3515  000CD4  0E00               	movlw	high _keypad
  3516  000CD6  20F4               	addwfc	prodh,w,c
  3517  000CD8  6EDA               	movwf	fsr2h,c
  3518  000CDA  50DF               	movf	indf2,w,c
  3519  000CDC  EFA1  F006         	goto	l327
  3520  000CE0                     l2324:
  3521                           
  3522                           ; BSR set to: 0
  3523                           ;keypad.c: 275:             if(col_loc==0xd0)
  3524  000CE0  0ED0               	movlw	208
  3525  000CE2  196A               	xorwf	_col_loc& (0+255),w,b
  3526  000CE4  A4D8               	btfss	status,2,c
  3527  000CE6  EF77  F006         	goto	u1941
  3528  000CEA  EF79  F006         	goto	u1940
  3529  000CEE                     u1941:
  3530  000CEE  EF84  F006         	goto	l2332
  3531  000CF2                     u1940:
  3532  000CF2                     
  3533                           ; BSR set to: 0
  3534                           ;keypad.c: 276:         {;keypad.c: 277:             return keypad[rowloc][1];
  3535  000CF2  5169               	movf	_rowloc& (0+255),w,b
  3536  000CF4  0D04               	mullw	4
  3537  000CF6  0E8C               	movlw	low (_keypad+1)
  3538  000CF8  24F3               	addwf	243,w,c
  3539  000CFA  6ED9               	movwf	fsr2l,c
  3540  000CFC  0E00               	movlw	high (_keypad+1)
  3541  000CFE  20F4               	addwfc	prodh,w,c
  3542  000D00  6EDA               	movwf	fsr2h,c
  3543  000D02  50DF               	movf	indf2,w,c
  3544  000D04  EFA1  F006         	goto	l327
  3545  000D08                     l2332:
  3546                           
  3547                           ; BSR set to: 0
  3548                           ;keypad.c: 280:             if(col_loc==0xb0)
  3549  000D08  0EB0               	movlw	176
  3550  000D0A  196A               	xorwf	_col_loc& (0+255),w,b
  3551  000D0C  A4D8               	btfss	status,2,c
  3552  000D0E  EF8B  F006         	goto	u1951
  3553  000D12  EF8D  F006         	goto	u1950
  3554  000D16                     u1951:
  3555  000D16  EF98  F006         	goto	l2340
  3556  000D1A                     u1950:
  3557  000D1A                     
  3558                           ; BSR set to: 0
  3559                           ;keypad.c: 281:         {;keypad.c: 282:             return keypad[rowloc][2];
  3560  000D1A  5169               	movf	_rowloc& (0+255),w,b
  3561  000D1C  0D04               	mullw	4
  3562  000D1E  0E8D               	movlw	low (_keypad+2)
  3563  000D20  24F3               	addwf	243,w,c
  3564  000D22  6ED9               	movwf	fsr2l,c
  3565  000D24  0E00               	movlw	high (_keypad+2)
  3566  000D26  20F4               	addwfc	prodh,w,c
  3567  000D28  6EDA               	movwf	fsr2h,c
  3568  000D2A  50DF               	movf	indf2,w,c
  3569  000D2C  EFA1  F006         	goto	l327
  3570  000D30                     l2340:
  3571                           
  3572                           ; BSR set to: 0
  3573                           ;keypad.c: 286:         {;keypad.c: 287:             return keypad[rowloc][3];
  3574  000D30  5169               	movf	_rowloc& (0+255),w,b
  3575  000D32  0D04               	mullw	4
  3576  000D34  0E8E               	movlw	low (_keypad+3)
  3577  000D36  24F3               	addwf	243,w,c
  3578  000D38  6ED9               	movwf	fsr2l,c
  3579  000D3A  0E00               	movlw	high (_keypad+3)
  3580  000D3C  20F4               	addwfc	prodh,w,c
  3581  000D3E  6EDA               	movwf	fsr2h,c
  3582  000D40  50DF               	movf	indf2,w,c
  3583  000D42                     l327:
  3584                           
  3585                           ; BSR set to: 0
  3586  000D42  0012               	return		;funcret
  3587  000D44                     __end_of_keyfind:
  3588                           	callstack 0
  3589                           
  3590 ;; *************** function _LCD_String_xy *****************
  3591 ;; Defined at:
  3592 ;;		line 81 in file "LCD.c"
  3593 ;; Parameters:    Size  Location     Type
  3594 ;;  row             1    wreg     unsigned char 
  3595 ;;  pos             1    4[COMRAM] unsigned char 
  3596 ;;  msg             2    5[COMRAM] PTR const unsigned char 
  3597 ;;		 -> main@Cadena(10), STR_2(14), STR_1(15), 
  3598 ;; Auto vars:     Size  Location     Type
  3599 ;;  row             1    7[COMRAM] unsigned char 
  3600 ;;  location        1    8[COMRAM] unsigned char 
  3601 ;; Return value:  Size  Location     Type
  3602 ;;                  1    wreg      void 
  3603 ;; Registers used:
  3604 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3605 ;; Tracked objects:
  3606 ;;		On entry : 0/0
  3607 ;;		On exit  : 0/0
  3608 ;;		Unchanged: 0/0
  3609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3610 ;;      Params:         3       0       0       0       0       0       0       0       0
  3611 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3612 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3613 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3614 ;;Total ram usage:        5 bytes
  3615 ;; Hardware stack levels used: 1
  3616 ;; Hardware stack levels required when called: 2
  3617 ;; This function calls:
  3618 ;;		_LCD_Command
  3619 ;;		_LCD_String
  3620 ;; This function is called by:
  3621 ;;		_main
  3622 ;;		_PedirDato
  3623 ;; This function uses a non-reentrant model
  3624 ;;
  3625                           
  3626                           	psect	text17
  3627  001A80                     __ptext17:
  3628                           	callstack 0
  3629  001A80                     _LCD_String_xy:
  3630                           	callstack 27
  3631                           
  3632                           ; BSR set to: 0
  3633                           ;incstack = 0
  3634                           ;LCD_String_xy@row stored from wreg
  3635  001A80  6E08               	movwf	LCD_String_xy@row^0,c
  3636  001A82                     
  3637                           ;LCD.c: 84:     if(row<=1)
  3638  001A82  0E02               	movlw	2
  3639  001A84  6008               	cpfslt	LCD_String_xy@row^0,c
  3640  001A86  EF47  F00D         	goto	u1761
  3641  001A8A  EF49  F00D         	goto	u1760
  3642  001A8E                     u1761:
  3643  001A8E  EF52  F00D         	goto	l2222
  3644  001A92                     u1760:
  3645  001A92                     
  3646                           ;LCD.c: 85:     {;LCD.c: 86:         location = (0x80) | ((pos) & 0x0f);
  3647  001A92  5005               	movf	LCD_String_xy@pos^0,w,c
  3648  001A94  0B0F               	andlw	15
  3649  001A96  0980               	iorlw	128
  3650  001A98  6E09               	movwf	LCD_String_xy@location^0,c
  3651  001A9A                     
  3652                           ;LCD.c: 87:         LCD_Command(location);
  3653  001A9A  5009               	movf	LCD_String_xy@location^0,w,c
  3654  001A9C  ECD6  F00C         	call	_LCD_Command
  3655                           
  3656                           ;LCD.c: 88:     }
  3657  001AA0  EF59  F00D         	goto	l2226
  3658  001AA4                     l2222:
  3659                           
  3660                           ;LCD.c: 90:     {;LCD.c: 91:         location = (0xC0) | ((pos) & 0x0f);
  3661  001AA4  5005               	movf	LCD_String_xy@pos^0,w,c
  3662  001AA6  0B0F               	andlw	15
  3663  001AA8  09C0               	iorlw	192
  3664  001AAA  6E09               	movwf	LCD_String_xy@location^0,c
  3665  001AAC                     
  3666                           ;LCD.c: 92:         LCD_Command(location);
  3667  001AAC  5009               	movf	LCD_String_xy@location^0,w,c
  3668  001AAE  ECD6  F00C         	call	_LCD_Command
  3669  001AB2                     l2226:
  3670                           
  3671                           ;LCD.c: 96:     LCD_String(msg);
  3672  001AB2  C006  F003         	movff	LCD_String_xy@msg,LCD_String@msg
  3673  001AB6  C007  F004         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  3674  001ABA  ECFD  F00B         	call	_LCD_String	;wreg free
  3675  001ABE  0012               	return		;funcret
  3676  001AC0                     __end_of_LCD_String_xy:
  3677                           	callstack 0
  3678                           
  3679 ;; *************** function _LCD_String *****************
  3680 ;; Defined at:
  3681 ;;		line 71 in file "LCD.c"
  3682 ;; Parameters:    Size  Location     Type
  3683 ;;  msg             2    2[COMRAM] PTR const unsigned char 
  3684 ;;		 -> main@Cadena(10), STR_2(14), STR_1(15), 
  3685 ;; Auto vars:     Size  Location     Type
  3686 ;;		None
  3687 ;; Return value:  Size  Location     Type
  3688 ;;                  1    wreg      void 
  3689 ;; Registers used:
  3690 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3691 ;; Tracked objects:
  3692 ;;		On entry : 0/0
  3693 ;;		On exit  : 0/0
  3694 ;;		Unchanged: 0/0
  3695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3696 ;;      Params:         2       0       0       0       0       0       0       0       0
  3697 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3698 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3699 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3700 ;;Total ram usage:        2 bytes
  3701 ;; Hardware stack levels used: 1
  3702 ;; Hardware stack levels required when called: 1
  3703 ;; This function calls:
  3704 ;;		_LCD_Char
  3705 ;; This function is called by:
  3706 ;;		_main
  3707 ;;		_LCD_String_xy
  3708 ;; This function uses a non-reentrant model
  3709 ;;
  3710                           
  3711                           	psect	text18
  3712  0017FA                     __ptext18:
  3713                           	callstack 0
  3714  0017FA                     _LCD_String:
  3715                           	callstack 27
  3716  0017FA                     
  3717                           ;LCD.c: 71: void LCD_String(const char *msg);LCD.c: 72: {;LCD.c: 73:  while((*msg)!=0)
  3718  0017FA  EF13  F00C         	goto	l2150
  3719  0017FE                     l2146:
  3720                           
  3721                           ;LCD.c: 74:  {;LCD.c: 75:    LCD_Char(*msg);
  3722  0017FE  C003  FFF6         	movff	LCD_String@msg,tblptrl
  3723  001802  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  3724  001806  6AF8               	clrf	tblptru,c
  3725  001808  0E07               	movlw	(high __ramtop+-1)
  3726  00180A  64F7               	cpfsgt	tblptrh,c
  3727  00180C  D003               	bra	u1697
  3728  00180E  0008               	tblrd		*
  3729  001810  50F5               	movf	tablat,w,c
  3730  001812  D005               	bra	u1690
  3731  001814                     u1697:
  3732  001814  CFF6 FFE1          	movff	tblptrl,fsr1l
  3733  001818  CFF7 FFE2          	movff	tblptrh,fsr1h
  3734  00181C  50E7               	movf	indf1,w,c
  3735  00181E                     u1690:
  3736  00181E  ECAE  F00C         	call	_LCD_Char
  3737  001822                     
  3738                           ;LCD.c: 76:    msg++;
  3739  001822  4A03               	infsnz	LCD_String@msg^0,f,c
  3740  001824  2A04               	incf	(LCD_String@msg+1)^0,f,c
  3741  001826                     l2150:
  3742                           
  3743                           ;LCD.c: 73:  while((*msg)!=0)
  3744  001826  C003  FFF6         	movff	LCD_String@msg,tblptrl
  3745  00182A  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  3746  00182E  6AF8               	clrf	tblptru,c
  3747  001830  0E07               	movlw	(high __ramtop+-1)
  3748  001832  64F7               	cpfsgt	tblptrh,c
  3749  001834  D003               	bra	u1707
  3750  001836  0008               	tblrd		*
  3751  001838  50F5               	movf	tablat,w,c
  3752  00183A  D005               	bra	u1700
  3753  00183C                     u1707:
  3754  00183C  CFF6 FFE1          	movff	tblptrl,fsr1l
  3755  001840  CFF7 FFE2          	movff	tblptrh,fsr1h
  3756  001844  50E7               	movf	indf1,w,c
  3757  001846                     u1700:
  3758  001846  0900               	iorlw	0
  3759  001848  A4D8               	btfss	status,2,c
  3760  00184A  EF29  F00C         	goto	u1711
  3761  00184E  EF2B  F00C         	goto	u1710
  3762  001852                     u1711:
  3763  001852  EFFF  F00B         	goto	l2146
  3764  001856                     u1710:
  3765  001856  0012               	return		;funcret
  3766  001858                     __end_of_LCD_String:
  3767                           	callstack 0
  3768                           
  3769 ;; *************** function _LCD_Char *****************
  3770 ;; Defined at:
  3771 ;;		line 57 in file "LCD.c"
  3772 ;; Parameters:    Size  Location     Type
  3773 ;;  dat             1    wreg     unsigned char 
  3774 ;; Auto vars:     Size  Location     Type
  3775 ;;  dat             1    1[COMRAM] unsigned char 
  3776 ;; Return value:  Size  Location     Type
  3777 ;;                  1    wreg      void 
  3778 ;; Registers used:
  3779 ;;		wreg, status,2, status,0
  3780 ;; Tracked objects:
  3781 ;;		On entry : 0/0
  3782 ;;		On exit  : 0/0
  3783 ;;		Unchanged: 0/0
  3784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3785 ;;      Params:         0       0       0       0       0       0       0       0       0
  3786 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3787 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3788 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3789 ;;Total ram usage:        2 bytes
  3790 ;; Hardware stack levels used: 1
  3791 ;; This function calls:
  3792 ;;		Nothing
  3793 ;; This function is called by:
  3794 ;;		_main
  3795 ;;		_PedirDato
  3796 ;;		_LCD_String
  3797 ;; This function uses a non-reentrant model
  3798 ;;
  3799                           
  3800                           	psect	text19
  3801  00195C                     __ptext19:
  3802                           	callstack 0
  3803  00195C                     _LCD_Char:
  3804                           	callstack 27
  3805                           
  3806                           ;incstack = 0
  3807                           ;LCD_Char@dat stored from wreg
  3808  00195C  6E02               	movwf	LCD_Char@dat^0,c
  3809  00195E                     
  3810                           ;LCD.c: 57: void LCD_Char(unsigned char dat);LCD.c: 58: {;LCD.c: 59:  LATD = (LATD & 0x0
      +                          f) | (0xF0 & dat);
  3811  00195E  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  3812  001962  0EF0               	movlw	240
  3813  001964  1601               	andwf	??_LCD_Char^0,f,c
  3814  001966  508C               	movf	140,w,c	;volatile
  3815  001968  0B0F               	andlw	15
  3816  00196A  1001               	iorwf	??_LCD_Char^0,w,c
  3817  00196C  6E8C               	movwf	140,c	;volatile
  3818  00196E                     
  3819                           ;LCD.c: 60:  LATD0 = 1;
  3820  00196E  808C               	bsf	3980,0,c	;volatile
  3821  001970                     
  3822                           ;LCD.c: 61:  LATD1 = 1;
  3823  001970  828C               	bsf	3980,1,c	;volatile
  3824  001972                     
  3825                           ;LCD.c: 62:  __nop();
  3826  001972  F000               	nop	
  3827  001974                     
  3828                           ;LCD.c: 63:  LATD1 = 0;
  3829  001974  928C               	bcf	3980,1,c	;volatile
  3830  001976                     
  3831                           ;LCD.c: 64:  _delay((unsigned long)((1)*(8000000/4000.0)));
  3832  001976  0E03               	movlw	3
  3833  001978  6E01               	movwf	??_LCD_Char^0,c
  3834  00197A  0E98               	movlw	152
  3835  00197C                     u2397:
  3836  00197C  2EE8               	decfsz	wreg,f,c
  3837  00197E  D7FE               	bra	u2397
  3838  001980  2E01               	decfsz	??_LCD_Char^0,f,c
  3839  001982  D7FC               	bra	u2397
  3840  001984                     
  3841                           ;LCD.c: 65:     LATD = (LATD & 0x0f) | (dat<<4);
  3842  001984  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  3843  001988  3A01               	swapf	??_LCD_Char^0,f,c
  3844  00198A  0EF0               	movlw	240
  3845  00198C  1601               	andwf	??_LCD_Char^0,f,c
  3846  00198E  508C               	movf	140,w,c	;volatile
  3847  001990  0B0F               	andlw	15
  3848  001992  1001               	iorwf	??_LCD_Char^0,w,c
  3849  001994  6E8C               	movwf	140,c	;volatile
  3850  001996                     
  3851                           ;LCD.c: 66:  LATD1 = 1;
  3852  001996  828C               	bsf	3980,1,c	;volatile
  3853  001998                     
  3854                           ;LCD.c: 67:  __nop();
  3855  001998  F000               	nop	
  3856  00199A                     
  3857                           ;LCD.c: 68:  LATD1 = 0;
  3858  00199A  928C               	bcf	3980,1,c	;volatile
  3859                           
  3860                           ;LCD.c: 69:  _delay((unsigned long)((3)*(8000000/4000.0)));
  3861  00199C  0E08               	movlw	8
  3862  00199E  6E01               	movwf	??_LCD_Char^0,c
  3863  0019A0  0ECA               	movlw	202
  3864  0019A2                     u2407:
  3865  0019A2  2EE8               	decfsz	wreg,f,c
  3866  0019A4  D7FE               	bra	u2407
  3867  0019A6  2E01               	decfsz	??_LCD_Char^0,f,c
  3868  0019A8  D7FC               	bra	u2407
  3869  0019AA  0012               	return		;funcret
  3870  0019AC                     __end_of_LCD_Char:
  3871                           	callstack 0
  3872                           
  3873 ;; *************** function _LCD_Clear *****************
  3874 ;; Defined at:
  3875 ;;		line 100 in file "LCD.c"
  3876 ;; Parameters:    Size  Location     Type
  3877 ;;		None
  3878 ;; Auto vars:     Size  Location     Type
  3879 ;;		None
  3880 ;; Return value:  Size  Location     Type
  3881 ;;                  1    wreg      void 
  3882 ;; Registers used:
  3883 ;;		wreg, status,2, status,0, cstack
  3884 ;; Tracked objects:
  3885 ;;		On entry : 0/0
  3886 ;;		On exit  : 0/0
  3887 ;;		Unchanged: 0/0
  3888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3889 ;;      Params:         0       0       0       0       0       0       0       0       0
  3890 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3891 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3892 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3893 ;;Total ram usage:        1 bytes
  3894 ;; Hardware stack levels used: 1
  3895 ;; Hardware stack levels required when called: 1
  3896 ;; This function calls:
  3897 ;;		_LCD_Command
  3898 ;; This function is called by:
  3899 ;;		_PedirDato
  3900 ;; This function uses a non-reentrant model
  3901 ;;
  3902                           
  3903                           	psect	text20
  3904  001BCA                     __ptext20:
  3905                           	callstack 0
  3906  001BCA                     _LCD_Clear:
  3907                           	callstack 28
  3908  001BCA                     
  3909                           ;LCD.c: 102:     LCD_Command(0x01);
  3910  001BCA  0E01               	movlw	1
  3911  001BCC  ECD6  F00C         	call	_LCD_Command
  3912  001BD0                     
  3913                           ;LCD.c: 103:     _delay((unsigned long)((3)*(8000000/4000.0)));
  3914  001BD0  0E08               	movlw	8
  3915  001BD2  6E03               	movwf	??_LCD_Clear^0,c
  3916  001BD4  0ECA               	movlw	202
  3917  001BD6                     u2417:
  3918  001BD6  2EE8               	decfsz	wreg,f,c
  3919  001BD8  D7FE               	bra	u2417
  3920  001BDA  2E03               	decfsz	??_LCD_Clear^0,f,c
  3921  001BDC  D7FC               	bra	u2417
  3922  001BDE                     
  3923                           ;LCD.c: 104:     LCD_Command (0x80);
  3924  001BDE  0E80               	movlw	128
  3925  001BE0  ECD6  F00C         	call	_LCD_Command
  3926                           
  3927                           ;LCD.c: 105:     _delay((unsigned long)((1)*(8000000/4000.0)));
  3928  001BE4  0E03               	movlw	3
  3929  001BE6  6E03               	movwf	??_LCD_Clear^0,c
  3930  001BE8  0E98               	movlw	152
  3931  001BEA                     u2427:
  3932  001BEA  2EE8               	decfsz	wreg,f,c
  3933  001BEC  D7FE               	bra	u2427
  3934  001BEE  2E03               	decfsz	??_LCD_Clear^0,f,c
  3935  001BF0  D7FC               	bra	u2427
  3936  001BF2  0012               	return		;funcret
  3937  001BF4                     __end_of_LCD_Clear:
  3938                           	callstack 0
  3939                           
  3940 ;; *************** function _LCD_Init *****************
  3941 ;; Defined at:
  3942 ;;		line 26 in file "LCD.c"
  3943 ;; Parameters:    Size  Location     Type
  3944 ;;		None
  3945 ;; Auto vars:     Size  Location     Type
  3946 ;;		None
  3947 ;; Return value:  Size  Location     Type
  3948 ;;                  1    wreg      void 
  3949 ;; Registers used:
  3950 ;;		wreg, status,2, status,0, cstack
  3951 ;; Tracked objects:
  3952 ;;		On entry : 0/0
  3953 ;;		On exit  : 0/0
  3954 ;;		Unchanged: 0/0
  3955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3956 ;;      Params:         0       0       0       0       0       0       0       0       0
  3957 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3958 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3959 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3960 ;;Total ram usage:        1 bytes
  3961 ;; Hardware stack levels used: 1
  3962 ;; Hardware stack levels required when called: 1
  3963 ;; This function calls:
  3964 ;;		_LCD_Command
  3965 ;; This function is called by:
  3966 ;;		_main
  3967 ;; This function uses a non-reentrant model
  3968 ;;
  3969                           
  3970                           	psect	text21
  3971  001B6A                     __ptext21:
  3972                           	callstack 0
  3973  001B6A                     _LCD_Init:
  3974                           	callstack 29
  3975  001B6A                     
  3976                           ;LCD.c: 28:     TRISD = 0;
  3977  001B6A  0E00               	movlw	0
  3978  001B6C  6E95               	movwf	149,c	;volatile
  3979  001B6E                     
  3980                           ;LCD.c: 29:     _delay((unsigned long)((15)*(8000000/4000.0)));
  3981  001B6E  0E27               	movlw	39
  3982  001B70  6E03               	movwf	??_LCD_Init^0,c
  3983  001B72  0EF5               	movlw	245
  3984  001B74                     u2437:
  3985  001B74  2EE8               	decfsz	wreg,f,c
  3986  001B76  D7FE               	bra	u2437
  3987  001B78  2E03               	decfsz	??_LCD_Init^0,f,c
  3988  001B7A  D7FC               	bra	u2437
  3989  001B7C  F000               	nop	
  3990  001B7E                     
  3991                           ;LCD.c: 30:     LCD_Command(0x02);
  3992  001B7E  0E02               	movlw	2
  3993  001B80  ECD6  F00C         	call	_LCD_Command
  3994  001B84                     
  3995                           ;LCD.c: 32:     LCD_Command(0x28);
  3996  001B84  0E28               	movlw	40
  3997  001B86  ECD6  F00C         	call	_LCD_Command
  3998  001B8A                     
  3999                           ;LCD.c: 34:  LCD_Command(0x01);
  4000  001B8A  0E01               	movlw	1
  4001  001B8C  ECD6  F00C         	call	_LCD_Command
  4002  001B90                     
  4003                           ;LCD.c: 35:     LCD_Command(0x0c);
  4004  001B90  0E0C               	movlw	12
  4005  001B92  ECD6  F00C         	call	_LCD_Command
  4006  001B96                     
  4007                           ;LCD.c: 36:  LCD_Command(0x06);
  4008  001B96  0E06               	movlw	6
  4009  001B98  ECD6  F00C         	call	_LCD_Command
  4010  001B9C  0012               	return		;funcret
  4011  001B9E                     __end_of_LCD_Init:
  4012                           	callstack 0
  4013                           
  4014 ;; *************** function _LCD_Command *****************
  4015 ;; Defined at:
  4016 ;;		line 39 in file "LCD.c"
  4017 ;; Parameters:    Size  Location     Type
  4018 ;;  cmd             1    wreg     unsigned char 
  4019 ;; Auto vars:     Size  Location     Type
  4020 ;;  cmd             1    1[COMRAM] unsigned char 
  4021 ;; Return value:  Size  Location     Type
  4022 ;;                  1    wreg      void 
  4023 ;; Registers used:
  4024 ;;		wreg, status,2, status,0
  4025 ;; Tracked objects:
  4026 ;;		On entry : 0/0
  4027 ;;		On exit  : 0/0
  4028 ;;		Unchanged: 0/0
  4029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4030 ;;      Params:         0       0       0       0       0       0       0       0       0
  4031 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4032 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4033 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4034 ;;Total ram usage:        2 bytes
  4035 ;; Hardware stack levels used: 1
  4036 ;; This function calls:
  4037 ;;		Nothing
  4038 ;; This function is called by:
  4039 ;;		_PedirDato
  4040 ;;		_LCD_Init
  4041 ;;		_LCD_String_xy
  4042 ;;		_LCD_Clear
  4043 ;; This function uses a non-reentrant model
  4044 ;;
  4045                           
  4046                           	psect	text22
  4047  0019AC                     __ptext22:
  4048                           	callstack 0
  4049  0019AC                     _LCD_Command:
  4050                           	callstack 28
  4051                           
  4052                           ;incstack = 0
  4053                           ;LCD_Command@cmd stored from wreg
  4054  0019AC  6E02               	movwf	LCD_Command@cmd^0,c
  4055  0019AE                     
  4056                           ;LCD.c: 39: void LCD_Command(unsigned char cmd );LCD.c: 40: {;LCD.c: 41:  LATD = (LATD &
      +                           0x0f) |(0xF0 & cmd);
  4057  0019AE  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  4058  0019B2  0EF0               	movlw	240
  4059  0019B4  1601               	andwf	??_LCD_Command^0,f,c
  4060  0019B6  508C               	movf	140,w,c	;volatile
  4061  0019B8  0B0F               	andlw	15
  4062  0019BA  1001               	iorwf	??_LCD_Command^0,w,c
  4063  0019BC  6E8C               	movwf	140,c	;volatile
  4064  0019BE                     
  4065                           ;LCD.c: 42:  LATD0 = 0;
  4066  0019BE  908C               	bcf	3980,0,c	;volatile
  4067  0019C0                     
  4068                           ;LCD.c: 43:  LATD1 = 1;
  4069  0019C0  828C               	bsf	3980,1,c	;volatile
  4070  0019C2                     
  4071                           ;LCD.c: 44:  __nop();
  4072  0019C2  F000               	nop	
  4073  0019C4                     
  4074                           ;LCD.c: 45:  LATD1 = 0;
  4075  0019C4  928C               	bcf	3980,1,c	;volatile
  4076  0019C6                     
  4077                           ;LCD.c: 46:  _delay((unsigned long)((1)*(8000000/4000.0)));
  4078  0019C6  0E03               	movlw	3
  4079  0019C8  6E01               	movwf	??_LCD_Command^0,c
  4080  0019CA  0E98               	movlw	152
  4081  0019CC                     u2447:
  4082  0019CC  2EE8               	decfsz	wreg,f,c
  4083  0019CE  D7FE               	bra	u2447
  4084  0019D0  2E01               	decfsz	??_LCD_Command^0,f,c
  4085  0019D2  D7FC               	bra	u2447
  4086  0019D4                     
  4087                           ;LCD.c: 47:     LATD = (LATD & 0x0f) | (cmd<<4);
  4088  0019D4  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  4089  0019D8  3A01               	swapf	??_LCD_Command^0,f,c
  4090  0019DA  0EF0               	movlw	240
  4091  0019DC  1601               	andwf	??_LCD_Command^0,f,c
  4092  0019DE  508C               	movf	140,w,c	;volatile
  4093  0019E0  0B0F               	andlw	15
  4094  0019E2  1001               	iorwf	??_LCD_Command^0,w,c
  4095  0019E4  6E8C               	movwf	140,c	;volatile
  4096  0019E6                     
  4097                           ;LCD.c: 48:  LATD1 = 1;
  4098  0019E6  828C               	bsf	3980,1,c	;volatile
  4099  0019E8                     
  4100                           ;LCD.c: 49:  __nop();
  4101  0019E8  F000               	nop	
  4102  0019EA                     
  4103                           ;LCD.c: 50:  LATD1 = 0;
  4104  0019EA  928C               	bcf	3980,1,c	;volatile
  4105                           
  4106                           ;LCD.c: 51:  _delay((unsigned long)((3)*(8000000/4000.0)));
  4107  0019EC  0E08               	movlw	8
  4108  0019EE  6E01               	movwf	??_LCD_Command^0,c
  4109  0019F0  0ECA               	movlw	202
  4110  0019F2                     u2457:
  4111  0019F2  2EE8               	decfsz	wreg,f,c
  4112  0019F4  D7FE               	bra	u2457
  4113  0019F6  2E01               	decfsz	??_LCD_Command^0,f,c
  4114  0019F8  D7FC               	bra	u2457
  4115  0019FA  0012               	return		;funcret
  4116  0019FC                     __end_of_LCD_Command:
  4117                           	callstack 0
  4118                           
  4119 ;; *************** function _DatosSensorTH *****************
  4120 ;; Defined at:
  4121 ;;		line 142 in file "Main_Invernadero.c"
  4122 ;; Parameters:    Size  Location     Type
  4123 ;;  Datos           2    2[COMRAM] PTR unsigned char 
  4124 ;;		 -> main@Datos(2), 
  4125 ;; Auto vars:     Size  Location     Type
  4126 ;;  T_Integral      1    5[COMRAM] unsigned char 
  4127 ;;  RH_Integral     1    4[COMRAM] unsigned char 
  4128 ;;  Checksum        1    0        unsigned char 
  4129 ;;  T_Decimal       1    0        unsigned char 
  4130 ;;  RH_Decimal      1    0        unsigned char 
  4131 ;; Return value:  Size  Location     Type
  4132 ;;                  1    wreg      void 
  4133 ;; Registers used:
  4134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4135 ;; Tracked objects:
  4136 ;;		On entry : 0/0
  4137 ;;		On exit  : 0/0
  4138 ;;		Unchanged: 0/0
  4139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4140 ;;      Params:         2       0       0       0       0       0       0       0       0
  4141 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4142 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4143 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4144 ;;Total ram usage:        4 bytes
  4145 ;; Hardware stack levels used: 1
  4146 ;; Hardware stack levels required when called: 1
  4147 ;; This function calls:
  4148 ;;		_DHT11_CheckResponse
  4149 ;;		_DHT11_ReadData
  4150 ;;		_DHT11_Start
  4151 ;; This function is called by:
  4152 ;;		_main
  4153 ;; This function uses a non-reentrant model
  4154 ;;
  4155                           
  4156                           	psect	text23
  4157  001AC0                     __ptext23:
  4158                           	callstack 0
  4159  001AC0                     _DatosSensorTH:
  4160                           	callstack 29
  4161  001AC0                     
  4162                           ;Main_Invernadero.c: 143:          char RH_Decimal,RH_Integral,T_Decimal,T_Integral;;Mai
      +                          n_Invernadero.c: 144:          char Checksum;;Main_Invernadero.c: 145:          DHT11_St
      +                          art();
  4163  001AC0  EC1D  F00E         	call	_DHT11_Start	;wreg free
  4164  001AC4                     
  4165                           ;Main_Invernadero.c: 146:          DHT11_CheckResponse();
  4166  001AC4  ECCF  F00D         	call	_DHT11_CheckResponse	;wreg free
  4167  001AC8                     
  4168                           ;Main_Invernadero.c: 149:          RH_Integral = DHT11_ReadData();
  4169  001AC8  EC2C  F00C         	call	_DHT11_ReadData	;wreg free
  4170  001ACC  6E05               	movwf	DatosSensorTH@RH_Integral^0,c
  4171  001ACE  EC2C  F00C         	call	_DHT11_ReadData	;wreg free
  4172  001AD2                     
  4173                           ;Main_Invernadero.c: 151:          T_Integral = DHT11_ReadData();
  4174  001AD2  EC2C  F00C         	call	_DHT11_ReadData	;wreg free
  4175  001AD6  6E06               	movwf	DatosSensorTH@T_Integral^0,c
  4176  001AD8  EC2C  F00C         	call	_DHT11_ReadData	;wreg free
  4177  001ADC  EC2C  F00C         	call	_DHT11_ReadData	;wreg free
  4178  001AE0                     
  4179                           ;Main_Invernadero.c: 155:          Datos[0]=T_Integral;
  4180  001AE0  C003  FFD9         	movff	DatosSensorTH@Datos,fsr2l
  4181  001AE4  C004  FFDA         	movff	DatosSensorTH@Datos+1,fsr2h
  4182  001AE8  C006  FFDF         	movff	DatosSensorTH@T_Integral,indf2
  4183  001AEC                     
  4184                           ;Main_Invernadero.c: 156:          Datos[1]=RH_Integral;
  4185  001AEC  EE20 F001          	lfsr	2,1
  4186  001AF0  5003               	movf	DatosSensorTH@Datos^0,w,c
  4187  001AF2  26D9               	addwf	fsr2l,f,c
  4188  001AF4  5004               	movf	(DatosSensorTH@Datos+1)^0,w,c
  4189  001AF6  22DA               	addwfc	fsr2h,f,c
  4190  001AF8  C005  FFDF         	movff	DatosSensorTH@RH_Integral,indf2
  4191  001AFC  0012               	return		;funcret
  4192  001AFE                     __end_of_DatosSensorTH:
  4193                           	callstack 0
  4194                           
  4195 ;; *************** function _DHT11_Start *****************
  4196 ;; Defined at:
  4197 ;;		line 22 in file "DHT11.c"
  4198 ;; Parameters:    Size  Location     Type
  4199 ;;		None
  4200 ;; Auto vars:     Size  Location     Type
  4201 ;;		None
  4202 ;; Return value:  Size  Location     Type
  4203 ;;                  1    wreg      void 
  4204 ;; Registers used:
  4205 ;;		wreg
  4206 ;; Tracked objects:
  4207 ;;		On entry : 0/0
  4208 ;;		On exit  : 0/0
  4209 ;;		Unchanged: 0/0
  4210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4211 ;;      Params:         0       0       0       0       0       0       0       0       0
  4212 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4213 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4214 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4215 ;;Total ram usage:        1 bytes
  4216 ;; Hardware stack levels used: 1
  4217 ;; This function calls:
  4218 ;;		Nothing
  4219 ;; This function is called by:
  4220 ;;		_DatosSensorTH
  4221 ;; This function uses a non-reentrant model
  4222 ;;
  4223                           
  4224                           	psect	text24
  4225  001C3A                     __ptext24:
  4226                           	callstack 0
  4227  001C3A                     _DHT11_Start:
  4228                           	callstack 29
  4229  001C3A                     
  4230                           ;DHT11.c: 24:     TRISAbits.RA0 = 0;
  4231  001C3A  9092               	bcf	146,0,c	;volatile
  4232                           
  4233                           ;DHT11.c: 25:     LATA0 = 0;
  4234  001C3C  9089               	bcf	3977,0,c	;volatile
  4235  001C3E                     
  4236                           ;DHT11.c: 26:     _delay((unsigned long)((18)*(8000000/4000.0)));
  4237  001C3E  0E2F               	movlw	47
  4238  001C40  6E01               	movwf	??_DHT11_Start^0,c
  4239  001C42  0EC0               	movlw	192
  4240  001C44                     u2467:
  4241  001C44  2EE8               	decfsz	wreg,f,c
  4242  001C46  D7FE               	bra	u2467
  4243  001C48  2E01               	decfsz	??_DHT11_Start^0,f,c
  4244  001C4A  D7FC               	bra	u2467
  4245  001C4C                     
  4246                           ;DHT11.c: 27:     LATA0 = 1;
  4247  001C4C  8089               	bsf	3977,0,c	;volatile
  4248                           
  4249                           ;DHT11.c: 28:     _delay((unsigned long)((20)*(8000000/4000000.0)));
  4250  001C4E  0E0D               	movlw	13
  4251  001C50                     u2477:
  4252  001C50  2EE8               	decfsz	wreg,f,c
  4253  001C52  D7FE               	bra	u2477
  4254  001C54  F000               	nop	
  4255  001C56                     
  4256                           ;DHT11.c: 29:     TRISAbits.RA0 = 1;
  4257  001C56  8092               	bsf	146,0,c	;volatile
  4258  001C58  0012               	return		;funcret
  4259  001C5A                     __end_of_DHT11_Start:
  4260                           	callstack 0
  4261                           
  4262 ;; *************** function _DHT11_ReadData *****************
  4263 ;; Defined at:
  4264 ;;		line 6 in file "DHT11.c"
  4265 ;; Parameters:    Size  Location     Type
  4266 ;;		None
  4267 ;; Auto vars:     Size  Location     Type
  4268 ;;  data            1    1[COMRAM] unsigned char 
  4269 ;;  i               1    0[COMRAM] unsigned char 
  4270 ;; Return value:  Size  Location     Type
  4271 ;;                  1    wreg      unsigned char 
  4272 ;; Registers used:
  4273 ;;		wreg, status,2, status,0
  4274 ;; Tracked objects:
  4275 ;;		On entry : 0/0
  4276 ;;		On exit  : 0/0
  4277 ;;		Unchanged: 0/0
  4278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4279 ;;      Params:         0       0       0       0       0       0       0       0       0
  4280 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4281 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4282 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4283 ;;Total ram usage:        2 bytes
  4284 ;; Hardware stack levels used: 1
  4285 ;; This function calls:
  4286 ;;		Nothing
  4287 ;; This function is called by:
  4288 ;;		_DatosSensorTH
  4289 ;; This function uses a non-reentrant model
  4290 ;;
  4291                           
  4292                           	psect	text25
  4293  001858                     __ptext25:
  4294                           	callstack 0
  4295  001858                     _DHT11_ReadData:
  4296                           	callstack 29
  4297  001858                     
  4298                           ;DHT11.c: 8:   char i,data = 0;
  4299  001858  0E00               	movlw	0
  4300  00185A  6E02               	movwf	DHT11_ReadData@data^0,c
  4301                           
  4302                           ;DHT11.c: 9:     for(i=0;i<8;i++)
  4303  00185C  0E00               	movlw	0
  4304  00185E  6E01               	movwf	DHT11_ReadData@i^0,c
  4305  001860                     l364:
  4306  001860  A080               	btfss	128,0,c	;volatile
  4307  001862  EF35  F00C         	goto	u1991
  4308  001866  EF37  F00C         	goto	u1990
  4309  00186A                     u1991:
  4310  00186A  EF30  F00C         	goto	l364
  4311  00186E                     u1990:
  4312  00186E                     
  4313                           ;DHT11.c: 12:         _delay((unsigned long)((30)*(8000000/4000000.0)));
  4314  00186E  0E14               	movlw	20
  4315  001870                     u2487:
  4316  001870  2EE8               	decfsz	wreg,f,c
  4317  001872  D7FE               	bra	u2487
  4318  001874                     
  4319                           ;DHT11.c: 13:         if(PORTAbits.RA0 & 1)
  4320  001874  A080               	btfss	128,0,c	;volatile
  4321  001876  EF3F  F00C         	goto	u2001
  4322  00187A  EF41  F00C         	goto	u2000
  4323  00187E                     u2001:
  4324  00187E  EF45  F00C         	goto	l2368
  4325  001882                     u2000:
  4326  001882                     
  4327                           ;DHT11.c: 14:           data = ((data<<1) | 1);
  4328  001882  80D8               	bsf	status,0,c
  4329  001884  3602               	rlcf	DHT11_ReadData@data^0,f,c
  4330  001886  EF48  F00C         	goto	l369
  4331  00188A                     l2368:
  4332                           
  4333                           ;DHT11.c: 16:           data = (data<<1);
  4334  00188A  5002               	movf	DHT11_ReadData@data^0,w,c
  4335  00188C  2402               	addwf	DHT11_ReadData@data^0,w,c
  4336  00188E  6E02               	movwf	DHT11_ReadData@data^0,c
  4337  001890                     l369:
  4338  001890  B080               	btfsc	128,0,c	;volatile
  4339  001892  EF4D  F00C         	goto	u2011
  4340  001896  EF4F  F00C         	goto	u2010
  4341  00189A                     u2011:
  4342  00189A  EF48  F00C         	goto	l369
  4343  00189E                     u2010:
  4344  00189E                     
  4345                           ;DHT11.c: 18:     }
  4346  00189E  2A01               	incf	DHT11_ReadData@i^0,f,c
  4347  0018A0  0E07               	movlw	7
  4348  0018A2  6401               	cpfsgt	DHT11_ReadData@i^0,c
  4349  0018A4  EF56  F00C         	goto	u2021
  4350  0018A8  EF58  F00C         	goto	u2020
  4351  0018AC                     u2021:
  4352  0018AC  EF30  F00C         	goto	l364
  4353  0018B0                     u2020:
  4354  0018B0                     
  4355                           ;DHT11.c: 19:   return data;
  4356  0018B0  5002               	movf	DHT11_ReadData@data^0,w,c
  4357  0018B2  0012               	return		;funcret
  4358  0018B4                     __end_of_DHT11_ReadData:
  4359                           	callstack 0
  4360                           
  4361 ;; *************** function _DHT11_CheckResponse *****************
  4362 ;; Defined at:
  4363 ;;		line 35 in file "DHT11.c"
  4364 ;; Parameters:    Size  Location     Type
  4365 ;;		None
  4366 ;; Auto vars:     Size  Location     Type
  4367 ;;		None
  4368 ;; Return value:  Size  Location     Type
  4369 ;;                  1    wreg      void 
  4370 ;; Registers used:
  4371 ;;		None
  4372 ;; Tracked objects:
  4373 ;;		On entry : 0/0
  4374 ;;		On exit  : 0/0
  4375 ;;		Unchanged: 0/0
  4376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4377 ;;      Params:         0       0       0       0       0       0       0       0       0
  4378 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4379 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4380 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4381 ;;Total ram usage:        0 bytes
  4382 ;; Hardware stack levels used: 1
  4383 ;; This function calls:
  4384 ;;		Nothing
  4385 ;; This function is called by:
  4386 ;;		_DatosSensorTH
  4387 ;; This function uses a non-reentrant model
  4388 ;;
  4389                           
  4390                           	psect	text26
  4391  001B9E                     __ptext26:
  4392                           	callstack 0
  4393  001B9E                     _DHT11_CheckResponse:
  4394                           	callstack 29
  4395  001B9E                     l378:
  4396  001B9E  B080               	btfsc	128,0,c	;volatile
  4397  001BA0  EFD4  F00D         	goto	u1961
  4398  001BA4  EFD6  F00D         	goto	u1960
  4399  001BA8                     u1961:
  4400  001BA8  EFCF  F00D         	goto	l378
  4401  001BAC                     u1960:
  4402  001BAC                     l381:
  4403  001BAC  A080               	btfss	128,0,c	;volatile
  4404  001BAE  EFDB  F00D         	goto	u1971
  4405  001BB2  EFDD  F00D         	goto	u1970
  4406  001BB6                     u1971:
  4407  001BB6  EFD6  F00D         	goto	l381
  4408  001BBA                     u1970:
  4409  001BBA                     l384:
  4410  001BBA  B080               	btfsc	128,0,c	;volatile
  4411  001BBC  EFE2  F00D         	goto	u1981
  4412  001BC0  EFE4  F00D         	goto	u1980
  4413  001BC4                     u1981:
  4414  001BC4  EFDD  F00D         	goto	l384
  4415  001BC8                     u1980:
  4416  001BC8  0012               	return		;funcret
  4417  001BCA                     __end_of_DHT11_CheckResponse:
  4418                           	callstack 0
  4419                           
  4420 ;; *************** function _CompararTemperatura *****************
  4421 ;; Defined at:
  4422 ;;		line 113 in file "Main_Invernadero.c"
  4423 ;; Parameters:    Size  Location     Type
  4424 ;;  TempActual      2    2[COMRAM] PTR unsigned char 
  4425 ;;		 -> main@Datos(2), 
  4426 ;;  HumActual       2    4[COMRAM] PTR unsigned char 
  4427 ;;		 -> main@Datos(2), 
  4428 ;;  TempDigitada    2    6[COMRAM] int 
  4429 ;;  HumDigitada     2    8[COMRAM] int 
  4430 ;; Auto vars:     Size  Location     Type
  4431 ;;  HumedadAdecu    1   18[COMRAM] _Bool 
  4432 ;;  TemperaturaA    1   17[COMRAM] _Bool 
  4433 ;; Return value:  Size  Location     Type
  4434 ;;                  1    wreg      void 
  4435 ;; Registers used:
  4436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4437 ;; Tracked objects:
  4438 ;;		On entry : 0/0
  4439 ;;		On exit  : 0/0
  4440 ;;		Unchanged: 0/0
  4441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4442 ;;      Params:         8       0       0       0       0       0       0       0       0
  4443 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4444 ;;      Temps:          7       0       0       0       0       0       0       0       0
  4445 ;;      Totals:        17       0       0       0       0       0       0       0       0
  4446 ;;Total ram usage:       17 bytes
  4447 ;; Hardware stack levels used: 1
  4448 ;; Hardware stack levels required when called: 2
  4449 ;; This function calls:
  4450 ;;		_PrenderLed
  4451 ;; This function is called by:
  4452 ;;		_main
  4453 ;; This function uses a non-reentrant model
  4454 ;;
  4455                           
  4456                           	psect	text27
  4457  001400                     __ptext27:
  4458                           	callstack 0
  4459  001400                     _CompararTemperatura:
  4460                           	callstack 28
  4461  001400                     
  4462                           ;Main_Invernadero.c: 114:     _Bool TemperaturaAdecuada= 1;
  4463  001400  0E01               	movlw	1
  4464  001402  6E12               	movwf	CompararTemperatura@TemperaturaAdecuada^0,c
  4465                           
  4466                           ;Main_Invernadero.c: 115:     _Bool HumedadAdecuada =1;
  4467  001404  0E01               	movlw	1
  4468  001406  6E13               	movwf	CompararTemperatura@HumedadAdecuada^0,c
  4469  001408                     
  4470                           ;Main_Invernadero.c: 116:     if(*TempActual<TempDigitada-2 || *TempActual >TempDigitada
      +                          +2){
  4471  001408  0EFE               	movlw	254
  4472  00140A  6E0B               	movwf	??_CompararTemperatura^0,c
  4473  00140C  0EFF               	movlw	255
  4474  00140E  6E0C               	movwf	(??_CompararTemperatura+1)^0,c
  4475  001410  C007  F00D         	movff	CompararTemperatura@TempDigitada,??_CompararTemperatura+2
  4476  001414  C008  F00E         	movff	CompararTemperatura@TempDigitada+1,??_CompararTemperatura+3
  4477  001418  500B               	movf	??_CompararTemperatura^0,w,c
  4478  00141A  260D               	addwf	(??_CompararTemperatura+2)^0,f,c
  4479  00141C  500C               	movf	(??_CompararTemperatura+1)^0,w,c
  4480  00141E  220E               	addwfc	(??_CompararTemperatura+3)^0,f,c
  4481  001420  C003  FFD9         	movff	CompararTemperatura@TempActual,fsr2l
  4482  001424  C004  FFDA         	movff	CompararTemperatura@TempActual+1,fsr2h
  4483  001428  50DF               	movf	indf2,w,c
  4484  00142A  6E0F               	movwf	(??_CompararTemperatura+4)^0,c
  4485  00142C  6A10               	clrf	(??_CompararTemperatura+5)^0,c
  4486  00142E  500D               	movf	(??_CompararTemperatura+2)^0,w,c
  4487  001430  5C0F               	subwf	(??_CompararTemperatura+4)^0,w,c
  4488  001432  5010               	movf	(??_CompararTemperatura+5)^0,w,c
  4489  001434  0A80               	xorlw	128
  4490  001436  6E11               	movwf	(??_CompararTemperatura+6)^0,c
  4491  001438  500E               	movf	(??_CompararTemperatura+3)^0,w,c
  4492  00143A  0A80               	xorlw	128
  4493  00143C  5811               	subwfb	(??_CompararTemperatura+6)^0,w,c
  4494  00143E  A0D8               	btfss	status,0,c
  4495  001440  EF24  F00A         	goto	u2051
  4496  001444  EF26  F00A         	goto	u2050
  4497  001448                     u2051:
  4498  001448  EF42  F00A         	goto	l2470
  4499  00144C                     u2050:
  4500  00144C  C003  FFD9         	movff	CompararTemperatura@TempActual,fsr2l
  4501  001450  C004  FFDA         	movff	CompararTemperatura@TempActual+1,fsr2h
  4502  001454  50DF               	movf	indf2,w,c
  4503  001456  6E0B               	movwf	??_CompararTemperatura^0,c
  4504  001458  6A0C               	clrf	(??_CompararTemperatura+1)^0,c
  4505  00145A  0E02               	movlw	2
  4506  00145C  2407               	addwf	CompararTemperatura@TempDigitada^0,w,c
  4507  00145E  6E0D               	movwf	(??_CompararTemperatura+2)^0,c
  4508  001460  0E00               	movlw	0
  4509  001462  2008               	addwfc	(CompararTemperatura@TempDigitada+1)^0,w,c
  4510  001464  6E0E               	movwf	(??_CompararTemperatura+3)^0,c
  4511  001466  500B               	movf	??_CompararTemperatura^0,w,c
  4512  001468  5C0D               	subwf	(??_CompararTemperatura+2)^0,w,c
  4513  00146A  500E               	movf	(??_CompararTemperatura+3)^0,w,c
  4514  00146C  0A80               	xorlw	128
  4515  00146E  6E0F               	movwf	(??_CompararTemperatura+4)^0,c
  4516  001470  500C               	movf	(??_CompararTemperatura+1)^0,w,c
  4517  001472  0A80               	xorlw	128
  4518  001474  580F               	subwfb	(??_CompararTemperatura+4)^0,w,c
  4519  001476  B0D8               	btfsc	status,0,c
  4520  001478  EF40  F00A         	goto	u2061
  4521  00147C  EF42  F00A         	goto	u2060
  4522  001480                     u2061:
  4523  001480  EF44  F00A         	goto	l2472
  4524  001484                     u2060:
  4525  001484                     l2470:
  4526                           
  4527                           ;Main_Invernadero.c: 117:            TemperaturaAdecuada=0;
  4528  001484  0E00               	movlw	0
  4529  001486  6E12               	movwf	CompararTemperatura@TemperaturaAdecuada^0,c
  4530  001488                     l2472:
  4531                           
  4532                           ;Main_Invernadero.c: 119:     if(*HumActual<HumDigitada-2 || *HumActual>HumDigitada+2){
  4533  001488  0EFE               	movlw	254
  4534  00148A  6E0B               	movwf	??_CompararTemperatura^0,c
  4535  00148C  0EFF               	movlw	255
  4536  00148E  6E0C               	movwf	(??_CompararTemperatura+1)^0,c
  4537  001490  C009  F00D         	movff	CompararTemperatura@HumDigitada,??_CompararTemperatura+2
  4538  001494  C00A  F00E         	movff	CompararTemperatura@HumDigitada+1,??_CompararTemperatura+3
  4539  001498  500B               	movf	??_CompararTemperatura^0,w,c
  4540  00149A  260D               	addwf	(??_CompararTemperatura+2)^0,f,c
  4541  00149C  500C               	movf	(??_CompararTemperatura+1)^0,w,c
  4542  00149E  220E               	addwfc	(??_CompararTemperatura+3)^0,f,c
  4543  0014A0  C005  FFD9         	movff	CompararTemperatura@HumActual,fsr2l
  4544  0014A4  C006  FFDA         	movff	CompararTemperatura@HumActual+1,fsr2h
  4545  0014A8  50DF               	movf	indf2,w,c
  4546  0014AA  6E0F               	movwf	(??_CompararTemperatura+4)^0,c
  4547  0014AC  6A10               	clrf	(??_CompararTemperatura+5)^0,c
  4548  0014AE  500D               	movf	(??_CompararTemperatura+2)^0,w,c
  4549  0014B0  5C0F               	subwf	(??_CompararTemperatura+4)^0,w,c
  4550  0014B2  5010               	movf	(??_CompararTemperatura+5)^0,w,c
  4551  0014B4  0A80               	xorlw	128
  4552  0014B6  6E11               	movwf	(??_CompararTemperatura+6)^0,c
  4553  0014B8  500E               	movf	(??_CompararTemperatura+3)^0,w,c
  4554  0014BA  0A80               	xorlw	128
  4555  0014BC  5811               	subwfb	(??_CompararTemperatura+6)^0,w,c
  4556  0014BE  A0D8               	btfss	status,0,c
  4557  0014C0  EF64  F00A         	goto	u2071
  4558  0014C4  EF66  F00A         	goto	u2070
  4559  0014C8                     u2071:
  4560  0014C8  EF82  F00A         	goto	l2476
  4561  0014CC                     u2070:
  4562  0014CC  C005  FFD9         	movff	CompararTemperatura@HumActual,fsr2l
  4563  0014D0  C006  FFDA         	movff	CompararTemperatura@HumActual+1,fsr2h
  4564  0014D4  50DF               	movf	indf2,w,c
  4565  0014D6  6E0B               	movwf	??_CompararTemperatura^0,c
  4566  0014D8  6A0C               	clrf	(??_CompararTemperatura+1)^0,c
  4567  0014DA  0E02               	movlw	2
  4568  0014DC  2409               	addwf	CompararTemperatura@HumDigitada^0,w,c
  4569  0014DE  6E0D               	movwf	(??_CompararTemperatura+2)^0,c
  4570  0014E0  0E00               	movlw	0
  4571  0014E2  200A               	addwfc	(CompararTemperatura@HumDigitada+1)^0,w,c
  4572  0014E4  6E0E               	movwf	(??_CompararTemperatura+3)^0,c
  4573  0014E6  500B               	movf	??_CompararTemperatura^0,w,c
  4574  0014E8  5C0D               	subwf	(??_CompararTemperatura+2)^0,w,c
  4575  0014EA  500E               	movf	(??_CompararTemperatura+3)^0,w,c
  4576  0014EC  0A80               	xorlw	128
  4577  0014EE  6E0F               	movwf	(??_CompararTemperatura+4)^0,c
  4578  0014F0  500C               	movf	(??_CompararTemperatura+1)^0,w,c
  4579  0014F2  0A80               	xorlw	128
  4580  0014F4  580F               	subwfb	(??_CompararTemperatura+4)^0,w,c
  4581  0014F6  B0D8               	btfsc	status,0,c
  4582  0014F8  EF80  F00A         	goto	u2081
  4583  0014FC  EF82  F00A         	goto	u2080
  4584  001500                     u2081:
  4585  001500  EF84  F00A         	goto	l2478
  4586  001504                     u2080:
  4587  001504                     l2476:
  4588                           
  4589                           ;Main_Invernadero.c: 120:         HumedadAdecuada=0;
  4590  001504  0E00               	movlw	0
  4591  001506  6E13               	movwf	CompararTemperatura@HumedadAdecuada^0,c
  4592  001508                     l2478:
  4593                           
  4594                           ;Main_Invernadero.c: 123:    PrenderLed(TemperaturaAdecuada,HumedadAdecuada);
  4595  001508  C013  F001         	movff	CompararTemperatura@HumedadAdecuada,PrenderLed@HumedadAdecuada
  4596  00150C  5012               	movf	CompararTemperatura@TemperaturaAdecuada^0,w,c
  4597  00150E  EC5A  F00C         	call	_PrenderLed
  4598  001512  0012               	return		;funcret
  4599  001514                     __end_of_CompararTemperatura:
  4600                           	callstack 0
  4601                           
  4602 ;; *************** function _PrenderLed *****************
  4603 ;; Defined at:
  4604 ;;		line 86 in file "Main_Invernadero.c"
  4605 ;; Parameters:    Size  Location     Type
  4606 ;;  TemperaturaA    1    wreg     _Bool 
  4607 ;;  HumedadAdecu    1    0[COMRAM] _Bool 
  4608 ;; Auto vars:     Size  Location     Type
  4609 ;;  TemperaturaA    1    1[COMRAM] _Bool 
  4610 ;; Return value:  Size  Location     Type
  4611 ;;                  1    wreg      void 
  4612 ;; Registers used:
  4613 ;;		wreg, status,2, cstack
  4614 ;; Tracked objects:
  4615 ;;		On entry : 0/0
  4616 ;;		On exit  : 0/0
  4617 ;;		Unchanged: 0/0
  4618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4619 ;;      Params:         1       0       0       0       0       0       0       0       0
  4620 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4621 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4622 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4623 ;;Total ram usage:        2 bytes
  4624 ;; Hardware stack levels used: 1
  4625 ;; Hardware stack levels required when called: 1
  4626 ;; This function calls:
  4627 ;;		_InicializarLeds
  4628 ;; This function is called by:
  4629 ;;		_CompararTemperatura
  4630 ;; This function uses a non-reentrant model
  4631 ;;
  4632                           
  4633                           	psect	text28
  4634  0018B4                     __ptext28:
  4635                           	callstack 0
  4636  0018B4                     _PrenderLed:
  4637                           	callstack 28
  4638                           
  4639                           ;incstack = 0
  4640                           ;PrenderLed@TemperaturaAdecuada stored from wreg
  4641  0018B4  6E02               	movwf	PrenderLed@TemperaturaAdecuada^0,c
  4642  0018B6                     
  4643                           ;Main_Invernadero.c: 87:     InicializarLeds();
  4644  0018B6  EC2D  F00E         	call	_InicializarLeds	;wreg free
  4645  0018BA                     
  4646                           ;Main_Invernadero.c: 88:     if(TemperaturaAdecuada==0 && HumedadAdecuada==0){
  4647  0018BA  5002               	movf	PrenderLed@TemperaturaAdecuada^0,w,c
  4648  0018BC  A4D8               	btfss	status,2,c
  4649  0018BE  EF63  F00C         	goto	u1771
  4650  0018C2  EF65  F00C         	goto	u1770
  4651  0018C6                     u1771:
  4652  0018C6  EF70  F00C         	goto	l2236
  4653  0018CA                     u1770:
  4654  0018CA  5001               	movf	PrenderLed@HumedadAdecuada^0,w,c
  4655  0018CC  A4D8               	btfss	status,2,c
  4656  0018CE  EF6B  F00C         	goto	u1781
  4657  0018D2  EF6D  F00C         	goto	u1780
  4658  0018D6                     u1781:
  4659  0018D6  EF70  F00C         	goto	l2236
  4660  0018DA                     u1780:
  4661  0018DA                     
  4662                           ;Main_Invernadero.c: 89:        LATE0=1;
  4663  0018DA  808D               	bsf	3981,0,c	;volatile
  4664                           
  4665                           ;Main_Invernadero.c: 90:     }else if(TemperaturaAdecuada==0 || HumedadAdecuada==0){
  4666  0018DC  EF84  F00C         	goto	l71
  4667  0018E0                     l2236:
  4668  0018E0  5002               	movf	PrenderLed@TemperaturaAdecuada^0,w,c
  4669  0018E2  B4D8               	btfsc	status,2,c
  4670  0018E4  EF76  F00C         	goto	u1791
  4671  0018E8  EF78  F00C         	goto	u1790
  4672  0018EC                     u1791:
  4673  0018EC  EF80  F00C         	goto	l69
  4674  0018F0                     u1790:
  4675  0018F0  5001               	movf	PrenderLed@HumedadAdecuada^0,w,c
  4676  0018F2  A4D8               	btfss	status,2,c
  4677  0018F4  EF7E  F00C         	goto	u1801
  4678  0018F8  EF80  F00C         	goto	u1800
  4679  0018FC                     u1801:
  4680  0018FC  EF83  F00C         	goto	l67
  4681  001900                     u1800:
  4682  001900                     l69:
  4683                           
  4684                           ;Main_Invernadero.c: 91:         LATE1=1;
  4685  001900  828D               	bsf	3981,1,c	;volatile
  4686                           
  4687                           ;Main_Invernadero.c: 92:     }else{
  4688  001902  EF84  F00C         	goto	l71
  4689  001906                     l67:
  4690                           
  4691                           ;Main_Invernadero.c: 93:         LATE2=1;
  4692  001906  848D               	bsf	3981,2,c	;volatile
  4693  001908                     l71:
  4694  001908  0012               	return		;funcret
  4695  00190A                     __end_of_PrenderLed:
  4696                           	callstack 0
  4697                           
  4698 ;; *************** function _InicializarLeds *****************
  4699 ;; Defined at:
  4700 ;;		line 158 in file "Main_Invernadero.c"
  4701 ;; Parameters:    Size  Location     Type
  4702 ;;		None
  4703 ;; Auto vars:     Size  Location     Type
  4704 ;;		None
  4705 ;; Return value:  Size  Location     Type
  4706 ;;                  1    wreg      void 
  4707 ;; Registers used:
  4708 ;;		None
  4709 ;; Tracked objects:
  4710 ;;		On entry : 0/0
  4711 ;;		On exit  : 0/0
  4712 ;;		Unchanged: 0/0
  4713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4714 ;;      Params:         0       0       0       0       0       0       0       0       0
  4715 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4716 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4717 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4718 ;;Total ram usage:        0 bytes
  4719 ;; Hardware stack levels used: 1
  4720 ;; This function calls:
  4721 ;;		Nothing
  4722 ;; This function is called by:
  4723 ;;		_main
  4724 ;;		_PrenderLed
  4725 ;; This function uses a non-reentrant model
  4726 ;;
  4727                           
  4728                           	psect	text29
  4729  001C5A                     __ptext29:
  4730                           	callstack 0
  4731  001C5A                     _InicializarLeds:
  4732                           	callstack 30
  4733  001C5A                     
  4734                           ;Main_Invernadero.c: 159:     LATE1=0;
  4735  001C5A  928D               	bcf	3981,1,c	;volatile
  4736                           
  4737                           ;Main_Invernadero.c: 160:     LATE0=0;
  4738  001C5C  908D               	bcf	3981,0,c	;volatile
  4739                           
  4740                           ;Main_Invernadero.c: 161:     LATE2=0;
  4741  001C5E  948D               	bcf	3981,2,c	;volatile
  4742  001C60  0012               	return		;funcret
  4743  001C62                     __end_of_InicializarLeds:
  4744                           	callstack 0
  4745                           
  4746                           	psect	rparam
  4747  0000                     
  4748                           	psect	idloc
  4749                           
  4750                           ;Config register IDLOC0 @ 0x200000
  4751                           ;	unspecified, using default values
  4752  200000                     	org	2097152
  4753  200000  FF                 	db	255
  4754                           
  4755                           ;Config register IDLOC1 @ 0x200001
  4756                           ;	unspecified, using default values
  4757  200001                     	org	2097153
  4758  200001  FF                 	db	255
  4759                           
  4760                           ;Config register IDLOC2 @ 0x200002
  4761                           ;	unspecified, using default values
  4762  200002                     	org	2097154
  4763  200002  FF                 	db	255
  4764                           
  4765                           ;Config register IDLOC3 @ 0x200003
  4766                           ;	unspecified, using default values
  4767  200003                     	org	2097155
  4768  200003  FF                 	db	255
  4769                           
  4770                           ;Config register IDLOC4 @ 0x200004
  4771                           ;	unspecified, using default values
  4772  200004                     	org	2097156
  4773  200004  FF                 	db	255
  4774                           
  4775                           ;Config register IDLOC5 @ 0x200005
  4776                           ;	unspecified, using default values
  4777  200005                     	org	2097157
  4778  200005  FF                 	db	255
  4779                           
  4780                           ;Config register IDLOC6 @ 0x200006
  4781                           ;	unspecified, using default values
  4782  200006                     	org	2097158
  4783  200006  FF                 	db	255
  4784                           
  4785                           ;Config register IDLOC7 @ 0x200007
  4786                           ;	unspecified, using default values
  4787  200007                     	org	2097159
  4788  200007  FF                 	db	255
  4789                           
  4790                           	psect	config
  4791                           
  4792                           ;Config register CONFIG1L @ 0x300000
  4793                           ;	unspecified, using default values
  4794                           ;	PLL Prescaler Selection bits
  4795                           ;	PLLDIV = 0x0, unprogrammed default
  4796                           ;	System Clock Postscaler Selection bits
  4797                           ;	CPUDIV = 0x0, unprogrammed default
  4798                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4799                           ;	USBDIV = 0x0, unprogrammed default
  4800  300000                     	org	3145728
  4801  300000  00                 	db	0
  4802                           
  4803                           ;Config register CONFIG1H @ 0x300001
  4804                           ;	Oscillator Selection bits
  4805                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  4806                           ;	Fail-Safe Clock Monitor Enable bit
  4807                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4808                           ;	Internal/External Oscillator Switchover bit
  4809                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4810  300001                     	org	3145729
  4811  300001  09                 	db	9
  4812                           
  4813                           ;Config register CONFIG2L @ 0x300002
  4814                           ;	Power-up Timer Enable bit
  4815                           ;	PWRT = OFF, PWRT disabled
  4816                           ;	Brown-out Reset Enable bits
  4817                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4818                           ;	Brown-out Reset Voltage bits
  4819                           ;	BORV = 3, Minimum setting 2.05V
  4820                           ;	USB Voltage Regulator Enable bit
  4821                           ;	VREGEN = OFF, USB voltage regulator disabled
  4822  300002                     	org	3145730
  4823  300002  1F                 	db	31
  4824                           
  4825                           ;Config register CONFIG2H @ 0x300003
  4826                           ;	Watchdog Timer Enable bit
  4827                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4828                           ;	Watchdog Timer Postscale Select bits
  4829                           ;	WDTPS = 32768, 1:32768
  4830  300003                     	org	3145731
  4831  300003  1E                 	db	30
  4832                           
  4833                           ; Padding undefined space
  4834  300004                     	org	3145732
  4835  300004  FF                 	db	255
  4836                           
  4837                           ;Config register CONFIG3H @ 0x300005
  4838                           ;	CCP2 MUX bit
  4839                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  4840                           ;	PORTB A/D Enable bit
  4841                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4842                           ;	Low-Power Timer 1 Oscillator Enable bit
  4843                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4844                           ;	MCLR Pin Enable bit
  4845                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4846  300005                     	org	3145733
  4847  300005  81                 	db	129
  4848                           
  4849                           ;Config register CONFIG4L @ 0x300006
  4850                           ;	Stack Full/Underflow Reset Enable bit
  4851                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4852                           ;	Single-Supply ICSP Enable bit
  4853                           ;	LVP = OFF, Single-Supply ICSP disabled
  4854                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4855                           ;	ICPRT = OFF, ICPORT disabled
  4856                           ;	Extended Instruction Set Enable bit
  4857                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4858                           ;	Background Debugger Enable bit
  4859                           ;	DEBUG = 0x1, unprogrammed default
  4860  300006                     	org	3145734
  4861  300006  81                 	db	129
  4862                           
  4863                           ; Padding undefined space
  4864  300007                     	org	3145735
  4865  300007  FF                 	db	255
  4866                           
  4867                           ;Config register CONFIG5L @ 0x300008
  4868                           ;	Code Protection bit
  4869                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  4870                           ;	Code Protection bit
  4871                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  4872                           ;	Code Protection bit
  4873                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  4874                           ;	Code Protection bit
  4875                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  4876  300008                     	org	3145736
  4877  300008  0F                 	db	15
  4878                           
  4879                           ;Config register CONFIG5H @ 0x300009
  4880                           ;	Boot Block Code Protection bit
  4881                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  4882                           ;	Data EEPROM Code Protection bit
  4883                           ;	CPD = OFF, Data EEPROM is not code-protected
  4884  300009                     	org	3145737
  4885  300009  C0                 	db	192
  4886                           
  4887                           ;Config register CONFIG6L @ 0x30000A
  4888                           ;	Write Protection bit
  4889                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  4890                           ;	Write Protection bit
  4891                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  4892                           ;	Write Protection bit
  4893                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  4894                           ;	Write Protection bit
  4895                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  4896  30000A                     	org	3145738
  4897  30000A  0F                 	db	15
  4898                           
  4899                           ;Config register CONFIG6H @ 0x30000B
  4900                           ;	Configuration Register Write Protection bit
  4901                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  4902                           ;	Boot Block Write Protection bit
  4903                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  4904                           ;	Data EEPROM Write Protection bit
  4905                           ;	WRTD = OFF, Data EEPROM is not write-protected
  4906  30000B                     	org	3145739
  4907  30000B  E0                 	db	224
  4908                           
  4909                           ;Config register CONFIG7L @ 0x30000C
  4910                           ;	Table Read Protection bit
  4911                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4912                           ;	Table Read Protection bit
  4913                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4914                           ;	Table Read Protection bit
  4915                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4916                           ;	Table Read Protection bit
  4917                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4918  30000C                     	org	3145740
  4919  30000C  0F                 	db	15
  4920                           
  4921                           ;Config register CONFIG7H @ 0x30000D
  4922                           ;	Boot Block Table Read Protection bit
  4923                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  4924  30000D                     	org	3145741
  4925  30000D  40                 	db	64
  4926                           tosu	equ	0xFFF
  4927                           tosh	equ	0xFFE
  4928                           tosl	equ	0xFFD
  4929                           stkptr	equ	0xFFC
  4930                           pclatu	equ	0xFFB
  4931                           pclath	equ	0xFFA
  4932                           pcl	equ	0xFF9
  4933                           tblptru	equ	0xFF8
  4934                           tblptrh	equ	0xFF7
  4935                           tblptrl	equ	0xFF6
  4936                           tablat	equ	0xFF5
  4937                           prodh	equ	0xFF4
  4938                           prodl	equ	0xFF3
  4939                           indf0	equ	0xFEF
  4940                           postinc0	equ	0xFEE
  4941                           postdec0	equ	0xFED
  4942                           preinc0	equ	0xFEC
  4943                           plusw0	equ	0xFEB
  4944                           fsr0h	equ	0xFEA
  4945                           fsr0l	equ	0xFE9
  4946                           wreg	equ	0xFE8
  4947                           indf1	equ	0xFE7
  4948                           postinc1	equ	0xFE6
  4949                           postdec1	equ	0xFE5
  4950                           preinc1	equ	0xFE4
  4951                           plusw1	equ	0xFE3
  4952                           fsr1h	equ	0xFE2
  4953                           fsr1l	equ	0xFE1
  4954                           bsr	equ	0xFE0
  4955                           indf2	equ	0xFDF
  4956                           postinc2	equ	0xFDE
  4957                           postdec2	equ	0xFDD
  4958                           preinc2	equ	0xFDC
  4959                           plusw2	equ	0xFDB
  4960                           fsr2h	equ	0xFDA
  4961                           fsr2l	equ	0xFD9
  4962                           status	equ	0xFD8

Data Sizes:
    Strings     48
    Constant    0
    Data        32
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     31     106
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@Cadena(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_8(CODE[8]), STR_7(CODE[4]), STR_6(CODE[3]), STR_5(CODE[7]), 
		 -> STR_4(CODE[4]), STR_3(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 8
		 -> STR_8(CODE[8]), STR_7(CODE[4]), STR_6(CODE[3]), STR_5(CODE[7]), 
		 -> STR_4(CODE[4]), STR_3(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_8(CODE[8]), STR_7(CODE[4]), STR_6(CODE[3]), STR_5(CODE[7]), 
		 -> STR_4(CODE[4]), STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> main@Cadena(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S1069_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@Cadena(BANK0[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@Cadena(BANK0[10]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 15
		 -> main@Cadena(BANK0[10]), STR_2(CODE[14]), STR_1(CODE[15]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 15
		 -> main@Cadena(BANK0[10]), STR_2(CODE[14]), STR_1(CODE[15]), 

    DatosSensorTH@Datos	PTR unsigned char  size(2) Largest target is 2
		 -> main@Datos(BANK0[2]), 

    PedirDato@vecLlenar	PTR unsigned char  size(2) Largest target is 2
		 -> main@Humedad(BANK0[2]), main@Temperatura(BANK0[2]), 

    PedirDato@Etiqueta	PTR unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[14]), STR_1(CODE[15]), 

    CompararTemperatura@HumActual	PTR unsigned char  size(2) Largest target is 2
		 -> main@Datos(BANK0[2]), 

    CompararTemperatura@TempActual	PTR unsigned char  size(2) Largest target is 2
		 -> main@Datos(BANK0[2]), 

    TemperaturaDigitada@prmTemperatura	PTR unsigned char  size(2) Largest target is 2
		 -> main@Humedad(BANK0[2]), main@Temperatura(BANK0[2]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _TemperaturaDigitada->___wmul
    _PedirDato->_LCD_String_xy
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Clear->_LCD_Command
    _LCD_Init->_LCD_Command
    _DatosSensorTH->_DHT11_ReadData
    _CompararTemperatura->_PrenderLed

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                25    25      0   12347
                                             93 COMRAM     2     2      0
                                              8 BANK0     23    23      0
                _CompararTemperatura
                      _DatosSensorTH
                    _InicializarLeds
                           _LCD_Char
                           _LCD_Init
                         _LCD_String
                      _LCD_String_xy
                          _PedirDato
                _TemperaturaDigitada
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    7216
                                             87 COMRAM     6     0      6
                                              0 BANK0      8     8      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _TemperaturaDigitada                                  9     7      2     694
                                              6 COMRAM     9     7      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _PedirDato                                            9     5      4    1545
                                              9 COMRAM     9     5      4
                           _LCD_Char
                          _LCD_Clear
                        _LCD_Command
                      _LCD_String_xy
                            _keyfind
 ---------------------------------------------------------------------------------
 (2) _keyfind                                              2     2      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        5     2      3     952
                                              4 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2     317
                                              2 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            1     1      0      44
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      44
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DatosSensorTH                                        7     5      2     284
                                              2 COMRAM     4     2      2
                _DHT11_CheckResponse
                     _DHT11_ReadData
                        _DHT11_Start
 ---------------------------------------------------------------------------------
 (2) _DHT11_Start                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DHT11_ReadData                                       2     2      0     115
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _DHT11_CheckResponse                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CompararTemperatura                                 17     9      8     692
                                              2 COMRAM    17     9      8
                         _PrenderLed
 ---------------------------------------------------------------------------------
 (2) _PrenderLed                                           2     1      1     164
                                              0 COMRAM     2     1      1
                    _InicializarLeds
 ---------------------------------------------------------------------------------
 (1) _InicializarLeds                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CompararTemperatura
     _PrenderLed
       _InicializarLeds
   _DatosSensorTH
     _DHT11_CheckResponse
     _DHT11_ReadData
     _DHT11_Start
   _InicializarLeds
   _LCD_Char
   _LCD_Init
     _LCD_Command
   _LCD_String
     _LCD_Char
   _LCD_String_xy
     _LCD_Command
     _LCD_String
   _PedirDato
     _LCD_Char
     _LCD_Clear
       _LCD_Command
     _LCD_Command
     _LCD_String_xy
     _keyfind
   _TemperaturaDigitada
     ___wmul
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1F      6A       5       66.2%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C9      20        0.0%
DATA                 0      0      C9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Oct 09 18:09:45 2021

                  ?_TemperaturaDigitada 0007                            ?_LCD_Command 0001  
                                    l71 1908                                      l74 1796  
                                    l67 1906                                      l83 1512  
                                    l91 1AFC                                      l69 1900  
                                    l94 1C60                                      l88 1720  
                   ___wmul@multiplicand 0003                             main@Humedad 00BF  
                           ?_LCD_String 0003                                     l111 1B9C  
                                   l114 19FA                                     l131 1BF2  
                                   l123 1856                                     l117 19AA  
                                   l128 1ABE                                     l321 0CA6  
                                   l313 0C1E                                     l308 0BDA  
                                   l317 0C62                                     l327 0D42  
                                   l504 129A                                     l372 18B2  
                                   l364 1860                                     l381 1BAC  
                                   l517 13FE                                     l390 1C18  
                                   l375 1C58                                     l384 1BBA  
                                   l369 1890                                     l378 1B9E  
                                   l387 1BC8                                     _abs 1A40  
                                   _pad 15DE                                     prod 000FF3  
                                   wreg 000FE8                             main@bandera 00C7  
                           LCD_Char@dat 0002                          PedirDato@tecla 0010  
                                  l1100 16A2                                    l2000 12A0  
                                  l2010 1300                                    l2002 12AE  
                                  l1106 08D2                                    ?_abs 0013  
                                  l2020 1376                                    l2012 131E  
                                  l2004 12CE                                    l2100 0908  
                                  l1108 08DA                                    l1140 17F8  
                                  l1133 1112                                    l2030 13DE  
                                  l2022 1396                                    l2014 1326  
                                  l2006 12D2                                    l1126 0B12  
                                  l2110 09A6                                    l2102 0910  
                                  l2024 13A8                                    l2016 133A  
                                  l2008 12E0                                    l1144 1A76  
                                  l2040 1610                                    l2120 0A62  
                                  l2112 09AC                                    l2104 0918  
                                  l2200 10C2                                    l2018 1348  
                                  l2026 13AE                                    l1170 1C62  
                                  l2050 1676                                    l2042 161C  
                                  l2034 15DE                                    l2130 0AB4  
                                  l2122 0A7C                                    l2106 091E  
                                  l2114 0A10                                    l2202 10D0  
                                  l1147 1A7E                                    l1139 17F0  
                                  l2060 195E                                    l2220 1A9A  
                                  l2300 0C54                                    l2028 13BE  
                                  l2052 168A                                    l2044 1630  
                                  l2036 15EE                                    l2132 0AC6  
                                  l2116 0A2A                                    l2124 0A8C  
                                  l2108 09A0                                    l1068 195A  
                                  l2142 1C5A                                    l2230 18BA  
                                  l2070 1976                                    l2062 196E  
                                  l2150 1826                                    l2222 1AA4  
                                  l2214 1A82                                    l2310 0C86  
                                  l2302 0C5C                                    l2046 1644  
                                  l2038 1602                                    l2134 0AD2  
                                  l2126 0A9E                                    l2118 0A48  
                                  l2206 10DC                                    l1159 15DC  
                                  l1167 1A3E                                    l1095 1624  
                                  l2232 18CA                                    l2160 19C4  
                                  l2152 19AE                                    l2400 1B8A  
                                  l2240 1BCA                                    l2072 1984  
                                  l2064 1970                                    l2144 17FA  
                                  l2224 1AAC                                    l2216 1A82  
                                  l2312 0C98                                    l2304 0C78  
                                  l2056 1A40                                    l1176 1B68  
                                  l2048 1648                                    l2136 0ADA  
                                  l2128 0AAE                                    l2080 0832  
                                  l2208 1100                                    l2234 18DA  
                                  l2170 19EA                                    l2162 19C6  
                                  l2154 19BE                                    l2402 1B90  
                                  l2242 1BD0                                    l2074 1996  
                                  l2066 1972                                    l2146 17FE  
                                  l2226 1AB2                                    l2218 1A92  
                                  l2314 0CA0                                    l2306 0C7C  
                                  l2250 0B24                                    l2410 16BA  
                                  l2058 1A5A                                    l1098 1666  
                                  l2138 0AEA                                    l2090 08AC  
                                  l2082 0852                                    l2236 18E0  
                                  l2228 18B6                                    l2164 19D4  
                                  l2156 19C0                                    l2404 1B96  
                                  l2244 1BDE                                    l2076 1998  
                                  l2068 1974                                    l2148 1822  
                                  l2340 0D30                                    l2332 0D08  
                                  l2324 0CE0                                    l2308 0C82  
                                  l2316 0CB8                                    l2260 0B6A  
                                  l2252 0B36                                    l2420 16CE  
                                  l2412 16C0                                    l2092 08C6  
                                  l2084 087A                                    l2180 0FA8  
                                  l2172 0F60                                    l2500 0D7C  
                                  l2238 18F0                                    l2350 1C4C  
                                  l2166 19E6                                    l2158 19C2  
                                  l2078 199A                                    l2334 0D1A  
                                  l2326 0CF2                                    l2318 0CCA  
                                  l2270 0BB0                                    l2262 0B7C  
                                  l2254 0B4E                                    l2246 0B14  
                                  l2430 171C                                    l2422 16D4  
                                  l2406 16A4                                    l2094 08E2  
                                  l2086 089A                                    l2190 1070  
                                  l2182 0FCC                                    l2174 0F84  
                                  l2502 0D9A                                    l2510 0DE8  
                                  l2352 1C56                                    l2168 19E8  
                                  l2280 0BF0                                    l2272 0BB6  
                                  l2264 0B94                                    l2256 0B5E  
                                  l2248 0B1C                                    l2424 16E4  
                                  l2408 16A8                                    l2440 1782  
                                  l2432 1722                                    l2096 08F4  
                                  l2088 08AA                                    l2192 1094  
                                  l2184 0FF0                                    l2176 0F92  
                                  l2520 0E66                                    l2512 0DF8  
                                  l2504 0DAE                                    l2354 1B9E  
                                  l2370 189E                                    l2362 186E  
                                  l2346 1C3A                                    l2450 1AC8  
                                  l2290 0C18                                    l2282 0BF4  
                                  l2274 0BBA                                    l2266 0BA4  
                                  l2258 0B62                                    l2426 16E8  
                                  l2418 16C8                                    l2442 178E  
                                  l2434 1732                                    l2098 0902  
                                  l2194 10A2                                    l2186 1038  
                                  l2178 0FA4                                    l2530 0ED4  
                                  l2522 0E80                                    l2514 0E20  
                                  l2506 0DC6                                    l2372 18A0  
                                  l2364 1874                                    l2356 1858  
                                  l2348 1C3E                                    l2460 1AE0  
                                  l2452 1ACE                                    l2292 0C34  
                                  l2284 0BFA                                    l2276 0BCC  
                                  l2268 0BAC                                    l2428 1704  
                                  l2380 1C10                                    l2436 174A  
                                  l2196 10B6                                    l2540 0F42  
                                  l2532 0F00                                    l2524 0E92  
                                  l2516 0E26                                    l2508 0DDA  
                                  l2470 1484                                    l2374 18B0  
                                  l2366 1882                                    l2462 1AEC  
                                  l2454 1AD2                                    l2446 1AC0  
                                  l2294 0C38                                    l2286 0BFE  
                                  l2278 0BD4                                    l2438 1766  
                                  l2390 17D4                                    l2534 0F1C  
                                  l2526 0EAE                                    l2518 0E36  
                                  l2472 1488                                    l2464 1400  
                                  l2368 188A                                    l2456 1AD8  
                                  l2448 1AC4                                    l2392 1B6A  
                                  l2296 0C3E                                    l2288 0C10  
                                  l2384 1798                                    l2480 190A  
                                  l2536 0F22                                    l2528 0EC8  
                                  l2474 14CC                                    l2466 1408  
                                  l2458 1ADC                                    l2394 1B6E  
                                  l2298 0C42                                    l2378 1BF4  
                                  l1930 1560                                    l1922 1514  
                                  l2386 17A0                                    l2482 191C  
                                  l2538 0F36                                    l2476 1504  
                                  l2468 144C                                    l2396 1B7E  
                                  l1932 1596                                    l1924 1526  
                                  l1940 1A1A                                    l2388 17AE  
                                  l2484 1924                                    l2492 0D44  
                                  l2478 1508                                    l2398 1B84  
                                  l1926 1538                                    l1942 1A1E  
                                  l1950 1B5C                                    l2486 192C  
                                  l2494 0D72                                    l1960 1146  
                                  l1928 1542                                    l1936 19FC  
                                  l1944 1B34                                    l2488 1948  
                                  l2496 0D74                                    l1970 1188  
                                  l1962 114A                                    l1954 1114  
                                  l1938 1A08                                    l1946 1B40  
                                  l2498 0D78                                    l1980 11E2  
                                  l1972 11A6                                    l1964 1158  
                                  l1956 1118                                    l1948 1B44  
                                  l1982 1210                                    l1974 11AE  
                                  l1990 124A                                    l1966 1178  
                                  l1958 1126                                    ?_pad 0011  
                                  l1992 125A                                    l1984 1230  
                                  l1976 11C2                                    l1968 117C  
                                  l1994 127A                                    l1986 1232  
                                  l1978 11D0                                    l1988 1244  
                                  l1998 129C  CompararTemperatura@TemperaturaAdecuada 0012  
                                  STR_1 0801                                    STR_2 0810  
                                  STR_3 082E                                    STR_4 082D  
                                  STR_5 0826                                    STR_6 082E  
                                  STR_7 082D                                    STR_8 081E  
                                  u2000 1882                                    u2001 187E  
                                  u2010 189E                                    u2011 189A  
                                  u2020 18B0                                    u1300 1526  
                                  u2100 0DF8                                    u2021 18AC  
                                  u1301 1522                                    u2101 0DF4  
                                  u1310 1538                                    u2030 17F0  
                                  u2110 0E36                                    u1311 1534  
                                  u2031 17EC                                    u2111 0E32  
                                  u2040 1704                                    u1400 11D0  
                                  u1320 1560                                    u2041 1700  
                                  u1401 11CC                                    u1321 155C  
                                  u2050 144C                                    u1410 1210  
                                  u1330 1596                                    u2051 1448  
                                  u1411 120C                                    u1331 1592  
                                  u2060 1484                                    u1420 125A  
                                  u1340 1A3E                                    u1500 1610  
                                  u2061 1480                                    u1421 1256  
                                  u1341 1A3A                                    u1501 160C  
                                  u2070 14CC                                    u1430 12AE  
                                  u1350 1B5C                                    u1510 1666  
                                  _LATB 000F8A                                    u2071 14C8  
                                  u1431 12AA                                    u1351 1B58  
                                  u1511 1662                                    u2080 1504  
                                  u1360 1126                                    u1440 12E0  
                                  u1520 1676                                    u1600 0902  
                                  _LATD 000F8C                                    u2081 1500  
                                  u1361 1122                                    u1441 12DC  
                                  u1521 1672                                    u1601 08FE  
                                  u1370 1158                                    u1450 131E  
                                  u1530 1A5A                                    u1610 0A2A  
                                  u2090 0D9A                                    u1371 1154  
                                  u1451 131A                                    u1531 1A56  
                                  u1611 0A26                                    u2091 0D96  
                                  u1700 1846                                    u1460 1348  
                                  u1620 0A48                                    u1540 0862  
                                  u1381 1182                                    u1461 1344  
                                  u1621 0A44                                    u1541 085C  
                                  u1710 1856                                    u1390 11A6  
                                  u1470 1376                                    u1630 0A62  
                                  u1550 0864                                    u2407 19A2  
                                  u1711 1852                                    u1391 11A2  
                                  u1471 1372                                    u1631 0A5E  
                                  u1800 1900                                    u1480 13BE  
                                  u1640 0A7C                                    u1560 087A  
                                  u1720 0F84                                    u1801 18FC  
                                  u2417 1BD6                                    u1481 13BA  
                                  u1641 0A78                                    u1561 0876  
                                  u1721 0F80                                    u1810 0B36  
                                  u1490 15EE                                    u1650 0A8C  
                                  u1570 08AA                                    u1730 0FCC  
                                  u2427 1BEA                                    u1707 183C  
                                  u1811 0B32                                    u1491 15EA  
                                  u1651 0A88                                    u1571 08A6  
                                  u1731 0FC8                                    u2347 0DB8  
                                  u1900 0C74                                    u1820 0B4E  
                                  u1660 0A9E                                    u1580 08C6  
                                  u1740 0FF0                                    u2437 1B74  
                                  u1901 0C70                                    u1821 0B4A  
                                  u1661 0A9A                                    u1581 08C2  
                                  u1741 0FEC                                    u2357 0F4C  
                                  u1910 0C98                                    u1830 0B7C  
                                  u1670 0AAE                                    u1590 08F4  
                                  u1750 1094                                    u2447 19CC  
                                  u1911 0C94                                    u1831 0B78  
                                  u2367 170E                                    u1671 0AAA  
                                  u1591 08F0                                    u1751 1090  
                                  u1760 1A92                                    u1920 0CB8  
                                  u1840 0B94                                    u1680 0AC6  
                                  u2457 19F2                                    u1761 1A8E  
                                  u1921 0CB4                                    u1841 0B90  
                                  u2377 0B54                                    u1681 0AC2  
                                  u1770 18CA                                    u1690 181E  
                                  u1930 0CCA                                    u1850 0BCC  
                                  u1771 18C6                                    u2467 1C44  
                                  u1931 0CC6                                    u1851 0BC8  
                                  u2387 0B9A                                    u1780 18DA  
                                  u1940 0CF2                                    u1860 0BEC  
                                  u1781 18D6                                    u2477 1C50  
                                  u2397 197C                                    u1941 0CEE  
                                  u1861 0BE8                                    u1790 18F0  
                                  u1950 0D1A                                    u1870 0C10  
                                  u1791 18EC                                    u2487 1870  
                                  u1951 0D16                                    u1871 0C0C  
                                  u1960 1BAC                                    u1880 0C30  
                                  u1961 1BA8                                    u1697 1814  
                                  u1881 0C2C                                    u1970 1BBA  
                                  u1890 0C54                                    u1971 1BB6  
                                  u1891 0C50                                    u1980 1BC8  
                                  u1981 1BC4                                    u1990 186E  
                                  u1991 186A                                    _RBPU 007F8F  
                                  abs@a 0013                                    _dbuf 006B  
                                  _main 0D44                                    _dtoa 0832  
                    __size_of_LCD_Clear 002A                                    _prec 0064  
                                  _nout 0060                                    pad@i 0018  
                                  pad@p 0015                                    fsr1h 000FE2  
                                  fsr2h 000FDA                                    indf1 000FE7  
                                  indf2 000FDF                                    fsr1l 000FE1  
                                  pad@w 001A                                    fsr2l 000FD9  
                                  prodh 000FF4                                    prodl 000FF3  
                                  start 0000                        ??_DHT11_ReadData 0001  
          __size_of_CompararTemperatura 0114                           _LCD_String_xy 1A80  
                  __size_of_DHT11_Start 0020                              PedirDato@i 0011  
                 ??_TemperaturaDigitada 0009                            ___param_bank 000000  
                 __end_of_DatosSensorTH 1AFE         CompararTemperatura@TempDigitada 0007  
                                 ??_abs 0015                                   ??_pad 0017  
                      __end_of_LCD_Char 19AC                        __end_of_LCD_Init 1B9E  
                       __end_of___aodiv 129C                                   ?_main 0001  
                                 ?_dtoa 001C                         __end_of___aomod 1400  
                                 _LATA0 007C48                                   _LATD0 007C60  
                                 _LATD1 007C61                                   _LATE0 007C68  
                                 _LATE1 007C69                                   _LATE2 007C6A  
                          vfpfcnvrt@fmt 0042                                   _PORTB 000F81  
                                 _PORTD 000F83                                   _TRISB 000F93  
                                 _TRISD 000F95                                   _TRISE 000F96  
                       _InicializarLeds 1C5A                                   _flags 0066  
                                 _fputc 1514                         __end_of_keyfind 0D44  
                                 _fputs 19FC                                   pad@fp 0011  
                                 _width 0062                                   _putch 1C62  
                                 dtoa@d 001E                                   dtoa@i 003E  
                                 dtoa@n 0036                                   dtoa@p 0030  
                                 dtoa@s 0034                                   dtoa@w 0032  
                                 tablat 000FF5                                   status 000FD8  
                   __size_of_LCD_String 005E                         __end_of_sprintf 195C  
                        ?_LCD_String_xy 0005                         __initialization 1AFE  
                          __end_of_main 0F60                            __end_of_dtoa 0B14  
                                ??_main 005E                                  ??_dtoa 0026  
                     __end_of_LCD_Clear 1BF4                           __activetblptr 000002  
                                _ADCON1 000FC1                                  ?_fputc 0001  
                                ?_fputs 000A                                  _ADRESH 000FC4  
                                ?_putch 0001                     _DHT11_CheckResponse 1B9E  
                      LCD_String_xy@msg 0006                        LCD_String_xy@pos 0005  
                      LCD_String_xy@row 0008                                  _OSCCON 000FD3  
                    __size_of_PedirDato 007E                            vfprintf@cfmt 0056  
                            _PrenderLed 18B4                               ??___aodiv 0011  
                             ??___aomod 0011                                  ___wmul 1BF4  
                  ?_DHT11_CheckResponse 0001                                  _keypad 008B  
                                clear_0 1B24                                  isa$std 000001  
               __end_of_InicializarLeds 1C62                                  pad@buf 0013  
                                _rowloc 0069                    __size_of_LCD_Command 0050  
                                dtoa@fp 001C                                  _strlen 1B34  
                                fputc@c 0001                                  fputs@c 000E  
                                fputs@i 000F                                  fputs@s 000A  
                             ??_keyfind 0001                            __mediumconst 0000  
                                tblptrh 000FF7                                  tblptrl 000FF6  
                                tblptru 000FF8                                  putch@c 0001  
                      __end_of_vfprintf 17FA                               ??_sprintf 005E  
                     PedirDato@Etiqueta 000A                               ?_LCD_Char 0001  
                            __accesstop 0060                 __end_of__initialization 1B2A  
                             ?_LCD_Init 0001                         ??_LCD_String_xy 0008  
                         ___rparam_used 000001               TemperaturaDigitada@Decena 000E  
         CompararTemperatura@TempActual 0003                          __pcstackCOMRAM 0001  
                          __pidataBANK0 1C1A                   ??_DHT11_CheckResponse 0001  
             TemperaturaDigitada@Unidad 000A                           __end_of_fputc 15DE  
                         __end_of_fputs 1A40                           __end_of_putch 1C64  
                          ??_LCD_String 0005                       __end_of_PedirDato 1722  
                   _CompararTemperatura 1400                      DatosSensorTH@Datos 0003  
                               ??_fputc 0005                                 ??_fputs 000E  
                               ??_putch 0001                              __pbssBANK0 0060  
                            ??_LCD_Char 0001                              ??_LCD_Init 0003  
                    __end_of_LCD_String 1858                    ?_CompararTemperatura 0003  
                           ?_PrenderLed 0001                                 ?___wmul 0001  
                       main@Temperatura 00BD                        ?_InicializarLeds 0001  
                               ?_strlen 0001                      __size_of_vfpfcnvrt 01B4  
                         ??_DHT11_Start 0001             __end_of_TemperaturaDigitada 1798  
                 ??_CompararTemperatura 000B                           LCD_String@msg 0003  
                               __Hparam 0000                                 __Lparam 0000  
                               ___aodiv 1114                                 ___aomod 129C  
                       __size_of___wmul 0026                               ?_vfprintf 0050  
                          __psmallconst 0800          CompararTemperatura@HumDigitada 0009  
                               __pcinit 1AFE                                 __ramtop 0800  
         PrenderLed@TemperaturaAdecuada 0002                                 __ptext0 0D44  
                               __ptext1 190A                                 __ptext2 1798  
                               __ptext3 0F60                                 __ptext4 0832  
                               __ptext5 15DE                                 __ptext6 1B34  
                               __ptext7 19FC                                 __ptext8 1514  
                               __ptext9 1C62                                 _col_loc 006A  
                       __size_of_strlen 0036                            __size_of_abs 0040  
                          __size_of_pad 00C6                                 _keyfind 0B14  
                             _LCD_Clear 1BCA                                 _sprintf 190A  
                   __size_of_PrenderLed 0056                  __size_of_DatosSensorTH 003E  
                  end_of_initialization 1B2A                                 fputc@fp 0003  
                        LCD_Command@cmd 0002                           __Lmediumconst 0000  
                               fputs@fp 000C                       __end_of_vfpfcnvrt 1114  
                   __end_of_DHT11_Start 1C5A                                 postdec1 000FE5  
                               postdec2 000FDD                                 postinc0 000FEE  
                               postinc1 000FE6                                 postinc2 000FDE  
                            ??_vfprintf 0056                                 strlen@a 0003  
                               strlen@s 0001                               _PORTAbits 000F80  
                             _PORTDbits 000F83                 __size_of_DHT11_ReadData 005C  
                             _TRISAbits 000F92                              main@Cadena 00B3  
                            ?_LCD_Clear 0001                              main@indice 00C1  
                     __size_of_LCD_Char 0050                       __size_of_LCD_Init 0034  
                    DHT11_ReadData@data 0002                 DatosSensorTH@T_Integral 0006  
                         _DatosSensorTH 1AC0                           ??_LCD_Command 0001  
                           vfpfcnvrt@ap 0044                             vfpfcnvrt@fp 0040  
                           vfpfcnvrt@ll 0048                          __end_of___wmul 1C1A  
                        __end_of_strlen 1B6A                      keypad_getkey@F3168 009B  
                   start_initialization 1AFE                             __end_of_abs 1A80  
                           __end_of_pad 16A4                               _PedirDato 16A4  
                           _DHT11_Start 1C3A             __end_of_DHT11_CheckResponse 1BCA  
                 __end_of_LCD_String_xy 1AC0                             vfprintf@fmt 0052  
          CompararTemperatura@HumActual 0005                            ??_PrenderLed 0002  
                        ?_DatosSensorTH 0003                                ??___wmul 0005  
                           __pdataBANK0 008B                                ??_strlen 0003  
                   __end_of_LCD_Command 19FC                           __pcstackBANK0 00AB  
                      ___aodiv@dividend 0001                             ??_LCD_Clear 0003  
                            ?_PedirDato 000A                      PedirDato@vecLlenar 000C  
                    __end_of_PrenderLed 190A                               _dtoa$1142 002E  
                              ?___aodiv 0001                                ?___aomod 0001  
                      ___aodiv@quotient 0013      CompararTemperatura@HumedadAdecuada 0013  
                        _DHT11_ReadData 1858                       __size_of_vfprintf 0062  
                           __smallconst 0800                                ?_keyfind 0001  
                 LCD_String_xy@location 0009                __size_of_InicializarLeds 0008  
                              ?_sprintf 0058                          __size_of_fputc 00CA  
                        __size_of_fputs 0044             __end_of_CompararTemperatura 1514  
                        __size_of_putch 0002                                _LCD_Char 195C  
                              _LCD_Init 1B6A                          ___wmul@product 0005  
                              _LATDbits 000F8C                         ??_DatosSensorTH 0005  
          __size_of_TemperaturaDigitada 0076                  __end_of_DHT11_ReadData 18B4  
                           _LCD_Command 19AC                               _vfpfcnvrt 0F60  
                             main@Datos 00C8                 main@TemperaturaAdecuada 00C3  
                            _ADCON0bits 000FC2                              _ADCON1bits 000FC1  
                            _ADCON2bits 000FC0                       ___wmul@multiplier 0001  
                           ??_PedirDato 000E                             _INTCON2bits 000FF1  
                             copy_data0 1B12                                __Hrparam 0000  
                            vfprintf@ap 0054                                __Lrparam 0000  
                            vfprintf@fp 0050                         ?_DHT11_ReadData 0001  
                      __size_of___aodiv 0188                        __size_of___aomod 0164  
                            ?_vfpfcnvrt 0040                         DHT11_ReadData@i 0001  
                   main@HumedadAdecuada 00C5                         ___aodiv@divisor 0009  
                       ___aodiv@counter 0011                              sprintf@fmt 005A  
                      __size_of_keyfind 0230       TemperaturaDigitada@prmTemperatura 0007  
                              __ptext10 1A40                                __ptext11 129C  
                              __ptext20 1BCA                                __ptext12 1114  
                              __ptext21 1B6A                                __ptext13 1722  
                              __ptext22 19AC                                __ptext14 1BF4  
                              __ptext23 1AC0                                __ptext15 16A4  
                              __ptext24 1C3A                                __ptext16 0B14  
                              __ptext25 1858                                __ptext17 1A80  
                              __ptext26 1B9E                                __ptext18 17FA  
                              __ptext27 1400                                __ptext19 195C  
                              __ptext28 18B4                                __ptext29 1C5A  
                      __size_of_sprintf 0052                DatosSensorTH@RH_Integral 0005  
                         __size_of_main 021C                           __size_of_dtoa 02E2  
                          ?_DHT11_Start 0001                       ??_InicializarLeds 0001  
                              _temp_col 0068                                isa$xinst 000000  
                              _vfprintf 1798                              _LCD_String 17FA  
                      ___aomod@dividend 0001                               sprintf@ap 00AB  
             PrenderLed@HumedadAdecuada 0001            __size_of_DHT11_CheckResponse 002C  
                       ___aomod@divisor 0009                             ??_vfpfcnvrt 0046  
                       ___aomod@counter 0011                                sprintf@f 00AD  
                              sprintf@s 0058                  __size_of_LCD_String_xy 0040  
          TemperaturaDigitada@Resultado 000C                     _TemperaturaDigitada 1722  
                          ___aodiv@sign 0012                            ___aomod@sign 0012  
