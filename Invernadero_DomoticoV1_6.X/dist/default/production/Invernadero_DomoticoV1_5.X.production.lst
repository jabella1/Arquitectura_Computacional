

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Oct 10 22:20:03 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    56  0000                     
    57                           ; Version 2.20
    58                           ; Generated 12/02/2020 GMT
    59                           ; 
    60                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC18F4550 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91  0000                     
    92                           	psect	idataBANK0
    93  001DBC                     __pidataBANK0:
    94                           	callstack 0
    95                           
    96                           ;initializer for _keypad
    97  001DBC  31                 	db	49
    98  001DBD  32                 	db	50
    99  001DBE  33                 	db	51
   100  001DBF  2F                 	db	47
   101  001DC0  34                 	db	52
   102  001DC1  35                 	db	53
   103  001DC2  36                 	db	54
   104  001DC3  2A                 	db	42
   105  001DC4  37                 	db	55
   106  001DC5  38                 	db	56
   107  001DC6  39                 	db	57
   108  001DC7  2D                 	db	45
   109  001DC8  2A                 	db	42
   110  001DC9  30                 	db	48
   111  001DCA  23                 	db	35
   112  001DCB  2B                 	db	43
   113  0000                     _TRISE	set	3990
   114  0000                     _TRISC	set	3988
   115  0000                     _TRISAbits	set	3986
   116  0000                     _PORTAbits	set	3968
   117  0000                     _PORTB	set	3969
   118  0000                     _LATB	set	3978
   119  0000                     _TRISB	set	3987
   120  0000                     _INTCON2bits	set	4081
   121  0000                     _LATD	set	3980
   122  0000                     _TRISD	set	3989
   123  0000                     _ADCON1	set	4033
   124  0000                     _OSCCON	set	4051
   125  0000                     _LATE2	set	31850
   126  0000                     _LATE0	set	31848
   127  0000                     _LATE1	set	31849
   128  0000                     _LATC6	set	31838
   129  0000                     _LATC2	set	31834
   130  0000                     _LATC1	set	31833
   131  0000                     _LATC0	set	31832
   132  0000                     _LATA0	set	31816
   133  0000                     _RBPU	set	32655
   134  0000                     _LATD1	set	31841
   135  0000                     _LATD0	set	31840
   136                           
   137                           	psect	smallconst
   138  000800                     __psmallconst:
   139                           	callstack 0
   140  000800  00                 	db	0
   141  000801                     STR_7:
   142  000801  54                 	db	84	;'T'
   143  000802  65                 	db	101	;'e'
   144  000803  6D                 	db	109	;'m'
   145  000804  70                 	db	112	;'p'
   146  000805  2E                 	db	46
   147  000806  20                 	db	32
   148  000807  41                 	db	65	;'A'
   149  000808  64                 	db	100	;'d'
   150  000809  65                 	db	101	;'e'
   151  00080A  63                 	db	99	;'c'
   152  00080B  75                 	db	117	;'u'
   153  00080C  61                 	db	97	;'a'
   154  00080D  64                 	db	100	;'d'
   155  00080E  61                 	db	97	;'a'
   156  00080F  00                 	db	0
   157  000810                     STR_8:
   158  000810  4D                 	db	77	;'M'
   159  000811  67                 	db	103	;'g'
   160  000812  6E                 	db	110	;'n'
   161  000813  20                 	db	32
   162  000814  45                 	db	69	;'E'
   163  000815  72                 	db	114	;'r'
   164  000816  72                 	db	114	;'r'
   165  000817  6F                 	db	111	;'o'
   166  000818  72                 	db	114	;'r'
   167  000819  20                 	db	32
   168  00081A  54                 	db	84	;'T'
   169  00081B  65                 	db	101	;'e'
   170  00081C  6D                 	db	109	;'m'
   171  00081D  70                 	db	112	;'p'
   172  00081E  00                 	db	0
   173  00081F                     STR_9:
   174  00081F  48                 	db	72	;'H'
   175  000820  75                 	db	117	;'u'
   176  000821  6D                 	db	109	;'m'
   177  000822  2E                 	db	46
   178  000823  20                 	db	32
   179  000824  41                 	db	65	;'A'
   180  000825  64                 	db	100	;'d'
   181  000826  65                 	db	101	;'e'
   182  000827  63                 	db	99	;'c'
   183  000828  75                 	db	117	;'u'
   184  000829  61                 	db	97	;'a'
   185  00082A  64                 	db	100	;'d'
   186  00082B  61                 	db	97	;'a'
   187  00082C  00                 	db	0
   188  00082D                     STR_10:
   189  00082D  4D                 	db	77	;'M'
   190  00082E  67                 	db	103	;'g'
   191  00082F  6E                 	db	110	;'n'
   192  000830  20                 	db	32
   193  000831  45                 	db	69	;'E'
   194  000832  72                 	db	114	;'r'
   195  000833  72                 	db	114	;'r'
   196  000834  6F                 	db	111	;'o'
   197  000835  72                 	db	114	;'r'
   198  000836  20                 	db	32
   199  000837  48                 	db	72	;'H'
   200  000838  75                 	db	117	;'u'
   201  000839  6D                 	db	109	;'m'
   202  00083A  00                 	db	0
   203  00083B                     STR_6:
   204  00083B  43                 	db	67	;'C'
   205  00083C  20                 	db	32
   206  00083D  54                 	db	84	;'T'
   207  00083E  65                 	db	101	;'e'
   208  00083F  6D                 	db	109	;'m'
   209  000840  70                 	db	112	;'p'
   210  000841  2E                 	db	46
   211  000842  00                 	db	0
   212  000843                     STR_3:
   213  000843  20                 	db	32
   214  000844  20                 	db	32
   215  000845  48                 	db	72	;'H'
   216  000846  75                 	db	117	;'u'
   217  000847  6D                 	db	109	;'m'
   218  000848  2E                 	db	46
   219  000849  00                 	db	0
   220  00084A                     STR_2:
   221  00084A  2E                 	db	46
   222  00084B  25                 	db	37
   223  00084C  64                 	db	100	;'d'
   224  00084D  00                 	db	0
   225  00084E  00                 	db	0	; dummy byte at the end
   226  0000                     
   227                           ; #config settings
   228                           
   229                           	psect	cinit
   230  001C80                     __pcinit:
   231                           	callstack 0
   232  001C80                     start_initialization:
   233                           	callstack 0
   234  001C80                     __initialization:
   235                           	callstack 0
   236                           
   237                           ; Initialize objects allocated to BANK0 (16 bytes)
   238                           ; load TBLPTR registers with __pidataBANK0
   239  001C80  0EBC               	movlw	low __pidataBANK0
   240  001C82  6EF6               	movwf	tblptrl,c
   241  001C84  0E1D               	movlw	high __pidataBANK0
   242  001C86  6EF7               	movwf	tblptrh,c
   243  001C88  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   244  001C8A  6EF8               	movwf	tblptru,c
   245  001C8C  EE00  F0A8         	lfsr	0,__pdataBANK0
   246  001C90  EE10 F010          	lfsr	1,16
   247  001C94                     copy_data0:
   248  001C94  0009               	tblrd		*+
   249  001C96  CFF5 FFEE          	movff	tablat,postinc0
   250  001C9A  50E5               	movf	postdec1,w,c
   251  001C9C  50E1               	movf	fsr1l,w,c
   252  001C9E  E1FA               	bnz	copy_data0
   253                           
   254                           ; Clear objects allocated to BANK0 (72 bytes)
   255  001CA0  EE00  F060         	lfsr	0,__pbssBANK0
   256  001CA4  0E48               	movlw	72
   257  001CA6                     clear_0:
   258  001CA6  6AEE               	clrf	postinc0,c
   259  001CA8  06E8               	decf	wreg,f,c
   260  001CAA  E1FD               	bnz	clear_0
   261  001CAC                     end_of_initialization:
   262                           	callstack 0
   263  001CAC                     __end_of__initialization:
   264                           	callstack 0
   265  001CAC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   266  001CAE  6EF8               	movwf	tblptru,c
   267  001CB0  0100               	movlb	0
   268  001CB2  EF99  F005         	goto	_main	;jump to C main() function
   269                           
   270                           	psect	bssBANK0
   271  000060                     __pbssBANK0:
   272                           	callstack 0
   273  000060                     _nout:
   274                           	callstack 0
   275  000060                     	ds	2
   276  000062                     _width:
   277                           	callstack 0
   278  000062                     	ds	2
   279  000064                     _prec:
   280                           	callstack 0
   281  000064                     	ds	2
   282  000066                     _flags:
   283                           	callstack 0
   284  000066                     	ds	2
   285  000068                     _HumedadAdecuada:
   286                           	callstack 0
   287  000068                     	ds	2
   288  00006A                     _TemperaturaAdecuada:
   289                           	callstack 0
   290  00006A                     	ds	2
   291  00006C                     _indice:
   292                           	callstack 0
   293  00006C                     	ds	2
   294  00006E                     _MargenEH:
   295                           	callstack 0
   296  00006E                     	ds	2
   297  000070                     _MargenET:
   298                           	callstack 0
   299  000070                     	ds	2
   300  000072                     _temp_col:
   301                           	callstack 0
   302  000072                     	ds	1
   303  000073                     _rowloc:
   304                           	callstack 0
   305  000073                     	ds	1
   306  000074                     _col_loc:
   307                           	callstack 0
   308  000074                     	ds	1
   309  000075                     _bandera:
   310                           	callstack 0
   311  000075                     	ds	1
   312  000076                     _dbuf:
   313                           	callstack 0
   314  000076                     	ds	32
   315  000096                     _Cadena:
   316                           	callstack 0
   317  000096                     	ds	10
   318  0000A0                     _Datos:
   319                           	callstack 0
   320  0000A0                     	ds	2
   321  0000A2                     _Humedad:
   322                           	callstack 0
   323  0000A2                     	ds	2
   324  0000A4                     _Temperatura:
   325                           	callstack 0
   326  0000A4                     	ds	2
   327  0000A6                     _MargenErrorH:
   328                           	callstack 0
   329  0000A6                     	ds	1
   330  0000A7                     _MargenErrorT:
   331                           	callstack 0
   332  0000A7                     	ds	1
   333                           
   334                           	psect	dataBANK0
   335  0000A8                     __pdataBANK0:
   336                           	callstack 0
   337  0000A8                     _keypad:
   338                           	callstack 0
   339  0000A8                     	ds	16
   340                           
   341                           	psect	cstackBANK0
   342  0000B8                     __pcstackBANK0:
   343                           	callstack 0
   344  0000B8                     sprintf@ap:
   345                           	callstack 0
   346                           
   347                           ; 2 bytes @ 0x0
   348  0000B8                     	ds	2
   349  0000BA                     sprintf@f:
   350                           	callstack 0
   351                           
   352                           ; 6 bytes @ 0x2
   353  0000BA                     	ds	6
   354                           
   355                           	psect	cstackCOMRAM
   356  000001                     __pcstackCOMRAM:
   357                           	callstack 0
   358  000001                     ??_LCD_Char:
   359  000001                     ??_LCD_Command:
   360  000001                     ??_keyfind:
   361  000001                     ??_DHT11_Start:
   362  000001                     ?_strlen:
   363                           	callstack 0
   364  000001                     ?___wmul:
   365                           	callstack 0
   366  000001                     ?___aodiv:
   367                           	callstack 0
   368  000001                     ?___aomod:
   369                           	callstack 0
   370  000001                     DHT11_ReadData@i:
   371                           	callstack 0
   372  000001                     PrenderLed@HumedadAdecuada:
   373                           	callstack 0
   374  000001                     ControlHumedadAspersor@HumedadActual:
   375                           	callstack 0
   376  000001                     ControlTemperaturaVentilador@TempActual:
   377                           	callstack 0
   378  000001                     ___wmul@multiplier:
   379                           	callstack 0
   380  000001                     fputc@c:
   381                           	callstack 0
   382  000001                     strlen@s:
   383                           	callstack 0
   384  000001                     ___aodiv@dividend:
   385                           	callstack 0
   386  000001                     ___aomod@dividend:
   387                           	callstack 0
   388                           
   389                           ; 8 bytes @ 0x0
   390  000001                     	ds	1
   391  000002                     LCD_Command@cmd:
   392                           	callstack 0
   393  000002                     LCD_Char@dat:
   394                           	callstack 0
   395  000002                     DHT11_ReadData@data:
   396                           	callstack 0
   397  000002                     PrenderLed@TemperaturaAdecuada:
   398                           	callstack 0
   399                           
   400                           ; 1 bytes @ 0x1
   401  000002                     	ds	1
   402  000003                     ??_LCD_Init:
   403  000003                     ??_LCD_Clear:
   404  000003                     LCD_String@msg:
   405                           	callstack 0
   406  000003                     DatosSensorTH@Datos:
   407                           	callstack 0
   408  000003                     Comparar_T_H_Adecuados@TempActual:
   409                           	callstack 0
   410  000003                     ControlHumedadAspersor@HumedadDigitada:
   411                           	callstack 0
   412  000003                     ControlTemperaturaVentilador@TempDigitada:
   413                           	callstack 0
   414  000003                     ___wmul@multiplicand:
   415                           	callstack 0
   416  000003                     fputc@fp:
   417                           	callstack 0
   418  000003                     strlen@a:
   419                           	callstack 0
   420                           
   421                           ; 2 bytes @ 0x2
   422  000003                     	ds	2
   423  000005                     ??_fputc:
   424  000005                     LCD_String_xy@pos:
   425                           	callstack 0
   426  000005                     DatosSensorTH@RH_Integral:
   427                           	callstack 0
   428  000005                     Comparar_T_H_Adecuados@HumActual:
   429                           	callstack 0
   430  000005                     ControlHumedadAspersor@MargenErrorH:
   431                           	callstack 0
   432  000005                     ControlTemperaturaVentilador@MargenErrorT:
   433                           	callstack 0
   434  000005                     ___wmul@product:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0x4
   438  000005                     	ds	1
   439  000006                     DatosSensorTH@T_Integral:
   440                           	callstack 0
   441  000006                     LCD_String_xy@msg:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x5
   445  000006                     	ds	1
   446  000007                     ??_ControlHumedadAspersor:
   447  000007                     ??_ControlTemperaturaVentilador:
   448  000007                     ?_DatoDigitadoAEntero:
   449                           	callstack 0
   450  000007                     DatoDigitadoAEntero@prmTemperatura:
   451                           	callstack 0
   452  000007                     Comparar_T_H_Adecuados@TempDigitada:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0x6
   456  000007                     	ds	1
   457  000008                     LCD_String_xy@row:
   458                           	callstack 0
   459                           
   460                           ; 1 bytes @ 0x7
   461  000008                     	ds	1
   462  000009                     ??_DatoDigitadoAEntero:
   463  000009                     LCD_String_xy@location:
   464                           	callstack 0
   465  000009                     Comparar_T_H_Adecuados@HumDigitada:
   466                           	callstack 0
   467  000009                     ___aodiv@divisor:
   468                           	callstack 0
   469  000009                     ___aomod@divisor:
   470                           	callstack 0
   471                           
   472                           ; 8 bytes @ 0x8
   473  000009                     	ds	1
   474  00000A                     PedirDato@Etiqueta:
   475                           	callstack 0
   476  00000A                     DatoDigitadoAEntero@Unidad:
   477                           	callstack 0
   478  00000A                     fputs@s:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x9
   482  00000A                     	ds	1
   483  00000B                     Comparar_T_H_Adecuados@MargenErrorT:
   484                           	callstack 0
   485                           
   486                           ; 2 bytes @ 0xA
   487  00000B                     	ds	1
   488  00000C                     PedirDato@vecLlenar:
   489                           	callstack 0
   490  00000C                     DatoDigitadoAEntero@Resultado:
   491                           	callstack 0
   492  00000C                     fputs@fp:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0xB
   496  00000C                     	ds	1
   497  00000D                     Comparar_T_H_Adecuados@MargenErrorH:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0xC
   501  00000D                     	ds	1
   502  00000E                     fputs@c:
   503                           	callstack 0
   504  00000E                     PedirDato@CantDatos:
   505                           	callstack 0
   506  00000E                     DatoDigitadoAEntero@Decena:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0xD
   510  00000E                     	ds	1
   511  00000F                     ??_Comparar_T_H_Adecuados:
   512  00000F                     fputs@i:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0xE
   516  00000F                     	ds	1
   517  000010                     ??_PedirDato:
   518                           
   519                           ; 1 bytes @ 0xF
   520  000010                     	ds	1
   521  000011                     ?_pad:
   522                           	callstack 0
   523  000011                     ___aodiv@counter:
   524                           	callstack 0
   525  000011                     ___aomod@counter:
   526                           	callstack 0
   527  000011                     pad@fp:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0x10
   531  000011                     	ds	1
   532  000012                     ___aodiv@sign:
   533                           	callstack 0
   534  000012                     ___aomod@sign:
   535                           	callstack 0
   536  000012                     PedirDato@i:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0x11
   540  000012                     	ds	1
   541  000013                     ?_abs:
   542                           	callstack 0
   543  000013                     pad@buf:
   544                           	callstack 0
   545  000013                     abs@a:
   546                           	callstack 0
   547  000013                     ___aodiv@quotient:
   548                           	callstack 0
   549                           
   550                           ; 8 bytes @ 0x12
   551  000013                     	ds	1
   552  000014                     PedirDato@tecla:
   553                           	callstack 0
   554  000014                     Comparar_T_H_Adecuados@TemperaturaAdecuada:
   555                           	callstack 0
   556                           
   557                           ; 1 bytes @ 0x13
   558  000014                     	ds	1
   559  000015                     ??_abs:
   560  000015                     Comparar_T_H_Adecuados@HumedadAdecuada:
   561                           	callstack 0
   562  000015                     PedirTodosLosDatos@Temperatura:
   563                           	callstack 0
   564  000015                     pad@p:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x14
   568  000015                     	ds	2
   569  000017                     ??_pad:
   570  000017                     PedirTodosLosDatos@Humedad:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0x16
   574  000017                     	ds	1
   575  000018                     pad@i:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0x17
   579  000018                     	ds	1
   580  000019                     PedirTodosLosDatos@MargenErrorT:
   581                           	callstack 0
   582                           
   583                           ; 2 bytes @ 0x18
   584  000019                     	ds	1
   585  00001A                     pad@w:
   586                           	callstack 0
   587                           
   588                           ; 2 bytes @ 0x19
   589  00001A                     	ds	1
   590  00001B                     PedirTodosLosDatos@MargenErrorH:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x1A
   594  00001B                     	ds	1
   595  00001C                     ?_dtoa:
   596                           	callstack 0
   597  00001C                     dtoa@fp:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x1B
   601  00001C                     	ds	1
   602  00001D                     ??_PedirTodosLosDatos:
   603                           
   604                           ; 1 bytes @ 0x1C
   605  00001D                     	ds	1
   606  00001E                     dtoa@d:
   607                           	callstack 0
   608                           
   609                           ; 8 bytes @ 0x1D
   610  00001E                     	ds	8
   611  000026                     ??_dtoa:
   612                           
   613                           ; 1 bytes @ 0x25
   614  000026                     	ds	8
   615  00002E                     _dtoa$943:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x2D
   619  00002E                     	ds	2
   620  000030                     dtoa@p:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x2F
   624  000030                     	ds	2
   625  000032                     dtoa@w:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x31
   629  000032                     	ds	2
   630  000034                     dtoa@s:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x33
   634  000034                     	ds	2
   635  000036                     dtoa@n:
   636                           	callstack 0
   637                           
   638                           ; 8 bytes @ 0x35
   639  000036                     	ds	8
   640  00003E                     dtoa@i:
   641                           	callstack 0
   642                           
   643                           ; 2 bytes @ 0x3D
   644  00003E                     	ds	2
   645  000040                     ?_vfpfcnvrt:
   646                           	callstack 0
   647  000040                     vfpfcnvrt@fp:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x3F
   651  000040                     	ds	2
   652  000042                     vfpfcnvrt@fmt:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x41
   656  000042                     	ds	2
   657  000044                     vfpfcnvrt@ap:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x43
   661  000044                     	ds	2
   662  000046                     ??_vfpfcnvrt:
   663                           
   664                           ; 1 bytes @ 0x45
   665  000046                     	ds	2
   666  000048                     vfpfcnvrt@ll:
   667                           	callstack 0
   668                           
   669                           ; 8 bytes @ 0x47
   670  000048                     	ds	8
   671  000050                     ?_vfprintf:
   672                           	callstack 0
   673  000050                     vfprintf@fp:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0x4F
   677  000050                     	ds	2
   678  000052                     vfprintf@fmt:
   679                           	callstack 0
   680                           
   681                           ; 2 bytes @ 0x51
   682  000052                     	ds	2
   683  000054                     vfprintf@ap:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0x53
   687  000054                     	ds	2
   688  000056                     vfprintf@cfmt:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0x55
   692  000056                     	ds	2
   693  000058                     ?_sprintf:
   694                           	callstack 0
   695  000058                     sprintf@s:
   696                           	callstack 0
   697                           
   698                           ; 2 bytes @ 0x57
   699  000058                     	ds	2
   700  00005A                     sprintf@fmt:
   701                           	callstack 0
   702                           
   703                           ; 2 bytes @ 0x59
   704  00005A                     	ds	4
   705  00005E                     ??_main:
   706                           
   707                           ; 1 bytes @ 0x5D
   708  00005E                     	ds	2
   709                           
   710 ;;
   711 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   712 ;;
   713 ;; *************** function _main *****************
   714 ;; Defined at:
   715 ;;		line 12 in file "Main_Invernadero.c"
   716 ;; Parameters:    Size  Location     Type
   717 ;;		None
   718 ;; Auto vars:     Size  Location     Type
   719 ;;		None
   720 ;; Return value:  Size  Location     Type
   721 ;;                  1    wreg      void 
   722 ;; Registers used:
   723 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   724 ;; Tracked objects:
   725 ;;		On entry : 0/0
   726 ;;		On exit  : 0/0
   727 ;;		Unchanged: 0/0
   728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   729 ;;      Params:         0       0       0       0       0       0       0       0       0
   730 ;;      Locals:         0       0       0       0       0       0       0       0       0
   731 ;;      Temps:          2       0       0       0       0       0       0       0       0
   732 ;;      Totals:         2       0       0       0       0       0       0       0       0
   733 ;;Total ram usage:        2 bytes
   734 ;; Hardware stack levels required when called: 8
   735 ;; This function calls:
   736 ;;		_ApagarAspersores
   737 ;;		_ApagarLeds
   738 ;;		_ApagarVentiladores
   739 ;;		_Comparar_T_H_Adecuados
   740 ;;		_ConfigurarPuertosLCD
   741 ;;		_ControlHumedadAspersor
   742 ;;		_ControlTemperaturaVentilador
   743 ;;		_DatoDigitadoAEntero
   744 ;;		_DatosSensorTH
   745 ;;		_LCD_Char
   746 ;;		_LCD_Init
   747 ;;		_LCD_String
   748 ;;		_LCD_String_xy
   749 ;;		_PedirTodosLosDatos
   750 ;;		_initActuadores
   751 ;;		_initTeclado
   752 ;;		_sprintf
   753 ;; This function is called by:
   754 ;;		Startup code after reset
   755 ;; This function uses a non-reentrant model
   756 ;;
   757                           
   758                           	psect	text0
   759  000B32                     __ptext0:
   760                           	callstack 0
   761  000B32                     _main:
   762                           	callstack 23
   763  000B32                     
   764                           ;Main_Invernadero.c: 14:     OSCCON=0x72;
   765  000B32  0E72               	movlw	114
   766  000B34  6ED3               	movwf	211,c	;volatile
   767                           
   768                           ;Main_Invernadero.c: 15:     ADCON1=0x0F;
   769  000B36  0E0F               	movlw	15
   770  000B38  6EC1               	movwf	193,c	;volatile
   771  000B3A                     
   772                           ;Main_Invernadero.c: 17:     ConfigurarPuertosLCD();
   773  000B3A  ECFB  F00E         	call	_ConfigurarPuertosLCD	;wreg free
   774  000B3E                     
   775                           ;Main_Invernadero.c: 18:     initActuadores();
   776  000B3E  ECE6  F00E         	call	_initActuadores	;wreg free
   777  000B42                     
   778                           ;Main_Invernadero.c: 19:     LCD_Init();
   779  000B42  EC76  F00E         	call	_LCD_Init	;wreg free
   780  000B46                     
   781                           ;Main_Invernadero.c: 20:     initTeclado();
   782  000B46  ECFE  F00E         	call	_initTeclado	;wreg free
   783  000B4A                     
   784                           ;Main_Invernadero.c: 21:     ApagarAspersores();
   785  000B4A  ECF8  F00E         	call	_ApagarAspersores	;wreg free
   786  000B4E                     
   787                           ;Main_Invernadero.c: 22:     ApagarVentiladores();
   788  000B4E  ECF2  F00E         	call	_ApagarVentiladores	;wreg free
   789  000B52                     
   790                           ;Main_Invernadero.c: 23:     ApagarLeds();
   791  000B52  ECEB  F00E         	call	_ApagarLeds	;wreg free
   792  000B56                     l2375:
   793                           
   794                           ;Main_Invernadero.c: 26:      if(indice<2){
   795  000B56  0100               	movlb	0	; () banked
   796  000B58  BF6D               	btfsc	(_indice+1)& (0+255),7,b
   797  000B5A  EFBA  F005         	goto	u1660
   798  000B5E  516D               	movf	(_indice+1)& (0+255),w,b
   799  000B60  E107               	bnz	u1661
   800  000B62  0E02               	movlw	2
   801  000B64  5D6C               	subwf	_indice& (0+255),w,b
   802  000B66  B0D8               	btfsc	status,0,c
   803  000B68  EFB8  F005         	goto	u1661
   804  000B6C  EFBA  F005         	goto	u1660
   805  000B70                     u1661:
   806  000B70  EFD3  F005         	goto	l2381
   807  000B74                     u1660:
   808  000B74                     
   809                           ; BSR set to: 0
   810                           ;Main_Invernadero.c: 27:          PedirTodosLosDatos(Temperatura,Humedad,MargenErrorT,Ma
      +                          rgenErrorH);
   811  000B74  0EA4               	movlw	low _Temperatura
   812  000B76  6E15               	movwf	PedirTodosLosDatos@Temperatura^0,c
   813  000B78  0E00               	movlw	high _Temperatura
   814  000B7A  6E16               	movwf	(PedirTodosLosDatos@Temperatura+1)^0,c
   815  000B7C  0EA2               	movlw	low _Humedad
   816  000B7E  6E17               	movwf	PedirTodosLosDatos@Humedad^0,c
   817  000B80  0E00               	movlw	high _Humedad
   818  000B82  6E18               	movwf	(PedirTodosLosDatos@Humedad+1)^0,c
   819  000B84  0EA7               	movlw	low _MargenErrorT
   820  000B86  6E19               	movwf	PedirTodosLosDatos@MargenErrorT^0,c
   821  000B88  0E00               	movlw	high _MargenErrorT
   822  000B8A  6E1A               	movwf	(PedirTodosLosDatos@MargenErrorT+1)^0,c
   823  000B8C  0EA6               	movlw	low _MargenErrorH
   824  000B8E  6E1B               	movwf	PedirTodosLosDatos@MargenErrorH^0,c
   825  000B90  0E00               	movlw	high _MargenErrorH
   826  000B92  6E1C               	movwf	(PedirTodosLosDatos@MargenErrorH+1)^0,c
   827  000B94  EC6D  F00B         	call	_PedirTodosLosDatos	;wreg free
   828  000B98                     
   829                           ;Main_Invernadero.c: 28:          indice = 2;
   830  000B98  0E00               	movlw	0
   831  000B9A  0100               	movlb	0	; () banked
   832  000B9C  6F6D               	movwf	(_indice+1)& (0+255),b
   833  000B9E  0E02               	movlw	2
   834  000BA0  6F6C               	movwf	_indice& (0+255),b
   835                           
   836                           ;Main_Invernadero.c: 29:     }else{
   837  000BA2  EFFE  F005         	goto	l2391
   838  000BA6                     l2381:
   839                           
   840                           ; BSR set to: 0
   841                           ;Main_Invernadero.c: 30:         if(bandera==0){
   842  000BA6  5175               	movf	_bandera& (0+255),w,b
   843  000BA8  A4D8               	btfss	status,2,c
   844  000BAA  EFD9  F005         	goto	u1671
   845  000BAE  EFDB  F005         	goto	u1670
   846  000BB2                     u1671:
   847  000BB2  EFFC  F005         	goto	l2389
   848  000BB6                     u1670:
   849  000BB6                     
   850                           ; BSR set to: 0
   851                           ;Main_Invernadero.c: 31:          TemperaturaAdecuada = DatoDigitadoAEntero(Temperatura)
      +                          ;
   852  000BB6  0EA4               	movlw	low _Temperatura
   853  000BB8  6E07               	movwf	DatoDigitadoAEntero@prmTemperatura^0,c
   854  000BBA  0E00               	movlw	high _Temperatura
   855  000BBC  6E08               	movwf	(DatoDigitadoAEntero@prmTemperatura+1)^0,c
   856  000BBE  EC0C  F00C         	call	_DatoDigitadoAEntero	;wreg free
   857  000BC2  C007  F06A         	movff	?_DatoDigitadoAEntero,_TemperaturaAdecuada
   858  000BC6  C008  F06B         	movff	?_DatoDigitadoAEntero+1,_TemperaturaAdecuada+1
   859                           
   860                           ;Main_Invernadero.c: 32:          HumedadAdecuada = DatoDigitadoAEntero(Humedad);
   861  000BCA  0EA2               	movlw	low _Humedad
   862  000BCC  6E07               	movwf	DatoDigitadoAEntero@prmTemperatura^0,c
   863  000BCE  0E00               	movlw	high _Humedad
   864  000BD0  6E08               	movwf	(DatoDigitadoAEntero@prmTemperatura+1)^0,c
   865  000BD2  EC0C  F00C         	call	_DatoDigitadoAEntero	;wreg free
   866  000BD6  C007  F068         	movff	?_DatoDigitadoAEntero,_HumedadAdecuada
   867  000BDA  C008  F069         	movff	?_DatoDigitadoAEntero+1,_HumedadAdecuada+1
   868  000BDE                     
   869                           ;Main_Invernadero.c: 33:          MargenET = MargenErrorT[0]-48;
   870  000BDE  0ED0               	movlw	208
   871  000BE0  0100               	movlb	0	; () banked
   872  000BE2  25A7               	addwf	_MargenErrorT& (0+255),w,b
   873  000BE4  6F70               	movwf	_MargenET& (0+255),b
   874  000BE6  6B71               	clrf	(_MargenET+1)& (0+255),b
   875  000BE8  0EFF               	movlw	255
   876  000BEA  2371               	addwfc	(_MargenET+1)& (0+255),f,b
   877  000BEC                     
   878                           ; BSR set to: 0
   879                           ;Main_Invernadero.c: 34:          MargenEH = MargenErrorH[0]-48;
   880  000BEC  0ED0               	movlw	208
   881  000BEE  25A6               	addwf	_MargenErrorH& (0+255),w,b
   882  000BF0  6F6E               	movwf	_MargenEH& (0+255),b
   883  000BF2  6B6F               	clrf	(_MargenEH+1)& (0+255),b
   884  000BF4  0EFF               	movlw	255
   885  000BF6  236F               	addwfc	(_MargenEH+1)& (0+255),f,b
   886  000BF8                     l2389:
   887                           
   888                           ; BSR set to: 0
   889                           ;Main_Invernadero.c: 36:         bandera=1;
   890  000BF8  0E01               	movlw	1
   891  000BFA  6F75               	movwf	_bandera& (0+255),b
   892  000BFC                     l2391:
   893                           
   894                           ; BSR set to: 0
   895                           ;Main_Invernadero.c: 38:      if (bandera==1){
   896  000BFC  0575               	decf	_bandera& (0+255),w,b
   897  000BFE  A4D8               	btfss	status,2,c
   898  000C00  EF04  F006         	goto	u1681
   899  000C04  EF06  F006         	goto	u1680
   900  000C08                     u1681:
   901  000C08  EFAB  F005         	goto	l2375
   902  000C0C                     u1680:
   903  000C0C                     
   904                           ; BSR set to: 0
   905                           ;Main_Invernadero.c: 39:         DatosSensorTH(Datos);
   906  000C0C  0EA0               	movlw	low _Datos
   907  000C0E  6E03               	movwf	DatosSensorTH@Datos^0,c
   908  000C10  0E00               	movlw	high _Datos
   909  000C12  6E04               	movwf	(DatosSensorTH@Datos+1)^0,c
   910  000C14  EC21  F00E         	call	_DatosSensorTH	;wreg free
   911                           
   912                           ;Main_Invernadero.c: 40:         Comparar_T_H_Adecuados(&Datos[0],&Datos[1],TemperaturaA
      +                          decuada,HumedadAdecuada,MargenET,MargenEH);
   913  000C18  0EA0               	movlw	low _Datos
   914  000C1A  6E03               	movwf	Comparar_T_H_Adecuados@TempActual^0,c
   915  000C1C  0E00               	movlw	high _Datos
   916  000C1E  6E04               	movwf	(Comparar_T_H_Adecuados@TempActual+1)^0,c
   917  000C20  0EA1               	movlw	low (_Datos+1)
   918  000C22  6E05               	movwf	Comparar_T_H_Adecuados@HumActual^0,c
   919  000C24  0E00               	movlw	high (_Datos+1)
   920  000C26  6E06               	movwf	(Comparar_T_H_Adecuados@HumActual+1)^0,c
   921  000C28  C06A  F007         	movff	_TemperaturaAdecuada,Comparar_T_H_Adecuados@TempDigitada
   922  000C2C  C06B  F008         	movff	_TemperaturaAdecuada+1,Comparar_T_H_Adecuados@TempDigitada+1
   923  000C30  C068  F009         	movff	_HumedadAdecuada,Comparar_T_H_Adecuados@HumDigitada
   924  000C34  C069  F00A         	movff	_HumedadAdecuada+1,Comparar_T_H_Adecuados@HumDigitada+1
   925  000C38  C070  F00B         	movff	_MargenET,Comparar_T_H_Adecuados@MargenErrorT
   926  000C3C  C071  F00C         	movff	_MargenET+1,Comparar_T_H_Adecuados@MargenErrorT+1
   927  000C40  C06E  F00D         	movff	_MargenEH,Comparar_T_H_Adecuados@MargenErrorH
   928  000C44  C06F  F00E         	movff	_MargenEH+1,Comparar_T_H_Adecuados@MargenErrorH+1
   929  000C48  EC27  F00A         	call	_Comparar_T_H_Adecuados	;wreg free
   930                           
   931                           ;Main_Invernadero.c: 41:         ControlHumedadAspersor(&Datos[1],HumedadAdecuada,Margen
      +                          EH);
   932  000C4C  0EA1               	movlw	low (_Datos+1)
   933  000C4E  6E01               	movwf	ControlHumedadAspersor@HumedadActual^0,c
   934  000C50  0E00               	movlw	high (_Datos+1)
   935  000C52  6E02               	movwf	(ControlHumedadAspersor@HumedadActual+1)^0,c
   936  000C54  C068  F003         	movff	_HumedadAdecuada,ControlHumedadAspersor@HumedadDigitada
   937  000C58  C069  F004         	movff	_HumedadAdecuada+1,ControlHumedadAspersor@HumedadDigitada+1
   938  000C5C  C06E  F005         	movff	_MargenEH,ControlHumedadAspersor@MargenErrorH
   939  000C60  C06F  F006         	movff	_MargenEH+1,ControlHumedadAspersor@MargenErrorH+1
   940  000C64  EC9C  F00D         	call	_ControlHumedadAspersor	;wreg free
   941                           
   942                           ;Main_Invernadero.c: 42:         ControlTemperaturaVentilador(&Datos[0],TemperaturaAdecu
      +                          ada,MargenET);
   943  000C68  0EA0               	movlw	low _Datos
   944  000C6A  6E01               	movwf	ControlTemperaturaVentilador@TempActual^0,c
   945  000C6C  0E00               	movlw	high _Datos
   946  000C6E  6E02               	movwf	(ControlTemperaturaVentilador@TempActual+1)^0,c
   947  000C70  C06A  F003         	movff	_TemperaturaAdecuada,ControlTemperaturaVentilador@TempDigitada
   948  000C74  C06B  F004         	movff	_TemperaturaAdecuada+1,ControlTemperaturaVentilador@TempDigitada+1
   949  000C78  C070  F005         	movff	_MargenET,ControlTemperaturaVentilador@MargenErrorT
   950  000C7C  C071  F006         	movff	_MargenET+1,ControlTemperaturaVentilador@MargenErrorT+1
   951  000C80  EC79  F00D         	call	_ControlTemperaturaVentilador	;wreg free
   952  000C84                     
   953                           ;Main_Invernadero.c: 45:         sprintf(Cadena,"%d",Datos[1]);
   954  000C84  0E96               	movlw	low _Cadena
   955  000C86  6E58               	movwf	sprintf@s^0,c
   956  000C88  0E00               	movlw	high _Cadena
   957  000C8A  6E59               	movwf	(sprintf@s+1)^0,c
   958  000C8C  0E4B               	movlw	low (STR_2+1)
   959  000C8E  6E5A               	movwf	sprintf@fmt^0,c
   960  000C90  0E08               	movlw	high (STR_2+1)
   961  000C92  6E5B               	movwf	(sprintf@fmt+1)^0,c
   962  000C94  C0A1  F05C         	movff	_Datos+1,?_sprintf+4
   963  000C98  6A5D               	clrf	(?_sprintf+5)^0,c
   964  000C9A  EC00  F00D         	call	_sprintf	;wreg free
   965  000C9E                     
   966                           ;Main_Invernadero.c: 46:         LCD_String_xy(0,0,Cadena);
   967  000C9E  0E00               	movlw	0
   968  000CA0  6E05               	movwf	LCD_String_xy@pos^0,c
   969  000CA2  0E96               	movlw	low _Cadena
   970  000CA4  6E06               	movwf	LCD_String_xy@msg^0,c
   971  000CA6  0E00               	movlw	high _Cadena
   972  000CA8  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
   973  000CAA  0E00               	movlw	0
   974  000CAC  EC01  F00E         	call	_LCD_String_xy
   975  000CB0                     
   976                           ;Main_Invernadero.c: 47:         sprintf(Cadena,".%d",0);
   977  000CB0  0E96               	movlw	low _Cadena
   978  000CB2  6E58               	movwf	sprintf@s^0,c
   979  000CB4  0E00               	movlw	high _Cadena
   980  000CB6  6E59               	movwf	(sprintf@s+1)^0,c
   981  000CB8  0E4A               	movlw	low STR_2
   982  000CBA  6E5A               	movwf	sprintf@fmt^0,c
   983  000CBC  0E08               	movlw	high STR_2
   984  000CBE  6E5B               	movwf	(sprintf@fmt+1)^0,c
   985  000CC0  0E00               	movlw	0
   986  000CC2  6E5D               	movwf	(?_sprintf+5)^0,c
   987  000CC4  0E00               	movlw	0
   988  000CC6  6E5C               	movwf	(?_sprintf+4)^0,c
   989  000CC8  EC00  F00D         	call	_sprintf	;wreg free
   990  000CCC                     
   991                           ;Main_Invernadero.c: 48:         LCD_Char('%');
   992  000CCC  0E25               	movlw	37
   993  000CCE  EC29  F00D         	call	_LCD_Char
   994                           
   995                           ;Main_Invernadero.c: 49:         sprintf(Cadena,"  Hum.");
   996  000CD2  0E96               	movlw	low _Cadena
   997  000CD4  6E58               	movwf	sprintf@s^0,c
   998  000CD6  0E00               	movlw	high _Cadena
   999  000CD8  6E59               	movwf	(sprintf@s+1)^0,c
  1000  000CDA  0E43               	movlw	low STR_3
  1001  000CDC  6E5A               	movwf	sprintf@fmt^0,c
  1002  000CDE  0E08               	movlw	high STR_3
  1003  000CE0  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1004  000CE2  EC00  F00D         	call	_sprintf	;wreg free
  1005  000CE6                     
  1006                           ;Main_Invernadero.c: 50:         LCD_String(Cadena);
  1007  000CE6  0E96               	movlw	low _Cadena
  1008  000CE8  6E03               	movwf	LCD_String@msg^0,c
  1009  000CEA  0E00               	movlw	high _Cadena
  1010  000CEC  6E04               	movwf	(LCD_String@msg+1)^0,c
  1011  000CEE  EC78  F00C         	call	_LCD_String	;wreg free
  1012  000CF2                     
  1013                           ;Main_Invernadero.c: 53:        sprintf(Cadena,"%d",Datos[0]);
  1014  000CF2  0E96               	movlw	low _Cadena
  1015  000CF4  6E58               	movwf	sprintf@s^0,c
  1016  000CF6  0E00               	movlw	high _Cadena
  1017  000CF8  6E59               	movwf	(sprintf@s+1)^0,c
  1018  000CFA  0E4B               	movlw	low (STR_2+1)
  1019  000CFC  6E5A               	movwf	sprintf@fmt^0,c
  1020  000CFE  0E08               	movlw	high (STR_2+1)
  1021  000D00  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1022  000D02  C0A0  F05C         	movff	_Datos,?_sprintf+4
  1023  000D06  6A5D               	clrf	(?_sprintf+5)^0,c
  1024  000D08  EC00  F00D         	call	_sprintf	;wreg free
  1025                           
  1026                           ;Main_Invernadero.c: 54:        LCD_String_xy(2,0,Cadena);
  1027  000D0C  0E00               	movlw	0
  1028  000D0E  6E05               	movwf	LCD_String_xy@pos^0,c
  1029  000D10  0E96               	movlw	low _Cadena
  1030  000D12  6E06               	movwf	LCD_String_xy@msg^0,c
  1031  000D14  0E00               	movlw	high _Cadena
  1032  000D16  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  1033  000D18  0E02               	movlw	2
  1034  000D1A  EC01  F00E         	call	_LCD_String_xy
  1035  000D1E                     
  1036                           ;Main_Invernadero.c: 55:        sprintf(Cadena,".%d",0);
  1037  000D1E  0E96               	movlw	low _Cadena
  1038  000D20  6E58               	movwf	sprintf@s^0,c
  1039  000D22  0E00               	movlw	high _Cadena
  1040  000D24  6E59               	movwf	(sprintf@s+1)^0,c
  1041  000D26  0E4A               	movlw	low STR_2
  1042  000D28  6E5A               	movwf	sprintf@fmt^0,c
  1043  000D2A  0E08               	movlw	high STR_2
  1044  000D2C  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1045  000D2E  0E00               	movlw	0
  1046  000D30  6E5D               	movwf	(?_sprintf+5)^0,c
  1047  000D32  0E00               	movlw	0
  1048  000D34  6E5C               	movwf	(?_sprintf+4)^0,c
  1049  000D36  EC00  F00D         	call	_sprintf	;wreg free
  1050  000D3A                     
  1051                           ;Main_Invernadero.c: 56:        LCD_Char(0xdf);
  1052  000D3A  0EDF               	movlw	223
  1053  000D3C  EC29  F00D         	call	_LCD_Char
  1054  000D40                     
  1055                           ;Main_Invernadero.c: 57:        sprintf(Cadena,"C Temp.");
  1056  000D40  0E96               	movlw	low _Cadena
  1057  000D42  6E58               	movwf	sprintf@s^0,c
  1058  000D44  0E00               	movlw	high _Cadena
  1059  000D46  6E59               	movwf	(sprintf@s+1)^0,c
  1060  000D48  0E3B               	movlw	low STR_6
  1061  000D4A  6E5A               	movwf	sprintf@fmt^0,c
  1062  000D4C  0E08               	movlw	high STR_6
  1063  000D4E  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1064  000D50  EC00  F00D         	call	_sprintf	;wreg free
  1065  000D54                     
  1066                           ;Main_Invernadero.c: 58:        LCD_String(Cadena);
  1067  000D54  0E96               	movlw	low _Cadena
  1068  000D56  6E03               	movwf	LCD_String@msg^0,c
  1069  000D58  0E00               	movlw	high _Cadena
  1070  000D5A  6E04               	movwf	(LCD_String@msg+1)^0,c
  1071  000D5C  EC78  F00C         	call	_LCD_String	;wreg free
  1072  000D60                     
  1073                           ;Main_Invernadero.c: 60:        _delay((unsigned long)((500)*(8000000L/4000.0)));
  1074  000D60  0E06               	movlw	6
  1075  000D62  6E5F               	movwf	(??_main+1)^0,c
  1076  000D64  0E13               	movlw	19
  1077  000D66  6E5E               	movwf	??_main^0,c
  1078  000D68  0EAE               	movlw	174
  1079  000D6A                     u1697:
  1080  000D6A  2EE8               	decfsz	wreg,f,c
  1081  000D6C  D7FE               	bra	u1697
  1082  000D6E  2E5E               	decfsz	??_main^0,f,c
  1083  000D70  D7FC               	bra	u1697
  1084  000D72  2E5F               	decfsz	(??_main+1)^0,f,c
  1085  000D74  D7FA               	bra	u1697
  1086  000D76  EFAB  F005         	goto	l2375
  1087  000D7A  EF00  F000         	goto	start
  1088  000D7E                     __end_of_main:
  1089                           	callstack 0
  1090                           
  1091 ;; *************** function _sprintf *****************
  1092 ;; Defined at:
  1093 ;;		line 9 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\nf_sprintf.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;  s               2   87[COMRAM] PTR unsigned char 
  1096 ;;		 -> Cadena(10), 
  1097 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
  1098 ;;		 -> STR_6(8), STR_5(4), STR_4(3), STR_3(7), 
  1099 ;;		 -> STR_2(4), STR_1(3), 
  1100 ;; Auto vars:     Size  Location     Type
  1101 ;;  f               6    2[BANK0 ] struct _IO_FILE
  1102 ;;  ap              2    0[BANK0 ] PTR void [1]
  1103 ;;		 -> ?_sprintf(2), 
  1104 ;;  ret             2    0        int 
  1105 ;; Return value:  Size  Location     Type
  1106 ;;                  2   87[COMRAM] int 
  1107 ;; Registers used:
  1108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1109 ;; Tracked objects:
  1110 ;;		On entry : 0/0
  1111 ;;		On exit  : 0/0
  1112 ;;		Unchanged: 0/0
  1113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1114 ;;      Params:         6       0       0       0       0       0       0       0       0
  1115 ;;      Locals:         0       8       0       0       0       0       0       0       0
  1116 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1117 ;;      Totals:         6       8       0       0       0       0       0       0       0
  1118 ;;Total ram usage:       14 bytes
  1119 ;; Hardware stack levels used: 1
  1120 ;; Hardware stack levels required when called: 7
  1121 ;; This function calls:
  1122 ;;		_vfprintf
  1123 ;; This function is called by:
  1124 ;;		_main
  1125 ;; This function uses a non-reentrant model
  1126 ;;
  1127                           
  1128                           	psect	text1
  1129  001A00                     __ptext1:
  1130                           	callstack 0
  1131  001A00                     _sprintf:
  1132                           	callstack 23
  1133  001A00  0E5C               	movlw	low (?_sprintf+4)
  1134  001A02  0100               	movlb	0	; () banked
  1135  001A04  6FB8               	movwf	sprintf@ap& (0+255),b
  1136  001A06  0E00               	movlw	high (?_sprintf+4)
  1137  001A08  6FB9               	movwf	(sprintf@ap+1)& (0+255),b
  1138  001A0A  C058  F0BA         	movff	sprintf@s,sprintf@f
  1139  001A0E  C059  F0BB         	movff	sprintf@s+1,sprintf@f+1
  1140  001A12                     
  1141                           ; BSR set to: 0
  1142  001A12  0E00               	movlw	0
  1143  001A14  6FBD               	movwf	(sprintf@f+3)& (0+255),b
  1144  001A16  0E00               	movlw	0
  1145  001A18  6FBC               	movwf	(sprintf@f+2)& (0+255),b
  1146  001A1A                     
  1147                           ; BSR set to: 0
  1148  001A1A  0E00               	movlw	0
  1149  001A1C  6FBF               	movwf	(sprintf@f+5)& (0+255),b
  1150  001A1E  0E00               	movlw	0
  1151  001A20  6FBE               	movwf	(sprintf@f+4)& (0+255),b
  1152  001A22                     
  1153                           ; BSR set to: 0
  1154  001A22  0EBA               	movlw	low sprintf@f
  1155  001A24  6E50               	movwf	vfprintf@fp^0,c
  1156  001A26  0E00               	movlw	high sprintf@f
  1157  001A28  6E51               	movwf	(vfprintf@fp+1)^0,c
  1158  001A2A  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
  1159  001A2E  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1160  001A32  0EB8               	movlw	low sprintf@ap
  1161  001A34  6E54               	movwf	vfprintf@ap^0,c
  1162  001A36  0E00               	movlw	high sprintf@ap
  1163  001A38  6E55               	movwf	(vfprintf@ap+1)^0,c
  1164  001A3A  EC47  F00C         	call	_vfprintf	;wreg free
  1165  001A3E  0100               	movlb	0	; () banked
  1166  001A40  51BC               	movf	(sprintf@f+2)& (0+255),w,b
  1167  001A42  2458               	addwf	sprintf@s^0,w,c
  1168  001A44  6ED9               	movwf	fsr2l,c
  1169  001A46  51BD               	movf	(sprintf@f+3)& (0+255),w,b
  1170  001A48  2059               	addwfc	(sprintf@s+1)^0,w,c
  1171  001A4A  6EDA               	movwf	fsr2h,c
  1172  001A4C  0E00               	movlw	0
  1173  001A4E  6EDF               	movwf	indf2,c
  1174  001A50                     
  1175                           ; BSR set to: 0
  1176  001A50  0012               	return		;funcret
  1177  001A52                     __end_of_sprintf:
  1178                           	callstack 0
  1179                           
  1180 ;; *************** function _vfprintf *****************
  1181 ;; Defined at:
  1182 ;;		line 1390 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c"
  1183 ;; Parameters:    Size  Location     Type
  1184 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  1185 ;;		 -> sprintf@f(6), 
  1186 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  1187 ;;		 -> STR_6(8), STR_5(4), STR_4(3), STR_3(7), 
  1188 ;;		 -> STR_2(4), STR_1(3), 
  1189 ;;  ap              2   83[COMRAM] PTR PTR void 
  1190 ;;		 -> sprintf@ap(2), 
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  1193 ;;		 -> STR_6(8), STR_5(4), STR_4(3), STR_3(7), 
  1194 ;;		 -> STR_2(4), STR_1(3), 
  1195 ;; Return value:  Size  Location     Type
  1196 ;;                  2   79[COMRAM] int 
  1197 ;; Registers used:
  1198 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1204 ;;      Params:         6       0       0       0       0       0       0       0       0
  1205 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1206 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1207 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1208 ;;Total ram usage:        8 bytes
  1209 ;; Hardware stack levels used: 1
  1210 ;; Hardware stack levels required when called: 6
  1211 ;; This function calls:
  1212 ;;		_vfpfcnvrt
  1213 ;; This function is called by:
  1214 ;;		_sprintf
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218                           	psect	text2
  1219  00188E                     __ptext2:
  1220                           	callstack 0
  1221  00188E                     _vfprintf:
  1222                           	callstack 23
  1223  00188E                     
  1224                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1390: int vfprintf(FIL
      +                          E *fp, const char *fmt, va_list ap);D:\XC8 compilador para el MPLAB\pic\sources\c99\comm
      +                          on\doprnt.c: 1391: {;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 13
      +                          93:     char *cfmt;;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 139
      +                          5:     cfmt = (char *)fmt;
  1225  00188E  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  1226  001892  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1227  001896                     
  1228                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1396:     nout = 0;
  1229  001896  0E00               	movlw	0
  1230  001898  0100               	movlb	0	; () banked
  1231  00189A  6F61               	movwf	(_nout+1)& (0+255),b
  1232  00189C  0E00               	movlw	0
  1233  00189E  6F60               	movwf	_nout& (0+255),b
  1234                           
  1235                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1397:     while (*cfmt
      +                          ) {
  1236  0018A0  EF65  F00C         	goto	l2255
  1237  0018A4                     l2253:
  1238                           
  1239                           ; BSR set to: 0
  1240                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1398:         nout += 
      +                          vfpfcnvrt(fp, &cfmt, ap);
  1241  0018A4  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  1242  0018A8  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1243  0018AC  0E56               	movlw	low vfprintf@cfmt
  1244  0018AE  6E42               	movwf	vfpfcnvrt@fmt^0,c
  1245  0018B0  0E00               	movlw	high vfprintf@cfmt
  1246  0018B2  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1247  0018B4  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  1248  0018B8  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1249  0018BC  ECD7  F007         	call	_vfpfcnvrt	;wreg free
  1250  0018C0  5040               	movf	?_vfpfcnvrt^0,w,c
  1251  0018C2  0100               	movlb	0	; () banked
  1252  0018C4  2760               	addwf	_nout& (0+255),f,b
  1253  0018C6  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  1254  0018C8  2361               	addwfc	(_nout+1)& (0+255),f,b
  1255  0018CA                     l2255:
  1256                           
  1257                           ; BSR set to: 0
  1258                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1397:     while (*cfmt
      +                          ) {
  1259  0018CA  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  1260  0018CE  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1261  0018D2                     	if	0	;tblptru may be non-zero
  1262  0018D2                     	endif
  1263  0018D2                     	if	0	;tblptru may be non-zero
  1264  0018D2                     	endif
  1265  0018D2  0008               	tblrd		*
  1266  0018D4  50F5               	movf	tablat,w,c
  1267  0018D6  0900               	iorlw	0
  1268  0018D8  A4D8               	btfss	status,2,c
  1269  0018DA  EF71  F00C         	goto	u1591
  1270  0018DE  EF73  F00C         	goto	u1590
  1271  0018E2                     u1591:
  1272  0018E2  EF52  F00C         	goto	l2253
  1273  0018E6                     u1590:
  1274  0018E6                     
  1275                           ; BSR set to: 0
  1276                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1400:     return nout;
  1277  0018E6  C060  F050         	movff	_nout,?_vfprintf
  1278  0018EA  C061  F051         	movff	_nout+1,?_vfprintf+1
  1279  0018EE                     
  1280                           ; BSR set to: 0
  1281  0018EE  0012               	return		;funcret
  1282  0018F0                     __end_of_vfprintf:
  1283                           	callstack 0
  1284                           
  1285 ;; *************** function _vfpfcnvrt *****************
  1286 ;; Defined at:
  1287 ;;		line 692 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c"
  1288 ;; Parameters:    Size  Location     Type
  1289 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  1290 ;;		 -> sprintf@f(6), 
  1291 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  1292 ;;		 -> vfprintf@cfmt(2), 
  1293 ;;  ap              2   67[COMRAM] PTR PTR void 
  1294 ;;		 -> sprintf@ap(2), 
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;  ll              8   71[COMRAM] long long 
  1297 ;;  llu             8    0        unsigned long long 
  1298 ;;  f               4    0        unsigned long long 
  1299 ;;  vp              3    0        PTR void 
  1300 ;;  ct              3    0        unsigned char [3]
  1301 ;;  cp              3    0        PTR unsigned char 
  1302 ;;  i               2    0        int 
  1303 ;;  done            2    0        int 
  1304 ;;  c               1    0        unsigned char 
  1305 ;; Return value:  Size  Location     Type
  1306 ;;                  2   63[COMRAM] int 
  1307 ;; Registers used:
  1308 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1309 ;; Tracked objects:
  1310 ;;		On entry : 0/0
  1311 ;;		On exit  : 0/0
  1312 ;;		Unchanged: 0/0
  1313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1314 ;;      Params:         6       0       0       0       0       0       0       0       0
  1315 ;;      Locals:         8       0       0       0       0       0       0       0       0
  1316 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1317 ;;      Totals:        16       0       0       0       0       0       0       0       0
  1318 ;;Total ram usage:       16 bytes
  1319 ;; Hardware stack levels used: 1
  1320 ;; Hardware stack levels required when called: 5
  1321 ;; This function calls:
  1322 ;;		_dtoa
  1323 ;;		_fputc
  1324 ;; This function is called by:
  1325 ;;		_vfprintf
  1326 ;; This function uses a non-reentrant model
  1327 ;;
  1328                           
  1329                           	psect	text3
  1330  000FAE                     __ptext3:
  1331                           	callstack 0
  1332  000FAE                     _vfpfcnvrt:
  1333                           	callstack 23
  1334  000FAE                     
  1335                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 692: static int vfpfcn
      +                          vrt(FILE *fp, char *fmt[], va_list ap);D:\XC8 compilador para el MPLAB\pic\sources\c99\c
      +                          ommon\doprnt.c: 693: {;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 
      +                          694:     char c, *cp, ct[3];;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\dopr
      +                          nt.c: 695:     int done, i;;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprn
      +                          t.c: 696:     long long ll;;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprn
      +                          t.c: 697:     unsigned long long llu;
  1336  000FAE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1337  000FB2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1338  000FB6  CFDE FFF6          	movff	postinc2,tblptrl
  1339  000FBA  CFDD FFF7          	movff	postdec2,tblptrh
  1340  000FBE                     	if	0	;tblptru may be non-zero
  1341  000FBE                     	endif
  1342  000FBE                     	if	0	;tblptru may be non-zero
  1343  000FBE                     	endif
  1344  000FBE  0008               	tblrd		*
  1345  000FC0  50F5               	movf	tablat,w,c
  1346  000FC2  0A25               	xorlw	37
  1347  000FC4  A4D8               	btfss	status,2,c
  1348  000FC6  EFE7  F007         	goto	u1431
  1349  000FCA  EFE9  F007         	goto	u1430
  1350  000FCE                     u1431:
  1351  000FCE  EF95  F008         	goto	l2161
  1352  000FD2                     u1430:
  1353  000FD2                     
  1354                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 703:         ++*fmt;
  1355  000FD2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1356  000FD6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1357  000FDA  2ADE               	incf	postinc2,f,c
  1358  000FDC  0E00               	movlw	0
  1359  000FDE  22DD               	addwfc	postdec2,f,c
  1360  000FE0                     
  1361                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 705:         flags = w
      +                          idth = 0;
  1362  000FE0  0E00               	movlw	0
  1363  000FE2  0100               	movlb	0	; () banked
  1364  000FE4  6F63               	movwf	(_width+1)& (0+255),b
  1365  000FE6  0E00               	movlw	0
  1366  000FE8  6F62               	movwf	_width& (0+255),b
  1367  000FEA  C062  F066         	movff	_width,_flags
  1368  000FEE  C063  F067         	movff	_width+1,_flags+1
  1369  000FF2                     
  1370                           ; BSR set to: 0
  1371                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 706:         prec = -1
      +                          ;
  1372  000FF2  6964               	setf	_prec& (0+255),b
  1373  000FF4  6965               	setf	(_prec+1)& (0+255),b
  1374  000FF6                     
  1375                           ; BSR set to: 0
  1376                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 847:         if ((*fmt
      +                          [0] == 'd') || (*fmt[0] == 'i')) {
  1377  000FF6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1378  000FFA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1379  000FFE  CFDE FFF6          	movff	postinc2,tblptrl
  1380  001002  CFDD FFF7          	movff	postdec2,tblptrh
  1381  001006                     	if	0	;tblptru may be non-zero
  1382  001006                     	endif
  1383  001006                     	if	0	;tblptru may be non-zero
  1384  001006                     	endif
  1385  001006  0008               	tblrd		*
  1386  001008  50F5               	movf	tablat,w,c
  1387  00100A  0A64               	xorlw	100
  1388  00100C  B4D8               	btfsc	status,2,c
  1389  00100E  EF0B  F008         	goto	u1441
  1390  001012  EF0D  F008         	goto	u1440
  1391  001016                     u1441:
  1392  001016  EF1F  F008         	goto	l2139
  1393  00101A                     u1440:
  1394  00101A                     
  1395                           ; BSR set to: 0
  1396  00101A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1397  00101E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1398  001022  CFDE FFF6          	movff	postinc2,tblptrl
  1399  001026  CFDD FFF7          	movff	postdec2,tblptrh
  1400  00102A                     	if	0	;tblptru may be non-zero
  1401  00102A                     	endif
  1402  00102A                     	if	0	;tblptru may be non-zero
  1403  00102A                     	endif
  1404  00102A  0008               	tblrd		*
  1405  00102C  50F5               	movf	tablat,w,c
  1406  00102E  0A69               	xorlw	105
  1407  001030  A4D8               	btfss	status,2,c
  1408  001032  EF1D  F008         	goto	u1451
  1409  001036  EF1F  F008         	goto	u1450
  1410  00103A                     u1451:
  1411  00103A  EF5F  F008         	goto	l2145
  1412  00103E                     u1450:
  1413  00103E                     l2139:
  1414                           
  1415                           ; BSR set to: 0
  1416                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 849:             ++*fm
      +                          t;
  1417  00103E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1418  001042  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1419  001046  2ADE               	incf	postinc2,f,c
  1420  001048  0E00               	movlw	0
  1421  00104A  22DD               	addwfc	postdec2,f,c
  1422                           
  1423                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 850:             ll = 
      +                          (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1424  00104C  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1425  001050  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1426  001054  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1427  001058  0E02               	movlw	2
  1428  00105A  26DE               	addwf	postinc2,f,c
  1429  00105C  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1430  001060  0E00               	movlw	0
  1431  001062  22DD               	addwfc	postdec2,f,c
  1432  001064  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1433  001068  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1434  00106C  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  1435  001070  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  1436  001074  0E00               	movlw	0
  1437  001076  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1438  001078  0EFF               	movlw	-1
  1439  00107A  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  1440  00107C  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  1441  00107E  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  1442  001080  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  1443  001082  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  1444  001084  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  1445  001086                     
  1446                           ; BSR set to: 0
  1447                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 852:             retur
      +                          n dtoa(fp, ll);
  1448  001086  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1449  00108A  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1450  00108E  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  1451  001092  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1452  001096  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1453  00109A  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1454  00109E  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1455  0010A2  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1456  0010A6  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1457  0010AA  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1458  0010AE  EC28  F004         	call	_dtoa	;wreg free
  1459  0010B2  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  1460  0010B6  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1461  0010BA  EFB0  F008         	goto	l1048
  1462  0010BE                     l2145:
  1463                           
  1464                           ; BSR set to: 0
  1465                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1372:         if ((*fm
      +                          t)[0] == '%') {
  1466  0010BE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1467  0010C2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1468  0010C6  CFDE FFF6          	movff	postinc2,tblptrl
  1469  0010CA  CFDD FFF7          	movff	postdec2,tblptrh
  1470  0010CE                     	if	0	;tblptru may be non-zero
  1471  0010CE                     	endif
  1472  0010CE                     	if	0	;tblptru may be non-zero
  1473  0010CE                     	endif
  1474  0010CE  0008               	tblrd		*
  1475  0010D0  50F5               	movf	tablat,w,c
  1476  0010D2  0A25               	xorlw	37
  1477  0010D4  A4D8               	btfss	status,2,c
  1478  0010D6  EF6F  F008         	goto	u1461
  1479  0010DA  EF71  F008         	goto	u1460
  1480  0010DE                     u1461:
  1481  0010DE  EF88  F008         	goto	l2155
  1482  0010E2                     u1460:
  1483  0010E2                     
  1484                           ; BSR set to: 0
  1485                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1373:             ++*f
      +                          mt;
  1486  0010E2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1487  0010E6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1488  0010EA  2ADE               	incf	postinc2,f,c
  1489  0010EC  0E00               	movlw	0
  1490  0010EE  22DD               	addwfc	postdec2,f,c
  1491  0010F0                     
  1492                           ; BSR set to: 0
  1493                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1374:             fput
      +                          c((int)'%', fp);
  1494  0010F0  0E00               	movlw	0
  1495  0010F2  6E02               	movwf	(fputc@c+1)^0,c
  1496  0010F4  0E25               	movlw	37
  1497  0010F6  6E01               	movwf	fputc@c^0,c
  1498  0010F8  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1499  0010FC  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1500  001100  ECA5  F00A         	call	_fputc	;wreg free
  1501  001104                     l2151:
  1502                           
  1503                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1375:             retu
      +                          rn 1;
  1504  001104  0E00               	movlw	0
  1505  001106  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1506  001108  0E01               	movlw	1
  1507  00110A  6E40               	movwf	?_vfpfcnvrt^0,c
  1508  00110C  EFB0  F008         	goto	l1048
  1509  001110                     l2155:
  1510                           
  1511                           ; BSR set to: 0
  1512                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1379:         ++*fmt;
  1513  001110  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1514  001114  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1515  001118  2ADE               	incf	postinc2,f,c
  1516  00111A  0E00               	movlw	0
  1517  00111C  22DD               	addwfc	postdec2,f,c
  1518  00111E                     
  1519                           ; BSR set to: 0
  1520                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1380:         return 0
      +                          ;
  1521  00111E  0E00               	movlw	0
  1522  001120  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1523  001122  0E00               	movlw	0
  1524  001124  6E40               	movwf	?_vfpfcnvrt^0,c
  1525  001126  EFB0  F008         	goto	l1048
  1526  00112A                     l2161:
  1527                           
  1528                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1384:     fputc((int)(
      +                          *fmt)[0], fp);
  1529  00112A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1530  00112E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1531  001132  CFDE FFF6          	movff	postinc2,tblptrl
  1532  001136  CFDD FFF7          	movff	postdec2,tblptrh
  1533  00113A                     	if	0	;tblptru may be non-zero
  1534  00113A                     	endif
  1535  00113A                     	if	0	;tblptru may be non-zero
  1536  00113A                     	endif
  1537  00113A  0008               	tblrd		*
  1538  00113C  50F5               	movf	tablat,w,c
  1539  00113E  6E01               	movwf	fputc@c^0,c
  1540  001140  6A02               	clrf	(fputc@c+1)^0,c
  1541  001142  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1542  001146  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1543  00114A  ECA5  F00A         	call	_fputc	;wreg free
  1544  00114E                     
  1545                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1546  00114E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1547  001152  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1548  001156  2ADE               	incf	postinc2,f,c
  1549  001158  0E00               	movlw	0
  1550  00115A  22DD               	addwfc	postdec2,f,c
  1551  00115C  EF82  F008         	goto	l2151
  1552  001160                     l1048:
  1553  001160  0012               	return		;funcret
  1554  001162                     __end_of_vfpfcnvrt:
  1555                           	callstack 0
  1556                           
  1557 ;; *************** function _dtoa *****************
  1558 ;; Defined at:
  1559 ;;		line 287 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c"
  1560 ;; Parameters:    Size  Location     Type
  1561 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1562 ;;		 -> sprintf@f(6), 
  1563 ;;  d               8   29[COMRAM] long long 
  1564 ;; Auto vars:     Size  Location     Type
  1565 ;;  n               8   53[COMRAM] long long 
  1566 ;;  i               2   61[COMRAM] int 
  1567 ;;  s               2   51[COMRAM] int 
  1568 ;;  w               2   49[COMRAM] int 
  1569 ;;  p               2   47[COMRAM] int 
  1570 ;; Return value:  Size  Location     Type
  1571 ;;                  2   27[COMRAM] int 
  1572 ;; Registers used:
  1573 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1574 ;; Tracked objects:
  1575 ;;		On entry : 0/0
  1576 ;;		On exit  : 0/0
  1577 ;;		Unchanged: 0/0
  1578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1579 ;;      Params:        10       0       0       0       0       0       0       0       0
  1580 ;;      Locals:        18       0       0       0       0       0       0       0       0
  1581 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1582 ;;      Totals:        36       0       0       0       0       0       0       0       0
  1583 ;;Total ram usage:       36 bytes
  1584 ;; Hardware stack levels used: 1
  1585 ;; Hardware stack levels required when called: 4
  1586 ;; This function calls:
  1587 ;;		___aodiv
  1588 ;;		___aomod
  1589 ;;		_abs
  1590 ;;		_pad
  1591 ;; This function is called by:
  1592 ;;		_vfpfcnvrt
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596                           	psect	text4
  1597  000850                     __ptext4:
  1598                           	callstack 0
  1599  000850                     _dtoa:
  1600                           	callstack 23
  1601  000850                     
  1602                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 287: static int dtoa(F
      +                          ILE *fp, long long d);D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 2
      +                          88: {;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 289:     int i, p
      +                          , s, w;;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 290:     long l
      +                          ong n;;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 293:     n = d;
  1603  000850  C01E  F036         	movff	dtoa@d,dtoa@n
  1604  000854  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  1605  000858  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  1606  00085C  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  1607  000860  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  1608  000864  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  1609  000868  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  1610  00086C  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  1611  000870                     
  1612                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 294:     s = n < 0 ? 1
      +                           : 0;
  1613  000870  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  1614  000872  EF3D  F004         	goto	u1121
  1615  000876  EF40  F004         	goto	u1120
  1616  00087A                     u1121:
  1617  00087A  0E01               	movlw	1
  1618  00087C  EF41  F004         	goto	u1130
  1619  000880                     u1120:
  1620  000880  0E00               	movlw	0
  1621  000882                     u1130:
  1622  000882  6E34               	movwf	dtoa@s^0,c
  1623  000884  6A35               	clrf	(dtoa@s+1)^0,c
  1624                           
  1625                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1626  000886  5034               	movf	dtoa@s^0,w,c
  1627  000888  1035               	iorwf	(dtoa@s+1)^0,w,c
  1628  00088A  B4D8               	btfsc	status,2,c
  1629  00088C  EF4A  F004         	goto	u1141
  1630  000890  EF4C  F004         	goto	u1140
  1631  000894                     u1141:
  1632  000894  EF5C  F004         	goto	l1949
  1633  000898                     u1140:
  1634  000898                     
  1635                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 296:         n = -n;
  1636  000898  1E3D               	comf	(dtoa@n+7)^0,f,c
  1637  00089A  1E3C               	comf	(dtoa@n+6)^0,f,c
  1638  00089C  1E3B               	comf	(dtoa@n+5)^0,f,c
  1639  00089E  1E3A               	comf	(dtoa@n+4)^0,f,c
  1640  0008A0  1E39               	comf	(dtoa@n+3)^0,f,c
  1641  0008A2  1E38               	comf	(dtoa@n+2)^0,f,c
  1642  0008A4  1E37               	comf	(dtoa@n+1)^0,f,c
  1643  0008A6  6C36               	negf	dtoa@n^0,c
  1644  0008A8  0E00               	movlw	0
  1645  0008AA  2237               	addwfc	(dtoa@n+1)^0,f,c
  1646  0008AC  2238               	addwfc	(dtoa@n+2)^0,f,c
  1647  0008AE  2239               	addwfc	(dtoa@n+3)^0,f,c
  1648  0008B0  223A               	addwfc	(dtoa@n+4)^0,f,c
  1649  0008B2  223B               	addwfc	(dtoa@n+5)^0,f,c
  1650  0008B4  223C               	addwfc	(dtoa@n+6)^0,f,c
  1651  0008B6  223D               	addwfc	(dtoa@n+7)^0,f,c
  1652  0008B8                     l1949:
  1653                           
  1654                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 300:     if (!(prec < 
      +                          0)) {
  1655  0008B8  0100               	movlb	0	; () banked
  1656  0008BA  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1657  0008BC  EF62  F004         	goto	u1151
  1658  0008C0  EF64  F004         	goto	u1150
  1659  0008C4                     u1151:
  1660  0008C4  EF65  F004         	goto	l1953
  1661  0008C8                     u1150:
  1662  0008C8                     
  1663                           ; BSR set to: 0
  1664                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 301:         flags &= 
      +                          ~(1 << 1);
  1665  0008C8  9366               	bcf	_flags& (0+255),1,b
  1666  0008CA                     l1953:
  1667                           
  1668                           ; BSR set to: 0
  1669                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 303:     p = (0 < prec
      +                          ) ? prec : 1;
  1670  0008CA  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1671  0008CC  EF72  F004         	goto	u1160
  1672  0008D0  5165               	movf	(_prec+1)& (0+255),w,b
  1673  0008D2  E106               	bnz	u1161
  1674  0008D4  0564               	decf	_prec& (0+255),w,b
  1675  0008D6  B0D8               	btfsc	status,0,c
  1676  0008D8  EF70  F004         	goto	u1161
  1677  0008DC  EF72  F004         	goto	u1160
  1678  0008E0                     u1161:
  1679  0008E0  EF78  F004         	goto	l1021
  1680  0008E4                     u1160:
  1681  0008E4                     
  1682                           ; BSR set to: 0
  1683  0008E4  0E00               	movlw	0
  1684  0008E6  6E31               	movwf	(dtoa@p+1)^0,c
  1685  0008E8  0E01               	movlw	1
  1686  0008EA  6E30               	movwf	dtoa@p^0,c
  1687  0008EC  EF7C  F004         	goto	l1023
  1688  0008F0                     l1021:
  1689                           
  1690                           ; BSR set to: 0
  1691  0008F0  C064  F030         	movff	_prec,dtoa@p
  1692  0008F4  C065  F031         	movff	_prec+1,dtoa@p+1
  1693  0008F8                     l1023:
  1694                           
  1695                           ; BSR set to: 0
  1696                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 304:     w = width;
  1697  0008F8  C062  F032         	movff	_width,dtoa@w
  1698  0008FC  C063  F033         	movff	_width+1,dtoa@w+1
  1699  000900                     
  1700                           ; BSR set to: 0
  1701                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 305:     if (s || (fla
      +                          gs & (1 << 2))) {
  1702  000900  5034               	movf	dtoa@s^0,w,c
  1703  000902  1035               	iorwf	(dtoa@s+1)^0,w,c
  1704  000904  A4D8               	btfss	status,2,c
  1705  000906  EF87  F004         	goto	u1171
  1706  00090A  EF89  F004         	goto	u1170
  1707  00090E                     u1171:
  1708  00090E  EF90  F004         	goto	l1961
  1709  000912                     u1170:
  1710  000912                     
  1711                           ; BSR set to: 0
  1712  000912  A566               	btfss	_flags& (0+255),2,b
  1713  000914  EF8E  F004         	goto	u1181
  1714  000918  EF90  F004         	goto	u1180
  1715  00091C                     u1181:
  1716  00091C  EF93  F004         	goto	l1963
  1717  000920                     u1180:
  1718  000920                     l1961:
  1719                           
  1720                           ; BSR set to: 0
  1721                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 306:         --w;
  1722  000920  0632               	decf	dtoa@w^0,f,c
  1723  000922  A0D8               	btfss	status,0,c
  1724  000924  0633               	decf	(dtoa@w+1)^0,f,c
  1725  000926                     l1963:
  1726                           
  1727                           ; BSR set to: 0
  1728                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 310:     i = sizeof(db
      +                          uf) - 1;
  1729  000926  0E00               	movlw	0
  1730  000928  6E3F               	movwf	(dtoa@i+1)^0,c
  1731  00092A  0E1F               	movlw	31
  1732  00092C  6E3E               	movwf	dtoa@i^0,c
  1733  00092E                     
  1734                           ; BSR set to: 0
  1735                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] = '\0
      +                          ';
  1736  00092E  0E00               	movlw	0
  1737  000930  6F95               	movwf	(_dbuf+31)& (0+255),b
  1738                           
  1739                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 312:     while (!(i < 
      +                          1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1740  000932  EF17  F005         	goto	l1977
  1741  000936                     l1967:
  1742                           
  1743                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 313:         --i;
  1744  000936  063E               	decf	dtoa@i^0,f,c
  1745  000938  A0D8               	btfss	status,0,c
  1746  00093A  063F               	decf	(dtoa@i+1)^0,f,c
  1747  00093C                     
  1748                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 314:         dbuf[i] =
      +                           (char)((int)'0' + abs(n % 10));
  1749  00093C  0E76               	movlw	low _dbuf
  1750  00093E  243E               	addwf	dtoa@i^0,w,c
  1751  000940  6ED9               	movwf	fsr2l,c
  1752  000942  0E00               	movlw	high _dbuf
  1753  000944  203F               	addwfc	(dtoa@i+1)^0,w,c
  1754  000946  6EDA               	movwf	fsr2h,c
  1755  000948  C036  F001         	movff	dtoa@n,___aomod@dividend
  1756  00094C  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1757  000950  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1758  000954  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1759  000958  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1760  00095C  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1761  000960  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1762  000964  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1763  000968  0E0A               	movlw	10
  1764  00096A  6E09               	movwf	___aomod@divisor^0,c
  1765  00096C  0E00               	movlw	0
  1766  00096E  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1767  000970  0E00               	movlw	0
  1768  000972  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1769  000974  0E00               	movlw	0
  1770  000976  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1771  000978  0E00               	movlw	0
  1772  00097A  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1773  00097C  0E00               	movlw	0
  1774  00097E  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1775  000980  0E00               	movlw	0
  1776  000982  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1777  000984  0E00               	movlw	0
  1778  000986  6E10               	movwf	(___aomod@divisor+7)^0,c
  1779  000988  EC75  F009         	call	___aomod	;wreg free
  1780  00098C  C001  F026         	movff	?___aomod,??_dtoa
  1781  000990  C002  F027         	movff	?___aomod+1,??_dtoa+1
  1782  000994  C003  F028         	movff	?___aomod+2,??_dtoa+2
  1783  000998  C004  F029         	movff	?___aomod+3,??_dtoa+3
  1784  00099C  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  1785  0009A0  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  1786  0009A4  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  1787  0009A8  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  1788  0009AC  C026  F013         	movff	??_dtoa,abs@a
  1789  0009B0  C028  F014         	movff	??_dtoa+2,abs@a+1
  1790  0009B4  ECE1  F00D         	call	_abs	;wreg free
  1791  0009B8  5013               	movf	?_abs^0,w,c
  1792  0009BA  0F30               	addlw	48
  1793  0009BC  6EDF               	movwf	indf2,c
  1794  0009BE                     
  1795                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 315:         --p;
  1796  0009BE  0630               	decf	dtoa@p^0,f,c
  1797  0009C0  A0D8               	btfss	status,0,c
  1798  0009C2  0631               	decf	(dtoa@p+1)^0,f,c
  1799  0009C4                     
  1800                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 316:         --w;
  1801  0009C4  0632               	decf	dtoa@w^0,f,c
  1802  0009C6  A0D8               	btfss	status,0,c
  1803  0009C8  0633               	decf	(dtoa@w+1)^0,f,c
  1804  0009CA                     
  1805                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 317:         n = n / 1
      +                          0;
  1806  0009CA  C036  F001         	movff	dtoa@n,___aodiv@dividend
  1807  0009CE  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1808  0009D2  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1809  0009D6  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1810  0009DA  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1811  0009DE  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1812  0009E2  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1813  0009E6  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1814  0009EA  0E0A               	movlw	10
  1815  0009EC  6E09               	movwf	___aodiv@divisor^0,c
  1816  0009EE  0E00               	movlw	0
  1817  0009F0  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1818  0009F2  0E00               	movlw	0
  1819  0009F4  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1820  0009F6  0E00               	movlw	0
  1821  0009F8  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1822  0009FA  0E00               	movlw	0
  1823  0009FC  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1824  0009FE  0E00               	movlw	0
  1825  000A00  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1826  000A02  0E00               	movlw	0
  1827  000A04  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1828  000A06  0E00               	movlw	0
  1829  000A08  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1830  000A0A  ECB1  F008         	call	___aodiv	;wreg free
  1831  000A0E  C001  F036         	movff	?___aodiv,dtoa@n
  1832  000A12  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  1833  000A16  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  1834  000A1A  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  1835  000A1E  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  1836  000A22  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  1837  000A26  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  1838  000A2A  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  1839  000A2E                     l1977:
  1840                           
  1841                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 312:     while (!(i < 
      +                          1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1842  000A2E  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  1843  000A30  EF22  F005         	goto	u1191
  1844  000A34  503F               	movf	(dtoa@i+1)^0,w,c
  1845  000A36  E108               	bnz	u1190
  1846  000A38  043E               	decf	dtoa@i^0,w,c
  1847  000A3A  A0D8               	btfss	status,0,c
  1848  000A3C  EF22  F005         	goto	u1191
  1849  000A40  EF24  F005         	goto	u1190
  1850  000A44                     u1191:
  1851  000A44  EF55  F005         	goto	l1987
  1852  000A48                     u1190:
  1853  000A48  5036               	movf	dtoa@n^0,w,c
  1854  000A4A  1037               	iorwf	(dtoa@n+1)^0,w,c
  1855  000A4C  1038               	iorwf	(dtoa@n+2)^0,w,c
  1856  000A4E  1039               	iorwf	(dtoa@n+3)^0,w,c
  1857  000A50  103A               	iorwf	(dtoa@n+4)^0,w,c
  1858  000A52  103B               	iorwf	(dtoa@n+5)^0,w,c
  1859  000A54  103C               	iorwf	(dtoa@n+6)^0,w,c
  1860  000A56  103D               	iorwf	(dtoa@n+7)^0,w,c
  1861  000A58  A4D8               	btfss	status,2,c
  1862  000A5A  EF31  F005         	goto	u1201
  1863  000A5E  EF33  F005         	goto	u1200
  1864  000A62                     u1201:
  1865  000A62  EF9B  F004         	goto	l1967
  1866  000A66                     u1200:
  1867  000A66  BE31               	btfsc	(dtoa@p+1)^0,7,c
  1868  000A68  EF40  F005         	goto	u1210
  1869  000A6C  5031               	movf	(dtoa@p+1)^0,w,c
  1870  000A6E  E106               	bnz	u1211
  1871  000A70  0430               	decf	dtoa@p^0,w,c
  1872  000A72  B0D8               	btfsc	status,0,c
  1873  000A74  EF3E  F005         	goto	u1211
  1874  000A78  EF40  F005         	goto	u1210
  1875  000A7C                     u1211:
  1876  000A7C  EF9B  F004         	goto	l1967
  1877  000A80                     u1210:
  1878  000A80  BE33               	btfsc	(dtoa@w+1)^0,7,c
  1879  000A82  EF4B  F005         	goto	u1221
  1880  000A86  5033               	movf	(dtoa@w+1)^0,w,c
  1881  000A88  E108               	bnz	u1220
  1882  000A8A  0432               	decf	dtoa@w^0,w,c
  1883  000A8C  A0D8               	btfss	status,0,c
  1884  000A8E  EF4B  F005         	goto	u1221
  1885  000A92  EF4D  F005         	goto	u1220
  1886  000A96                     u1221:
  1887  000A96  EF55  F005         	goto	l1987
  1888  000A9A                     u1220:
  1889  000A9A  0100               	movlb	0	; () banked
  1890  000A9C  B366               	btfsc	_flags& (0+255),1,b
  1891  000A9E  EF53  F005         	goto	u1231
  1892  000AA2  EF55  F005         	goto	u1230
  1893  000AA6                     u1231:
  1894  000AA6  EF9B  F004         	goto	l1967
  1895  000AAA                     u1230:
  1896  000AAA                     l1987:
  1897                           
  1898                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 321:     if (s || (fla
      +                          gs & (1 << 2))) {
  1899  000AAA  5034               	movf	dtoa@s^0,w,c
  1900  000AAC  1035               	iorwf	(dtoa@s+1)^0,w,c
  1901  000AAE  A4D8               	btfss	status,2,c
  1902  000AB0  EF5C  F005         	goto	u1241
  1903  000AB4  EF5E  F005         	goto	u1240
  1904  000AB8                     u1241:
  1905  000AB8  EF66  F005         	goto	l1991
  1906  000ABC                     u1240:
  1907  000ABC  0100               	movlb	0	; () banked
  1908  000ABE  A566               	btfss	_flags& (0+255),2,b
  1909  000AC0  EF64  F005         	goto	u1251
  1910  000AC4  EF66  F005         	goto	u1250
  1911  000AC8                     u1251:
  1912  000AC8  EF84  F005         	goto	l2001
  1913  000ACC                     u1250:
  1914  000ACC                     l1991:
  1915                           
  1916                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 322:         --i;
  1917  000ACC  063E               	decf	dtoa@i^0,f,c
  1918  000ACE  A0D8               	btfss	status,0,c
  1919  000AD0  063F               	decf	(dtoa@i+1)^0,f,c
  1920  000AD2                     
  1921                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 323:         dbuf[i] =
      +                           s ? '-' : '+';
  1922  000AD2  5034               	movf	dtoa@s^0,w,c
  1923  000AD4  1035               	iorwf	(dtoa@s+1)^0,w,c
  1924  000AD6  A4D8               	btfss	status,2,c
  1925  000AD8  EF70  F005         	goto	u1261
  1926  000ADC  EF72  F005         	goto	u1260
  1927  000AE0                     u1261:
  1928  000AE0  EF78  F005         	goto	l1997
  1929  000AE4                     u1260:
  1930  000AE4  0E00               	movlw	0
  1931  000AE6  6E2F               	movwf	(_dtoa$943+1)^0,c
  1932  000AE8  0E2B               	movlw	43
  1933  000AEA  6E2E               	movwf	_dtoa$943^0,c
  1934  000AEC  EF7C  F005         	goto	l1999
  1935  000AF0                     l1997:
  1936  000AF0  0E00               	movlw	0
  1937  000AF2  6E2F               	movwf	(_dtoa$943+1)^0,c
  1938  000AF4  0E2D               	movlw	45
  1939  000AF6  6E2E               	movwf	_dtoa$943^0,c
  1940  000AF8                     l1999:
  1941  000AF8  0E76               	movlw	low _dbuf
  1942  000AFA  243E               	addwf	dtoa@i^0,w,c
  1943  000AFC  6ED9               	movwf	fsr2l,c
  1944  000AFE  0E00               	movlw	high _dbuf
  1945  000B00  203F               	addwfc	(dtoa@i+1)^0,w,c
  1946  000B02  6EDA               	movwf	fsr2h,c
  1947  000B04  C02E  FFDF         	movff	_dtoa$943,indf2
  1948  000B08                     l2001:
  1949                           
  1950                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 327:     return pad(fp
      +                          , &dbuf[i], w);
  1951  000B08  C01C  F011         	movff	dtoa@fp,pad@fp
  1952  000B0C  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  1953  000B10  0E76               	movlw	low _dbuf
  1954  000B12  243E               	addwf	dtoa@i^0,w,c
  1955  000B14  6E13               	movwf	pad@buf^0,c
  1956  000B16  0E00               	movlw	high _dbuf
  1957  000B18  203F               	addwfc	(dtoa@i+1)^0,w,c
  1958  000B1A  6E14               	movwf	(pad@buf+1)^0,c
  1959  000B1C  C032  F015         	movff	dtoa@w,pad@p
  1960  000B20  C033  F016         	movff	dtoa@w+1,pad@p+1
  1961  000B24  EC0A  F00B         	call	_pad	;wreg free
  1962  000B28  C011  F01C         	movff	?_pad,?_dtoa
  1963  000B2C  C012  F01D         	movff	?_pad+1,?_dtoa+1
  1964  000B30  0012               	return		;funcret
  1965  000B32                     __end_of_dtoa:
  1966                           	callstack 0
  1967                           
  1968 ;; *************** function _pad *****************
  1969 ;; Defined at:
  1970 ;;		line 72 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c"
  1971 ;; Parameters:    Size  Location     Type
  1972 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1973 ;;		 -> sprintf@f(6), 
  1974 ;;  buf             2   18[COMRAM] PTR unsigned char 
  1975 ;;		 -> dbuf(32), 
  1976 ;;  p               2   20[COMRAM] int 
  1977 ;; Auto vars:     Size  Location     Type
  1978 ;;  w               2   25[COMRAM] int 
  1979 ;;  i               2   23[COMRAM] int 
  1980 ;; Return value:  Size  Location     Type
  1981 ;;                  2   16[COMRAM] int 
  1982 ;; Registers used:
  1983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1989 ;;      Params:         6       0       0       0       0       0       0       0       0
  1990 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1991 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1992 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1993 ;;Total ram usage:       11 bytes
  1994 ;; Hardware stack levels used: 1
  1995 ;; Hardware stack levels required when called: 3
  1996 ;; This function calls:
  1997 ;;		_fputc
  1998 ;;		_fputs
  1999 ;;		_strlen
  2000 ;; This function is called by:
  2001 ;;		_dtoa
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005                           	psect	text5
  2006  001614                     __ptext5:
  2007                           	callstack 0
  2008  001614                     _pad:
  2009                           	callstack 23
  2010  001614                     
  2011                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 72: static int pad(FIL
      +                          E *fp, char *buf, int p);D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c
      +                          : 73: {;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 74:     int i, 
      +                          w;;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 77:     if (flags & 
      +                          (1 << 0)) {
  2012  001614  0100               	movlb	0	; () banked
  2013  001616  A166               	btfss	_flags& (0+255),0,b
  2014  001618  EF10  F00B         	goto	u1041
  2015  00161C  EF12  F00B         	goto	u1040
  2016  001620                     u1041:
  2017  001620  EF1C  F00B         	goto	l1893
  2018  001624                     u1040:
  2019  001624                     
  2020                           ; BSR set to: 0
  2021                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 78:         fputs((con
      +                          st char *)buf, fp);
  2022  001624  C013  F00A         	movff	pad@buf,fputs@s
  2023  001628  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2024  00162C  C011  F00C         	movff	pad@fp,fputs@fp
  2025  001630  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2026  001634  ECBF  F00D         	call	_fputs	;wreg free
  2027  001638                     l1893:
  2028                           
  2029                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 82:     w = (p < 0) ? 
      +                          0 : p;
  2030  001638  BE16               	btfsc	(pad@p+1)^0,7,c
  2031  00163A  EF21  F00B         	goto	u1051
  2032  00163E  EF23  F00B         	goto	u1050
  2033  001642                     u1051:
  2034  001642  EF29  F00B         	goto	l1897
  2035  001646                     u1050:
  2036  001646  C015  F01A         	movff	pad@p,pad@w
  2037  00164A  C016  F01B         	movff	pad@p+1,pad@w+1
  2038  00164E  EF2D  F00B         	goto	l1010
  2039  001652                     l1897:
  2040  001652  0E00               	movlw	0
  2041  001654  6E1B               	movwf	(pad@w+1)^0,c
  2042  001656  0E00               	movlw	0
  2043  001658  6E1A               	movwf	pad@w^0,c
  2044  00165A                     l1010:
  2045                           
  2046                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2047  00165A  0E00               	movlw	0
  2048  00165C  6E19               	movwf	(pad@i+1)^0,c
  2049  00165E  0E00               	movlw	0
  2050  001660  6E18               	movwf	pad@i^0,c
  2051                           
  2052                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 84:     while (i < w) 
      +                          {
  2053  001662  EF3F  F00B         	goto	l1903
  2054  001666                     l1899:
  2055                           
  2056                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 85:         fputc(' ',
      +                           fp);
  2057  001666  0E00               	movlw	0
  2058  001668  6E02               	movwf	(fputc@c+1)^0,c
  2059  00166A  0E20               	movlw	32
  2060  00166C  6E01               	movwf	fputc@c^0,c
  2061  00166E  C011  F003         	movff	pad@fp,fputc@fp
  2062  001672  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2063  001676  ECA5  F00A         	call	_fputc	;wreg free
  2064  00167A                     
  2065                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2066  00167A  4A18               	infsnz	pad@i^0,f,c
  2067  00167C  2A19               	incf	(pad@i+1)^0,f,c
  2068  00167E                     l1903:
  2069                           
  2070                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 84:     while (i < w) 
      +                          {
  2071  00167E  501A               	movf	pad@w^0,w,c
  2072  001680  5C18               	subwf	pad@i^0,w,c
  2073  001682  5019               	movf	(pad@i+1)^0,w,c
  2074  001684  0A80               	xorlw	128
  2075  001686  6E17               	movwf	??_pad^0,c
  2076  001688  501B               	movf	(pad@w+1)^0,w,c
  2077  00168A  0A80               	xorlw	128
  2078  00168C  5817               	subwfb	??_pad^0,w,c
  2079  00168E  A0D8               	btfss	status,0,c
  2080  001690  EF4C  F00B         	goto	u1061
  2081  001694  EF4E  F00B         	goto	u1060
  2082  001698                     u1061:
  2083  001698  EF33  F00B         	goto	l1899
  2084  00169C                     u1060:
  2085  00169C                     
  2086                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 90:     if (!(flags & 
      +                          (1 << 0))) {
  2087  00169C  0100               	movlb	0	; () banked
  2088  00169E  B166               	btfsc	_flags& (0+255),0,b
  2089  0016A0  EF54  F00B         	goto	u1071
  2090  0016A4  EF56  F00B         	goto	u1070
  2091  0016A8                     u1071:
  2092  0016A8  EF60  F00B         	goto	l1907
  2093  0016AC                     u1070:
  2094  0016AC                     
  2095                           ; BSR set to: 0
  2096                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 91:         fputs((con
      +                          st char *)buf, fp);
  2097  0016AC  C013  F00A         	movff	pad@buf,fputs@s
  2098  0016B0  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2099  0016B4  C011  F00C         	movff	pad@fp,fputs@fp
  2100  0016B8  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2101  0016BC  ECBF  F00D         	call	_fputs	;wreg free
  2102  0016C0                     l1907:
  2103                           
  2104                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 94:     return (int)(s
      +                          trlen(buf) + (size_t)w);
  2105  0016C0  C013  F001         	movff	pad@buf,strlen@s
  2106  0016C4  C014  F002         	movff	pad@buf+1,strlen@s+1
  2107  0016C8  EC5B  F00E         	call	_strlen	;wreg free
  2108  0016CC  501A               	movf	pad@w^0,w,c
  2109  0016CE  2401               	addwf	?_strlen^0,w,c
  2110  0016D0  6E11               	movwf	?_pad^0,c
  2111  0016D2  501B               	movf	(pad@w+1)^0,w,c
  2112  0016D4  2002               	addwfc	(?_strlen+1)^0,w,c
  2113  0016D6  6E12               	movwf	(?_pad+1)^0,c
  2114  0016D8  0012               	return		;funcret
  2115  0016DA                     __end_of_pad:
  2116                           	callstack 0
  2117                           
  2118 ;; *************** function _strlen *****************
  2119 ;; Defined at:
  2120 ;;		line 5 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\strlen.c"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2123 ;;		 -> dbuf(32), 
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2126 ;;		 -> dbuf(32), 
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  2    0[COMRAM] unsigned int 
  2129 ;; Registers used:
  2130 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2136 ;;      Params:         2       0       0       0       0       0       0       0       0
  2137 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2138 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2139 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2140 ;;Total ram usage:        4 bytes
  2141 ;; Hardware stack levels used: 1
  2142 ;; This function calls:
  2143 ;;		Nothing
  2144 ;; This function is called by:
  2145 ;;		_pad
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149                           	psect	text6
  2150  001CB6                     __ptext6:
  2151                           	callstack 0
  2152  001CB6                     _strlen:
  2153                           	callstack 25
  2154  001CB6  C001  F003         	movff	strlen@s,strlen@a
  2155  001CBA  C002  F004         	movff	strlen@s+1,strlen@a+1
  2156  001CBE  EF63  F00E         	goto	l1783
  2157  001CC2                     l1781:
  2158  001CC2  4A01               	infsnz	strlen@s^0,f,c
  2159  001CC4  2A02               	incf	(strlen@s+1)^0,f,c
  2160  001CC6                     l1783:
  2161  001CC6  C001  FFD9         	movff	strlen@s,fsr2l
  2162  001CCA  C002  FFDA         	movff	strlen@s+1,fsr2h
  2163  001CCE  50DF               	movf	indf2,w,c
  2164  001CD0  A4D8               	btfss	status,2,c
  2165  001CD2  EF6D  F00E         	goto	u901
  2166  001CD6  EF6F  F00E         	goto	u900
  2167  001CDA                     u901:
  2168  001CDA  EF61  F00E         	goto	l1781
  2169  001CDE                     u900:
  2170  001CDE  5003               	movf	strlen@a^0,w,c
  2171  001CE0  5C01               	subwf	strlen@s^0,w,c
  2172  001CE2  6E01               	movwf	?_strlen^0,c
  2173  001CE4  5004               	movf	(strlen@a+1)^0,w,c
  2174  001CE6  5802               	subwfb	(strlen@s+1)^0,w,c
  2175  001CE8  6E02               	movwf	(?_strlen+1)^0,c
  2176  001CEA  0012               	return		;funcret
  2177  001CEC                     __end_of_strlen:
  2178                           	callstack 0
  2179                           
  2180 ;; *************** function _fputs *****************
  2181 ;; Defined at:
  2182 ;;		line 8 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\nf_fputs.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2185 ;;		 -> dbuf(32), 
  2186 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2187 ;;		 -> sprintf@f(6), 
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;  i               2   14[COMRAM] int 
  2190 ;;  c               1   13[COMRAM] unsigned char 
  2191 ;; Return value:  Size  Location     Type
  2192 ;;                  2    9[COMRAM] int 
  2193 ;; Registers used:
  2194 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2195 ;; Tracked objects:
  2196 ;;		On entry : 0/0
  2197 ;;		On exit  : 0/0
  2198 ;;		Unchanged: 0/0
  2199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2200 ;;      Params:         4       0       0       0       0       0       0       0       0
  2201 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2202 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2203 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2204 ;;Total ram usage:        7 bytes
  2205 ;; Hardware stack levels used: 1
  2206 ;; Hardware stack levels required when called: 2
  2207 ;; This function calls:
  2208 ;;		_fputc
  2209 ;; This function is called by:
  2210 ;;		_pad
  2211 ;; This function uses a non-reentrant model
  2212 ;;
  2213                           
  2214                           	psect	text7
  2215  001B7E                     __ptext7:
  2216                           	callstack 0
  2217  001B7E                     _fputs:
  2218                           	callstack 23
  2219  001B7E  0E00               	movlw	0
  2220  001B80  6E10               	movwf	(fputs@i+1)^0,c
  2221  001B82  0E00               	movlw	0
  2222  001B84  6E0F               	movwf	fputs@i^0,c
  2223  001B86  EFD0  F00D         	goto	l1777
  2224  001B8A                     l1773:
  2225  001B8A  C00E  F001         	movff	fputs@c,fputc@c
  2226  001B8E  6A02               	clrf	(fputc@c+1)^0,c
  2227  001B90  C00C  F003         	movff	fputs@fp,fputc@fp
  2228  001B94  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2229  001B98  ECA5  F00A         	call	_fputc	;wreg free
  2230  001B9C  4A0F               	infsnz	fputs@i^0,f,c
  2231  001B9E  2A10               	incf	(fputs@i+1)^0,f,c
  2232  001BA0                     l1777:
  2233  001BA0  500F               	movf	fputs@i^0,w,c
  2234  001BA2  240A               	addwf	fputs@s^0,w,c
  2235  001BA4  6ED9               	movwf	fsr2l,c
  2236  001BA6  5010               	movf	(fputs@i+1)^0,w,c
  2237  001BA8  200B               	addwfc	(fputs@s+1)^0,w,c
  2238  001BAA  6EDA               	movwf	fsr2h,c
  2239  001BAC  50DF               	movf	indf2,w,c
  2240  001BAE  6E0E               	movwf	fputs@c^0,c
  2241  001BB0  500E               	movf	fputs@c^0,w,c
  2242  001BB2  A4D8               	btfss	status,2,c
  2243  001BB4  EFDE  F00D         	goto	u891
  2244  001BB8  EFE0  F00D         	goto	u890
  2245  001BBC                     u891:
  2246  001BBC  EFC5  F00D         	goto	l1773
  2247  001BC0                     u890:
  2248  001BC0  0012               	return		;funcret
  2249  001BC2                     __end_of_fputs:
  2250                           	callstack 0
  2251                           
  2252 ;; *************** function _fputc *****************
  2253 ;; Defined at:
  2254 ;;		line 8 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\nf_fputc.c"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;  c               2    0[COMRAM] int 
  2257 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2258 ;;		 -> sprintf@f(6), 
  2259 ;; Auto vars:     Size  Location     Type
  2260 ;;		None
  2261 ;; Return value:  Size  Location     Type
  2262 ;;                  2    0[COMRAM] int 
  2263 ;; Registers used:
  2264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2265 ;; Tracked objects:
  2266 ;;		On entry : 0/0
  2267 ;;		On exit  : 0/0
  2268 ;;		Unchanged: 0/0
  2269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2270 ;;      Params:         4       0       0       0       0       0       0       0       0
  2271 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2272 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2273 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2274 ;;Total ram usage:        9 bytes
  2275 ;; Hardware stack levels used: 1
  2276 ;; Hardware stack levels required when called: 1
  2277 ;; This function calls:
  2278 ;;		_putch
  2279 ;; This function is called by:
  2280 ;;		_pad
  2281 ;;		_vfpfcnvrt
  2282 ;;		_fputs
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           	psect	text8
  2287  00154A                     __ptext8:
  2288                           	callstack 0
  2289  00154A                     _fputc:
  2290                           	callstack 26
  2291  00154A  5003               	movf	fputc@fp^0,w,c
  2292  00154C  1004               	iorwf	(fputc@fp+1)^0,w,c
  2293  00154E  B4D8               	btfsc	status,2,c
  2294  001550  EFAC  F00A         	goto	u851
  2295  001554  EFAE  F00A         	goto	u850
  2296  001558                     u851:
  2297  001558  EFB7  F00A         	goto	l1761
  2298  00155C                     u850:
  2299  00155C  5003               	movf	fputc@fp^0,w,c
  2300  00155E  1004               	iorwf	(fputc@fp+1)^0,w,c
  2301  001560  A4D8               	btfss	status,2,c
  2302  001562  EFB5  F00A         	goto	u861
  2303  001566  EFB7  F00A         	goto	u860
  2304  00156A                     u861:
  2305  00156A  EFBC  F00A         	goto	l1763
  2306  00156E                     u860:
  2307  00156E                     l1761:
  2308  00156E  5001               	movf	fputc@c^0,w,c
  2309  001570  EC00  F00F         	call	_putch
  2310  001574  EF09  F00B         	goto	l1074
  2311  001578                     l1763:
  2312  001578  EE20 F004          	lfsr	2,4
  2313  00157C  5003               	movf	fputc@fp^0,w,c
  2314  00157E  26D9               	addwf	fsr2l,f,c
  2315  001580  5004               	movf	(fputc@fp+1)^0,w,c
  2316  001582  22DA               	addwfc	fsr2h,f,c
  2317  001584  50DE               	movf	postinc2,w,c
  2318  001586  10DE               	iorwf	postinc2,w,c
  2319  001588  B4D8               	btfsc	status,2,c
  2320  00158A  EFC9  F00A         	goto	u871
  2321  00158E  EFCB  F00A         	goto	u870
  2322  001592                     u871:
  2323  001592  EFE6  F00A         	goto	l1767
  2324  001596                     u870:
  2325  001596  EE20 F004          	lfsr	2,4
  2326  00159A  5003               	movf	fputc@fp^0,w,c
  2327  00159C  26D9               	addwf	fsr2l,f,c
  2328  00159E  5004               	movf	(fputc@fp+1)^0,w,c
  2329  0015A0  22DA               	addwfc	fsr2h,f,c
  2330  0015A2  EE10 F002          	lfsr	1,2
  2331  0015A6  5003               	movf	fputc@fp^0,w,c
  2332  0015A8  26E1               	addwf	fsr1l,f,c
  2333  0015AA  5004               	movf	(fputc@fp+1)^0,w,c
  2334  0015AC  22E2               	addwfc	fsr1h,f,c
  2335  0015AE  50DE               	movf	postinc2,w,c
  2336  0015B0  5CE6               	subwf	postinc1,w,c
  2337  0015B2  50E6               	movf	postinc1,w,c
  2338  0015B4  0A80               	xorlw	128
  2339  0015B6  6E09               	movwf	(??_fputc+4)^0,c
  2340  0015B8  50DE               	movf	postinc2,w,c
  2341  0015BA  0A80               	xorlw	128
  2342  0015BC  5809               	subwfb	(??_fputc+4)^0,w,c
  2343  0015BE  B0D8               	btfsc	status,0,c
  2344  0015C0  EFE4  F00A         	goto	u881
  2345  0015C4  EFE6  F00A         	goto	u880
  2346  0015C8                     u881:
  2347  0015C8  EF09  F00B         	goto	l1074
  2348  0015CC                     u880:
  2349  0015CC                     l1767:
  2350  0015CC  EE20 F002          	lfsr	2,2
  2351  0015D0  5003               	movf	fputc@fp^0,w,c
  2352  0015D2  26D9               	addwf	fsr2l,f,c
  2353  0015D4  5004               	movf	(fputc@fp+1)^0,w,c
  2354  0015D6  22DA               	addwfc	fsr2h,f,c
  2355  0015D8  CFDE F005          	movff	postinc2,??_fputc
  2356  0015DC  CFDD F006          	movff	postdec2,??_fputc+1
  2357  0015E0  C003  FFD9         	movff	fputc@fp,fsr2l
  2358  0015E4  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2359  0015E8  CFDE F007          	movff	postinc2,??_fputc+2
  2360  0015EC  CFDD F008          	movff	postdec2,??_fputc+3
  2361  0015F0  5005               	movf	??_fputc^0,w,c
  2362  0015F2  2407               	addwf	(??_fputc+2)^0,w,c
  2363  0015F4  6ED9               	movwf	fsr2l,c
  2364  0015F6  5006               	movf	(??_fputc+1)^0,w,c
  2365  0015F8  2008               	addwfc	(??_fputc+3)^0,w,c
  2366  0015FA  6EDA               	movwf	fsr2h,c
  2367  0015FC  C001  FFDF         	movff	fputc@c,indf2
  2368  001600  EE20 F002          	lfsr	2,2
  2369  001604  5003               	movf	fputc@fp^0,w,c
  2370  001606  26D9               	addwf	fsr2l,f,c
  2371  001608  5004               	movf	(fputc@fp+1)^0,w,c
  2372  00160A  22DA               	addwfc	fsr2h,f,c
  2373  00160C  2ADE               	incf	postinc2,f,c
  2374  00160E  0E00               	movlw	0
  2375  001610  22DD               	addwfc	postdec2,f,c
  2376  001612                     l1074:
  2377  001612  0012               	return		;funcret
  2378  001614                     __end_of_fputc:
  2379                           	callstack 0
  2380                           
  2381 ;; *************** function _putch *****************
  2382 ;; Defined at:
  2383 ;;		line 7 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\putch.c"
  2384 ;; Parameters:    Size  Location     Type
  2385 ;;  c               1    wreg     unsigned char 
  2386 ;; Auto vars:     Size  Location     Type
  2387 ;;  c               1    0[COMRAM] unsigned char 
  2388 ;; Return value:  Size  Location     Type
  2389 ;;                  1    wreg      void 
  2390 ;; Registers used:
  2391 ;;		wreg
  2392 ;; Tracked objects:
  2393 ;;		On entry : 0/0
  2394 ;;		On exit  : 0/0
  2395 ;;		Unchanged: 0/0
  2396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2397 ;;      Params:         0       0       0       0       0       0       0       0       0
  2398 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2399 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2400 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2401 ;;Total ram usage:        0 bytes
  2402 ;; Hardware stack levels used: 1
  2403 ;; This function calls:
  2404 ;;		Nothing
  2405 ;; This function is called by:
  2406 ;;		_fputc
  2407 ;; This function uses a non-reentrant model
  2408 ;;
  2409                           
  2410                           	psect	text9
  2411  001E00                     __ptext9:
  2412                           	callstack 0
  2413  001E00                     _putch:
  2414                           	callstack 26
  2415  001E00  0012               	return		;funcret
  2416  001E02                     __end_of_putch:
  2417                           	callstack 0
  2418                           
  2419 ;; *************** function _abs *****************
  2420 ;; Defined at:
  2421 ;;		line 1 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\abs.c"
  2422 ;; Parameters:    Size  Location     Type
  2423 ;;  a               2   18[COMRAM] int 
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;		None
  2426 ;; Return value:  Size  Location     Type
  2427 ;;                  2   18[COMRAM] int 
  2428 ;; Registers used:
  2429 ;;		wreg, status,2, status,0
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/0
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2435 ;;      Params:         2       0       0       0       0       0       0       0       0
  2436 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2437 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2438 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2439 ;;Total ram usage:        4 bytes
  2440 ;; Hardware stack levels used: 1
  2441 ;; This function calls:
  2442 ;;		Nothing
  2443 ;; This function is called by:
  2444 ;;		_dtoa
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           
  2448                           	psect	text10
  2449  001BC2                     __ptext10:
  2450                           	callstack 0
  2451  001BC2                     _abs:
  2452                           	callstack 26
  2453  001BC2  BE14               	btfsc	(abs@a+1)^0,7,c
  2454  001BC4  EFEE  F00D         	goto	u1080
  2455  001BC8  5014               	movf	(abs@a+1)^0,w,c
  2456  001BCA  E106               	bnz	u1081
  2457  001BCC  0413               	decf	abs@a^0,w,c
  2458  001BCE  B0D8               	btfsc	status,0,c
  2459  001BD0  EFEC  F00D         	goto	u1081
  2460  001BD4  EFEE  F00D         	goto	u1080
  2461  001BD8                     u1081:
  2462  001BD8  EFFC  F00D         	goto	l1059
  2463  001BDC                     u1080:
  2464  001BDC  C013  F015         	movff	abs@a,??_abs
  2465  001BE0  C014  F016         	movff	abs@a+1,??_abs+1
  2466  001BE4  1E15               	comf	??_abs^0,f,c
  2467  001BE6  1E16               	comf	(??_abs+1)^0,f,c
  2468  001BE8  4A15               	infsnz	??_abs^0,f,c
  2469  001BEA  2A16               	incf	(??_abs+1)^0,f,c
  2470  001BEC  C015  F013         	movff	??_abs,?_abs
  2471  001BF0  C016  F014         	movff	??_abs+1,?_abs+1
  2472  001BF4  EF00  F00E         	goto	l1062
  2473  001BF8                     l1059:
  2474  001BF8  C013  F013         	movff	abs@a,?_abs
  2475  001BFC  C014  F014         	movff	abs@a+1,?_abs+1
  2476  001C00                     l1062:
  2477  001C00  0012               	return		;funcret
  2478  001C02                     __end_of_abs:
  2479                           	callstack 0
  2480                           
  2481 ;; *************** function ___aomod *****************
  2482 ;; Defined at:
  2483 ;;		line 9 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\aomod.c"
  2484 ;; Parameters:    Size  Location     Type
  2485 ;;  dividend        8    0[COMRAM] long long 
  2486 ;;  divisor         8    8[COMRAM] long long 
  2487 ;; Auto vars:     Size  Location     Type
  2488 ;;  sign            1   17[COMRAM] unsigned char 
  2489 ;;  counter         1   16[COMRAM] unsigned char 
  2490 ;; Return value:  Size  Location     Type
  2491 ;;                  8    0[COMRAM] long long 
  2492 ;; Registers used:
  2493 ;;		wreg, status,2, status,0
  2494 ;; Tracked objects:
  2495 ;;		On entry : 0/0
  2496 ;;		On exit  : 0/0
  2497 ;;		Unchanged: 0/0
  2498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2499 ;;      Params:        16       0       0       0       0       0       0       0       0
  2500 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2501 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2502 ;;      Totals:        18       0       0       0       0       0       0       0       0
  2503 ;;Total ram usage:       18 bytes
  2504 ;; Hardware stack levels used: 1
  2505 ;; This function calls:
  2506 ;;		Nothing
  2507 ;; This function is called by:
  2508 ;;		_dtoa
  2509 ;; This function uses a non-reentrant model
  2510 ;;
  2511                           
  2512                           	psect	text11
  2513  0012EA                     __ptext11:
  2514                           	callstack 0
  2515  0012EA                     ___aomod:
  2516                           	callstack 26
  2517  0012EA  0E00               	movlw	0
  2518  0012EC  6E12               	movwf	___aomod@sign^0,c
  2519  0012EE  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2520  0012F0  EF7E  F009         	goto	u980
  2521  0012F4  EF7C  F009         	goto	u981
  2522  0012F8                     u981:
  2523  0012F8  EF90  F009         	goto	l1861
  2524  0012FC                     u980:
  2525  0012FC  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2526  0012FE  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2527  001300  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2528  001302  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2529  001304  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2530  001306  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2531  001308  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2532  00130A  6C01               	negf	___aomod@dividend^0,c
  2533  00130C  0E00               	movlw	0
  2534  00130E  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2535  001310  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2536  001312  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2537  001314  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2538  001316  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2539  001318  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2540  00131A  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2541  00131C  0E01               	movlw	1
  2542  00131E  6E12               	movwf	___aomod@sign^0,c
  2543  001320                     l1861:
  2544  001320  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2545  001322  EF97  F009         	goto	u990
  2546  001326  EF95  F009         	goto	u991
  2547  00132A                     u991:
  2548  00132A  EFA7  F009         	goto	l1865
  2549  00132E                     u990:
  2550  00132E  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2551  001330  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2552  001332  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2553  001334  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2554  001336  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2555  001338  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2556  00133A  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2557  00133C  6C09               	negf	___aomod@divisor^0,c
  2558  00133E  0E00               	movlw	0
  2559  001340  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2560  001342  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2561  001344  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2562  001346  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2563  001348  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2564  00134A  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2565  00134C  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2566  00134E                     l1865:
  2567  00134E  5009               	movf	___aomod@divisor^0,w,c
  2568  001350  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2569  001352  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2570  001354  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2571  001356  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2572  001358  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2573  00135A  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2574  00135C  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2575  00135E  B4D8               	btfsc	status,2,c
  2576  001360  EFB4  F009         	goto	u1001
  2577  001364  EFB6  F009         	goto	u1000
  2578  001368                     u1001:
  2579  001368  EFFE  F009         	goto	l1881
  2580  00136C                     u1000:
  2581  00136C  0E01               	movlw	1
  2582  00136E  6E11               	movwf	___aomod@counter^0,c
  2583  001370  EFC4  F009         	goto	l1871
  2584  001374                     l1869:
  2585  001374  90D8               	bcf	status,0,c
  2586  001376  3609               	rlcf	___aomod@divisor^0,f,c
  2587  001378  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2588  00137A  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2589  00137C  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2590  00137E  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2591  001380  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2592  001382  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2593  001384  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2594  001386  2A11               	incf	___aomod@counter^0,f,c
  2595  001388                     l1871:
  2596  001388  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2597  00138A  EFC9  F009         	goto	u1011
  2598  00138E  EFCB  F009         	goto	u1010
  2599  001392                     u1011:
  2600  001392  EFBA  F009         	goto	l1869
  2601  001396                     u1010:
  2602  001396                     l1873:
  2603  001396  5009               	movf	___aomod@divisor^0,w,c
  2604  001398  5C01               	subwf	___aomod@dividend^0,w,c
  2605  00139A  500A               	movf	(___aomod@divisor+1)^0,w,c
  2606  00139C  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2607  00139E  500B               	movf	(___aomod@divisor+2)^0,w,c
  2608  0013A0  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2609  0013A2  500C               	movf	(___aomod@divisor+3)^0,w,c
  2610  0013A4  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2611  0013A6  500D               	movf	(___aomod@divisor+4)^0,w,c
  2612  0013A8  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2613  0013AA  500E               	movf	(___aomod@divisor+5)^0,w,c
  2614  0013AC  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2615  0013AE  500F               	movf	(___aomod@divisor+6)^0,w,c
  2616  0013B0  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2617  0013B2  5010               	movf	(___aomod@divisor+7)^0,w,c
  2618  0013B4  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2619  0013B6  A0D8               	btfss	status,0,c
  2620  0013B8  EFE0  F009         	goto	u1021
  2621  0013BC  EFE2  F009         	goto	u1020
  2622  0013C0                     u1021:
  2623  0013C0  EFF2  F009         	goto	l1877
  2624  0013C4                     u1020:
  2625  0013C4  5009               	movf	___aomod@divisor^0,w,c
  2626  0013C6  5E01               	subwf	___aomod@dividend^0,f,c
  2627  0013C8  500A               	movf	(___aomod@divisor+1)^0,w,c
  2628  0013CA  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2629  0013CC  500B               	movf	(___aomod@divisor+2)^0,w,c
  2630  0013CE  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2631  0013D0  500C               	movf	(___aomod@divisor+3)^0,w,c
  2632  0013D2  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2633  0013D4  500D               	movf	(___aomod@divisor+4)^0,w,c
  2634  0013D6  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2635  0013D8  500E               	movf	(___aomod@divisor+5)^0,w,c
  2636  0013DA  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2637  0013DC  500F               	movf	(___aomod@divisor+6)^0,w,c
  2638  0013DE  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2639  0013E0  5010               	movf	(___aomod@divisor+7)^0,w,c
  2640  0013E2  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2641  0013E4                     l1877:
  2642  0013E4  90D8               	bcf	status,0,c
  2643  0013E6  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2644  0013E8  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2645  0013EA  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2646  0013EC  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2647  0013EE  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2648  0013F0  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2649  0013F2  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2650  0013F4  3209               	rrcf	___aomod@divisor^0,f,c
  2651  0013F6  2E11               	decfsz	___aomod@counter^0,f,c
  2652  0013F8  EFCB  F009         	goto	l1873
  2653  0013FC                     l1881:
  2654  0013FC  5012               	movf	___aomod@sign^0,w,c
  2655  0013FE  B4D8               	btfsc	status,2,c
  2656  001400  EF04  F00A         	goto	u1031
  2657  001404  EF06  F00A         	goto	u1030
  2658  001408                     u1031:
  2659  001408  EF16  F00A         	goto	l1885
  2660  00140C                     u1030:
  2661  00140C  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2662  00140E  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2663  001410  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2664  001412  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2665  001414  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2666  001416  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2667  001418  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2668  00141A  6C01               	negf	___aomod@dividend^0,c
  2669  00141C  0E00               	movlw	0
  2670  00141E  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2671  001420  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2672  001422  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2673  001424  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2674  001426  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2675  001428  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2676  00142A  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2677  00142C                     l1885:
  2678  00142C  C001  F001         	movff	___aomod@dividend,?___aomod
  2679  001430  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2680  001434  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2681  001438  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2682  00143C  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2683  001440  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2684  001444  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2685  001448  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2686  00144C  0012               	return		;funcret
  2687  00144E                     __end_of___aomod:
  2688                           	callstack 0
  2689                           
  2690 ;; *************** function ___aodiv *****************
  2691 ;; Defined at:
  2692 ;;		line 9 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\aodiv.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;  dividend        8    0[COMRAM] long long 
  2695 ;;  divisor         8    8[COMRAM] long long 
  2696 ;; Auto vars:     Size  Location     Type
  2697 ;;  quotient        8   18[COMRAM] long long 
  2698 ;;  sign            1   17[COMRAM] unsigned char 
  2699 ;;  counter         1   16[COMRAM] unsigned char 
  2700 ;; Return value:  Size  Location     Type
  2701 ;;                  8    0[COMRAM] long long 
  2702 ;; Registers used:
  2703 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2709 ;;      Params:        16       0       0       0       0       0       0       0       0
  2710 ;;      Locals:        10       0       0       0       0       0       0       0       0
  2711 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2712 ;;      Totals:        26       0       0       0       0       0       0       0       0
  2713 ;;Total ram usage:       26 bytes
  2714 ;; Hardware stack levels used: 1
  2715 ;; This function calls:
  2716 ;;		Nothing
  2717 ;; This function is called by:
  2718 ;;		_dtoa
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           	psect	text12
  2723  001162                     __ptext12:
  2724                           	callstack 0
  2725  001162                     ___aodiv:
  2726                           	callstack 26
  2727  001162  0E00               	movlw	0
  2728  001164  6E12               	movwf	___aodiv@sign^0,c
  2729  001166  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  2730  001168  EFBA  F008         	goto	u910
  2731  00116C  EFB8  F008         	goto	u911
  2732  001170                     u911:
  2733  001170  EFCC  F008         	goto	l1817
  2734  001174                     u910:
  2735  001174  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2736  001176  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2737  001178  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2738  00117A  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2739  00117C  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2740  00117E  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2741  001180  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2742  001182  6C09               	negf	___aodiv@divisor^0,c
  2743  001184  0E00               	movlw	0
  2744  001186  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2745  001188  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2746  00118A  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2747  00118C  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2748  00118E  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2749  001190  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2750  001192  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2751  001194  0E01               	movlw	1
  2752  001196  6E12               	movwf	___aodiv@sign^0,c
  2753  001198                     l1817:
  2754  001198  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2755  00119A  EFD3  F008         	goto	u920
  2756  00119E  EFD1  F008         	goto	u921
  2757  0011A2                     u921:
  2758  0011A2  EFE5  F008         	goto	l1823
  2759  0011A6                     u920:
  2760  0011A6  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2761  0011A8  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2762  0011AA  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2763  0011AC  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2764  0011AE  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2765  0011B0  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2766  0011B2  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2767  0011B4  6C01               	negf	___aodiv@dividend^0,c
  2768  0011B6  0E00               	movlw	0
  2769  0011B8  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2770  0011BA  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2771  0011BC  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2772  0011BE  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2773  0011C0  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2774  0011C2  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2775  0011C4  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2776  0011C6  0E01               	movlw	1
  2777  0011C8  1A12               	xorwf	___aodiv@sign^0,f,c
  2778  0011CA                     l1823:
  2779  0011CA  EE20  F013         	lfsr	2,___aodiv@quotient
  2780  0011CE  0E07               	movlw	7
  2781  0011D0                     u931:
  2782  0011D0  6ADE               	clrf	postinc2,c
  2783  0011D2  06E8               	decf	wreg,f,c
  2784  0011D4  E2FD               	bc	u931
  2785  0011D6  5009               	movf	___aodiv@divisor^0,w,c
  2786  0011D8  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2787  0011DA  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2788  0011DC  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2789  0011DE  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2790  0011E0  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2791  0011E2  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2792  0011E4  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2793  0011E6  B4D8               	btfsc	status,2,c
  2794  0011E8  EFF8  F008         	goto	u941
  2795  0011EC  EFFA  F008         	goto	u940
  2796  0011F0                     u941:
  2797  0011F0  EF4C  F009         	goto	l1845
  2798  0011F4                     u940:
  2799  0011F4  0E01               	movlw	1
  2800  0011F6  6E11               	movwf	___aodiv@counter^0,c
  2801  0011F8  EF08  F009         	goto	l1831
  2802  0011FC                     l1829:
  2803  0011FC  90D8               	bcf	status,0,c
  2804  0011FE  3609               	rlcf	___aodiv@divisor^0,f,c
  2805  001200  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2806  001202  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2807  001204  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2808  001206  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2809  001208  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2810  00120A  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2811  00120C  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2812  00120E  2A11               	incf	___aodiv@counter^0,f,c
  2813  001210                     l1831:
  2814  001210  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2815  001212  EF0D  F009         	goto	u951
  2816  001216  EF0F  F009         	goto	u950
  2817  00121A                     u951:
  2818  00121A  EFFE  F008         	goto	l1829
  2819  00121E                     u950:
  2820  00121E                     l1833:
  2821  00121E  90D8               	bcf	status,0,c
  2822  001220  3613               	rlcf	___aodiv@quotient^0,f,c
  2823  001222  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2824  001224  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2825  001226  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2826  001228  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2827  00122A  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2828  00122C  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2829  00122E  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2830  001230  5009               	movf	___aodiv@divisor^0,w,c
  2831  001232  5C01               	subwf	___aodiv@dividend^0,w,c
  2832  001234  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2833  001236  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2834  001238  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2835  00123A  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2836  00123C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2837  00123E  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2838  001240  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2839  001242  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2840  001244  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2841  001246  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2842  001248  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2843  00124A  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2844  00124C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2845  00124E  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2846  001250  A0D8               	btfss	status,0,c
  2847  001252  EF2D  F009         	goto	u961
  2848  001256  EF2F  F009         	goto	u960
  2849  00125A                     u961:
  2850  00125A  EF40  F009         	goto	l1841
  2851  00125E                     u960:
  2852  00125E  5009               	movf	___aodiv@divisor^0,w,c
  2853  001260  5E01               	subwf	___aodiv@dividend^0,f,c
  2854  001262  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2855  001264  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2856  001266  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2857  001268  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2858  00126A  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2859  00126C  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2860  00126E  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2861  001270  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2862  001272  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2863  001274  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2864  001276  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2865  001278  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2866  00127A  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2867  00127C  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2868  00127E  8013               	bsf	___aodiv@quotient^0,0,c
  2869  001280                     l1841:
  2870  001280  90D8               	bcf	status,0,c
  2871  001282  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2872  001284  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2873  001286  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2874  001288  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2875  00128A  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2876  00128C  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2877  00128E  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2878  001290  3209               	rrcf	___aodiv@divisor^0,f,c
  2879  001292  2E11               	decfsz	___aodiv@counter^0,f,c
  2880  001294  EF0F  F009         	goto	l1833
  2881  001298                     l1845:
  2882  001298  5012               	movf	___aodiv@sign^0,w,c
  2883  00129A  B4D8               	btfsc	status,2,c
  2884  00129C  EF52  F009         	goto	u971
  2885  0012A0  EF54  F009         	goto	u970
  2886  0012A4                     u971:
  2887  0012A4  EF64  F009         	goto	l1849
  2888  0012A8                     u970:
  2889  0012A8  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2890  0012AA  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2891  0012AC  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2892  0012AE  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2893  0012B0  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2894  0012B2  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2895  0012B4  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2896  0012B6  6C13               	negf	___aodiv@quotient^0,c
  2897  0012B8  0E00               	movlw	0
  2898  0012BA  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  2899  0012BC  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  2900  0012BE  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  2901  0012C0  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  2902  0012C2  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  2903  0012C4  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  2904  0012C6  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  2905  0012C8                     l1849:
  2906  0012C8  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2907  0012CC  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2908  0012D0  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2909  0012D4  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2910  0012D8  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2911  0012DC  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2912  0012E0  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2913  0012E4  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2914  0012E8  0012               	return		;funcret
  2915  0012EA                     __end_of___aodiv:
  2916                           	callstack 0
  2917                           
  2918 ;; *************** function _initTeclado *****************
  2919 ;; Defined at:
  2920 ;;		line 151 in file "keypad.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;		None
  2923 ;; Auto vars:     Size  Location     Type
  2924 ;;		None
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  1    wreg      void 
  2927 ;; Registers used:
  2928 ;;		None
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2934 ;;      Params:         0       0       0       0       0       0       0       0       0
  2935 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2936 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2937 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2938 ;;Total ram usage:        0 bytes
  2939 ;; Hardware stack levels used: 1
  2940 ;; This function calls:
  2941 ;;		Nothing
  2942 ;; This function is called by:
  2943 ;;		_main
  2944 ;; This function uses a non-reentrant model
  2945 ;;
  2946                           
  2947                           	psect	text13
  2948  001DFC                     __ptext13:
  2949                           	callstack 0
  2950  001DFC                     _initTeclado:
  2951                           	callstack 30
  2952  001DFC                     
  2953                           ;keypad.c: 152:     RBPU=0;
  2954  001DFC  9EF1               	bcf	4081,7,c	;volatile
  2955  001DFE  0012               	return		;funcret
  2956  001E00                     __end_of_initTeclado:
  2957                           	callstack 0
  2958                           
  2959 ;; *************** function _initActuadores *****************
  2960 ;; Defined at:
  2961 ;;		line 11 in file "Actuadores.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;		None
  2964 ;; Auto vars:     Size  Location     Type
  2965 ;;		None
  2966 ;; Return value:  Size  Location     Type
  2967 ;;                  1    wreg      void 
  2968 ;; Registers used:
  2969 ;;		wreg, status,2
  2970 ;; Tracked objects:
  2971 ;;		On entry : 0/0
  2972 ;;		On exit  : 0/0
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2975 ;;      Params:         0       0       0       0       0       0       0       0       0
  2976 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2977 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2978 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2979 ;;Total ram usage:        0 bytes
  2980 ;; Hardware stack levels used: 1
  2981 ;; This function calls:
  2982 ;;		Nothing
  2983 ;; This function is called by:
  2984 ;;		_main
  2985 ;; This function uses a non-reentrant model
  2986 ;;
  2987                           
  2988                           	psect	text14
  2989  001DCC                     __ptext14:
  2990                           	callstack 0
  2991  001DCC                     _initActuadores:
  2992                           	callstack 30
  2993  001DCC                     
  2994                           ;Actuadores.c: 12:     TRISC=0x00;
  2995  001DCC  0E00               	movlw	0
  2996  001DCE  6E94               	movwf	148,c	;volatile
  2997                           
  2998                           ;Actuadores.c: 13:     TRISE = 0;
  2999  001DD0  0E00               	movlw	0
  3000  001DD2  6E96               	movwf	150,c	;volatile
  3001  001DD4  0012               	return		;funcret
  3002  001DD6                     __end_of_initActuadores:
  3003                           	callstack 0
  3004                           
  3005 ;; *************** function _PedirTodosLosDatos *****************
  3006 ;; Defined at:
  3007 ;;		line 128 in file "LCD.c"
  3008 ;; Parameters:    Size  Location     Type
  3009 ;;  Temperatura     2   20[COMRAM] PTR unsigned char 
  3010 ;;		 -> Temperatura(2), 
  3011 ;;  Humedad         2   22[COMRAM] PTR unsigned char 
  3012 ;;		 -> Humedad(2), 
  3013 ;;  MargenErrorT    2   24[COMRAM] PTR unsigned char 
  3014 ;;		 -> MargenErrorT(1), 
  3015 ;;  MargenErrorH    2   26[COMRAM] PTR unsigned char 
  3016 ;;		 -> MargenErrorH(1), 
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;		None
  3019 ;; Return value:  Size  Location     Type
  3020 ;;                  1    wreg      void 
  3021 ;; Registers used:
  3022 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3023 ;; Tracked objects:
  3024 ;;		On entry : 0/0
  3025 ;;		On exit  : 0/0
  3026 ;;		Unchanged: 0/0
  3027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3028 ;;      Params:         8       0       0       0       0       0       0       0       0
  3029 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3030 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3031 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3032 ;;Total ram usage:       10 bytes
  3033 ;; Hardware stack levels used: 1
  3034 ;; Hardware stack levels required when called: 4
  3035 ;; This function calls:
  3036 ;;		_PedirDato
  3037 ;; This function is called by:
  3038 ;;		_main
  3039 ;; This function uses a non-reentrant model
  3040 ;;
  3041                           
  3042                           	psect	text15
  3043  0016DA                     __ptext15:
  3044                           	callstack 0
  3045  0016DA                     _PedirTodosLosDatos:
  3046                           	callstack 26
  3047  0016DA                     
  3048                           ;LCD.c: 129:        PedirDato("Temp. Adecuada",Temperatura,2);
  3049  0016DA  0E01               	movlw	low STR_7
  3050  0016DC  6E0A               	movwf	PedirDato@Etiqueta^0,c
  3051  0016DE  0E08               	movlw	high STR_7
  3052  0016E0  6E0B               	movwf	(PedirDato@Etiqueta+1)^0,c
  3053  0016E2  C015  F00C         	movff	PedirTodosLosDatos@Temperatura,PedirDato@vecLlenar
  3054  0016E6  C016  F00D         	movff	PedirTodosLosDatos@Temperatura+1,PedirDato@vecLlenar+1
  3055  0016EA  0E00               	movlw	0
  3056  0016EC  6E0F               	movwf	(PedirDato@CantDatos+1)^0,c
  3057  0016EE  0E02               	movlw	2
  3058  0016F0  6E0E               	movwf	PedirDato@CantDatos^0,c
  3059  0016F2  ECCA  F00B         	call	_PedirDato	;wreg free
  3060  0016F6                     
  3061                           ;LCD.c: 130:        _delay((unsigned long)((100)*(8000000L/4000.0)));
  3062  0016F6  0E02               	movlw	2
  3063  0016F8  6E1E               	movwf	(??_PedirTodosLosDatos+1)^0,c
  3064  0016FA  0E04               	movlw	4
  3065  0016FC  6E1D               	movwf	??_PedirTodosLosDatos^0,c
  3066  0016FE  0EBA               	movlw	186
  3067  001700                     u1707:
  3068  001700  2EE8               	decfsz	wreg,f,c
  3069  001702  D7FE               	bra	u1707
  3070  001704  2E1D               	decfsz	??_PedirTodosLosDatos^0,f,c
  3071  001706  D7FC               	bra	u1707
  3072  001708  2E1E               	decfsz	(??_PedirTodosLosDatos+1)^0,f,c
  3073  00170A  D7FA               	bra	u1707
  3074  00170C  D000               	nop2	
  3075  00170E                     
  3076                           ;LCD.c: 131:        PedirDato("Mgn Error Temp",MargenErrorT,1);
  3077  00170E  0E10               	movlw	low STR_8
  3078  001710  6E0A               	movwf	PedirDato@Etiqueta^0,c
  3079  001712  0E08               	movlw	high STR_8
  3080  001714  6E0B               	movwf	(PedirDato@Etiqueta+1)^0,c
  3081  001716  C019  F00C         	movff	PedirTodosLosDatos@MargenErrorT,PedirDato@vecLlenar
  3082  00171A  C01A  F00D         	movff	PedirTodosLosDatos@MargenErrorT+1,PedirDato@vecLlenar+1
  3083  00171E  0E00               	movlw	0
  3084  001720  6E0F               	movwf	(PedirDato@CantDatos+1)^0,c
  3085  001722  0E01               	movlw	1
  3086  001724  6E0E               	movwf	PedirDato@CantDatos^0,c
  3087  001726  ECCA  F00B         	call	_PedirDato	;wreg free
  3088                           
  3089                           ;LCD.c: 132:         _delay((unsigned long)((100)*(8000000L/4000.0)));
  3090  00172A  0E02               	movlw	2
  3091  00172C  6E1E               	movwf	(??_PedirTodosLosDatos+1)^0,c
  3092  00172E  0E04               	movlw	4
  3093  001730  6E1D               	movwf	??_PedirTodosLosDatos^0,c
  3094  001732  0EBA               	movlw	186
  3095  001734                     u1717:
  3096  001734  2EE8               	decfsz	wreg,f,c
  3097  001736  D7FE               	bra	u1717
  3098  001738  2E1D               	decfsz	??_PedirTodosLosDatos^0,f,c
  3099  00173A  D7FC               	bra	u1717
  3100  00173C  2E1E               	decfsz	(??_PedirTodosLosDatos+1)^0,f,c
  3101  00173E  D7FA               	bra	u1717
  3102  001740  D000               	nop2	
  3103  001742                     
  3104                           ;LCD.c: 133:        PedirDato("Hum. Adecuada",Humedad,2);
  3105  001742  0E1F               	movlw	low STR_9
  3106  001744  6E0A               	movwf	PedirDato@Etiqueta^0,c
  3107  001746  0E08               	movlw	high STR_9
  3108  001748  6E0B               	movwf	(PedirDato@Etiqueta+1)^0,c
  3109  00174A  C017  F00C         	movff	PedirTodosLosDatos@Humedad,PedirDato@vecLlenar
  3110  00174E  C018  F00D         	movff	PedirTodosLosDatos@Humedad+1,PedirDato@vecLlenar+1
  3111  001752  0E00               	movlw	0
  3112  001754  6E0F               	movwf	(PedirDato@CantDatos+1)^0,c
  3113  001756  0E02               	movlw	2
  3114  001758  6E0E               	movwf	PedirDato@CantDatos^0,c
  3115  00175A  ECCA  F00B         	call	_PedirDato	;wreg free
  3116  00175E                     
  3117                           ;LCD.c: 134:        _delay((unsigned long)((100)*(8000000L/4000.0)));
  3118  00175E  0E02               	movlw	2
  3119  001760  6E1E               	movwf	(??_PedirTodosLosDatos+1)^0,c
  3120  001762  0E04               	movlw	4
  3121  001764  6E1D               	movwf	??_PedirTodosLosDatos^0,c
  3122  001766  0EBA               	movlw	186
  3123  001768                     u1727:
  3124  001768  2EE8               	decfsz	wreg,f,c
  3125  00176A  D7FE               	bra	u1727
  3126  00176C  2E1D               	decfsz	??_PedirTodosLosDatos^0,f,c
  3127  00176E  D7FC               	bra	u1727
  3128  001770  2E1E               	decfsz	(??_PedirTodosLosDatos+1)^0,f,c
  3129  001772  D7FA               	bra	u1727
  3130  001774  D000               	nop2	
  3131                           
  3132                           ;LCD.c: 135:        PedirDato("Mgn Error Hum",MargenErrorH,1);
  3133  001776  0E2D               	movlw	low STR_10
  3134  001778  6E0A               	movwf	PedirDato@Etiqueta^0,c
  3135  00177A  0E08               	movlw	high STR_10
  3136  00177C  6E0B               	movwf	(PedirDato@Etiqueta+1)^0,c
  3137  00177E  C01B  F00C         	movff	PedirTodosLosDatos@MargenErrorH,PedirDato@vecLlenar
  3138  001782  C01C  F00D         	movff	PedirTodosLosDatos@MargenErrorH+1,PedirDato@vecLlenar+1
  3139  001786  0E00               	movlw	0
  3140  001788  6E0F               	movwf	(PedirDato@CantDatos+1)^0,c
  3141  00178A  0E01               	movlw	1
  3142  00178C  6E0E               	movwf	PedirDato@CantDatos^0,c
  3143  00178E  ECCA  F00B         	call	_PedirDato	;wreg free
  3144  001792  0012               	return		;funcret
  3145  001794                     __end_of_PedirTodosLosDatos:
  3146                           	callstack 0
  3147                           
  3148 ;; *************** function _PedirDato *****************
  3149 ;; Defined at:
  3150 ;;		line 108 in file "LCD.c"
  3151 ;; Parameters:    Size  Location     Type
  3152 ;;  Etiqueta        2    9[COMRAM] PTR unsigned char 
  3153 ;;		 -> STR_10(14), STR_9(14), STR_8(15), STR_7(15), 
  3154 ;;  vecLlenar       2   11[COMRAM] PTR unsigned char 
  3155 ;;		 -> MargenErrorH(1), MargenErrorT(1), Humedad(2), Temperatura(2), 
  3156 ;;  CantDatos       2   13[COMRAM] int 
  3157 ;; Auto vars:     Size  Location     Type
  3158 ;;  i               2   17[COMRAM] int 
  3159 ;;  tecla           1   19[COMRAM] unsigned char 
  3160 ;; Return value:  Size  Location     Type
  3161 ;;                  1    wreg      void 
  3162 ;; Registers used:
  3163 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3169 ;;      Params:         6       0       0       0       0       0       0       0       0
  3170 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3171 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3172 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3173 ;;Total ram usage:       11 bytes
  3174 ;; Hardware stack levels used: 1
  3175 ;; Hardware stack levels required when called: 3
  3176 ;; This function calls:
  3177 ;;		_LCD_Char
  3178 ;;		_LCD_Clear
  3179 ;;		_LCD_Command
  3180 ;;		_LCD_String_xy
  3181 ;;		_keyfind
  3182 ;; This function is called by:
  3183 ;;		_PedirTodosLosDatos
  3184 ;; This function uses a non-reentrant model
  3185 ;;
  3186                           
  3187                           	psect	text16
  3188  001794                     __ptext16:
  3189                           	callstack 0
  3190  001794                     _PedirDato:
  3191                           	callstack 26
  3192  001794                     
  3193                           ;LCD.c: 109:      LCD_Clear();
  3194  001794  ECA6  F00E         	call	_LCD_Clear	;wreg free
  3195  001798                     
  3196                           ;LCD.c: 111:      unsigned char tecla;;LCD.c: 112:      LCD_String_xy(0,0,Etiqueta);
  3197  001798  0E00               	movlw	0
  3198  00179A  6E05               	movwf	LCD_String_xy@pos^0,c
  3199  00179C  C00A  F006         	movff	PedirDato@Etiqueta,LCD_String_xy@msg
  3200  0017A0  C00B  F007         	movff	PedirDato@Etiqueta+1,LCD_String_xy@msg+1
  3201  0017A4  0E00               	movlw	0
  3202  0017A6  EC01  F00E         	call	_LCD_String_xy
  3203  0017AA                     
  3204                           ;LCD.c: 113:      LCD_Command(0xC0);
  3205  0017AA  0EC0               	movlw	192
  3206  0017AC  EC51  F00D         	call	_LCD_Command
  3207  0017B0                     
  3208                           ;LCD.c: 115:      for(int i=0 ; i < CantDatos ; i++){
  3209  0017B0  0E00               	movlw	0
  3210  0017B2  6E13               	movwf	(PedirDato@i+1)^0,c
  3211  0017B4  0E00               	movlw	0
  3212  0017B6  6E12               	movwf	PedirDato@i^0,c
  3213  0017B8  EFEE  F00B         	goto	l2189
  3214  0017BC                     l2181:
  3215                           
  3216                           ;LCD.c: 116:      tecla=keyfind();
  3217  0017BC  ECBF  F006         	call	_keyfind	;wreg free
  3218  0017C0  6E14               	movwf	PedirDato@tecla^0,c
  3219  0017C2                     
  3220                           ;LCD.c: 117:      LCD_Char(tecla);
  3221  0017C2  5014               	movf	PedirDato@tecla^0,w,c
  3222  0017C4  EC29  F00D         	call	_LCD_Char
  3223  0017C8                     
  3224                           ;LCD.c: 118:      vecLlenar[i] = tecla;
  3225  0017C8  5012               	movf	PedirDato@i^0,w,c
  3226  0017CA  240C               	addwf	PedirDato@vecLlenar^0,w,c
  3227  0017CC  6ED9               	movwf	fsr2l,c
  3228  0017CE  5013               	movf	(PedirDato@i+1)^0,w,c
  3229  0017D0  200D               	addwfc	(PedirDato@vecLlenar+1)^0,w,c
  3230  0017D2  6EDA               	movwf	fsr2h,c
  3231  0017D4  C014  FFDF         	movff	PedirDato@tecla,indf2
  3232  0017D8                     
  3233                           ;LCD.c: 119:      }
  3234  0017D8  4A12               	infsnz	PedirDato@i^0,f,c
  3235  0017DA  2A13               	incf	(PedirDato@i+1)^0,f,c
  3236  0017DC                     l2189:
  3237  0017DC  500E               	movf	PedirDato@CantDatos^0,w,c
  3238  0017DE  5C12               	subwf	PedirDato@i^0,w,c
  3239  0017E0  5013               	movf	(PedirDato@i+1)^0,w,c
  3240  0017E2  0A80               	xorlw	128
  3241  0017E4  6E10               	movwf	??_PedirDato^0,c
  3242  0017E6  500F               	movf	(PedirDato@CantDatos+1)^0,w,c
  3243  0017E8  0A80               	xorlw	128
  3244  0017EA  5810               	subwfb	??_PedirDato^0,w,c
  3245  0017EC  A0D8               	btfss	status,0,c
  3246  0017EE  EFFB  F00B         	goto	u1471
  3247  0017F2  EFFD  F00B         	goto	u1470
  3248  0017F6                     u1471:
  3249  0017F6  EFDE  F00B         	goto	l2181
  3250  0017FA                     u1470:
  3251  0017FA                     
  3252                           ;LCD.c: 120:      _delay((unsigned long)((100)*(8000000L/4000.0)));
  3253  0017FA  0E02               	movlw	2
  3254  0017FC  6E11               	movwf	(??_PedirDato+1)^0,c
  3255  0017FE  0E04               	movlw	4
  3256  001800  6E10               	movwf	??_PedirDato^0,c
  3257  001802  0EBA               	movlw	186
  3258  001804                     u1737:
  3259  001804  2EE8               	decfsz	wreg,f,c
  3260  001806  D7FE               	bra	u1737
  3261  001808  2E10               	decfsz	??_PedirDato^0,f,c
  3262  00180A  D7FC               	bra	u1737
  3263  00180C  2E11               	decfsz	(??_PedirDato+1)^0,f,c
  3264  00180E  D7FA               	bra	u1737
  3265  001810  D000               	nop2	
  3266  001812                     
  3267                           ;LCD.c: 121:      LCD_Clear();
  3268  001812  ECA6  F00E         	call	_LCD_Clear	;wreg free
  3269  001816  0012               	return		;funcret
  3270  001818                     __end_of_PedirDato:
  3271                           	callstack 0
  3272                           
  3273 ;; *************** function _keyfind *****************
  3274 ;; Defined at:
  3275 ;;		line 18 in file "keypad.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;		None
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;		None
  3280 ;; Return value:  Size  Location     Type
  3281 ;;                  1    wreg      unsigned char 
  3282 ;; Registers used:
  3283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3284 ;; Tracked objects:
  3285 ;;		On entry : 0/0
  3286 ;;		On exit  : 0/0
  3287 ;;		Unchanged: 0/0
  3288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3289 ;;      Params:         0       0       0       0       0       0       0       0       0
  3290 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3291 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3292 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3293 ;;Total ram usage:        1 bytes
  3294 ;; Hardware stack levels used: 1
  3295 ;; This function calls:
  3296 ;;		Nothing
  3297 ;; This function is called by:
  3298 ;;		_PedirDato
  3299 ;; This function uses a non-reentrant model
  3300 ;;
  3301                           
  3302                           	psect	text17
  3303  000D7E                     __ptext17:
  3304                           	callstack 0
  3305  000D7E                     _keyfind:
  3306                           	callstack 28
  3307  000D7E                     
  3308                           ;keypad.c: 21:          TRISB = 0xf0;
  3309  000D7E  0EF0               	movlw	240
  3310  000D80  6E93               	movwf	147,c	;volatile
  3311                           
  3312                           ;keypad.c: 22:          LATB = 0xf0;
  3313  000D82  0EF0               	movlw	240
  3314  000D84  6E8A               	movwf	138,c	;volatile
  3315  000D86                     l2029:
  3316                           
  3317                           ;keypad.c: 26:         {;keypad.c: 28:             col_loc = PORTB & 0xf0;
  3318  000D86  5081               	movf	129,w,c	;volatile
  3319  000D88  0BF0               	andlw	240
  3320  000D8A  0100               	movlb	0	; () banked
  3321  000D8C  6F74               	movwf	_col_loc& (0+255),b
  3322  000D8E                     
  3323                           ; BSR set to: 0
  3324                           ;keypad.c: 30:         }while(col_loc!=0xf0);
  3325  000D8E  0EF0               	movlw	240
  3326  000D90  1974               	xorwf	_col_loc& (0+255),w,b
  3327  000D92  A4D8               	btfss	status,2,c
  3328  000D94  EFCE  F006         	goto	u1281
  3329  000D98  EFD0  F006         	goto	u1280
  3330  000D9C                     u1281:
  3331  000D9C  EFC3  F006         	goto	l2029
  3332  000DA0                     u1280:
  3333  000DA0                     
  3334                           ; BSR set to: 0
  3335                           ;keypad.c: 31:          col_loc = PORTB & 0xf0;
  3336  000DA0  5081               	movf	129,w,c	;volatile
  3337  000DA2  0BF0               	andlw	240
  3338  000DA4  6F74               	movwf	_col_loc& (0+255),b
  3339                           
  3340                           ;keypad.c: 32:       }while(col_loc!=0xf0);
  3341  000DA6  0EF0               	movlw	240
  3342  000DA8  1974               	xorwf	_col_loc& (0+255),w,b
  3343  000DAA  A4D8               	btfss	status,2,c
  3344  000DAC  EFDA  F006         	goto	u1291
  3345  000DB0  EFDC  F006         	goto	u1290
  3346  000DB4                     u1291:
  3347  000DB4  EFC3  F006         	goto	l2029
  3348  000DB8                     u1290:
  3349  000DB8                     
  3350                           ; BSR set to: 0
  3351                           ;keypad.c: 34:       _delay((unsigned long)((30)*(8000000L/4000.0)));
  3352  000DB8  0E4E               	movlw	78
  3353  000DBA  6E01               	movwf	??_keyfind^0,c
  3354  000DBC  0EEB               	movlw	235
  3355  000DBE                     u1747:
  3356  000DBE  2EE8               	decfsz	wreg,f,c
  3357  000DC0  D7FE               	bra	u1747
  3358  000DC2  2E01               	decfsz	??_keyfind^0,f,c
  3359  000DC4  D7FC               	bra	u1747
  3360  000DC6  F000               	nop	
  3361  000DC8                     
  3362                           ;keypad.c: 35:         LATB = 0xf0;
  3363  000DC8  0EF0               	movlw	240
  3364  000DCA  6E8A               	movwf	138,c	;volatile
  3365  000DCC                     l2039:
  3366                           
  3367                           ;keypad.c: 39:             {;keypad.c: 40:                 col_loc = PORTB & 0xf0;
  3368  000DCC  5081               	movf	129,w,c	;volatile
  3369  000DCE  0BF0               	andlw	240
  3370  000DD0  0100               	movlb	0	; () banked
  3371  000DD2  6F74               	movwf	_col_loc& (0+255),b
  3372  000DD4                     
  3373                           ; BSR set to: 0
  3374                           ;keypad.c: 41:             }while(col_loc==0xf0);
  3375  000DD4  0EF0               	movlw	240
  3376  000DD6  1974               	xorwf	_col_loc& (0+255),w,b
  3377  000DD8  B4D8               	btfsc	status,2,c
  3378  000DDA  EFF1  F006         	goto	u1301
  3379  000DDE  EFF3  F006         	goto	u1300
  3380  000DE2                     u1301:
  3381  000DE2  EFE6  F006         	goto	l2039
  3382  000DE6                     u1300:
  3383  000DE6                     
  3384                           ; BSR set to: 0
  3385                           ;keypad.c: 42:          col_loc = PORTB & 0xf0;
  3386  000DE6  5081               	movf	129,w,c	;volatile
  3387  000DE8  0BF0               	andlw	240
  3388  000DEA  6F74               	movwf	_col_loc& (0+255),b
  3389                           
  3390                           ;keypad.c: 43:         }while(col_loc==0xf0);
  3391  000DEC  0EF0               	movlw	240
  3392  000DEE  1974               	xorwf	_col_loc& (0+255),w,b
  3393  000DF0  B4D8               	btfsc	status,2,c
  3394  000DF2  EFFD  F006         	goto	u1311
  3395  000DF6  EFFF  F006         	goto	u1310
  3396  000DFA                     u1311:
  3397  000DFA  EFE6  F006         	goto	l2039
  3398  000DFE                     u1310:
  3399  000DFE                     
  3400                           ; BSR set to: 0
  3401                           ;keypad.c: 45:         _delay((unsigned long)((30)*(8000000L/4000.0)));
  3402  000DFE  0E4E               	movlw	78
  3403  000E00  6E01               	movwf	??_keyfind^0,c
  3404  000E02  0EEB               	movlw	235
  3405  000E04                     u1757:
  3406  000E04  2EE8               	decfsz	wreg,f,c
  3407  000E06  D7FE               	bra	u1757
  3408  000E08  2E01               	decfsz	??_keyfind^0,f,c
  3409  000E0A  D7FC               	bra	u1757
  3410  000E0C  F000               	nop	
  3411  000E0E                     
  3412                           ;keypad.c: 47:         col_loc = PORTB & 0xf0;
  3413  000E0E  5081               	movf	129,w,c	;volatile
  3414  000E10  0BF0               	andlw	240
  3415  000E12  0100               	movlb	0	; () banked
  3416  000E14  6F74               	movwf	_col_loc& (0+255),b
  3417  000E16                     l2049:
  3418                           
  3419                           ; BSR set to: 0
  3420                           ;keypad.c: 52:     {;keypad.c: 53:         LATB = 0xfe;
  3421  000E16  0EFE               	movlw	254
  3422  000E18  6E8A               	movwf	138,c	;volatile
  3423  000E1A                     
  3424                           ; BSR set to: 0
  3425                           ;keypad.c: 54:         col_loc = PORTB & 0xf0;
  3426  000E1A  5081               	movf	129,w,c	;volatile
  3427  000E1C  0BF0               	andlw	240
  3428  000E1E  6F74               	movwf	_col_loc& (0+255),b
  3429  000E20                     
  3430                           ; BSR set to: 0
  3431                           ;keypad.c: 55:         temp_col=col_loc;
  3432  000E20  C074  F072         	movff	_col_loc,_temp_col
  3433  000E24                     
  3434                           ; BSR set to: 0
  3435                           ;keypad.c: 56:         if(col_loc!=0xf0)
  3436  000E24  0EF0               	movlw	240
  3437  000E26  1974               	xorwf	_col_loc& (0+255),w,b
  3438  000E28  B4D8               	btfsc	status,2,c
  3439  000E2A  EF19  F007         	goto	u1321
  3440  000E2E  EF1B  F007         	goto	u1320
  3441  000E32                     u1321:
  3442  000E32  EF2D  F007         	goto	l2061
  3443  000E36                     u1320:
  3444  000E36                     
  3445                           ; BSR set to: 0
  3446                           ;keypad.c: 57:         {;keypad.c: 58:             rowloc=0;
  3447  000E36  0E00               	movlw	0
  3448  000E38  6F73               	movwf	_rowloc& (0+255),b
  3449                           
  3450                           ;keypad.c: 59:             while(temp_col!=0xf0)
  3451  000E3A  EF22  F007         	goto	l165
  3452  000E3E                     l2059:
  3453                           
  3454                           ; BSR set to: 0
  3455                           ;keypad.c: 60:             {;keypad.c: 61:                 temp_col = PORTB & 0xf0;
  3456  000E3E  5081               	movf	129,w,c	;volatile
  3457  000E40  0BF0               	andlw	240
  3458  000E42  6F72               	movwf	_temp_col& (0+255),b
  3459  000E44                     l165:
  3460                           
  3461                           ; BSR set to: 0
  3462                           ;keypad.c: 59:             while(temp_col!=0xf0)
  3463  000E44  0EF0               	movlw	240
  3464  000E46  1972               	xorwf	_temp_col& (0+255),w,b
  3465  000E48  A4D8               	btfss	status,2,c
  3466  000E4A  EF29  F007         	goto	u1331
  3467  000E4E  EF2B  F007         	goto	u1330
  3468  000E52                     u1331:
  3469  000E52  EF1F  F007         	goto	l2059
  3470  000E56                     u1330:
  3471  000E56  EF91  F007         	goto	l2097
  3472  000E5A                     l2061:
  3473                           
  3474                           ; BSR set to: 0
  3475                           ;keypad.c: 66:         LATB = 0xfd;
  3476  000E5A  0EFD               	movlw	253
  3477  000E5C  6E8A               	movwf	138,c	;volatile
  3478  000E5E                     
  3479                           ; BSR set to: 0
  3480                           ;keypad.c: 67:         col_loc = PORTB & 0xf0;
  3481  000E5E  5081               	movf	129,w,c	;volatile
  3482  000E60  0BF0               	andlw	240
  3483  000E62  6F74               	movwf	_col_loc& (0+255),b
  3484  000E64                     
  3485                           ; BSR set to: 0
  3486                           ;keypad.c: 68:         temp_col=col_loc;
  3487  000E64  C074  F072         	movff	_col_loc,_temp_col
  3488  000E68                     
  3489                           ; BSR set to: 0
  3490                           ;keypad.c: 69:         if(col_loc!=0xf0)
  3491  000E68  0EF0               	movlw	240
  3492  000E6A  1974               	xorwf	_col_loc& (0+255),w,b
  3493  000E6C  B4D8               	btfsc	status,2,c
  3494  000E6E  EF3B  F007         	goto	u1341
  3495  000E72  EF3D  F007         	goto	u1340
  3496  000E76                     u1341:
  3497  000E76  EF4F  F007         	goto	l2073
  3498  000E7A                     u1340:
  3499  000E7A                     
  3500                           ; BSR set to: 0
  3501                           ;keypad.c: 70:         {;keypad.c: 71:             rowloc=1;
  3502  000E7A  0E01               	movlw	1
  3503  000E7C  6F73               	movwf	_rowloc& (0+255),b
  3504                           
  3505                           ;keypad.c: 72:             while(temp_col!=0xf0)
  3506  000E7E  EF44  F007         	goto	l170
  3507  000E82                     l2071:
  3508                           
  3509                           ; BSR set to: 0
  3510                           ;keypad.c: 73:             {;keypad.c: 74:                 temp_col = PORTB & 0xf0;
  3511  000E82  5081               	movf	129,w,c	;volatile
  3512  000E84  0BF0               	andlw	240
  3513  000E86  6F72               	movwf	_temp_col& (0+255),b
  3514  000E88                     l170:
  3515                           
  3516                           ; BSR set to: 0
  3517                           ;keypad.c: 72:             while(temp_col!=0xf0)
  3518  000E88  0EF0               	movlw	240
  3519  000E8A  1972               	xorwf	_temp_col& (0+255),w,b
  3520  000E8C  A4D8               	btfss	status,2,c
  3521  000E8E  EF4B  F007         	goto	u1351
  3522  000E92  EF4D  F007         	goto	u1350
  3523  000E96                     u1351:
  3524  000E96  EF41  F007         	goto	l2071
  3525  000E9A                     u1350:
  3526  000E9A  EF91  F007         	goto	l2097
  3527  000E9E                     l2073:
  3528                           
  3529                           ; BSR set to: 0
  3530                           ;keypad.c: 79:         LATB = 0xfb;
  3531  000E9E  0EFB               	movlw	251
  3532  000EA0  6E8A               	movwf	138,c	;volatile
  3533  000EA2                     
  3534                           ; BSR set to: 0
  3535                           ;keypad.c: 80:         col_loc = PORTB & 0xf0;
  3536  000EA2  5081               	movf	129,w,c	;volatile
  3537  000EA4  0BF0               	andlw	240
  3538  000EA6  6F74               	movwf	_col_loc& (0+255),b
  3539  000EA8                     
  3540                           ; BSR set to: 0
  3541                           ;keypad.c: 81:         temp_col=col_loc;
  3542  000EA8  C074  F072         	movff	_col_loc,_temp_col
  3543  000EAC                     
  3544                           ; BSR set to: 0
  3545                           ;keypad.c: 82:         if(col_loc!=0xf0)
  3546  000EAC  0EF0               	movlw	240
  3547  000EAE  1974               	xorwf	_col_loc& (0+255),w,b
  3548  000EB0  B4D8               	btfsc	status,2,c
  3549  000EB2  EF5D  F007         	goto	u1361
  3550  000EB6  EF5F  F007         	goto	u1360
  3551  000EBA                     u1361:
  3552  000EBA  EF71  F007         	goto	l2085
  3553  000EBE                     u1360:
  3554  000EBE                     
  3555                           ; BSR set to: 0
  3556                           ;keypad.c: 83:         {;keypad.c: 84:             rowloc=2;
  3557  000EBE  0E02               	movlw	2
  3558  000EC0  6F73               	movwf	_rowloc& (0+255),b
  3559                           
  3560                           ;keypad.c: 85:             while(temp_col!=0xf0)
  3561  000EC2  EF66  F007         	goto	l174
  3562  000EC6                     l2083:
  3563                           
  3564                           ; BSR set to: 0
  3565                           ;keypad.c: 86:             {;keypad.c: 87:                 temp_col = PORTB & 0xf0;
  3566  000EC6  5081               	movf	129,w,c	;volatile
  3567  000EC8  0BF0               	andlw	240
  3568  000ECA  6F72               	movwf	_temp_col& (0+255),b
  3569  000ECC                     l174:
  3570                           
  3571                           ; BSR set to: 0
  3572                           ;keypad.c: 85:             while(temp_col!=0xf0)
  3573  000ECC  0EF0               	movlw	240
  3574  000ECE  1972               	xorwf	_temp_col& (0+255),w,b
  3575  000ED0  A4D8               	btfss	status,2,c
  3576  000ED2  EF6D  F007         	goto	u1371
  3577  000ED6  EF6F  F007         	goto	u1370
  3578  000EDA                     u1371:
  3579  000EDA  EF63  F007         	goto	l2083
  3580  000EDE                     u1370:
  3581  000EDE  EF91  F007         	goto	l2097
  3582  000EE2                     l2085:
  3583                           
  3584                           ; BSR set to: 0
  3585                           ;keypad.c: 92:         LATB = 0xf7;
  3586  000EE2  0EF7               	movlw	247
  3587  000EE4  6E8A               	movwf	138,c	;volatile
  3588  000EE6                     
  3589                           ; BSR set to: 0
  3590                           ;keypad.c: 93:         col_loc = PORTB & 0xf0;
  3591  000EE6  5081               	movf	129,w,c	;volatile
  3592  000EE8  0BF0               	andlw	240
  3593  000EEA  6F74               	movwf	_col_loc& (0+255),b
  3594  000EEC                     
  3595                           ; BSR set to: 0
  3596                           ;keypad.c: 94:         temp_col=col_loc;
  3597  000EEC  C074  F072         	movff	_col_loc,_temp_col
  3598  000EF0                     
  3599                           ; BSR set to: 0
  3600                           ;keypad.c: 95:         if(col_loc!=0xf0)
  3601  000EF0  0EF0               	movlw	240
  3602  000EF2  1974               	xorwf	_col_loc& (0+255),w,b
  3603  000EF4  B4D8               	btfsc	status,2,c
  3604  000EF6  EF7F  F007         	goto	u1381
  3605  000EFA  EF81  F007         	goto	u1380
  3606  000EFE                     u1381:
  3607  000EFE  EF0B  F007         	goto	l2049
  3608  000F02                     u1380:
  3609  000F02                     
  3610                           ; BSR set to: 0
  3611                           ;keypad.c: 96:         {;keypad.c: 97:             rowloc=3;
  3612  000F02  0E03               	movlw	3
  3613  000F04  6F73               	movwf	_rowloc& (0+255),b
  3614                           
  3615                           ;keypad.c: 98:             while(temp_col!=0xf0)
  3616  000F06  EF88  F007         	goto	l178
  3617  000F0A                     l2095:
  3618                           
  3619                           ; BSR set to: 0
  3620                           ;keypad.c: 99:             {;keypad.c: 100:                 temp_col = PORTB & 0xf0;
  3621  000F0A  5081               	movf	129,w,c	;volatile
  3622  000F0C  0BF0               	andlw	240
  3623  000F0E  6F72               	movwf	_temp_col& (0+255),b
  3624  000F10                     l178:
  3625                           
  3626                           ; BSR set to: 0
  3627                           ;keypad.c: 98:             while(temp_col!=0xf0)
  3628  000F10  0EF0               	movlw	240
  3629  000F12  1972               	xorwf	_temp_col& (0+255),w,b
  3630  000F14  A4D8               	btfss	status,2,c
  3631  000F16  EF8F  F007         	goto	u1391
  3632  000F1A  EF91  F007         	goto	u1390
  3633  000F1E                     u1391:
  3634  000F1E  EF85  F007         	goto	l2095
  3635  000F22                     u1390:
  3636  000F22                     l2097:
  3637                           
  3638                           ; BSR set to: 0
  3639                           ;keypad.c: 109:     {;keypad.c: 111:         if(col_loc==0xe0)
  3640  000F22  0EE0               	movlw	224
  3641  000F24  1974               	xorwf	_col_loc& (0+255),w,b
  3642  000F26  A4D8               	btfss	status,2,c
  3643  000F28  EF98  F007         	goto	u1401
  3644  000F2C  EF9A  F007         	goto	u1400
  3645  000F30                     u1401:
  3646  000F30  EFA5  F007         	goto	l2105
  3647  000F34                     u1400:
  3648  000F34                     
  3649                           ; BSR set to: 0
  3650                           ;keypad.c: 112:         {;keypad.c: 113:              return keypad[rowloc][0];
  3651  000F34  5173               	movf	_rowloc& (0+255),w,b
  3652  000F36  0D04               	mullw	4
  3653  000F38  0EA8               	movlw	low _keypad
  3654  000F3A  24F3               	addwf	243,w,c
  3655  000F3C  6ED9               	movwf	fsr2l,c
  3656  000F3E  0E00               	movlw	high _keypad
  3657  000F40  20F4               	addwfc	prodh,w,c
  3658  000F42  6EDA               	movwf	fsr2h,c
  3659  000F44  50DF               	movf	indf2,w,c
  3660  000F46  EFD6  F007         	goto	l184
  3661  000F4A                     l2105:
  3662                           
  3663                           ; BSR set to: 0
  3664                           ;keypad.c: 116:             if(col_loc==0xd0)
  3665  000F4A  0ED0               	movlw	208
  3666  000F4C  1974               	xorwf	_col_loc& (0+255),w,b
  3667  000F4E  A4D8               	btfss	status,2,c
  3668  000F50  EFAC  F007         	goto	u1411
  3669  000F54  EFAE  F007         	goto	u1410
  3670  000F58                     u1411:
  3671  000F58  EFB9  F007         	goto	l2113
  3672  000F5C                     u1410:
  3673  000F5C                     
  3674                           ; BSR set to: 0
  3675                           ;keypad.c: 117:         {;keypad.c: 118:             return keypad[rowloc][1];
  3676  000F5C  5173               	movf	_rowloc& (0+255),w,b
  3677  000F5E  0D04               	mullw	4
  3678  000F60  0EA9               	movlw	low (_keypad+1)
  3679  000F62  24F3               	addwf	243,w,c
  3680  000F64  6ED9               	movwf	fsr2l,c
  3681  000F66  0E00               	movlw	high (_keypad+1)
  3682  000F68  20F4               	addwfc	prodh,w,c
  3683  000F6A  6EDA               	movwf	fsr2h,c
  3684  000F6C  50DF               	movf	indf2,w,c
  3685  000F6E  EFD6  F007         	goto	l184
  3686  000F72                     l2113:
  3687                           
  3688                           ; BSR set to: 0
  3689                           ;keypad.c: 121:             if(col_loc==0xb0)
  3690  000F72  0EB0               	movlw	176
  3691  000F74  1974               	xorwf	_col_loc& (0+255),w,b
  3692  000F76  A4D8               	btfss	status,2,c
  3693  000F78  EFC0  F007         	goto	u1421
  3694  000F7C  EFC2  F007         	goto	u1420
  3695  000F80                     u1421:
  3696  000F80  EFCD  F007         	goto	l2121
  3697  000F84                     u1420:
  3698  000F84                     
  3699                           ; BSR set to: 0
  3700                           ;keypad.c: 122:         {;keypad.c: 123:             return keypad[rowloc][2];
  3701  000F84  5173               	movf	_rowloc& (0+255),w,b
  3702  000F86  0D04               	mullw	4
  3703  000F88  0EAA               	movlw	low (_keypad+2)
  3704  000F8A  24F3               	addwf	243,w,c
  3705  000F8C  6ED9               	movwf	fsr2l,c
  3706  000F8E  0E00               	movlw	high (_keypad+2)
  3707  000F90  20F4               	addwfc	prodh,w,c
  3708  000F92  6EDA               	movwf	fsr2h,c
  3709  000F94  50DF               	movf	indf2,w,c
  3710  000F96  EFD6  F007         	goto	l184
  3711  000F9A                     l2121:
  3712                           
  3713                           ; BSR set to: 0
  3714                           ;keypad.c: 127:         {;keypad.c: 128:             return keypad[rowloc][3];
  3715  000F9A  5173               	movf	_rowloc& (0+255),w,b
  3716  000F9C  0D04               	mullw	4
  3717  000F9E  0EAB               	movlw	low (_keypad+3)
  3718  000FA0  24F3               	addwf	243,w,c
  3719  000FA2  6ED9               	movwf	fsr2l,c
  3720  000FA4  0E00               	movlw	high (_keypad+3)
  3721  000FA6  20F4               	addwfc	prodh,w,c
  3722  000FA8  6EDA               	movwf	fsr2h,c
  3723  000FAA  50DF               	movf	indf2,w,c
  3724  000FAC                     l184:
  3725                           
  3726                           ; BSR set to: 0
  3727  000FAC  0012               	return		;funcret
  3728  000FAE                     __end_of_keyfind:
  3729                           	callstack 0
  3730                           
  3731 ;; *************** function _LCD_String_xy *****************
  3732 ;; Defined at:
  3733 ;;		line 77 in file "LCD.c"
  3734 ;; Parameters:    Size  Location     Type
  3735 ;;  row             1    wreg     unsigned char 
  3736 ;;  pos             1    4[COMRAM] unsigned char 
  3737 ;;  msg             2    5[COMRAM] PTR const unsigned char 
  3738 ;;		 -> STR_10(14), STR_9(14), STR_8(15), STR_7(15), 
  3739 ;;		 -> Cadena(10), 
  3740 ;; Auto vars:     Size  Location     Type
  3741 ;;  row             1    7[COMRAM] unsigned char 
  3742 ;;  location        1    8[COMRAM] unsigned char 
  3743 ;; Return value:  Size  Location     Type
  3744 ;;                  1    wreg      void 
  3745 ;; Registers used:
  3746 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3747 ;; Tracked objects:
  3748 ;;		On entry : 0/0
  3749 ;;		On exit  : 0/0
  3750 ;;		Unchanged: 0/0
  3751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3752 ;;      Params:         3       0       0       0       0       0       0       0       0
  3753 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3754 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3755 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3756 ;;Total ram usage:        5 bytes
  3757 ;; Hardware stack levels used: 1
  3758 ;; Hardware stack levels required when called: 2
  3759 ;; This function calls:
  3760 ;;		_LCD_Command
  3761 ;;		_LCD_String
  3762 ;; This function is called by:
  3763 ;;		_main
  3764 ;;		_PedirDato
  3765 ;; This function uses a non-reentrant model
  3766 ;;
  3767                           
  3768                           	psect	text18
  3769  001C02                     __ptext18:
  3770                           	callstack 0
  3771  001C02                     _LCD_String_xy:
  3772                           	callstack 26
  3773                           
  3774                           ; BSR set to: 0
  3775                           ;incstack = 0
  3776                           ;LCD_String_xy@row stored from wreg
  3777  001C02  6E08               	movwf	LCD_String_xy@row^0,c
  3778  001C04                     
  3779                           ;LCD.c: 80:     if(row<=1)
  3780  001C04  0E02               	movlw	2
  3781  001C06  6008               	cpfslt	LCD_String_xy@row^0,c
  3782  001C08  EF08  F00E         	goto	u1271
  3783  001C0C  EF0A  F00E         	goto	u1270
  3784  001C10                     u1271:
  3785  001C10  EF13  F00E         	goto	l2015
  3786  001C14                     u1270:
  3787  001C14                     
  3788                           ;LCD.c: 81:     {;LCD.c: 82:         location = (0x80) | ((pos) & 0x0f);
  3789  001C14  5005               	movf	LCD_String_xy@pos^0,w,c
  3790  001C16  0B0F               	andlw	15
  3791  001C18  0980               	iorlw	128
  3792  001C1A  6E09               	movwf	LCD_String_xy@location^0,c
  3793  001C1C                     
  3794                           ;LCD.c: 83:         LCD_Command(location);
  3795  001C1C  5009               	movf	LCD_String_xy@location^0,w,c
  3796  001C1E  EC51  F00D         	call	_LCD_Command
  3797                           
  3798                           ;LCD.c: 84:     }
  3799  001C22  EF1A  F00E         	goto	l2019
  3800  001C26                     l2015:
  3801                           
  3802                           ;LCD.c: 86:     {;LCD.c: 87:         location = (0xC0) | ((pos) & 0x0f);
  3803  001C26  5005               	movf	LCD_String_xy@pos^0,w,c
  3804  001C28  0B0F               	andlw	15
  3805  001C2A  09C0               	iorlw	192
  3806  001C2C  6E09               	movwf	LCD_String_xy@location^0,c
  3807  001C2E                     
  3808                           ;LCD.c: 88:         LCD_Command(location);
  3809  001C2E  5009               	movf	LCD_String_xy@location^0,w,c
  3810  001C30  EC51  F00D         	call	_LCD_Command
  3811  001C34                     l2019:
  3812                           
  3813                           ;LCD.c: 92:     LCD_String(msg);
  3814  001C34  C006  F003         	movff	LCD_String_xy@msg,LCD_String@msg
  3815  001C38  C007  F004         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  3816  001C3C  EC78  F00C         	call	_LCD_String	;wreg free
  3817  001C40  0012               	return		;funcret
  3818  001C42                     __end_of_LCD_String_xy:
  3819                           	callstack 0
  3820                           
  3821 ;; *************** function _LCD_String *****************
  3822 ;; Defined at:
  3823 ;;		line 67 in file "LCD.c"
  3824 ;; Parameters:    Size  Location     Type
  3825 ;;  msg             2    2[COMRAM] PTR const unsigned char 
  3826 ;;		 -> STR_10(14), STR_9(14), STR_8(15), STR_7(15), 
  3827 ;;		 -> Cadena(10), 
  3828 ;; Auto vars:     Size  Location     Type
  3829 ;;		None
  3830 ;; Return value:  Size  Location     Type
  3831 ;;                  1    wreg      void 
  3832 ;; Registers used:
  3833 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3834 ;; Tracked objects:
  3835 ;;		On entry : 0/0
  3836 ;;		On exit  : 0/0
  3837 ;;		Unchanged: 0/0
  3838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3839 ;;      Params:         2       0       0       0       0       0       0       0       0
  3840 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3841 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3842 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3843 ;;Total ram usage:        2 bytes
  3844 ;; Hardware stack levels used: 1
  3845 ;; Hardware stack levels required when called: 1
  3846 ;; This function calls:
  3847 ;;		_LCD_Char
  3848 ;; This function is called by:
  3849 ;;		_main
  3850 ;;		_LCD_String_xy
  3851 ;; This function uses a non-reentrant model
  3852 ;;
  3853                           
  3854                           	psect	text19
  3855  0018F0                     __ptext19:
  3856                           	callstack 0
  3857  0018F0                     _LCD_String:
  3858                           	callstack 26
  3859  0018F0                     
  3860                           ;LCD.c: 67: void LCD_String(const char *msg);LCD.c: 68: {;LCD.c: 69:  while((*msg)!=0)
  3861  0018F0  EF8E  F00C         	goto	l1921
  3862  0018F4                     l1917:
  3863                           
  3864                           ;LCD.c: 70:  {;LCD.c: 71:    LCD_Char(*msg);
  3865  0018F4  C003  FFF6         	movff	LCD_String@msg,tblptrl
  3866  0018F8  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  3867  0018FC  6AF8               	clrf	tblptru,c
  3868  0018FE  0E07               	movlw	(high __ramtop+-1)
  3869  001900  64F7               	cpfsgt	tblptrh,c
  3870  001902  D003               	bra	u1097
  3871  001904  0008               	tblrd		*
  3872  001906  50F5               	movf	tablat,w,c
  3873  001908  D005               	bra	u1090
  3874  00190A                     u1097:
  3875  00190A  CFF6 FFE1          	movff	tblptrl,fsr1l
  3876  00190E  CFF7 FFE2          	movff	tblptrh,fsr1h
  3877  001912  50E7               	movf	indf1,w,c
  3878  001914                     u1090:
  3879  001914  EC29  F00D         	call	_LCD_Char
  3880  001918                     
  3881                           ;LCD.c: 72:    msg++;
  3882  001918  4A03               	infsnz	LCD_String@msg^0,f,c
  3883  00191A  2A04               	incf	(LCD_String@msg+1)^0,f,c
  3884  00191C                     l1921:
  3885                           
  3886                           ;LCD.c: 69:  while((*msg)!=0)
  3887  00191C  C003  FFF6         	movff	LCD_String@msg,tblptrl
  3888  001920  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  3889  001924  6AF8               	clrf	tblptru,c
  3890  001926  0E07               	movlw	(high __ramtop+-1)
  3891  001928  64F7               	cpfsgt	tblptrh,c
  3892  00192A  D003               	bra	u1107
  3893  00192C  0008               	tblrd		*
  3894  00192E  50F5               	movf	tablat,w,c
  3895  001930  D005               	bra	u1100
  3896  001932                     u1107:
  3897  001932  CFF6 FFE1          	movff	tblptrl,fsr1l
  3898  001936  CFF7 FFE2          	movff	tblptrh,fsr1h
  3899  00193A  50E7               	movf	indf1,w,c
  3900  00193C                     u1100:
  3901  00193C  0900               	iorlw	0
  3902  00193E  A4D8               	btfss	status,2,c
  3903  001940  EFA4  F00C         	goto	u1111
  3904  001944  EFA6  F00C         	goto	u1110
  3905  001948                     u1111:
  3906  001948  EF7A  F00C         	goto	l1917
  3907  00194C                     u1110:
  3908  00194C  0012               	return		;funcret
  3909  00194E                     __end_of_LCD_String:
  3910                           	callstack 0
  3911                           
  3912 ;; *************** function _LCD_Char *****************
  3913 ;; Defined at:
  3914 ;;		line 53 in file "LCD.c"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;  dat             1    wreg     unsigned char 
  3917 ;; Auto vars:     Size  Location     Type
  3918 ;;  dat             1    1[COMRAM] unsigned char 
  3919 ;; Return value:  Size  Location     Type
  3920 ;;                  1    wreg      void 
  3921 ;; Registers used:
  3922 ;;		wreg, status,2, status,0
  3923 ;; Tracked objects:
  3924 ;;		On entry : 0/0
  3925 ;;		On exit  : 0/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3928 ;;      Params:         0       0       0       0       0       0       0       0       0
  3929 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3930 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3931 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3932 ;;Total ram usage:        2 bytes
  3933 ;; Hardware stack levels used: 1
  3934 ;; This function calls:
  3935 ;;		Nothing
  3936 ;; This function is called by:
  3937 ;;		_main
  3938 ;;		_LCD_String
  3939 ;;		_PedirDato
  3940 ;; This function uses a non-reentrant model
  3941 ;;
  3942                           
  3943                           	psect	text20
  3944  001A52                     __ptext20:
  3945                           	callstack 0
  3946  001A52                     _LCD_Char:
  3947                           	callstack 26
  3948                           
  3949                           ;incstack = 0
  3950                           ;LCD_Char@dat stored from wreg
  3951  001A52  6E02               	movwf	LCD_Char@dat^0,c
  3952  001A54                     
  3953                           ;LCD.c: 53: void LCD_Char(unsigned char dat);LCD.c: 54: {;LCD.c: 55:  LATD = (LATD & 0x0
      +                          f) | (0xF0 & dat);
  3954  001A54  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  3955  001A58  0EF0               	movlw	240
  3956  001A5A  1601               	andwf	??_LCD_Char^0,f,c
  3957  001A5C  508C               	movf	140,w,c	;volatile
  3958  001A5E  0B0F               	andlw	15
  3959  001A60  1001               	iorwf	??_LCD_Char^0,w,c
  3960  001A62  6E8C               	movwf	140,c	;volatile
  3961  001A64                     
  3962                           ;LCD.c: 56:  LATD0 = 1;
  3963  001A64  808C               	bsf	3980,0,c	;volatile
  3964  001A66                     
  3965                           ;LCD.c: 57:  LATD1 = 1;
  3966  001A66  828C               	bsf	3980,1,c	;volatile
  3967  001A68                     
  3968                           ;LCD.c: 58:  __nop();
  3969  001A68  F000               	nop	
  3970  001A6A                     
  3971                           ;LCD.c: 59:  LATD1 = 0;
  3972  001A6A  928C               	bcf	3980,1,c	;volatile
  3973  001A6C                     
  3974                           ;LCD.c: 60:  _delay((unsigned long)((1)*(8000000L/4000.0)));
  3975  001A6C  0E03               	movlw	3
  3976  001A6E  6E01               	movwf	??_LCD_Char^0,c
  3977  001A70  0E98               	movlw	152
  3978  001A72                     u1767:
  3979  001A72  2EE8               	decfsz	wreg,f,c
  3980  001A74  D7FE               	bra	u1767
  3981  001A76  2E01               	decfsz	??_LCD_Char^0,f,c
  3982  001A78  D7FC               	bra	u1767
  3983  001A7A                     
  3984                           ;LCD.c: 61:     LATD = (LATD & 0x0f) | (dat<<4);
  3985  001A7A  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  3986  001A7E  3A01               	swapf	??_LCD_Char^0,f,c
  3987  001A80  0EF0               	movlw	240
  3988  001A82  1601               	andwf	??_LCD_Char^0,f,c
  3989  001A84  508C               	movf	140,w,c	;volatile
  3990  001A86  0B0F               	andlw	15
  3991  001A88  1001               	iorwf	??_LCD_Char^0,w,c
  3992  001A8A  6E8C               	movwf	140,c	;volatile
  3993  001A8C                     
  3994                           ;LCD.c: 62:  LATD1 = 1;
  3995  001A8C  828C               	bsf	3980,1,c	;volatile
  3996  001A8E                     
  3997                           ;LCD.c: 63:  __nop();
  3998  001A8E  F000               	nop	
  3999  001A90                     
  4000                           ;LCD.c: 64:  LATD1 = 0;
  4001  001A90  928C               	bcf	3980,1,c	;volatile
  4002                           
  4003                           ;LCD.c: 65:  _delay((unsigned long)((3)*(8000000L/4000.0)));
  4004  001A92  0E08               	movlw	8
  4005  001A94  6E01               	movwf	??_LCD_Char^0,c
  4006  001A96  0ECA               	movlw	202
  4007  001A98                     u1777:
  4008  001A98  2EE8               	decfsz	wreg,f,c
  4009  001A9A  D7FE               	bra	u1777
  4010  001A9C  2E01               	decfsz	??_LCD_Char^0,f,c
  4011  001A9E  D7FC               	bra	u1777
  4012  001AA0  0012               	return		;funcret
  4013  001AA2                     __end_of_LCD_Char:
  4014                           	callstack 0
  4015                           
  4016 ;; *************** function _LCD_Clear *****************
  4017 ;; Defined at:
  4018 ;;		line 96 in file "LCD.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;		None
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;		None
  4023 ;; Return value:  Size  Location     Type
  4024 ;;                  1    wreg      void 
  4025 ;; Registers used:
  4026 ;;		wreg, status,2, status,0, cstack
  4027 ;; Tracked objects:
  4028 ;;		On entry : 0/0
  4029 ;;		On exit  : 0/0
  4030 ;;		Unchanged: 0/0
  4031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4032 ;;      Params:         0       0       0       0       0       0       0       0       0
  4033 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4034 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4035 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4036 ;;Total ram usage:        1 bytes
  4037 ;; Hardware stack levels used: 1
  4038 ;; Hardware stack levels required when called: 1
  4039 ;; This function calls:
  4040 ;;		_LCD_Command
  4041 ;; This function is called by:
  4042 ;;		_PedirDato
  4043 ;; This function uses a non-reentrant model
  4044 ;;
  4045                           
  4046                           	psect	text21
  4047  001D4C                     __ptext21:
  4048                           	callstack 0
  4049  001D4C                     _LCD_Clear:
  4050                           	callstack 27
  4051  001D4C                     
  4052                           ;LCD.c: 98:     LCD_Command(0x01);
  4053  001D4C  0E01               	movlw	1
  4054  001D4E  EC51  F00D         	call	_LCD_Command
  4055  001D52                     
  4056                           ;LCD.c: 99:     _delay((unsigned long)((3)*(8000000L/4000.0)));
  4057  001D52  0E08               	movlw	8
  4058  001D54  6E03               	movwf	??_LCD_Clear^0,c
  4059  001D56  0ECA               	movlw	202
  4060  001D58                     u1787:
  4061  001D58  2EE8               	decfsz	wreg,f,c
  4062  001D5A  D7FE               	bra	u1787
  4063  001D5C  2E03               	decfsz	??_LCD_Clear^0,f,c
  4064  001D5E  D7FC               	bra	u1787
  4065  001D60                     
  4066                           ;LCD.c: 100:     LCD_Command (0x80);
  4067  001D60  0E80               	movlw	128
  4068  001D62  EC51  F00D         	call	_LCD_Command
  4069                           
  4070                           ;LCD.c: 101:     _delay((unsigned long)((1)*(8000000L/4000.0)));
  4071  001D66  0E03               	movlw	3
  4072  001D68  6E03               	movwf	??_LCD_Clear^0,c
  4073  001D6A  0E98               	movlw	152
  4074  001D6C                     u1797:
  4075  001D6C  2EE8               	decfsz	wreg,f,c
  4076  001D6E  D7FE               	bra	u1797
  4077  001D70  2E03               	decfsz	??_LCD_Clear^0,f,c
  4078  001D72  D7FC               	bra	u1797
  4079  001D74  0012               	return		;funcret
  4080  001D76                     __end_of_LCD_Clear:
  4081                           	callstack 0
  4082                           
  4083 ;; *************** function _LCD_Init *****************
  4084 ;; Defined at:
  4085 ;;		line 25 in file "LCD.c"
  4086 ;; Parameters:    Size  Location     Type
  4087 ;;		None
  4088 ;; Auto vars:     Size  Location     Type
  4089 ;;		None
  4090 ;; Return value:  Size  Location     Type
  4091 ;;                  1    wreg      void 
  4092 ;; Registers used:
  4093 ;;		wreg, status,2, status,0, cstack
  4094 ;; Tracked objects:
  4095 ;;		On entry : 0/0
  4096 ;;		On exit  : 0/0
  4097 ;;		Unchanged: 0/0
  4098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4099 ;;      Params:         0       0       0       0       0       0       0       0       0
  4100 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4101 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4102 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4103 ;;Total ram usage:        1 bytes
  4104 ;; Hardware stack levels used: 1
  4105 ;; Hardware stack levels required when called: 1
  4106 ;; This function calls:
  4107 ;;		_LCD_Command
  4108 ;; This function is called by:
  4109 ;;		_main
  4110 ;; This function uses a non-reentrant model
  4111 ;;
  4112                           
  4113                           	psect	text22
  4114  001CEC                     __ptext22:
  4115                           	callstack 0
  4116  001CEC                     _LCD_Init:
  4117                           	callstack 29
  4118  001CEC                     
  4119                           ;LCD.c: 27:     TRISD = 0;
  4120  001CEC  0E00               	movlw	0
  4121  001CEE  6E95               	movwf	149,c	;volatile
  4122  001CF0                     
  4123                           ;LCD.c: 28:     _delay((unsigned long)((15)*(8000000L/4000.0)));
  4124  001CF0  0E27               	movlw	39
  4125  001CF2  6E03               	movwf	??_LCD_Init^0,c
  4126  001CF4  0EF5               	movlw	245
  4127  001CF6                     u1807:
  4128  001CF6  2EE8               	decfsz	wreg,f,c
  4129  001CF8  D7FE               	bra	u1807
  4130  001CFA  2E03               	decfsz	??_LCD_Init^0,f,c
  4131  001CFC  D7FC               	bra	u1807
  4132  001CFE  F000               	nop	
  4133  001D00                     
  4134                           ;LCD.c: 29:     LCD_Command(0x02);
  4135  001D00  0E02               	movlw	2
  4136  001D02  EC51  F00D         	call	_LCD_Command
  4137  001D06                     
  4138                           ;LCD.c: 31:     LCD_Command(0x28);
  4139  001D06  0E28               	movlw	40
  4140  001D08  EC51  F00D         	call	_LCD_Command
  4141  001D0C                     
  4142                           ;LCD.c: 33:  LCD_Command(0x01);
  4143  001D0C  0E01               	movlw	1
  4144  001D0E  EC51  F00D         	call	_LCD_Command
  4145  001D12                     
  4146                           ;LCD.c: 34:     LCD_Command(0x0c);
  4147  001D12  0E0C               	movlw	12
  4148  001D14  EC51  F00D         	call	_LCD_Command
  4149  001D18                     
  4150                           ;LCD.c: 35:  LCD_Command(0x06);
  4151  001D18  0E06               	movlw	6
  4152  001D1A  EC51  F00D         	call	_LCD_Command
  4153  001D1E  0012               	return		;funcret
  4154  001D20                     __end_of_LCD_Init:
  4155                           	callstack 0
  4156                           
  4157 ;; *************** function _LCD_Command *****************
  4158 ;; Defined at:
  4159 ;;		line 38 in file "LCD.c"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;  cmd             1    wreg     unsigned char 
  4162 ;; Auto vars:     Size  Location     Type
  4163 ;;  cmd             1    1[COMRAM] unsigned char 
  4164 ;; Return value:  Size  Location     Type
  4165 ;;                  1    wreg      void 
  4166 ;; Registers used:
  4167 ;;		wreg, status,2, status,0
  4168 ;; Tracked objects:
  4169 ;;		On entry : 0/0
  4170 ;;		On exit  : 0/0
  4171 ;;		Unchanged: 0/0
  4172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4173 ;;      Params:         0       0       0       0       0       0       0       0       0
  4174 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4175 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4176 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4177 ;;Total ram usage:        2 bytes
  4178 ;; Hardware stack levels used: 1
  4179 ;; This function calls:
  4180 ;;		Nothing
  4181 ;; This function is called by:
  4182 ;;		_LCD_Init
  4183 ;;		_LCD_String_xy
  4184 ;;		_LCD_Clear
  4185 ;;		_PedirDato
  4186 ;; This function uses a non-reentrant model
  4187 ;;
  4188                           
  4189                           	psect	text23
  4190  001AA2                     __ptext23:
  4191                           	callstack 0
  4192  001AA2                     _LCD_Command:
  4193                           	callstack 27
  4194                           
  4195                           ;incstack = 0
  4196                           ;LCD_Command@cmd stored from wreg
  4197  001AA2  6E02               	movwf	LCD_Command@cmd^0,c
  4198  001AA4                     
  4199                           ;LCD.c: 38: void LCD_Command(unsigned char cmd );LCD.c: 39: {;LCD.c: 40:  LATD = (LATD &
      +                           0x0f) |(0xF0 & cmd);
  4200  001AA4  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  4201  001AA8  0EF0               	movlw	240
  4202  001AAA  1601               	andwf	??_LCD_Command^0,f,c
  4203  001AAC  508C               	movf	140,w,c	;volatile
  4204  001AAE  0B0F               	andlw	15
  4205  001AB0  1001               	iorwf	??_LCD_Command^0,w,c
  4206  001AB2  6E8C               	movwf	140,c	;volatile
  4207  001AB4                     
  4208                           ;LCD.c: 41:  LATD0 = 0;
  4209  001AB4  908C               	bcf	3980,0,c	;volatile
  4210  001AB6                     
  4211                           ;LCD.c: 42:  LATD1 = 1;
  4212  001AB6  828C               	bsf	3980,1,c	;volatile
  4213  001AB8                     
  4214                           ;LCD.c: 43:  __nop();
  4215  001AB8  F000               	nop	
  4216  001ABA                     
  4217                           ;LCD.c: 44:  LATD1 = 0;
  4218  001ABA  928C               	bcf	3980,1,c	;volatile
  4219  001ABC                     
  4220                           ;LCD.c: 45:  _delay((unsigned long)((1)*(8000000L/4000.0)));
  4221  001ABC  0E03               	movlw	3
  4222  001ABE  6E01               	movwf	??_LCD_Command^0,c
  4223  001AC0  0E98               	movlw	152
  4224  001AC2                     u1817:
  4225  001AC2  2EE8               	decfsz	wreg,f,c
  4226  001AC4  D7FE               	bra	u1817
  4227  001AC6  2E01               	decfsz	??_LCD_Command^0,f,c
  4228  001AC8  D7FC               	bra	u1817
  4229  001ACA                     
  4230                           ;LCD.c: 46:     LATD = (LATD & 0x0f) | (cmd<<4);
  4231  001ACA  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  4232  001ACE  3A01               	swapf	??_LCD_Command^0,f,c
  4233  001AD0  0EF0               	movlw	240
  4234  001AD2  1601               	andwf	??_LCD_Command^0,f,c
  4235  001AD4  508C               	movf	140,w,c	;volatile
  4236  001AD6  0B0F               	andlw	15
  4237  001AD8  1001               	iorwf	??_LCD_Command^0,w,c
  4238  001ADA  6E8C               	movwf	140,c	;volatile
  4239  001ADC                     
  4240                           ;LCD.c: 47:  LATD1 = 1;
  4241  001ADC  828C               	bsf	3980,1,c	;volatile
  4242  001ADE                     
  4243                           ;LCD.c: 48:  __nop();
  4244  001ADE  F000               	nop	
  4245  001AE0                     
  4246                           ;LCD.c: 49:  LATD1 = 0;
  4247  001AE0  928C               	bcf	3980,1,c	;volatile
  4248                           
  4249                           ;LCD.c: 50:  _delay((unsigned long)((3)*(8000000L/4000.0)));
  4250  001AE2  0E08               	movlw	8
  4251  001AE4  6E01               	movwf	??_LCD_Command^0,c
  4252  001AE6  0ECA               	movlw	202
  4253  001AE8                     u1827:
  4254  001AE8  2EE8               	decfsz	wreg,f,c
  4255  001AEA  D7FE               	bra	u1827
  4256  001AEC  2E01               	decfsz	??_LCD_Command^0,f,c
  4257  001AEE  D7FC               	bra	u1827
  4258  001AF0  0012               	return		;funcret
  4259  001AF2                     __end_of_LCD_Command:
  4260                           	callstack 0
  4261                           
  4262 ;; *************** function _DatosSensorTH *****************
  4263 ;; Defined at:
  4264 ;;		line 43 in file "DHT11.c"
  4265 ;; Parameters:    Size  Location     Type
  4266 ;;  Datos           2    2[COMRAM] PTR unsigned char 
  4267 ;;		 -> Datos(2), 
  4268 ;; Auto vars:     Size  Location     Type
  4269 ;;  T_Integral      1    5[COMRAM] unsigned char 
  4270 ;;  RH_Integral     1    4[COMRAM] unsigned char 
  4271 ;;  Checksum        1    0        unsigned char 
  4272 ;;  T_Decimal       1    0        unsigned char 
  4273 ;;  RH_Decimal      1    0        unsigned char 
  4274 ;; Return value:  Size  Location     Type
  4275 ;;                  1    wreg      void 
  4276 ;; Registers used:
  4277 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4278 ;; Tracked objects:
  4279 ;;		On entry : 0/0
  4280 ;;		On exit  : 0/0
  4281 ;;		Unchanged: 0/0
  4282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4283 ;;      Params:         2       0       0       0       0       0       0       0       0
  4284 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4285 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4286 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4287 ;;Total ram usage:        4 bytes
  4288 ;; Hardware stack levels used: 1
  4289 ;; Hardware stack levels required when called: 1
  4290 ;; This function calls:
  4291 ;;		_DHT11_CheckResponse
  4292 ;;		_DHT11_ReadData
  4293 ;;		_DHT11_Start
  4294 ;; This function is called by:
  4295 ;;		_main
  4296 ;; This function uses a non-reentrant model
  4297 ;;
  4298                           
  4299                           	psect	text24
  4300  001C42                     __ptext24:
  4301                           	callstack 0
  4302  001C42                     _DatosSensorTH:
  4303                           	callstack 29
  4304  001C42                     
  4305                           ;DHT11.c: 44:          char RH_Decimal,RH_Integral,T_Decimal,T_Integral;;DHT11.c: 45:   
      +                                 char Checksum;;DHT11.c: 46:          DHT11_Start();
  4306  001C42  ECCE  F00E         	call	_DHT11_Start	;wreg free
  4307  001C46                     
  4308                           ;DHT11.c: 47:          DHT11_CheckResponse();
  4309  001C46  EC90  F00E         	call	_DHT11_CheckResponse	;wreg free
  4310  001C4A                     
  4311                           ;DHT11.c: 50:          RH_Integral = DHT11_ReadData();
  4312  001C4A  ECA7  F00C         	call	_DHT11_ReadData	;wreg free
  4313  001C4E  6E05               	movwf	DatosSensorTH@RH_Integral^0,c
  4314  001C50  ECA7  F00C         	call	_DHT11_ReadData	;wreg free
  4315  001C54                     
  4316                           ;DHT11.c: 52:          T_Integral = DHT11_ReadData();
  4317  001C54  ECA7  F00C         	call	_DHT11_ReadData	;wreg free
  4318  001C58  6E06               	movwf	DatosSensorTH@T_Integral^0,c
  4319  001C5A  ECA7  F00C         	call	_DHT11_ReadData	;wreg free
  4320  001C5E  ECA7  F00C         	call	_DHT11_ReadData	;wreg free
  4321  001C62                     
  4322                           ;DHT11.c: 56:          Datos[0]=T_Integral;
  4323  001C62  C003  FFD9         	movff	DatosSensorTH@Datos,fsr2l
  4324  001C66  C004  FFDA         	movff	DatosSensorTH@Datos+1,fsr2h
  4325  001C6A  C006  FFDF         	movff	DatosSensorTH@T_Integral,indf2
  4326  001C6E                     
  4327                           ;DHT11.c: 57:          Datos[1]=RH_Integral;
  4328  001C6E  EE20 F001          	lfsr	2,1
  4329  001C72  5003               	movf	DatosSensorTH@Datos^0,w,c
  4330  001C74  26D9               	addwf	fsr2l,f,c
  4331  001C76  5004               	movf	(DatosSensorTH@Datos+1)^0,w,c
  4332  001C78  22DA               	addwfc	fsr2h,f,c
  4333  001C7A  C005  FFDF         	movff	DatosSensorTH@RH_Integral,indf2
  4334  001C7E  0012               	return		;funcret
  4335  001C80                     __end_of_DatosSensorTH:
  4336                           	callstack 0
  4337                           
  4338 ;; *************** function _DHT11_Start *****************
  4339 ;; Defined at:
  4340 ;;		line 23 in file "DHT11.c"
  4341 ;; Parameters:    Size  Location     Type
  4342 ;;		None
  4343 ;; Auto vars:     Size  Location     Type
  4344 ;;		None
  4345 ;; Return value:  Size  Location     Type
  4346 ;;                  1    wreg      void 
  4347 ;; Registers used:
  4348 ;;		wreg
  4349 ;; Tracked objects:
  4350 ;;		On entry : 0/0
  4351 ;;		On exit  : 0/0
  4352 ;;		Unchanged: 0/0
  4353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4354 ;;      Params:         0       0       0       0       0       0       0       0       0
  4355 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4356 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4357 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4358 ;;Total ram usage:        1 bytes
  4359 ;; Hardware stack levels used: 1
  4360 ;; This function calls:
  4361 ;;		Nothing
  4362 ;; This function is called by:
  4363 ;;		_DatosSensorTH
  4364 ;; This function uses a non-reentrant model
  4365 ;;
  4366                           
  4367                           	psect	text25
  4368  001D9C                     __ptext25:
  4369                           	callstack 0
  4370  001D9C                     _DHT11_Start:
  4371                           	callstack 29
  4372  001D9C                     
  4373                           ;DHT11.c: 25:     TRISAbits.RA0 = 0;
  4374  001D9C  9092               	bcf	146,0,c	;volatile
  4375                           
  4376                           ;DHT11.c: 26:     LATA0 = 0;
  4377  001D9E  9089               	bcf	3977,0,c	;volatile
  4378  001DA0                     
  4379                           ;DHT11.c: 27:     _delay((unsigned long)((18)*(8000000L/4000.0)));
  4380  001DA0  0E2F               	movlw	47
  4381  001DA2  6E01               	movwf	??_DHT11_Start^0,c
  4382  001DA4  0EC0               	movlw	192
  4383  001DA6                     u1837:
  4384  001DA6  2EE8               	decfsz	wreg,f,c
  4385  001DA8  D7FE               	bra	u1837
  4386  001DAA  2E01               	decfsz	??_DHT11_Start^0,f,c
  4387  001DAC  D7FC               	bra	u1837
  4388  001DAE                     
  4389                           ;DHT11.c: 28:     LATA0 = 1;
  4390  001DAE  8089               	bsf	3977,0,c	;volatile
  4391                           
  4392                           ;DHT11.c: 29:     _delay((unsigned long)((20)*(8000000L/4000000.0)));
  4393  001DB0  0E0D               	movlw	13
  4394  001DB2                     u1847:
  4395  001DB2  2EE8               	decfsz	wreg,f,c
  4396  001DB4  D7FE               	bra	u1847
  4397  001DB6  F000               	nop	
  4398  001DB8                     
  4399                           ;DHT11.c: 30:     TRISAbits.RA0 = 1;
  4400  001DB8  8092               	bsf	146,0,c	;volatile
  4401  001DBA  0012               	return		;funcret
  4402  001DBC                     __end_of_DHT11_Start:
  4403                           	callstack 0
  4404                           
  4405 ;; *************** function _DHT11_ReadData *****************
  4406 ;; Defined at:
  4407 ;;		line 7 in file "DHT11.c"
  4408 ;; Parameters:    Size  Location     Type
  4409 ;;		None
  4410 ;; Auto vars:     Size  Location     Type
  4411 ;;  data            1    1[COMRAM] unsigned char 
  4412 ;;  i               1    0[COMRAM] unsigned char 
  4413 ;; Return value:  Size  Location     Type
  4414 ;;                  1    wreg      unsigned char 
  4415 ;; Registers used:
  4416 ;;		wreg, status,2, status,0
  4417 ;; Tracked objects:
  4418 ;;		On entry : 0/0
  4419 ;;		On exit  : 0/0
  4420 ;;		Unchanged: 0/0
  4421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4422 ;;      Params:         0       0       0       0       0       0       0       0       0
  4423 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4424 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4425 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4426 ;;Total ram usage:        2 bytes
  4427 ;; Hardware stack levels used: 1
  4428 ;; This function calls:
  4429 ;;		Nothing
  4430 ;; This function is called by:
  4431 ;;		_DatosSensorTH
  4432 ;; This function uses a non-reentrant model
  4433 ;;
  4434                           
  4435                           	psect	text26
  4436  00194E                     __ptext26:
  4437                           	callstack 0
  4438  00194E                     _DHT11_ReadData:
  4439                           	callstack 29
  4440  00194E                     
  4441                           ;DHT11.c: 9:   char i,data = 0;
  4442  00194E  0E00               	movlw	0
  4443  001950  6E02               	movwf	DHT11_ReadData@data^0,c
  4444                           
  4445                           ;DHT11.c: 10:     for(i=0;i<8;i++)
  4446  001952  0E00               	movlw	0
  4447  001954  6E01               	movwf	DHT11_ReadData@i^0,c
  4448  001956                     l212:
  4449  001956  A080               	btfss	128,0,c	;volatile
  4450  001958  EFB0  F00C         	goto	u1481
  4451  00195C  EFB2  F00C         	goto	u1480
  4452  001960                     u1481:
  4453  001960  EFAB  F00C         	goto	l212
  4454  001964                     u1480:
  4455  001964                     
  4456                           ;DHT11.c: 13:         _delay((unsigned long)((30)*(8000000L/4000000.0)));
  4457  001964  0E14               	movlw	20
  4458  001966                     u1857:
  4459  001966  2EE8               	decfsz	wreg,f,c
  4460  001968  D7FE               	bra	u1857
  4461  00196A                     
  4462                           ;DHT11.c: 14:         if(PORTAbits.RA0 & 1)
  4463  00196A  A080               	btfss	128,0,c	;volatile
  4464  00196C  EFBA  F00C         	goto	u1491
  4465  001970  EFBC  F00C         	goto	u1490
  4466  001974                     u1491:
  4467  001974  EFC0  F00C         	goto	l2207
  4468  001978                     u1490:
  4469  001978                     
  4470                           ;DHT11.c: 15:           data = ((data<<1) | 1);
  4471  001978  80D8               	bsf	status,0,c
  4472  00197A  3602               	rlcf	DHT11_ReadData@data^0,f,c
  4473  00197C  EFC3  F00C         	goto	l217
  4474  001980                     l2207:
  4475                           
  4476                           ;DHT11.c: 17:           data = (data<<1);
  4477  001980  5002               	movf	DHT11_ReadData@data^0,w,c
  4478  001982  2402               	addwf	DHT11_ReadData@data^0,w,c
  4479  001984  6E02               	movwf	DHT11_ReadData@data^0,c
  4480  001986                     l217:
  4481  001986  B080               	btfsc	128,0,c	;volatile
  4482  001988  EFC8  F00C         	goto	u1501
  4483  00198C  EFCA  F00C         	goto	u1500
  4484  001990                     u1501:
  4485  001990  EFC3  F00C         	goto	l217
  4486  001994                     u1500:
  4487  001994                     
  4488                           ;DHT11.c: 19:     }
  4489  001994  2A01               	incf	DHT11_ReadData@i^0,f,c
  4490  001996  0E07               	movlw	7
  4491  001998  6401               	cpfsgt	DHT11_ReadData@i^0,c
  4492  00199A  EFD1  F00C         	goto	u1511
  4493  00199E  EFD3  F00C         	goto	u1510
  4494  0019A2                     u1511:
  4495  0019A2  EFAB  F00C         	goto	l212
  4496  0019A6                     u1510:
  4497  0019A6                     
  4498                           ;DHT11.c: 20:   return data;
  4499  0019A6  5002               	movf	DHT11_ReadData@data^0,w,c
  4500  0019A8  0012               	return		;funcret
  4501  0019AA                     __end_of_DHT11_ReadData:
  4502                           	callstack 0
  4503                           
  4504 ;; *************** function _DHT11_CheckResponse *****************
  4505 ;; Defined at:
  4506 ;;		line 36 in file "DHT11.c"
  4507 ;; Parameters:    Size  Location     Type
  4508 ;;		None
  4509 ;; Auto vars:     Size  Location     Type
  4510 ;;		None
  4511 ;; Return value:  Size  Location     Type
  4512 ;;                  1    wreg      void 
  4513 ;; Registers used:
  4514 ;;		None
  4515 ;; Tracked objects:
  4516 ;;		On entry : 0/0
  4517 ;;		On exit  : 0/0
  4518 ;;		Unchanged: 0/0
  4519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4520 ;;      Params:         0       0       0       0       0       0       0       0       0
  4521 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4522 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4523 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4524 ;;Total ram usage:        0 bytes
  4525 ;; Hardware stack levels used: 1
  4526 ;; This function calls:
  4527 ;;		Nothing
  4528 ;; This function is called by:
  4529 ;;		_DatosSensorTH
  4530 ;; This function uses a non-reentrant model
  4531 ;;
  4532                           
  4533                           	psect	text27
  4534  001D20                     __ptext27:
  4535                           	callstack 0
  4536  001D20                     _DHT11_CheckResponse:
  4537                           	callstack 29
  4538  001D20                     l226:
  4539  001D20  B080               	btfsc	128,0,c	;volatile
  4540  001D22  EF95  F00E         	goto	u1521
  4541  001D26  EF97  F00E         	goto	u1520
  4542  001D2A                     u1521:
  4543  001D2A  EF90  F00E         	goto	l226
  4544  001D2E                     u1520:
  4545  001D2E                     l229:
  4546  001D2E  A080               	btfss	128,0,c	;volatile
  4547  001D30  EF9C  F00E         	goto	u1531
  4548  001D34  EF9E  F00E         	goto	u1530
  4549  001D38                     u1531:
  4550  001D38  EF97  F00E         	goto	l229
  4551  001D3C                     u1530:
  4552  001D3C                     l232:
  4553  001D3C  B080               	btfsc	128,0,c	;volatile
  4554  001D3E  EFA3  F00E         	goto	u1541
  4555  001D42  EFA5  F00E         	goto	u1540
  4556  001D46                     u1541:
  4557  001D46  EF9E  F00E         	goto	l232
  4558  001D4A                     u1540:
  4559  001D4A  0012               	return		;funcret
  4560  001D4C                     __end_of_DHT11_CheckResponse:
  4561                           	callstack 0
  4562                           
  4563 ;; *************** function _DatoDigitadoAEntero *****************
  4564 ;; Defined at:
  4565 ;;		line 136 in file "keypad.c"
  4566 ;; Parameters:    Size  Location     Type
  4567 ;;  prmTemperatu    2    6[COMRAM] PTR unsigned char 
  4568 ;;		 -> Humedad(2), Temperatura(2), 
  4569 ;; Auto vars:     Size  Location     Type
  4570 ;;  Decena          2   13[COMRAM] int 
  4571 ;;  Resultado       2   11[COMRAM] int 
  4572 ;;  Unidad          2    9[COMRAM] int 
  4573 ;; Return value:  Size  Location     Type
  4574 ;;                  2    6[COMRAM] int 
  4575 ;; Registers used:
  4576 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4577 ;; Tracked objects:
  4578 ;;		On entry : 0/0
  4579 ;;		On exit  : 0/0
  4580 ;;		Unchanged: 0/0
  4581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4582 ;;      Params:         2       0       0       0       0       0       0       0       0
  4583 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4584 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4585 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4586 ;;Total ram usage:        9 bytes
  4587 ;; Hardware stack levels used: 1
  4588 ;; Hardware stack levels required when called: 1
  4589 ;; This function calls:
  4590 ;;		___wmul
  4591 ;; This function is called by:
  4592 ;;		_main
  4593 ;; This function uses a non-reentrant model
  4594 ;;
  4595                           
  4596                           	psect	text28
  4597  001818                     __ptext28:
  4598                           	callstack 0
  4599  001818                     _DatoDigitadoAEntero:
  4600                           	callstack 29
  4601  001818                     
  4602                           ;keypad.c: 138:     int Unidad = 0;
  4603  001818  0E00               	movlw	0
  4604  00181A  6E0B               	movwf	(DatoDigitadoAEntero@Unidad+1)^0,c
  4605  00181C  0E00               	movlw	0
  4606  00181E  6E0A               	movwf	DatoDigitadoAEntero@Unidad^0,c
  4607                           
  4608                           ;keypad.c: 140:     int Resultado=0;
  4609  001820  0E00               	movlw	0
  4610  001822  6E0D               	movwf	(DatoDigitadoAEntero@Resultado+1)^0,c
  4611  001824  0E00               	movlw	0
  4612  001826  6E0C               	movwf	DatoDigitadoAEntero@Resultado^0,c
  4613  001828                     
  4614                           ;keypad.c: 142:     Decena = prmTemperatura[0]-'0';
  4615  001828  C007  FFD9         	movff	DatoDigitadoAEntero@prmTemperatura,fsr2l
  4616  00182C  C008  FFDA         	movff	DatoDigitadoAEntero@prmTemperatura+1,fsr2h
  4617  001830  50DF               	movf	indf2,w,c
  4618  001832  6E09               	movwf	??_DatoDigitadoAEntero^0,c
  4619  001834  0ED0               	movlw	208
  4620  001836  2409               	addwf	??_DatoDigitadoAEntero^0,w,c
  4621  001838  6E0E               	movwf	DatoDigitadoAEntero@Decena^0,c
  4622  00183A  6A0F               	clrf	(DatoDigitadoAEntero@Decena+1)^0,c
  4623  00183C  0EFF               	movlw	255
  4624  00183E  220F               	addwfc	(DatoDigitadoAEntero@Decena+1)^0,f,c
  4625  001840                     
  4626                           ;keypad.c: 143:     Unidad = prmTemperatura[1]-'0';
  4627  001840  EE20 F001          	lfsr	2,1
  4628  001844  5007               	movf	DatoDigitadoAEntero@prmTemperatura^0,w,c
  4629  001846  26D9               	addwf	fsr2l,f,c
  4630  001848  5008               	movf	(DatoDigitadoAEntero@prmTemperatura+1)^0,w,c
  4631  00184A  22DA               	addwfc	fsr2h,f,c
  4632  00184C  50DF               	movf	indf2,w,c
  4633  00184E  6E09               	movwf	??_DatoDigitadoAEntero^0,c
  4634  001850  0ED0               	movlw	208
  4635  001852  2409               	addwf	??_DatoDigitadoAEntero^0,w,c
  4636  001854  6E0A               	movwf	DatoDigitadoAEntero@Unidad^0,c
  4637  001856  6A0B               	clrf	(DatoDigitadoAEntero@Unidad+1)^0,c
  4638  001858  0EFF               	movlw	255
  4639  00185A  220B               	addwfc	(DatoDigitadoAEntero@Unidad+1)^0,f,c
  4640  00185C                     
  4641                           ;keypad.c: 145:     Decena = Decena * 10;
  4642  00185C  C00E  F001         	movff	DatoDigitadoAEntero@Decena,___wmul@multiplier
  4643  001860  C00F  F002         	movff	DatoDigitadoAEntero@Decena+1,___wmul@multiplier+1
  4644  001864  0E00               	movlw	0
  4645  001866  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4646  001868  0E0A               	movlw	10
  4647  00186A  6E03               	movwf	___wmul@multiplicand^0,c
  4648  00186C  ECBB  F00E         	call	___wmul	;wreg free
  4649  001870  C001  F00E         	movff	?___wmul,DatoDigitadoAEntero@Decena
  4650  001874  C002  F00F         	movff	?___wmul+1,DatoDigitadoAEntero@Decena+1
  4651  001878                     
  4652                           ;keypad.c: 146:     Resultado = Decena + Unidad;
  4653  001878  500A               	movf	DatoDigitadoAEntero@Unidad^0,w,c
  4654  00187A  240E               	addwf	DatoDigitadoAEntero@Decena^0,w,c
  4655  00187C  6E0C               	movwf	DatoDigitadoAEntero@Resultado^0,c
  4656  00187E  500B               	movf	(DatoDigitadoAEntero@Unidad+1)^0,w,c
  4657  001880  200F               	addwfc	(DatoDigitadoAEntero@Decena+1)^0,w,c
  4658  001882  6E0D               	movwf	(DatoDigitadoAEntero@Resultado+1)^0,c
  4659  001884                     
  4660                           ;keypad.c: 148:     return Resultado;
  4661  001884  C00C  F007         	movff	DatoDigitadoAEntero@Resultado,?_DatoDigitadoAEntero
  4662  001888  C00D  F008         	movff	DatoDigitadoAEntero@Resultado+1,?_DatoDigitadoAEntero+1
  4663  00188C  0012               	return		;funcret
  4664  00188E                     __end_of_DatoDigitadoAEntero:
  4665                           	callstack 0
  4666                           
  4667 ;; *************** function ___wmul *****************
  4668 ;; Defined at:
  4669 ;;		line 15 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\Umul16.c"
  4670 ;; Parameters:    Size  Location     Type
  4671 ;;  multiplier      2    0[COMRAM] unsigned int 
  4672 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4673 ;; Auto vars:     Size  Location     Type
  4674 ;;  product         2    4[COMRAM] unsigned int 
  4675 ;; Return value:  Size  Location     Type
  4676 ;;                  2    0[COMRAM] unsigned int 
  4677 ;; Registers used:
  4678 ;;		wreg, status,2, status,0, prodl, prodh
  4679 ;; Tracked objects:
  4680 ;;		On entry : 0/0
  4681 ;;		On exit  : 0/0
  4682 ;;		Unchanged: 0/0
  4683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4684 ;;      Params:         4       0       0       0       0       0       0       0       0
  4685 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4686 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4687 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4688 ;;Total ram usage:        6 bytes
  4689 ;; Hardware stack levels used: 1
  4690 ;; This function calls:
  4691 ;;		Nothing
  4692 ;; This function is called by:
  4693 ;;		_DatoDigitadoAEntero
  4694 ;; This function uses a non-reentrant model
  4695 ;;
  4696                           
  4697                           	psect	text29
  4698  001D76                     __ptext29:
  4699                           	callstack 0
  4700  001D76                     ___wmul:
  4701                           	callstack 29
  4702  001D76  5001               	movf	___wmul@multiplier^0,w,c
  4703  001D78  0203               	mulwf	___wmul@multiplicand^0,c
  4704  001D7A  CFF3 F005          	movff	prodl,___wmul@product
  4705  001D7E  CFF4 F006          	movff	prodh,___wmul@product+1
  4706  001D82  5001               	movf	___wmul@multiplier^0,w,c
  4707  001D84  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  4708  001D86  50F3               	movf	243,w,c
  4709  001D88  2606               	addwf	(___wmul@product+1)^0,f,c
  4710  001D8A  5002               	movf	(___wmul@multiplier+1)^0,w,c
  4711  001D8C  0203               	mulwf	___wmul@multiplicand^0,c
  4712  001D8E  50F3               	movf	243,w,c
  4713  001D90  2606               	addwf	(___wmul@product+1)^0,f,c
  4714  001D92  C005  F001         	movff	___wmul@product,?___wmul
  4715  001D96  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4716  001D9A  0012               	return		;funcret
  4717  001D9C                     __end_of___wmul:
  4718                           	callstack 0
  4719                           
  4720 ;; *************** function _ControlTemperaturaVentilador *****************
  4721 ;; Defined at:
  4722 ;;		line 59 in file "Actuadores.c"
  4723 ;; Parameters:    Size  Location     Type
  4724 ;;  TempActual      2    0[COMRAM] PTR unsigned char 
  4725 ;;		 -> Datos(2), 
  4726 ;;  TempDigitada    2    2[COMRAM] int 
  4727 ;;  MargenErrorT    2    4[COMRAM] int 
  4728 ;; Auto vars:     Size  Location     Type
  4729 ;;		None
  4730 ;; Return value:  Size  Location     Type
  4731 ;;                  1    wreg      void 
  4732 ;; Registers used:
  4733 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4734 ;; Tracked objects:
  4735 ;;		On entry : 0/0
  4736 ;;		On exit  : 0/0
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4739 ;;      Params:         6       0       0       0       0       0       0       0       0
  4740 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4741 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4742 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4743 ;;Total ram usage:       11 bytes
  4744 ;; Hardware stack levels used: 1
  4745 ;; Hardware stack levels required when called: 1
  4746 ;; This function calls:
  4747 ;;		_ApagarVentiladores
  4748 ;;		_PrenderVentiladores
  4749 ;; This function is called by:
  4750 ;;		_main
  4751 ;; This function uses a non-reentrant model
  4752 ;;
  4753                           
  4754                           	psect	text30
  4755  001AF2                     __ptext30:
  4756                           	callstack 0
  4757  001AF2                     _ControlTemperaturaVentilador:
  4758                           	callstack 29
  4759  001AF2                     
  4760                           ;Actuadores.c: 60:     if(*TempActual>TempDigitada+MargenErrorT){
  4761  001AF2  C001  FFD9         	movff	ControlTemperaturaVentilador@TempActual,fsr2l
  4762  001AF6  C002  FFDA         	movff	ControlTemperaturaVentilador@TempActual+1,fsr2h
  4763  001AFA  50DF               	movf	indf2,w,c
  4764  001AFC  6E07               	movwf	??_ControlTemperaturaVentilador^0,c
  4765  001AFE  6A08               	clrf	(??_ControlTemperaturaVentilador+1)^0,c
  4766  001B00  5005               	movf	ControlTemperaturaVentilador@MargenErrorT^0,w,c
  4767  001B02  2403               	addwf	ControlTemperaturaVentilador@TempDigitada^0,w,c
  4768  001B04  6E09               	movwf	(??_ControlTemperaturaVentilador+2)^0,c
  4769  001B06  5006               	movf	(ControlTemperaturaVentilador@MargenErrorT+1)^0,w,c
  4770  001B08  2004               	addwfc	(ControlTemperaturaVentilador@TempDigitada+1)^0,w,c
  4771  001B0A  6E0A               	movwf	(??_ControlTemperaturaVentilador+3)^0,c
  4772  001B0C  5007               	movf	??_ControlTemperaturaVentilador^0,w,c
  4773  001B0E  5C09               	subwf	(??_ControlTemperaturaVentilador+2)^0,w,c
  4774  001B10  500A               	movf	(??_ControlTemperaturaVentilador+3)^0,w,c
  4775  001B12  0A80               	xorlw	128
  4776  001B14  6E0B               	movwf	(??_ControlTemperaturaVentilador+4)^0,c
  4777  001B16  5008               	movf	(??_ControlTemperaturaVentilador+1)^0,w,c
  4778  001B18  0A80               	xorlw	128
  4779  001B1A  580B               	subwfb	(??_ControlTemperaturaVentilador+4)^0,w,c
  4780  001B1C  B0D8               	btfsc	status,0,c
  4781  001B1E  EF93  F00D         	goto	u1651
  4782  001B22  EF95  F00D         	goto	u1650
  4783  001B26                     u1651:
  4784  001B26  EF99  F00D         	goto	l2345
  4785  001B2A                     u1650:
  4786  001B2A                     
  4787                           ;Actuadores.c: 61:         PrenderVentiladores();
  4788  001B2A  ECEF  F00E         	call	_PrenderVentiladores	;wreg free
  4789                           
  4790                           ;Actuadores.c: 62:     }else{
  4791  001B2E  EF9B  F00D         	goto	l302
  4792  001B32                     l2345:
  4793                           
  4794                           ;Actuadores.c: 63:         ApagarVentiladores();
  4795  001B32  ECF2  F00E         	call	_ApagarVentiladores	;wreg free
  4796  001B36                     l302:
  4797  001B36  0012               	return		;funcret
  4798  001B38                     __end_of_ControlTemperaturaVentilador:
  4799                           	callstack 0
  4800                           
  4801 ;; *************** function _PrenderVentiladores *****************
  4802 ;; Defined at:
  4803 ;;		line 30 in file "Actuadores.c"
  4804 ;; Parameters:    Size  Location     Type
  4805 ;;		None
  4806 ;; Auto vars:     Size  Location     Type
  4807 ;;		None
  4808 ;; Return value:  Size  Location     Type
  4809 ;;                  1    wreg      void 
  4810 ;; Registers used:
  4811 ;;		None
  4812 ;; Tracked objects:
  4813 ;;		On entry : 0/0
  4814 ;;		On exit  : 0/0
  4815 ;;		Unchanged: 0/0
  4816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4817 ;;      Params:         0       0       0       0       0       0       0       0       0
  4818 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4819 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4820 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4821 ;;Total ram usage:        0 bytes
  4822 ;; Hardware stack levels used: 1
  4823 ;; This function calls:
  4824 ;;		Nothing
  4825 ;; This function is called by:
  4826 ;;		_ControlTemperaturaVentilador
  4827 ;; This function uses a non-reentrant model
  4828 ;;
  4829                           
  4830                           	psect	text31
  4831  001DDE                     __ptext31:
  4832                           	callstack 0
  4833  001DDE                     _PrenderVentiladores:
  4834                           	callstack 29
  4835  001DDE                     
  4836                           ;Actuadores.c: 31:     LATC2=1;
  4837  001DDE  848B               	bsf	3979,2,c	;volatile
  4838                           
  4839                           ;Actuadores.c: 32:     LATC6=1;
  4840  001DE0  8C8B               	bsf	3979,6,c	;volatile
  4841  001DE2  0012               	return		;funcret
  4842  001DE4                     __end_of_PrenderVentiladores:
  4843                           	callstack 0
  4844                           
  4845 ;; *************** function _ApagarVentiladores *****************
  4846 ;; Defined at:
  4847 ;;		line 20 in file "Actuadores.c"
  4848 ;; Parameters:    Size  Location     Type
  4849 ;;		None
  4850 ;; Auto vars:     Size  Location     Type
  4851 ;;		None
  4852 ;; Return value:  Size  Location     Type
  4853 ;;                  1    wreg      void 
  4854 ;; Registers used:
  4855 ;;		None
  4856 ;; Tracked objects:
  4857 ;;		On entry : 0/0
  4858 ;;		On exit  : 0/0
  4859 ;;		Unchanged: 0/0
  4860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4861 ;;      Params:         0       0       0       0       0       0       0       0       0
  4862 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4863 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4864 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4865 ;;Total ram usage:        0 bytes
  4866 ;; Hardware stack levels used: 1
  4867 ;; This function calls:
  4868 ;;		Nothing
  4869 ;; This function is called by:
  4870 ;;		_main
  4871 ;;		_ControlTemperaturaVentilador
  4872 ;; This function uses a non-reentrant model
  4873 ;;
  4874                           
  4875                           	psect	text32
  4876  001DE4                     __ptext32:
  4877                           	callstack 0
  4878  001DE4                     _ApagarVentiladores:
  4879                           	callstack 29
  4880  001DE4                     
  4881                           ;Actuadores.c: 21:     LATC2=0;
  4882  001DE4  948B               	bcf	3979,2,c	;volatile
  4883                           
  4884                           ;Actuadores.c: 22:     LATC6=0;
  4885  001DE6  9C8B               	bcf	3979,6,c	;volatile
  4886  001DE8  0012               	return		;funcret
  4887  001DEA                     __end_of_ApagarVentiladores:
  4888                           	callstack 0
  4889                           
  4890 ;; *************** function _ControlHumedadAspersor *****************
  4891 ;; Defined at:
  4892 ;;		line 51 in file "Actuadores.c"
  4893 ;; Parameters:    Size  Location     Type
  4894 ;;  HumedadActua    2    0[COMRAM] PTR unsigned char 
  4895 ;;		 -> Datos(2), 
  4896 ;;  HumedadDigit    2    2[COMRAM] int 
  4897 ;;  MargenErrorH    2    4[COMRAM] int 
  4898 ;; Auto vars:     Size  Location     Type
  4899 ;;		None
  4900 ;; Return value:  Size  Location     Type
  4901 ;;                  1    wreg      void 
  4902 ;; Registers used:
  4903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4904 ;; Tracked objects:
  4905 ;;		On entry : 0/0
  4906 ;;		On exit  : 0/0
  4907 ;;		Unchanged: 0/0
  4908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4909 ;;      Params:         6       0       0       0       0       0       0       0       0
  4910 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4911 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4912 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4913 ;;Total ram usage:       11 bytes
  4914 ;; Hardware stack levels used: 1
  4915 ;; Hardware stack levels required when called: 1
  4916 ;; This function calls:
  4917 ;;		_ApagarAspersores
  4918 ;;		_PrenderAspersores
  4919 ;; This function is called by:
  4920 ;;		_main
  4921 ;; This function uses a non-reentrant model
  4922 ;;
  4923                           
  4924                           	psect	text33
  4925  001B38                     __ptext33:
  4926                           	callstack 0
  4927  001B38                     _ControlHumedadAspersor:
  4928                           	callstack 29
  4929  001B38                     
  4930                           ;Actuadores.c: 52:     if(*HumedadActual<HumedadDigitada-MargenErrorH){
  4931  001B38  5005               	movf	ControlHumedadAspersor@MargenErrorH^0,w,c
  4932  001B3A  5C03               	subwf	ControlHumedadAspersor@HumedadDigitada^0,w,c
  4933  001B3C  6E07               	movwf	??_ControlHumedadAspersor^0,c
  4934  001B3E  5006               	movf	(ControlHumedadAspersor@MargenErrorH+1)^0,w,c
  4935  001B40  5804               	subwfb	(ControlHumedadAspersor@HumedadDigitada+1)^0,w,c
  4936  001B42  6E08               	movwf	(??_ControlHumedadAspersor+1)^0,c
  4937  001B44  C001  FFD9         	movff	ControlHumedadAspersor@HumedadActual,fsr2l
  4938  001B48  C002  FFDA         	movff	ControlHumedadAspersor@HumedadActual+1,fsr2h
  4939  001B4C  50DF               	movf	indf2,w,c
  4940  001B4E  6E09               	movwf	(??_ControlHumedadAspersor+2)^0,c
  4941  001B50  6A0A               	clrf	(??_ControlHumedadAspersor+3)^0,c
  4942  001B52  5007               	movf	??_ControlHumedadAspersor^0,w,c
  4943  001B54  5C09               	subwf	(??_ControlHumedadAspersor+2)^0,w,c
  4944  001B56  500A               	movf	(??_ControlHumedadAspersor+3)^0,w,c
  4945  001B58  0A80               	xorlw	128
  4946  001B5A  6E0B               	movwf	(??_ControlHumedadAspersor+4)^0,c
  4947  001B5C  5008               	movf	(??_ControlHumedadAspersor+1)^0,w,c
  4948  001B5E  0A80               	xorlw	128
  4949  001B60  580B               	subwfb	(??_ControlHumedadAspersor+4)^0,w,c
  4950  001B62  B0D8               	btfsc	status,0,c
  4951  001B64  EFB6  F00D         	goto	u1641
  4952  001B68  EFB8  F00D         	goto	u1640
  4953  001B6C                     u1641:
  4954  001B6C  EFBC  F00D         	goto	l2339
  4955  001B70                     u1640:
  4956  001B70                     
  4957                           ;Actuadores.c: 53:         PrenderAspersores();
  4958  001B70  ECF5  F00E         	call	_PrenderAspersores	;wreg free
  4959                           
  4960                           ;Actuadores.c: 54:     }else{
  4961  001B74  EFBE  F00D         	goto	l297
  4962  001B78                     l2339:
  4963                           
  4964                           ;Actuadores.c: 55:         ApagarAspersores();
  4965  001B78  ECF8  F00E         	call	_ApagarAspersores	;wreg free
  4966  001B7C                     l297:
  4967  001B7C  0012               	return		;funcret
  4968  001B7E                     __end_of_ControlHumedadAspersor:
  4969                           	callstack 0
  4970                           
  4971 ;; *************** function _PrenderAspersores *****************
  4972 ;; Defined at:
  4973 ;;		line 25 in file "Actuadores.c"
  4974 ;; Parameters:    Size  Location     Type
  4975 ;;		None
  4976 ;; Auto vars:     Size  Location     Type
  4977 ;;		None
  4978 ;; Return value:  Size  Location     Type
  4979 ;;                  1    wreg      void 
  4980 ;; Registers used:
  4981 ;;		None
  4982 ;; Tracked objects:
  4983 ;;		On entry : 0/0
  4984 ;;		On exit  : 0/0
  4985 ;;		Unchanged: 0/0
  4986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4987 ;;      Params:         0       0       0       0       0       0       0       0       0
  4988 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4989 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4990 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4991 ;;Total ram usage:        0 bytes
  4992 ;; Hardware stack levels used: 1
  4993 ;; This function calls:
  4994 ;;		Nothing
  4995 ;; This function is called by:
  4996 ;;		_ControlHumedadAspersor
  4997 ;; This function uses a non-reentrant model
  4998 ;;
  4999                           
  5000                           	psect	text34
  5001  001DEA                     __ptext34:
  5002                           	callstack 0
  5003  001DEA                     _PrenderAspersores:
  5004                           	callstack 29
  5005  001DEA                     
  5006                           ;Actuadores.c: 26:     LATC0=1;
  5007  001DEA  808B               	bsf	3979,0,c	;volatile
  5008                           
  5009                           ;Actuadores.c: 27:     LATC1=1;
  5010  001DEC  828B               	bsf	3979,1,c	;volatile
  5011  001DEE  0012               	return		;funcret
  5012  001DF0                     __end_of_PrenderAspersores:
  5013                           	callstack 0
  5014                           
  5015 ;; *************** function _ApagarAspersores *****************
  5016 ;; Defined at:
  5017 ;;		line 16 in file "Actuadores.c"
  5018 ;; Parameters:    Size  Location     Type
  5019 ;;		None
  5020 ;; Auto vars:     Size  Location     Type
  5021 ;;		None
  5022 ;; Return value:  Size  Location     Type
  5023 ;;                  1    wreg      void 
  5024 ;; Registers used:
  5025 ;;		None
  5026 ;; Tracked objects:
  5027 ;;		On entry : 0/0
  5028 ;;		On exit  : 0/0
  5029 ;;		Unchanged: 0/0
  5030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5031 ;;      Params:         0       0       0       0       0       0       0       0       0
  5032 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5033 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5034 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5035 ;;Total ram usage:        0 bytes
  5036 ;; Hardware stack levels used: 1
  5037 ;; This function calls:
  5038 ;;		Nothing
  5039 ;; This function is called by:
  5040 ;;		_main
  5041 ;;		_ControlHumedadAspersor
  5042 ;; This function uses a non-reentrant model
  5043 ;;
  5044                           
  5045                           	psect	text35
  5046  001DF0                     __ptext35:
  5047                           	callstack 0
  5048  001DF0                     _ApagarAspersores:
  5049                           	callstack 29
  5050  001DF0                     
  5051                           ;Actuadores.c: 17:     LATC0=0;
  5052  001DF0  908B               	bcf	3979,0,c	;volatile
  5053                           
  5054                           ;Actuadores.c: 18:     LATC1=0;
  5055  001DF2  928B               	bcf	3979,1,c	;volatile
  5056  001DF4  0012               	return		;funcret
  5057  001DF6                     __end_of_ApagarAspersores:
  5058                           	callstack 0
  5059                           
  5060 ;; *************** function _ConfigurarPuertosLCD *****************
  5061 ;; Defined at:
  5062 ;;		line 124 in file "LCD.c"
  5063 ;; Parameters:    Size  Location     Type
  5064 ;;		None
  5065 ;; Auto vars:     Size  Location     Type
  5066 ;;		None
  5067 ;; Return value:  Size  Location     Type
  5068 ;;                  1    wreg      void 
  5069 ;; Registers used:
  5070 ;;		wreg, status,2
  5071 ;; Tracked objects:
  5072 ;;		On entry : 0/0
  5073 ;;		On exit  : 0/0
  5074 ;;		Unchanged: 0/0
  5075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5076 ;;      Params:         0       0       0       0       0       0       0       0       0
  5077 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5078 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5079 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5080 ;;Total ram usage:        0 bytes
  5081 ;; Hardware stack levels used: 1
  5082 ;; This function calls:
  5083 ;;		Nothing
  5084 ;; This function is called by:
  5085 ;;		_main
  5086 ;; This function uses a non-reentrant model
  5087 ;;
  5088                           
  5089                           	psect	text36
  5090  001DF6                     __ptext36:
  5091                           	callstack 0
  5092  001DF6                     _ConfigurarPuertosLCD:
  5093                           	callstack 30
  5094  001DF6                     
  5095                           ;LCD.c: 125: TRISD=0x00;
  5096  001DF6  0E00               	movlw	0
  5097  001DF8  6E95               	movwf	149,c	;volatile
  5098  001DFA  0012               	return		;funcret
  5099  001DFC                     __end_of_ConfigurarPuertosLCD:
  5100                           	callstack 0
  5101                           
  5102 ;; *************** function _Comparar_T_H_Adecuados *****************
  5103 ;; Defined at:
  5104 ;;		line 60 in file "DHT11.c"
  5105 ;; Parameters:    Size  Location     Type
  5106 ;;  TempActual      2    2[COMRAM] PTR unsigned char 
  5107 ;;		 -> Datos(2), 
  5108 ;;  HumActual       2    4[COMRAM] PTR unsigned char 
  5109 ;;		 -> Datos(2), 
  5110 ;;  TempDigitada    2    6[COMRAM] int 
  5111 ;;  HumDigitada     2    8[COMRAM] int 
  5112 ;;  MargenErrorT    2   10[COMRAM] int 
  5113 ;;  MargenErrorH    2   12[COMRAM] int 
  5114 ;; Auto vars:     Size  Location     Type
  5115 ;;  HumedadAdecu    1   20[COMRAM] _Bool 
  5116 ;;  TemperaturaA    1   19[COMRAM] _Bool 
  5117 ;; Return value:  Size  Location     Type
  5118 ;;                  1    wreg      void 
  5119 ;; Registers used:
  5120 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5121 ;; Tracked objects:
  5122 ;;		On entry : 0/0
  5123 ;;		On exit  : 0/0
  5124 ;;		Unchanged: 0/0
  5125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5126 ;;      Params:        12       0       0       0       0       0       0       0       0
  5127 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5128 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5129 ;;      Totals:        19       0       0       0       0       0       0       0       0
  5130 ;;Total ram usage:       19 bytes
  5131 ;; Hardware stack levels used: 1
  5132 ;; Hardware stack levels required when called: 2
  5133 ;; This function calls:
  5134 ;;		_PrenderLed
  5135 ;; This function is called by:
  5136 ;;		_main
  5137 ;; This function uses a non-reentrant model
  5138 ;;
  5139                           
  5140                           	psect	text37
  5141  00144E                     __ptext37:
  5142                           	callstack 0
  5143  00144E                     _Comparar_T_H_Adecuados:
  5144                           	callstack 28
  5145  00144E                     
  5146                           ;DHT11.c: 60: void Comparar_T_H_Adecuados(char *TempActual,char *HumActual,int TempDigit
      +                          ada,;DHT11.c: 61:         int HumDigitada,int MargenErrorT,int MargenErrorH){;DHT11.c: 6
      +                          2:     _Bool TemperaturaAdecuada= 1;
  5147  00144E  0E01               	movlw	1
  5148  001450  6E14               	movwf	Comparar_T_H_Adecuados@TemperaturaAdecuada^0,c
  5149                           
  5150                           ;DHT11.c: 63:     _Bool HumedadAdecuada =1;
  5151  001452  0E01               	movlw	1
  5152  001454  6E15               	movwf	Comparar_T_H_Adecuados@HumedadAdecuada^0,c
  5153  001456                     
  5154                           ;DHT11.c: 64:     if(*TempActual<TempDigitada-MargenErrorT || *TempActual >TempDigitada+
      +                          MargenErrorT){
  5155  001456  500B               	movf	Comparar_T_H_Adecuados@MargenErrorT^0,w,c
  5156  001458  5C07               	subwf	Comparar_T_H_Adecuados@TempDigitada^0,w,c
  5157  00145A  6E0F               	movwf	??_Comparar_T_H_Adecuados^0,c
  5158  00145C  500C               	movf	(Comparar_T_H_Adecuados@MargenErrorT+1)^0,w,c
  5159  00145E  5808               	subwfb	(Comparar_T_H_Adecuados@TempDigitada+1)^0,w,c
  5160  001460  6E10               	movwf	(??_Comparar_T_H_Adecuados+1)^0,c
  5161  001462  C003  FFD9         	movff	Comparar_T_H_Adecuados@TempActual,fsr2l
  5162  001466  C004  FFDA         	movff	Comparar_T_H_Adecuados@TempActual+1,fsr2h
  5163  00146A  50DF               	movf	indf2,w,c
  5164  00146C  6E11               	movwf	(??_Comparar_T_H_Adecuados+2)^0,c
  5165  00146E  6A12               	clrf	(??_Comparar_T_H_Adecuados+3)^0,c
  5166  001470  500F               	movf	??_Comparar_T_H_Adecuados^0,w,c
  5167  001472  5C11               	subwf	(??_Comparar_T_H_Adecuados+2)^0,w,c
  5168  001474  5012               	movf	(??_Comparar_T_H_Adecuados+3)^0,w,c
  5169  001476  0A80               	xorlw	128
  5170  001478  6E13               	movwf	(??_Comparar_T_H_Adecuados+4)^0,c
  5171  00147A  5010               	movf	(??_Comparar_T_H_Adecuados+1)^0,w,c
  5172  00147C  0A80               	xorlw	128
  5173  00147E  5813               	subwfb	(??_Comparar_T_H_Adecuados+4)^0,w,c
  5174  001480  A0D8               	btfss	status,0,c
  5175  001482  EF45  F00A         	goto	u1601
  5176  001486  EF47  F00A         	goto	u1600
  5177  00148A                     u1601:
  5178  00148A  EF63  F00A         	goto	l2325
  5179  00148E                     u1600:
  5180  00148E  C003  FFD9         	movff	Comparar_T_H_Adecuados@TempActual,fsr2l
  5181  001492  C004  FFDA         	movff	Comparar_T_H_Adecuados@TempActual+1,fsr2h
  5182  001496  50DF               	movf	indf2,w,c
  5183  001498  6E0F               	movwf	??_Comparar_T_H_Adecuados^0,c
  5184  00149A  6A10               	clrf	(??_Comparar_T_H_Adecuados+1)^0,c
  5185  00149C  500B               	movf	Comparar_T_H_Adecuados@MargenErrorT^0,w,c
  5186  00149E  2407               	addwf	Comparar_T_H_Adecuados@TempDigitada^0,w,c
  5187  0014A0  6E11               	movwf	(??_Comparar_T_H_Adecuados+2)^0,c
  5188  0014A2  500C               	movf	(Comparar_T_H_Adecuados@MargenErrorT+1)^0,w,c
  5189  0014A4  2008               	addwfc	(Comparar_T_H_Adecuados@TempDigitada+1)^0,w,c
  5190  0014A6  6E12               	movwf	(??_Comparar_T_H_Adecuados+3)^0,c
  5191  0014A8  500F               	movf	??_Comparar_T_H_Adecuados^0,w,c
  5192  0014AA  5C11               	subwf	(??_Comparar_T_H_Adecuados+2)^0,w,c
  5193  0014AC  5012               	movf	(??_Comparar_T_H_Adecuados+3)^0,w,c
  5194  0014AE  0A80               	xorlw	128
  5195  0014B0  6E13               	movwf	(??_Comparar_T_H_Adecuados+4)^0,c
  5196  0014B2  5010               	movf	(??_Comparar_T_H_Adecuados+1)^0,w,c
  5197  0014B4  0A80               	xorlw	128
  5198  0014B6  5813               	subwfb	(??_Comparar_T_H_Adecuados+4)^0,w,c
  5199  0014B8  B0D8               	btfsc	status,0,c
  5200  0014BA  EF61  F00A         	goto	u1611
  5201  0014BE  EF63  F00A         	goto	u1610
  5202  0014C2                     u1611:
  5203  0014C2  EF65  F00A         	goto	l2327
  5204  0014C6                     u1610:
  5205  0014C6                     l2325:
  5206                           
  5207                           ;DHT11.c: 65:            TemperaturaAdecuada=0;
  5208  0014C6  0E00               	movlw	0
  5209  0014C8  6E14               	movwf	Comparar_T_H_Adecuados@TemperaturaAdecuada^0,c
  5210  0014CA                     l2327:
  5211                           
  5212                           ;DHT11.c: 67:     if(*HumActual<HumDigitada-MargenErrorH || *HumActual>HumDigitada+Marge
      +                          nErrorH){
  5213  0014CA  500D               	movf	Comparar_T_H_Adecuados@MargenErrorH^0,w,c
  5214  0014CC  5C09               	subwf	Comparar_T_H_Adecuados@HumDigitada^0,w,c
  5215  0014CE  6E0F               	movwf	??_Comparar_T_H_Adecuados^0,c
  5216  0014D0  500E               	movf	(Comparar_T_H_Adecuados@MargenErrorH+1)^0,w,c
  5217  0014D2  580A               	subwfb	(Comparar_T_H_Adecuados@HumDigitada+1)^0,w,c
  5218  0014D4  6E10               	movwf	(??_Comparar_T_H_Adecuados+1)^0,c
  5219  0014D6  C005  FFD9         	movff	Comparar_T_H_Adecuados@HumActual,fsr2l
  5220  0014DA  C006  FFDA         	movff	Comparar_T_H_Adecuados@HumActual+1,fsr2h
  5221  0014DE  50DF               	movf	indf2,w,c
  5222  0014E0  6E11               	movwf	(??_Comparar_T_H_Adecuados+2)^0,c
  5223  0014E2  6A12               	clrf	(??_Comparar_T_H_Adecuados+3)^0,c
  5224  0014E4  500F               	movf	??_Comparar_T_H_Adecuados^0,w,c
  5225  0014E6  5C11               	subwf	(??_Comparar_T_H_Adecuados+2)^0,w,c
  5226  0014E8  5012               	movf	(??_Comparar_T_H_Adecuados+3)^0,w,c
  5227  0014EA  0A80               	xorlw	128
  5228  0014EC  6E13               	movwf	(??_Comparar_T_H_Adecuados+4)^0,c
  5229  0014EE  5010               	movf	(??_Comparar_T_H_Adecuados+1)^0,w,c
  5230  0014F0  0A80               	xorlw	128
  5231  0014F2  5813               	subwfb	(??_Comparar_T_H_Adecuados+4)^0,w,c
  5232  0014F4  A0D8               	btfss	status,0,c
  5233  0014F6  EF7F  F00A         	goto	u1621
  5234  0014FA  EF81  F00A         	goto	u1620
  5235  0014FE                     u1621:
  5236  0014FE  EF9D  F00A         	goto	l2331
  5237  001502                     u1620:
  5238  001502  C005  FFD9         	movff	Comparar_T_H_Adecuados@HumActual,fsr2l
  5239  001506  C006  FFDA         	movff	Comparar_T_H_Adecuados@HumActual+1,fsr2h
  5240  00150A  50DF               	movf	indf2,w,c
  5241  00150C  6E0F               	movwf	??_Comparar_T_H_Adecuados^0,c
  5242  00150E  6A10               	clrf	(??_Comparar_T_H_Adecuados+1)^0,c
  5243  001510  500D               	movf	Comparar_T_H_Adecuados@MargenErrorH^0,w,c
  5244  001512  2409               	addwf	Comparar_T_H_Adecuados@HumDigitada^0,w,c
  5245  001514  6E11               	movwf	(??_Comparar_T_H_Adecuados+2)^0,c
  5246  001516  500E               	movf	(Comparar_T_H_Adecuados@MargenErrorH+1)^0,w,c
  5247  001518  200A               	addwfc	(Comparar_T_H_Adecuados@HumDigitada+1)^0,w,c
  5248  00151A  6E12               	movwf	(??_Comparar_T_H_Adecuados+3)^0,c
  5249  00151C  500F               	movf	??_Comparar_T_H_Adecuados^0,w,c
  5250  00151E  5C11               	subwf	(??_Comparar_T_H_Adecuados+2)^0,w,c
  5251  001520  5012               	movf	(??_Comparar_T_H_Adecuados+3)^0,w,c
  5252  001522  0A80               	xorlw	128
  5253  001524  6E13               	movwf	(??_Comparar_T_H_Adecuados+4)^0,c
  5254  001526  5010               	movf	(??_Comparar_T_H_Adecuados+1)^0,w,c
  5255  001528  0A80               	xorlw	128
  5256  00152A  5813               	subwfb	(??_Comparar_T_H_Adecuados+4)^0,w,c
  5257  00152C  B0D8               	btfsc	status,0,c
  5258  00152E  EF9B  F00A         	goto	u1631
  5259  001532  EF9D  F00A         	goto	u1630
  5260  001536                     u1631:
  5261  001536  EF9F  F00A         	goto	l2333
  5262  00153A                     u1630:
  5263  00153A                     l2331:
  5264                           
  5265                           ;DHT11.c: 68:         HumedadAdecuada=0;
  5266  00153A  0E00               	movlw	0
  5267  00153C  6E15               	movwf	Comparar_T_H_Adecuados@HumedadAdecuada^0,c
  5268  00153E                     l2333:
  5269                           
  5270                           ;DHT11.c: 71:    PrenderLed(TemperaturaAdecuada,HumedadAdecuada);
  5271  00153E  C015  F001         	movff	Comparar_T_H_Adecuados@HumedadAdecuada,PrenderLed@HumedadAdecuada
  5272  001542  5014               	movf	Comparar_T_H_Adecuados@TemperaturaAdecuada^0,w,c
  5273  001544  ECD5  F00C         	call	_PrenderLed
  5274  001548  0012               	return		;funcret
  5275  00154A                     __end_of_Comparar_T_H_Adecuados:
  5276                           	callstack 0
  5277                           
  5278 ;; *************** function _PrenderLed *****************
  5279 ;; Defined at:
  5280 ;;		line 40 in file "Actuadores.c"
  5281 ;; Parameters:    Size  Location     Type
  5282 ;;  TemperaturaA    1    wreg     _Bool 
  5283 ;;  HumedadAdecu    1    0[COMRAM] _Bool 
  5284 ;; Auto vars:     Size  Location     Type
  5285 ;;  TemperaturaA    1    1[COMRAM] _Bool 
  5286 ;; Return value:  Size  Location     Type
  5287 ;;                  1    wreg      void 
  5288 ;; Registers used:
  5289 ;;		wreg, status,2, cstack
  5290 ;; Tracked objects:
  5291 ;;		On entry : 0/0
  5292 ;;		On exit  : 0/0
  5293 ;;		Unchanged: 0/0
  5294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5295 ;;      Params:         1       0       0       0       0       0       0       0       0
  5296 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5297 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5298 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5299 ;;Total ram usage:        2 bytes
  5300 ;; Hardware stack levels used: 1
  5301 ;; Hardware stack levels required when called: 1
  5302 ;; This function calls:
  5303 ;;		_ApagarLeds
  5304 ;; This function is called by:
  5305 ;;		_Comparar_T_H_Adecuados
  5306 ;; This function uses a non-reentrant model
  5307 ;;
  5308                           
  5309                           	psect	text38
  5310  0019AA                     __ptext38:
  5311                           	callstack 0
  5312  0019AA                     _PrenderLed:
  5313                           	callstack 28
  5314                           
  5315                           ;incstack = 0
  5316                           ;PrenderLed@TemperaturaAdecuada stored from wreg
  5317  0019AA  6E02               	movwf	PrenderLed@TemperaturaAdecuada^0,c
  5318  0019AC                     
  5319                           ;Actuadores.c: 41:     ApagarLeds();
  5320  0019AC  ECEB  F00E         	call	_ApagarLeds	;wreg free
  5321  0019B0                     
  5322                           ;Actuadores.c: 42:     if(TemperaturaAdecuada==0 && HumedadAdecuada==0){
  5323  0019B0  5002               	movf	PrenderLed@TemperaturaAdecuada^0,w,c
  5324  0019B2  A4D8               	btfss	status,2,c
  5325  0019B4  EFDE  F00C         	goto	u1551
  5326  0019B8  EFE0  F00C         	goto	u1550
  5327  0019BC                     u1551:
  5328  0019BC  EFEB  F00C         	goto	l2235
  5329  0019C0                     u1550:
  5330  0019C0  5001               	movf	PrenderLed@HumedadAdecuada^0,w,c
  5331  0019C2  A4D8               	btfss	status,2,c
  5332  0019C4  EFE6  F00C         	goto	u1561
  5333  0019C8  EFE8  F00C         	goto	u1560
  5334  0019CC                     u1561:
  5335  0019CC  EFEB  F00C         	goto	l2235
  5336  0019D0                     u1560:
  5337  0019D0                     
  5338                           ;Actuadores.c: 43:         LATE0=1;
  5339  0019D0  808D               	bsf	3981,0,c	;volatile
  5340                           
  5341                           ;Actuadores.c: 44:     }else if(TemperaturaAdecuada==0 || HumedadAdecuada==0){
  5342  0019D2  EFFF  F00C         	goto	l292
  5343  0019D6                     l2235:
  5344  0019D6  5002               	movf	PrenderLed@TemperaturaAdecuada^0,w,c
  5345  0019D8  B4D8               	btfsc	status,2,c
  5346  0019DA  EFF1  F00C         	goto	u1571
  5347  0019DE  EFF3  F00C         	goto	u1570
  5348  0019E2                     u1571:
  5349  0019E2  EFFB  F00C         	goto	l290
  5350  0019E6                     u1570:
  5351  0019E6  5001               	movf	PrenderLed@HumedadAdecuada^0,w,c
  5352  0019E8  A4D8               	btfss	status,2,c
  5353  0019EA  EFF9  F00C         	goto	u1581
  5354  0019EE  EFFB  F00C         	goto	u1580
  5355  0019F2                     u1581:
  5356  0019F2  EFFE  F00C         	goto	l288
  5357  0019F6                     u1580:
  5358  0019F6                     l290:
  5359                           
  5360                           ;Actuadores.c: 45:         LATE1=1;
  5361  0019F6  828D               	bsf	3981,1,c	;volatile
  5362                           
  5363                           ;Actuadores.c: 46:     }else{
  5364  0019F8  EFFF  F00C         	goto	l292
  5365  0019FC                     l288:
  5366                           
  5367                           ;Actuadores.c: 47:         LATE2=1;
  5368  0019FC  848D               	bsf	3981,2,c	;volatile
  5369  0019FE                     l292:
  5370  0019FE  0012               	return		;funcret
  5371  001A00                     __end_of_PrenderLed:
  5372                           	callstack 0
  5373                           
  5374 ;; *************** function _ApagarLeds *****************
  5375 ;; Defined at:
  5376 ;;		line 35 in file "Actuadores.c"
  5377 ;; Parameters:    Size  Location     Type
  5378 ;;		None
  5379 ;; Auto vars:     Size  Location     Type
  5380 ;;		None
  5381 ;; Return value:  Size  Location     Type
  5382 ;;                  1    wreg      void 
  5383 ;; Registers used:
  5384 ;;		None
  5385 ;; Tracked objects:
  5386 ;;		On entry : 0/0
  5387 ;;		On exit  : 0/0
  5388 ;;		Unchanged: 0/0
  5389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5390 ;;      Params:         0       0       0       0       0       0       0       0       0
  5391 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5392 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5393 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5394 ;;Total ram usage:        0 bytes
  5395 ;; Hardware stack levels used: 1
  5396 ;; This function calls:
  5397 ;;		Nothing
  5398 ;; This function is called by:
  5399 ;;		_main
  5400 ;;		_PrenderLed
  5401 ;; This function uses a non-reentrant model
  5402 ;;
  5403                           
  5404                           	psect	text39
  5405  001DD6                     __ptext39:
  5406                           	callstack 0
  5407  001DD6                     _ApagarLeds:
  5408                           	callstack 28
  5409  001DD6                     
  5410                           ;Actuadores.c: 36:     LATE1=0;
  5411  001DD6  928D               	bcf	3981,1,c	;volatile
  5412                           
  5413                           ;Actuadores.c: 37:     LATE0=0;
  5414  001DD8  908D               	bcf	3981,0,c	;volatile
  5415                           
  5416                           ;Actuadores.c: 38:     LATE2=0;
  5417  001DDA  948D               	bcf	3981,2,c	;volatile
  5418  001DDC  0012               	return		;funcret
  5419  001DDE                     __end_of_ApagarLeds:
  5420                           	callstack 0
  5421                           
  5422                           	psect	rparam
  5423  0000                     
  5424                           	psect	idloc
  5425                           
  5426                           ;Config register IDLOC0 @ 0x200000
  5427                           ;	unspecified, using default values
  5428  200000                     	org	2097152
  5429  200000  FF                 	db	255
  5430                           
  5431                           ;Config register IDLOC1 @ 0x200001
  5432                           ;	unspecified, using default values
  5433  200001                     	org	2097153
  5434  200001  FF                 	db	255
  5435                           
  5436                           ;Config register IDLOC2 @ 0x200002
  5437                           ;	unspecified, using default values
  5438  200002                     	org	2097154
  5439  200002  FF                 	db	255
  5440                           
  5441                           ;Config register IDLOC3 @ 0x200003
  5442                           ;	unspecified, using default values
  5443  200003                     	org	2097155
  5444  200003  FF                 	db	255
  5445                           
  5446                           ;Config register IDLOC4 @ 0x200004
  5447                           ;	unspecified, using default values
  5448  200004                     	org	2097156
  5449  200004  FF                 	db	255
  5450                           
  5451                           ;Config register IDLOC5 @ 0x200005
  5452                           ;	unspecified, using default values
  5453  200005                     	org	2097157
  5454  200005  FF                 	db	255
  5455                           
  5456                           ;Config register IDLOC6 @ 0x200006
  5457                           ;	unspecified, using default values
  5458  200006                     	org	2097158
  5459  200006  FF                 	db	255
  5460                           
  5461                           ;Config register IDLOC7 @ 0x200007
  5462                           ;	unspecified, using default values
  5463  200007                     	org	2097159
  5464  200007  FF                 	db	255
  5465                           
  5466                           	psect	config
  5467                           
  5468                           ;Config register CONFIG1L @ 0x300000
  5469                           ;	unspecified, using default values
  5470                           ;	PLL Prescaler Selection bits
  5471                           ;	PLLDIV = 0x0, unprogrammed default
  5472                           ;	System Clock Postscaler Selection bits
  5473                           ;	CPUDIV = 0x0, unprogrammed default
  5474                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  5475                           ;	USBDIV = 0x0, unprogrammed default
  5476  300000                     	org	3145728
  5477  300000  00                 	db	0
  5478                           
  5479                           ;Config register CONFIG1H @ 0x300001
  5480                           ;	Oscillator Selection bits
  5481                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  5482                           ;	Fail-Safe Clock Monitor Enable bit
  5483                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5484                           ;	Internal/External Oscillator Switchover bit
  5485                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5486  300001                     	org	3145729
  5487  300001  09                 	db	9
  5488                           
  5489                           ;Config register CONFIG2L @ 0x300002
  5490                           ;	Power-up Timer Enable bit
  5491                           ;	PWRT = OFF, PWRT disabled
  5492                           ;	Brown-out Reset Enable bits
  5493                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  5494                           ;	Brown-out Reset Voltage bits
  5495                           ;	BORV = 3, Minimum setting 2.05V
  5496                           ;	USB Voltage Regulator Enable bit
  5497                           ;	VREGEN = OFF, USB voltage regulator disabled
  5498  300002                     	org	3145730
  5499  300002  1F                 	db	31
  5500                           
  5501                           ;Config register CONFIG2H @ 0x300003
  5502                           ;	Watchdog Timer Enable bit
  5503                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5504                           ;	Watchdog Timer Postscale Select bits
  5505                           ;	WDTPS = 32768, 1:32768
  5506  300003                     	org	3145731
  5507  300003  1E                 	db	30
  5508                           
  5509                           ; Padding undefined space
  5510  300004                     	org	3145732
  5511  300004  FF                 	db	255
  5512                           
  5513                           ;Config register CONFIG3H @ 0x300005
  5514                           ;	CCP2 MUX bit
  5515                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  5516                           ;	PORTB A/D Enable bit
  5517                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5518                           ;	Low-Power Timer 1 Oscillator Enable bit
  5519                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5520                           ;	MCLR Pin Enable bit
  5521                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5522  300005                     	org	3145733
  5523  300005  81                 	db	129
  5524                           
  5525                           ;Config register CONFIG4L @ 0x300006
  5526                           ;	Stack Full/Underflow Reset Enable bit
  5527                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5528                           ;	Single-Supply ICSP Enable bit
  5529                           ;	LVP = OFF, Single-Supply ICSP disabled
  5530                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  5531                           ;	ICPRT = OFF, ICPORT disabled
  5532                           ;	Extended Instruction Set Enable bit
  5533                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5534                           ;	Background Debugger Enable bit
  5535                           ;	DEBUG = 0x1, unprogrammed default
  5536  300006                     	org	3145734
  5537  300006  81                 	db	129
  5538                           
  5539                           ; Padding undefined space
  5540  300007                     	org	3145735
  5541  300007  FF                 	db	255
  5542                           
  5543                           ;Config register CONFIG5L @ 0x300008
  5544                           ;	Code Protection bit
  5545                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  5546                           ;	Code Protection bit
  5547                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  5548                           ;	Code Protection bit
  5549                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  5550                           ;	Code Protection bit
  5551                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  5552  300008                     	org	3145736
  5553  300008  0F                 	db	15
  5554                           
  5555                           ;Config register CONFIG5H @ 0x300009
  5556                           ;	Boot Block Code Protection bit
  5557                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  5558                           ;	Data EEPROM Code Protection bit
  5559                           ;	CPD = OFF, Data EEPROM is not code-protected
  5560  300009                     	org	3145737
  5561  300009  C0                 	db	192
  5562                           
  5563                           ;Config register CONFIG6L @ 0x30000A
  5564                           ;	Write Protection bit
  5565                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  5566                           ;	Write Protection bit
  5567                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  5568                           ;	Write Protection bit
  5569                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  5570                           ;	Write Protection bit
  5571                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  5572  30000A                     	org	3145738
  5573  30000A  0F                 	db	15
  5574                           
  5575                           ;Config register CONFIG6H @ 0x30000B
  5576                           ;	Configuration Register Write Protection bit
  5577                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  5578                           ;	Boot Block Write Protection bit
  5579                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  5580                           ;	Data EEPROM Write Protection bit
  5581                           ;	WRTD = OFF, Data EEPROM is not write-protected
  5582  30000B                     	org	3145739
  5583  30000B  E0                 	db	224
  5584                           
  5585                           ;Config register CONFIG7L @ 0x30000C
  5586                           ;	Table Read Protection bit
  5587                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5588                           ;	Table Read Protection bit
  5589                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5590                           ;	Table Read Protection bit
  5591                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5592                           ;	Table Read Protection bit
  5593                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5594  30000C                     	org	3145740
  5595  30000C  0F                 	db	15
  5596                           
  5597                           ;Config register CONFIG7H @ 0x30000D
  5598                           ;	Boot Block Table Read Protection bit
  5599                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  5600  30000D                     	org	3145741
  5601  30000D  40                 	db	64
  5602                           tosu	equ	0xFFF
  5603                           tosh	equ	0xFFE
  5604                           tosl	equ	0xFFD
  5605                           stkptr	equ	0xFFC
  5606                           pclatu	equ	0xFFB
  5607                           pclath	equ	0xFFA
  5608                           pcl	equ	0xFF9
  5609                           tblptru	equ	0xFF8
  5610                           tblptrh	equ	0xFF7
  5611                           tblptrl	equ	0xFF6
  5612                           tablat	equ	0xFF5
  5613                           prodh	equ	0xFF4
  5614                           prodl	equ	0xFF3
  5615                           indf0	equ	0xFEF
  5616                           postinc0	equ	0xFEE
  5617                           postdec0	equ	0xFED
  5618                           preinc0	equ	0xFEC
  5619                           plusw0	equ	0xFEB
  5620                           fsr0h	equ	0xFEA
  5621                           fsr0l	equ	0xFE9
  5622                           wreg	equ	0xFE8
  5623                           indf1	equ	0xFE7
  5624                           postinc1	equ	0xFE6
  5625                           postdec1	equ	0xFE5
  5626                           preinc1	equ	0xFE4
  5627                           plusw1	equ	0xFE3
  5628                           fsr1h	equ	0xFE2
  5629                           fsr1l	equ	0xFE1
  5630                           bsr	equ	0xFE0
  5631                           indf2	equ	0xFDF
  5632                           postinc2	equ	0xFDE
  5633                           postdec2	equ	0xFDD
  5634                           preinc2	equ	0xFDC
  5635                           plusw2	equ	0xFDB
  5636                           fsr2h	equ	0xFDA
  5637                           fsr2l	equ	0xFD9
  5638                           status	equ	0xFD8

Data Sizes:
    Strings     77
    Constant    0
    Data        16
    BSS         72
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160      8      96
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> Cadena(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_6(CODE[8]), STR_5(CODE[4]), STR_4(CODE[3]), STR_3(CODE[7]), 
		 -> STR_2(CODE[4]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 8
		 -> STR_6(CODE[8]), STR_5(CODE[4]), STR_4(CODE[3]), STR_3(CODE[7]), 
		 -> STR_2(CODE[4]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_6(CODE[8]), STR_5(CODE[4]), STR_4(CODE[3]), STR_3(CODE[7]), 
		 -> STR_2(CODE[4]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> Cadena(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S870_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> Cadena(BANK0[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> Cadena(BANK0[10]), 

    ControlTemperaturaVentilador@TempActual	PTR unsigned char  size(2) Largest target is 2
		 -> Datos(BANK0[2]), 

    ControlHumedadAspersor@HumedadActual	PTR unsigned char  size(2) Largest target is 2
		 -> Datos(BANK0[2]), 

    Comparar_T_H_Adecuados@HumActual	PTR unsigned char  size(2) Largest target is 2
		 -> Datos(BANK0[2]), 

    Comparar_T_H_Adecuados@TempActual	PTR unsigned char  size(2) Largest target is 2
		 -> Datos(BANK0[2]), 

    DatosSensorTH@Datos	PTR unsigned char  size(2) Largest target is 2
		 -> Datos(BANK0[2]), 

    DatoDigitadoAEntero@prmTemperatura	PTR unsigned char  size(2) Largest target is 2
		 -> Humedad(BANK0[2]), Temperatura(BANK0[2]), 

    PedirTodosLosDatos@MargenErrorH	PTR unsigned char  size(2) Largest target is 1
		 -> MargenErrorH(BANK0[1]), 

    PedirTodosLosDatos@Humedad	PTR unsigned char  size(2) Largest target is 2
		 -> Humedad(BANK0[2]), 

    PedirTodosLosDatos@MargenErrorT	PTR unsigned char  size(2) Largest target is 1
		 -> MargenErrorT(BANK0[1]), 

    PedirTodosLosDatos@Temperatura	PTR unsigned char  size(2) Largest target is 2
		 -> Temperatura(BANK0[2]), 

    PedirDato@vecLlenar	PTR unsigned char  size(2) Largest target is 2
		 -> MargenErrorH(BANK0[1]), MargenErrorT(BANK0[1]), Humedad(BANK0[2]), Temperatura(BANK0[2]), 

    PedirDato@Etiqueta	PTR unsigned char  size(2) Largest target is 15
		 -> STR_10(CODE[14]), STR_9(CODE[14]), STR_8(CODE[15]), STR_7(CODE[15]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_10(CODE[14]), STR_9(CODE[14]), STR_8(CODE[15]), STR_7(CODE[15]), 
		 -> Cadena(BANK0[10]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_10(CODE[14]), STR_9(CODE[14]), STR_8(CODE[15]), STR_7(CODE[15]), 
		 -> Cadena(BANK0[10]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _PedirTodosLosDatos->_PedirDato
    _PedirDato->_LCD_String_xy
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Clear->_LCD_Command
    _LCD_Init->_LCD_Command
    _DatosSensorTH->_DHT11_ReadData
    _DatoDigitadoAEntero->___wmul
    _Comparar_T_H_Adecuados->_PrenderLed

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   13616
                                             93 COMRAM     2     2      0
                   _ApagarAspersores
                         _ApagarLeds
                 _ApagarVentiladores
             _Comparar_T_H_Adecuados
               _ConfigurarPuertosLCD
             _ControlHumedadAspersor
       _ControlTemperaturaVentilador
                _DatoDigitadoAEntero
                      _DatosSensorTH
                           _LCD_Char
                           _LCD_Init
                         _LCD_String
                      _LCD_String_xy
                 _PedirTodosLosDatos
                     _initActuadores
                        _initTeclado
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    7216
                                             87 COMRAM     6     0      6
                                              0 BANK0      8     8      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _initTeclado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initActuadores                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PedirTodosLosDatos                                  10     2      8    2545
                                             20 COMRAM    10     2      8
                          _PedirDato
 ---------------------------------------------------------------------------------
 (2) _PedirDato                                           11     5      6    2153
                                              9 COMRAM    11     5      6
                           _LCD_Char
                          _LCD_Clear
                        _LCD_Command
                      _LCD_String_xy
                            _keyfind
 ---------------------------------------------------------------------------------
 (3) _keyfind                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_String_xy                                        5     2      3     952
                                              4 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (4) _LCD_String                                           2     0      2     317
                                              2 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (5) _LCD_Char                                             2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LCD_Clear                                            1     1      0      44
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      44
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (4) _LCD_Command                                          2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DatosSensorTH                                        7     5      2     284
                                              2 COMRAM     4     2      2
                _DHT11_CheckResponse
                     _DHT11_ReadData
                        _DHT11_Start
 ---------------------------------------------------------------------------------
 (2) _DHT11_Start                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DHT11_ReadData                                       2     2      0     115
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _DHT11_CheckResponse                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DatoDigitadoAEntero                                  9     7      2     694
                                              6 COMRAM     9     7      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _ControlTemperaturaVentilador                        11     5      6     294
                                              0 COMRAM    11     5      6
                 _ApagarVentiladores
                _PrenderVentiladores
 ---------------------------------------------------------------------------------
 (2) _PrenderVentiladores                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ApagarVentiladores                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlHumedadAspersor                              11     5      6     294
                                              0 COMRAM    11     5      6
                   _ApagarAspersores
                  _PrenderAspersores
 ---------------------------------------------------------------------------------
 (2) _PrenderAspersores                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ApagarAspersores                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigurarPuertosLCD                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Comparar_T_H_Adecuados                              19     7     12     932
                                              2 COMRAM    19     7     12
                         _PrenderLed
 ---------------------------------------------------------------------------------
 (2) _PrenderLed                                           2     1      1     164
                                              0 COMRAM     2     1      1
                         _ApagarLeds
 ---------------------------------------------------------------------------------
 (3) _ApagarLeds                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ApagarAspersores
   _ApagarLeds
   _ApagarVentiladores
   _Comparar_T_H_Adecuados
     _PrenderLed
       _ApagarLeds
   _ConfigurarPuertosLCD
   _ControlHumedadAspersor
     _ApagarAspersores
     _PrenderAspersores
   _ControlTemperaturaVentilador
     _ApagarVentiladores
     _PrenderVentiladores
   _DatoDigitadoAEntero
     ___wmul
   _DatosSensorTH
     _DHT11_CheckResponse
     _DHT11_ReadData
     _DHT11_Start
   _LCD_Char
   _LCD_Init
     _LCD_Command
   _LCD_String
     _LCD_Char
   _LCD_String_xy
     _LCD_Command
     _LCD_String
   _PedirTodosLosDatos
     _PedirDato
       _LCD_Char
       _LCD_Clear
         _LCD_Command
       _LCD_Command
       _LCD_String_xy
       _keyfind
   _initActuadores
   _initTeclado
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      8      60       5       60.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BF      20        0.0%
DATA                 0      0      BF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Oct 10 22:20:03 2021

       Comparar_T_H_Adecuados@TempDigitada 0007                               ?_LCD_Command 0001  
                                       l95 1D1E                                         l98 1AF0  
                      _PrenderVentiladores 1DDE                        ___wmul@multiplicand 0003  
                              ?_LCD_String 0003                __size_of_ApagarVentiladores 0006  
                                      l101 1AA0                                        l112 1C40  
                                      l121 1816                                        l115 1D74  
                                      l107 194C                                        l124 1DFA  
                                      l220 19A8                                        l212 1956  
                                      l302 1B36                                        l223 1DBA  
                                      l127 1792                                        l232 1D3C  
                                      l305 1D9A                                        l217 1986  
                                      l226 1D20                                        l170 0E88  
                                      l235 1D4A                                        l229 1D2E  
                                      l165 0E44                                        l238 1C7E  
                                      l174 0ECC                                        l247 1548  
                                      l271 1DF4                                        l280 1DE2  
                                      l184 0FAC                                        l432 144C  
                                      l290 19F6                                        l274 1DE8  
                                      l194 188C                                        l178 0F10  
                                      l283 1DDC                                        l419 12E8  
                                      l292 19FE                                        l268 1DD4  
                                      l277 1DEE                                        l197 1DFE  
                                      l288 19FC                                        l297 1B7C  
                                      l983 1A50                                        u900 1CDE  
                                      u901 1CDA                                        u910 1174  
                                      u911 1170                                        u920 11A6  
                                      u921 11A2                                        u850 155C  
                                      u931 11D0                                        u851 1558  
                                      u940 11F4                                        u860 156E  
                                      u941 11F0                                        u861 156A  
                                      u950 121E                                        u870 1596  
                                      u951 121A                                        u871 1592  
                                      u960 125E                                        u880 15CC  
                                      u961 125A                                        u881 15C8  
                                      u970 12A8                                        u890 1BC0  
                                      u971 12A4                                        u891 1BBC  
                                      u980 12FC                                        u981 12F8  
                                      u990 132E                                        u991 132A  
                                      _abs 1BC2                                        _pad 1614  
                                      prod 000FF3                                        wreg 000FE8  
                PedirTodosLosDatos@Humedad 0017                                LCD_Char@dat 0002  
                           PedirDato@tecla 0014                                       l1010 165A  
                                     l1013 169C                                       l1021 08F0  
                                     l1015 16D8                                       l1023 08F8  
                                     l1041 0B30                                       l2001 0B08  
                                     l2011 1C14                                       ?_abs 0013  
                                     l2005 1DD6                                       l2021 1D4C  
                                     l2013 1C1C                                       l1062 1C00  
                                     l1054 18E6                                       l2023 1D52  
                                     l2015 1C26                                       l2007 1C04  
                                     l2031 0D8E                                       l1055 18EE  
                                     l1048 1160                                       l2201 1964  
                                     l2025 1D60                                       l2017 1C2E  
                                     l2009 1C04                                       l2121 0F9A  
                                     l2113 0F72                                       l2105 0F4A  
                                     l2041 0DD4                                       l2033 0DA0  
                                     l1074 1612                                       l1082 1BC0  
                                     l2211 1996                                       l2203 196A  
                                     l2019 1C34                                       l2115 0F84  
                                     l2107 0F5C                                       l2051 0E1A  
                                     l2043 0DE6                                       l2035 0DB8  
                                     l2027 0D7E                                       l1059 1BF8  
                                     l1091 1CEA                                       l2131 0FE0  
                                     l2213 19A6                                       l2205 1978  
                                     l2221 1DAE                                       l2301 1C42  
                                     l2061 0E5A                                       l2053 0E20  
                                     l2045 0DFE                                       l2037 0DC8  
                                     l2029 0D86                                       l1085 1E00  
                                     l2141 1086                                       l2133 0FF2  
                                     l2231 19C0                                       l2207 1980  
                                     l2223 1DB8                                       l2311 1C5A  
                                     l2303 1C46                                       l2071 0E82  
                                     l2063 0E5E                                       l2055 0E24  
                                     l2047 0E0E                                       l2039 0DCC  
                                     l2151 1104                                       l2135 0FF6  
                                     l2127 0FAE                                       l2233 19D0  
                                     l2321 1456                                       l2241 1DDE  
                                     l2225 1D20                                       l2209 1994  
                                     l2217 1D9C                                       l2313 1C5E  
                                     l2305 1C4A                                       l2081 0EBE  
                                     l2073 0E9E                                       l2065 0E64  
                                     l2057 0E36                                       l2049 0E16  
                                     l2145 10BE                                       l2137 101A  
                                     l2129 0FD2                                       l2161 112A  
                                     l2401 0CCC                                       l2235 19D6  
                                     l2227 19AC                                       l2331 153A  
                                     l2323 148E                                       l2171 1DE4  
                                     l2243 1D76                                       l2219 1DA0  
                                     l2315 1C62                                       l2307 1C50  
                                     l2091 0EF0                                       l2083 0EC6  
                                     l2075 0EA2                                       l2067 0E68  
                                     l2059 0E3E                                       l2163 114E  
                                     l2147 10E2                                       l2155 1110  
                                     l2139 103E                                       l2251 1896  
                                     l2411 0D40                                       l2403 0CE6  
                                     l2237 19E6                                       l2229 19B0  
                                     l2333 153E                                       l2325 14C6  
                                     l2341 1AF2                                       l2245 1D92  
                                     l2317 1C6E                                       l2309 1C54  
                                     l2261 1CEC                                       l2093 0F02  
                                     l2085 0EE2                                       l2077 0EA8  
                                     l2069 0E7A                                       l2181 17BC  
                                     l2173 1794                                       l2157 111E  
                                     l2149 10F0                                       l2253 18A4  
                                     l2413 0D54                                       l2405 0CF2  
                                     l2327 14CA                                       l2319 144E  
                                     l2239 1DEA                                       l2335 1B38  
                                     l2343 1B2A                                       l2271 1D12  
                                     l2263 1CF0                                       l2095 0F0A  
                                     l2087 0EE6                                       l2079 0EAC  
                                     l2191 17FA                                       l2183 17C2  
                                     l2175 1798                                       l2255 18CA  
                                     l2351 1A1A                                       l2415 0D60  
                                     l2407 0D1E                                       l2329 1502  
                                     l2257 1DF6                                       l2169 1DF0  
                                     l2337 1B70                                       l2345 1B32  
                                     l2273 1D18                                       l2265 1D00  
                                     l1801 1A7A                                       l2089 0EEC  
                                     l2097 0F22                                       l2193 1812  
                                     l2185 17C8                                       l2177 17AA  
                                     l2281 170E                                       l2249 188E  
                                     l2353 1A22                                       l2409 0D3A  
                                     l2361 0B3A                                       l2339 1B78  
                                     l2291 1840                                       l2195 194E  
                                     l2267 1D06                                       l1803 1A8C  
                                     l2099 0F34                                       l2187 17D8  
                                     l2179 17B0                                       l2283 1742  
                                     l2259 1DCC                                       l2275 1DFC  
                                     l1811 1166                                       l2355 1A3E  
                                     l2347 1A00                                       l2371 0B4E  
                                     l2363 0B3E                                       l2293 185C  
                                     l2269 1D0C                                       l1805 1A8E  
                                     l2189 17DC                                       l2285 175E  
                                     l2277 16DA                                       l1821 11C6  
                                     l1813 1174                                       l1901 167A  
                                     l2349 1A12                                       l2381 0BA6  
                                     l2373 0B52                                       l2365 0B42  
                                     l2295 1878                                       l2287 1818  
                                     l1807 1A90                                       l2279 16F6  
                                     l1831 1210                                       l1823 11CA  
                                     l1815 1194                                       l1911 1BC2  
                                     l1903 167E                                       l2383 0BB6  
                                     l2391 0BFC                                       l2375 0B56  
                                     l2367 0B46                                       l2359 0B32  
                                     l2297 1884                                       l2289 1828  
                                     l1921 191C                                       l1841 1280  
                                     l1833 121E                                       l1825 11D6  
                                     l1817 1198                                       l1809 1162  
                                     l1913 1BDC                                       l1761 156E  
                                     l1905 16AC                                       l2393 0C0C  
                                     l2385 0BDE                                       l2377 0B74  
                                     l2369 0B4A                                       l1931 1ABA  
                                     l1923 1AA4                                       l1915 18F0  
                                     l1843 1292                                       l1835 1230  
                                     l1827 11F4                                       l1819 11A6  
                                     l1763 1578                                       l1771 1B7E  
                                     l1907 16C0                                       l2395 0C84  
                                     l2387 0BEC                                       l2379 0B98  
                                     l1941 1AE0                                       l1933 1ABC  
                                     l1925 1AB4                                       l1917 18F4  
                                     l1837 125E                                       l1829 11FC  
                                     l1845 1298                                       l1861 1320  
                                     l1853 12EA                                       l1765 1596  
                                     l1757 154A                                       l1773 1B8A  
                                     l1781 1CC2                                       l2397 0C9E  
                                     l2389 0BF8                                       l1935 1ACA  
                                     l1927 1AB6                                       l1791 1A64  
                                     l1919 1918                                       l1847 12A8  
                                     l1839 127E                                       l1871 1388  
                                     l1863 132E                                       l1855 12EE  
                                     l1767 15CC                                       l1759 155C  
                                     l1775 1B9C                                       l1783 1CC6  
                                     l1951 08C8                                       l1943 0850  
                                     l2399 0CB0                                       l1937 1ADC  
                                     l1929 1AB8                                       l1793 1A66  
                                     l1849 12C8                                       l1873 1396  
                                     l1881 13FC                                       l1865 134E  
                                     l1857 12FC                                       l1777 1BA0  
                                     l1785 1CDE                                       l1961 0920  
                                     l1953 08CA                                       l1945 0870  
                                     l1939 1ADE                                       l1795 1A68  
                                     l1883 140C                                       l1875 13C4  
                                     l1867 136C                                       l1859 131C  
                                     l1779 1CB6                                       l1891 1624  
                                     l1971 09BE                                       l1963 0926  
                                     l1955 08E4                                       l1947 0898  
                                     l1797 1A6A                                       l1789 1A54  
                                     l1885 142C                                       l1877 13E4  
                                     l1869 1374                                       l1893 1638  
                                     l1981 0A66                                       l1973 09C4  
                                     l1965 092E                                       l1957 0900  
                                     l1949 08B8                                       ?_pad 0011  
                                     l1799 1A6C                                       l1879 13F6  
                                     l1895 1646                                       l1991 0ACC  
                                     l1983 0A80                                       l1975 09CA  
                                     l1967 0936                                       l1959 0912  
                                     l1897 1652                                       l1889 1614  
                                     l1993 0AD2                                       l1985 0A9A  
                                     l1969 093C                                       l1977 0A2E  
                                     l1899 1666                                       l1995 0AE4  
                                     l1979 0A48                                       l1987 0AAA  
                                     l1997 0AF0                                       l1989 0ABC  
                                     l1999 0AF8                                       STR_1 084B  
                                     STR_2 084A                                       STR_3 0843  
                                     STR_4 084B                                       STR_5 084A  
                                     STR_6 083B                                       STR_7 0801  
                                     STR_8 0810                                       STR_9 081F  
                                     u1000 136C                                       u1001 1368  
                                     u1010 1396                                       u1011 1392  
                                     u1100 193C                                       u1020 13C4  
                                     u1021 13C0                                       u1110 194C  
                                     u1030 140C                                       u1111 1948  
                                     u1031 1408                                       u1040 1624  
                                     u1200 0A66                                       u1120 0880  
                                     u1041 1620                                       u1201 0A62  
                                     u1121 087A                                       u1050 1646  
                                     u1210 0A80                                       u1130 0882  
                                     u1107 1932                                       u1051 1642  
                                     u1211 0A7C                                       u1300 0DE6  
                                     u1060 169C                                       u1220 0A9A  
                                     u1140 0898                                       u1301 0DE2  
                                     u1061 1698                                       u1221 0A96  
                                     u1141 0894                                       u1310 0DFE  
                                     u1070 16AC                                       u1230 0AAA  
                                     u1150 08C8                                       u1311 0DFA  
                                     u1071 16A8                                       u1231 0AA6  
                                     u1151 08C4                                       u1400 0F34  
                                     u1320 0E36                                       u1080 1BDC  
                                     u1240 0ABC                                       u1160 08E4  
                                     u1401 0F30                                       u1321 0E32  
                                     u1081 1BD8                                       u1241 0AB8  
                                     u1161 08E0                                       u1090 1914  
                                     u1410 0F5C                                       u1330 0E56  
                                     u1250 0ACC                                       u1170 0912  
                                     u1411 0F58                                       u1331 0E52  
                                     u1251 0AC8                                       u1171 090E  
                                     u1500 1994                                       u1420 0F84  
                                     u1340 0E7A                                       u1260 0AE4  
                                     u1180 0920                                       u1501 1990  
                                     u1421 0F80                                       u1341 0E76  
                                     u1261 0AE0                                       u1181 091C  
                                     u1510 19A6                                       u1270 1C14  
                                     u1350 0E9A                                       u1190 0A48  
                                     u1430 0FD2                                       _LATB 000F8A  
                                     u1511 19A2                                       u1271 1C10  
                                     u1351 0E96                                       u1191 0A44  
                                     u1431 0FCE                                       u1600 148E  
                                     u1520 1D2E                                       u1360 0EBE  
                                     u1280 0DA0                                       u1440 101A  
                                     _LATD 000F8C                                       u1601 148A  
                                     u1521 1D2A                                       u1097 190A  
                                     u1361 0EBA                                       u1281 0D9C  
                                     u1441 1016                                       u1610 14C6  
                                     u1530 1D3C                                       u1370 0EDE  
                                     u1290 0DB8                                       u1450 103E  
                                     u1611 14C2                                       u1531 1D38  
                                     u1371 0EDA                                       u1291 0DB4  
                                     u1451 103A                                       u1620 1502  
                                     u1540 1D4A                                       u1380 0F02  
                                     u1460 10E2                                       u1621 14FE  
                                     u1541 1D46                                       u1381 0EFE  
                                     u1461 10DE                                       u1550 19C0  
                                     u1630 153A                                       u1390 0F22  
                                     u1470 17FA                                       u1551 19BC  
                                     u1631 1536                                       u1391 0F1E  
                                     u1471 17F6                                       u1560 19D0  
                                     u1640 1B70                                       u1480 1964  
                                     u1561 19CC                                       u1641 1B6C  
                                     u1481 1960                                       u1570 19E6  
                                     u1650 1B2A                                       u1490 1978  
                                     u1571 19E2                                       u1651 1B26  
                                     u1491 1974                                       u1707 1700  
                                     u1580 19F6                                       u1660 0B74  
                                     u1581 19F2                                       u1717 1734  
                                     u1661 0B70                                       u1590 18E6  
                                     u1670 0BB6                                       u1807 1CF6  
                                     u1727 1768                                       u1591 18E2  
                                     u1671 0BB2                                       u1680 0C0C  
                                     u1817 1AC2                                       u1737 1804  
                                     u1681 0C08                                       u1827 1AE8  
                                     u1747 0DBE                       ?_PrenderVentiladores 0001  
                                     u1837 1DA6                                       u1757 0E04  
                                     u1847 1DB2                                       u1767 1A72  
                                     u1857 1966                                       u1777 1A98  
                                     u1697 0D6A                                       u1787 1D58  
                                     u1797 1D6C                                       _RBPU 007F8F  
                 ??_Comparar_T_H_Adecuados 000F                                 _ApagarLeds 1DD6  
                                     abs@a 0013                                       _dbuf 0076  
                                     _main 0B32                                       _dtoa 0850  
                       __size_of_LCD_Clear 002A                                       _prec 0064  
                                     _nout 0060                                       pad@i 0018  
                                     pad@p 0015                                       fsr1h 000FE2  
                                     fsr2h 000FDA                                       indf1 000FE7  
                                     indf2 000FDF                                       fsr1l 000FE1  
                                     pad@w 001A                                       fsr2l 000FD9  
                                     prodh 000FF4                                       prodl 000FF3  
                                     start 0000                           ??_DHT11_ReadData 0001  
                            _LCD_String_xy 1C02                       __size_of_DHT11_Start 0020  
                               PedirDato@i 0012                               ___param_bank 000000  
                    __end_of_DatosSensorTH 1C80                                      ??_abs 0015  
                             ?_initTeclado 0001                                      ??_pad 0017  
                         __end_of_LCD_Char 1AA2                           __end_of_LCD_Init 1D20  
                          __end_of___aodiv 12EA                                      ?_main 0001  
                                    ?_dtoa 001C                            __end_of___aomod 144E  
                                    STR_10 082D                  __size_of_ApagarAspersores 0006  
                                    _LATA0 007C48                                      _LATC0 007C58  
                                    _LATC1 007C59                                      _LATD0 007C60  
                                    _LATC2 007C5A                                      _LATD1 007C61  
                                    _LATE0 007C68                                      _LATE1 007C69  
                                    _LATC6 007C5E                                      _LATE2 007C6A  
                             vfpfcnvrt@fmt 0042                                      _PORTB 000F81  
                                    _TRISB 000F93                                      _TRISC 000F94  
                                    _TRISD 000F95                                      _TRISE 000F96  
                                    _Datos 00A0                                      _flags 0066  
                                    _fputc 154A                            __end_of_keyfind 0FAE  
                                    _fputs 1B7E                                      pad@fp 0011  
                    ??_PrenderVentiladores 0001                                      _width 0062  
                                    _putch 1E00                                      dtoa@d 001E  
                                    dtoa@i 003E                                      dtoa@n 0036  
                                    dtoa@p 0030                                      dtoa@s 0034  
                                    dtoa@w 0032                                      tablat 000FF5  
    Comparar_T_H_Adecuados@HumedadAdecuada 0015                                      status 000FD8  
                      __size_of_LCD_String 005E                            __end_of_sprintf 1A52  
            PedirTodosLosDatos@Temperatura 0015                             ?_LCD_String_xy 0005  
                        _PrenderAspersores 1DEA                            __initialization 1C80  
                             __end_of_main 0D7E                               __end_of_dtoa 0B32  
               __end_of_PedirTodosLosDatos 1794                         ?_PrenderAspersores 0001  
          Comparar_T_H_Adecuados@HumActual 0005                                     ??_main 005E  
                                   ??_dtoa 0026                          __end_of_LCD_Clear 1D76  
                      ??_PrenderAspersores 0001                              __activetblptr 000002  
                  __size_of_initActuadores 000A                    ?_ControlHumedadAspersor 0001  
                                   _ADCON1 000FC1                                     ?_fputc 0001  
                                   ?_fputs 000A                                     ?_putch 0001  
                      _DHT11_CheckResponse 1D20                           LCD_String_xy@msg 0006  
                         LCD_String_xy@pos 0005                           LCD_String_xy@row 0008  
                                   _OSCCON 000FD3                                ?_ApagarLeds 0001  
          __size_of_Comparar_T_H_Adecuados 00FC                                     _Cadena 0096  
              __end_of_DatoDigitadoAEntero 188E                         __size_of_PedirDato 0084  
                __end_of_PrenderAspersores 1DF0                               vfprintf@cfmt 0056  
                               _PrenderLed 19AA                                  ??___aodiv 0011  
                                ??___aomod 0011                                     ___wmul 1D76  
                     ?_DHT11_CheckResponse 0001                                     _indice 006C  
                                   _keypad 00A8                                     clear_0 1CA6  
 ControlTemperaturaVentilador@MargenErrorT 0005                                     isa$std 000001  
                                   pad@buf 0013                                     _rowloc 0073  
                     __size_of_LCD_Command 0050                                     dtoa@fp 001C  
                                   _strlen 1CB6                                     fputc@c 0001  
                                   fputs@c 000E                                     fputs@i 000F  
                                   fputs@s 000A                                  ??_keyfind 0001  
           __end_of_ControlHumedadAspersor 1B7E                               __mediumconst 0000  
                                   tblptrh 000FF7                                     tblptrl 000FF6  
                                   tblptru 000FF8                                     putch@c 0001  
                         __end_of_vfprintf 18F0                                  ??_sprintf 005E  
     __end_of_ControlTemperaturaVentilador 1B38      __size_of_ControlTemperaturaVentilador 0046  
             _ControlTemperaturaVentilador 1AF2                          PedirDato@Etiqueta 000A  
                                ?_LCD_Char 0001                                 __accesstop 0060  
                  __end_of__initialization 1CAC                                  ?_LCD_Init 0001  
                          ??_LCD_String_xy 0008               __end_of_ConfigurarPuertosLCD 1DFC  
                            ___rparam_used 000001                             __pcstackCOMRAM 0001  
                             __pidataBANK0 1DBC                      ??_DHT11_CheckResponse 0001  
                            __end_of_fputc 1614                              __end_of_fputs 1BC2  
                            __end_of_putch 1E02                               ??_LCD_String 0005  
                   _Comparar_T_H_Adecuados 144E                       __size_of_initTeclado 0004  
                         _ApagarAspersores 1DF0                        __size_of_ApagarLeds 0008  
                        __end_of_PedirDato 1818                         DatosSensorTH@Datos 0003  
                                  ??_fputc 0005                                    ??_fputs 000E  
                                  ??_putch 0001                                 __pbssBANK0 0060  
                               ??_LCD_Char 0001                                 ??_LCD_Init 0003  
            ?_ControlTemperaturaVentilador 0001                 __size_of_PrenderAspersores 0006  
                       __end_of_LCD_String 194E                                ?_PrenderLed 0001  
                                  ?___wmul 0001                 __end_of_ApagarVentiladores 1DEA  
         Comparar_T_H_Adecuados@TempActual 0003                                    ?_strlen 0001  
                           _initActuadores 1DCC               DatoDigitadoAEntero@Resultado 000C  
                       __size_of_vfpfcnvrt 01B4                              ??_DHT11_Start 0001  
                            LCD_String@msg 0003                                    _Humedad 00A2  
                                  __Hparam 0000                                    __Lparam 0000  
                                  ___aodiv 1162                                    ___aomod 12EA  
                          __size_of___wmul 0026                                  ?_vfprintf 0050  
                             __psmallconst 0800                                    _bandera 0075  
                              _Temperatura 00A4                                    __pcinit 1C80  
                                  __ramtop 0800              PrenderLed@TemperaturaAdecuada 0002  
                                  __ptext0 0B32                                    __ptext1 1A00  
                                  __ptext2 188E                                    __ptext3 0FAE  
                                  __ptext4 0850                                    __ptext5 1614  
                                  __ptext6 1CB6                                    __ptext7 1B7E  
                                  __ptext8 154A                                    __ptext9 1E00  
                   __end_of_initActuadores 1DD6                                    _col_loc 0074  
                          __size_of_strlen 0036                               __size_of_abs 0040  
                             __size_of_pad 00C6                                    _keyfind 0D7E  
              __end_of_PrenderVentiladores 1DE4                       _ConfigurarPuertosLCD 1DF6  
                       _PedirTodosLosDatos 16DA                                  _LCD_Clear 1D4C  
                                  _sprintf 1A00                        __size_of_PrenderLed 0056  
                       PedirDato@CantDatos 000E                     __size_of_DatosSensorTH 003E  
                     end_of_initialization 1CAC                        ?_PedirTodosLosDatos 0015  
                             ??_ApagarLeds 0001                                    fputc@fp 0003  
                           LCD_Command@cmd 0002                              __Lmediumconst 0000  
                                  fputs@fp 000C   ControlTemperaturaVentilador@TempDigitada 0003  
           ??_ControlTemperaturaVentilador 0007                          __end_of_vfpfcnvrt 1162  
                      __end_of_DHT11_Start 1DBC                                    postdec1 000FE5  
                                  postdec2 000FDD                                    postinc0 000FEE  
                                  postinc1 000FE6                                    postinc2 000FDE  
                               ??_vfprintf 0056                       ??_PedirTodosLosDatos 001D  
                                  strlen@a 0003                                    strlen@s 0001  
                                _PORTAbits 000F80                            ?_initActuadores 0001  
                  __size_of_DHT11_ReadData 005C                      ?_ConfigurarPuertosLCD 0001  
                       __end_of_ApagarLeds 1DDE                                  _TRISAbits 000F92  
                               ?_LCD_Clear 0001                               _MargenErrorH 00A6  
                             _MargenErrorT 00A7                   __end_of_ApagarAspersores 1DF6  
           PedirTodosLosDatos@MargenErrorH 001B             PedirTodosLosDatos@MargenErrorT 0019  
                        __size_of_LCD_Char 0050                          __size_of_LCD_Init 0034  
                       DHT11_ReadData@data 0002                    DatosSensorTH@T_Integral 0006  
                  ?_Comparar_T_H_Adecuados 0003               __size_of_DatoDigitadoAEntero 0076  
                            _DatosSensorTH 1C42                              ??_LCD_Command 0001  
                              vfpfcnvrt@ap 0044                                vfpfcnvrt@fp 0040  
                              vfpfcnvrt@ll 0048                             __end_of___wmul 1D9C  
                           __end_of_strlen 1CEC                        start_initialization 1C80  
                              __end_of_abs 1C02                                __end_of_pad 16DA  
                                _PedirDato 1794          Comparar_T_H_Adecuados@HumDigitada 0009  
                              _DHT11_Start 1D9C                __end_of_DHT11_CheckResponse 1D4C  
                    __end_of_LCD_String_xy 1C42          DatoDigitadoAEntero@prmTemperatura 0007  
           __end_of_Comparar_T_H_Adecuados 154A                                vfprintf@fmt 0052  
                             ??_PrenderLed 0002                             ?_DatosSensorTH 0003  
                                 ??___wmul 0005                              ??_initTeclado 0001  
                              __pdataBANK0 00A8                     ??_ConfigurarPuertosLCD 0001  
                                 ??_strlen 0003                        __end_of_LCD_Command 1AF2  
                            __pcstackBANK0 00B8                           ___aodiv@dividend 0001  
                       _ApagarVentiladores 1DE4                                ??_LCD_Clear 0003  
                               ?_PedirDato 000A                         PedirDato@vecLlenar 000C  
                       __end_of_PrenderLed 1A00                        ?_ApagarVentiladores 0001  
      ControlHumedadAspersor@HumedadActual 0001                                   ?___aodiv 0001  
                                 ?___aomod 0001                           ___aodiv@quotient 0013  
                 ??_ControlHumedadAspersor 0007                       ??_ApagarVentiladores 0001  
                           _DHT11_ReadData 194E                          __size_of_vfprintf 0062  
                              __smallconst 0800                        __end_of_initTeclado 1E00  
                                 ?_keyfind 0001                      LCD_String_xy@location 0009  
                                 ?_sprintf 0058                             __size_of_fputc 00CA  
                           __size_of_fputs 0044                             __size_of_putch 0002  
   ControlTemperaturaVentilador@TempActual 0001                                   _LCD_Char 1A52  
                                 _LCD_Init 1CEC                             ___wmul@product 0005  
                          ??_DatosSensorTH 0005                           ??_initActuadores 0001  
                   __end_of_DHT11_ReadData 19AA                                _LCD_Command 1AA2  
                                _vfpfcnvrt 0FAE                          ___wmul@multiplier 0001  
       Comparar_T_H_Adecuados@MargenErrorH 000D         Comparar_T_H_Adecuados@MargenErrorT 000B  
                              ??_PedirDato 0010                        _DatoDigitadoAEntero 1818  
                              _INTCON2bits 000FF1                                  copy_data0 1C94  
             __size_of_PrenderVentiladores 0006                                   _MargenEH 006E  
                                 _MargenET 0070                          ?_ApagarAspersores 0001  
                                 __Hrparam 0000      ControlHumedadAspersor@HumedadDigitada 0003  
                       ??_ApagarAspersores 0001                                 vfprintf@ap 0054  
                                 __Lrparam 0000                                 vfprintf@fp 0050  
                     ?_DatoDigitadoAEntero 0007                            ?_DHT11_ReadData 0001  
                              _initTeclado 1DFC                           __size_of___aodiv 0188  
                         __size_of___aomod 0164                                 ?_vfpfcnvrt 0040  
              __size_of_PedirTodosLosDatos 00BA            __size_of_ControlHumedadAspersor 0046  
                          DHT11_ReadData@i 0001                            ___aodiv@divisor 0009  
                          ___aodiv@counter 0011  Comparar_T_H_Adecuados@TemperaturaAdecuada 0014  
                               sprintf@fmt 005A                           __size_of_keyfind 0230  
                                 _dtoa$943 002E                                   __ptext10 1BC2  
                                 __ptext11 12EA                                   __ptext20 1A52  
                                 __ptext12 1162                                   __ptext21 1D4C  
                                 __ptext13 1DFC                                   __ptext30 1AF2  
                                 __ptext22 1CEC                                   __ptext14 1DCC  
                                 __ptext31 1DDE                                   __ptext23 1AA2  
                                 __ptext15 16DA                                   __ptext32 1DE4  
                                 __ptext24 1C42                                   __ptext16 1794  
                                 __ptext33 1B38                                   __ptext25 1D9C  
                                 __ptext17 0D7E                                   __ptext34 1DEA  
                                 __ptext26 194E                                   __ptext18 1C02  
                                 __ptext35 1DF0                                   __ptext27 1D20  
                                 __ptext19 18F0                                   __ptext36 1DF6  
                                 __ptext28 1818                                   __ptext37 144E  
                                 __ptext29 1D76                                   __ptext38 19AA  
                                 __ptext39 1DD6                           __size_of_sprintf 0052  
                 DatosSensorTH@RH_Integral 0005                              __size_of_main 024C  
                            __size_of_dtoa 02E2                               ?_DHT11_Start 0001  
                                 _temp_col 0072                                   isa$xinst 000000  
                    ??_DatoDigitadoAEntero 0009                                   _vfprintf 188E  
                               _LCD_String 18F0                  DatoDigitadoAEntero@Decena 000E  
                         ___aomod@dividend 0001                            _HumedadAdecuada 0068  
                DatoDigitadoAEntero@Unidad 000A                     _ControlHumedadAspersor 1B38  
                                sprintf@ap 00B8                  PrenderLed@HumedadAdecuada 0001  
       ControlHumedadAspersor@MargenErrorH 0005               __size_of_DHT11_CheckResponse 002C  
                          ___aomod@divisor 0009                                ??_vfpfcnvrt 0046  
                          ___aomod@counter 0011                                   sprintf@f 00BA  
                                 sprintf@s 0058                        _TemperaturaAdecuada 006A  
            __size_of_ConfigurarPuertosLCD 0006                     __size_of_LCD_String_xy 0040  
                             ___aodiv@sign 0012                               ___aomod@sign 0012  
