

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Sep 21 15:43:24 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    25  0000                     
    26                           ; Version 2.20
    27                           ; Generated 12/02/2020 GMT
    28                           ; 
    29                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F4550 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     
    61                           	psect	idataCOMRAM
    62  000CAA                     __pidataCOMRAM:
    63                           	callstack 0
    64                           
    65                           ;initializer for _keypad
    66  000CAA  31                 	db	49
    67  000CAB  32                 	db	50
    68  000CAC  33                 	db	51
    69  000CAD  2F                 	db	47
    70  000CAE  34                 	db	52
    71  000CAF  35                 	db	53
    72  000CB0  36                 	db	54
    73  000CB1  2A                 	db	42
    74  000CB2  37                 	db	55
    75  000CB3  38                 	db	56
    76  000CB4  39                 	db	57
    77  000CB5  2D                 	db	45
    78  000CB6  2A                 	db	42
    79  000CB7  30                 	db	48
    80  000CB8  23                 	db	35
    81  000CB9  2B                 	db	43
    82                           
    83                           ;initializer for keypad_getkey@F3168
    84  000CBA  31                 	db	49
    85  000CBB  32                 	db	50
    86  000CBC  33                 	db	51
    87  000CBD  41                 	db	65
    88  000CBE  34                 	db	52
    89  000CBF  35                 	db	53
    90  000CC0  36                 	db	54
    91  000CC1  42                 	db	66
    92  000CC2  37                 	db	55
    93  000CC3  38                 	db	56
    94  000CC4  39                 	db	57
    95  000CC5  43                 	db	67
    96  000CC6  2A                 	db	42
    97  000CC7  30                 	db	48
    98  000CC8  23                 	db	35
    99  000CC9  44                 	db	68
   100  0000                     _PORTB	set	3969
   101  0000                     _LATB	set	3978
   102  0000                     _TRISB	set	3987
   103  0000                     _PORTDbits	set	3971
   104  0000                     _LATDbits	set	3980
   105  0000                     _PORTD	set	3971
   106  0000                     _INTCON2bits	set	4081
   107  0000                     _LATD	set	3980
   108  0000                     _TRISD	set	3989
   109  0000                     _TRISE	set	3990
   110  0000                     _OSCCON	set	4051
   111  0000                     _LATD1	set	31841
   112  0000                     _LATD0	set	31840
   113  0000                     _LATE2	set	31850
   114  0000                     _LATE0	set	31848
   115  0000                     _LATE1	set	31849
   116  0000                     _RBPU	set	32655
   117                           
   118                           	psect	smallconst
   119  000800                     __psmallconst:
   120                           	callstack 0
   121  000800  00                 	db	0
   122  000801                     STR_2:
   123  000801  54                 	db	84	;'T'
   124  000802  65                 	db	101	;'e'
   125  000803  6D                 	db	109	;'m'
   126  000804  70                 	db	112	;'p'
   127  000805  2E                 	db	46
   128  000806  20                 	db	32
   129  000807  64                 	db	100	;'d'
   130  000808  69                 	db	105	;'i'
   131  000809  67                 	db	103	;'g'
   132  00080A  69                 	db	105	;'i'
   133  00080B  74                 	db	116	;'t'
   134  00080C  61                 	db	97	;'a'
   135  00080D  64                 	db	100	;'d'
   136  00080E  61                 	db	97	;'a'
   137  00080F  3A                 	db	58	;':'
   138  000810  00                 	db	0
   139  000811                     STR_1:
   140  000811  54                 	db	84	;'T'
   141  000812  65                 	db	101	;'e'
   142  000813  6D                 	db	109	;'m'
   143  000814  70                 	db	112	;'p'
   144  000815  2E                 	db	46
   145  000816  20                 	db	32
   146  000817  41                 	db	65	;'A'
   147  000818  64                 	db	100	;'d'
   148  000819  65                 	db	101	;'e'
   149  00081A  63                 	db	99	;'c'
   150  00081B  75                 	db	117	;'u'
   151  00081C  61                 	db	97	;'a'
   152  00081D  64                 	db	100	;'d'
   153  00081E  61                 	db	97	;'a'
   154  00081F  00                 	db	0
   155  000820  00                 	db	0	; dummy byte at the end
   156  0000                     
   157                           ; #config settings
   158                           
   159                           	psect	cinit
   160  000C7A                     __pcinit:
   161                           	callstack 0
   162  000C7A                     start_initialization:
   163                           	callstack 0
   164  000C7A                     __initialization:
   165                           	callstack 0
   166                           
   167                           ; Initialize objects allocated to COMRAM (32 bytes)
   168                           ; load TBLPTR registers with __pidataCOMRAM
   169  000C7A  0EAA               	movlw	low __pidataCOMRAM
   170  000C7C  6EF6               	movwf	tblptrl,c
   171  000C7E  0E0C               	movlw	high __pidataCOMRAM
   172  000C80  6EF7               	movwf	tblptrh,c
   173  000C82  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   174  000C84  6EF8               	movwf	tblptru,c
   175  000C86  EE00  F001         	lfsr	0,__pdataCOMRAM
   176  000C8A  EE10 F020          	lfsr	1,32
   177  000C8E                     copy_data0:
   178  000C8E  0009               	tblrd		*+
   179  000C90  CFF5 FFEE          	movff	tablat,postinc0
   180  000C94  50E5               	movf	postdec1,w,c
   181  000C96  50E1               	movf	fsr1l,w,c
   182  000C98  E1FA               	bnz	copy_data0
   183                           
   184                           ; Clear objects allocated to COMRAM (3 bytes)
   185  000C9A  6A32               	clrf	(__pbssCOMRAM+2)& (0+255),c
   186  000C9C  6A31               	clrf	(__pbssCOMRAM+1)& (0+255),c
   187  000C9E  6A30               	clrf	__pbssCOMRAM& (0+255),c
   188  000CA0                     end_of_initialization:
   189                           	callstack 0
   190  000CA0                     __end_of__initialization:
   191                           	callstack 0
   192  000CA0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   193  000CA2  6EF8               	movwf	tblptru,c
   194  000CA4  0100               	movlb	0
   195  000CA6  EF26  F005         	goto	_main	;jump to C main() function
   196                           
   197                           	psect	bssCOMRAM
   198  000030                     __pbssCOMRAM:
   199                           	callstack 0
   200  000030                     _temp_col:
   201                           	callstack 0
   202  000030                     	ds	1
   203  000031                     _rowloc:
   204                           	callstack 0
   205  000031                     	ds	1
   206  000032                     _col_loc:
   207                           	callstack 0
   208  000032                     	ds	1
   209                           
   210                           	psect	dataCOMRAM
   211  000001                     __pdataCOMRAM:
   212                           	callstack 0
   213  000001                     _keypad:
   214                           	callstack 0
   215  000001                     	ds	16
   216  000011                     keypad_getkey@F3168:
   217                           	callstack 0
   218  000011                     	ds	16
   219                           
   220                           	psect	cstackCOMRAM
   221  000021                     __pcstackCOMRAM:
   222                           	callstack 0
   223  000021                     ??_LCD_Command:
   224  000021                     ??_keyfind:
   225  000021                     ??_LCD_Char:
   226  000021                     
   227                           ; 1 bytes @ 0x0
   228  000021                     	ds	1
   229  000022                     LCD_Command@cmd:
   230                           	callstack 0
   231  000022                     LCD_Char@dat:
   232                           	callstack 0
   233                           
   234                           ; 1 bytes @ 0x1
   235  000022                     	ds	1
   236  000023                     ??_LCD_Init:
   237  000023                     ImprimirTemperaturaAdecuada@prmTemperatura:
   238                           	callstack 0
   239  000023                     LCD_String@msg:
   240                           	callstack 0
   241                           
   242                           ; 2 bytes @ 0x2
   243  000023                     	ds	2
   244  000025                     LCD_String_xy@pos:
   245                           	callstack 0
   246  000025                     ImprimirTemperaturaAdecuada@i:
   247                           	callstack 0
   248                           
   249                           ; 2 bytes @ 0x4
   250  000025                     	ds	1
   251  000026                     LCD_String_xy@msg:
   252                           	callstack 0
   253                           
   254                           ; 2 bytes @ 0x5
   255  000026                     	ds	2
   256  000028                     LCD_String_xy@row:
   257                           	callstack 0
   258                           
   259                           ; 1 bytes @ 0x7
   260  000028                     	ds	1
   261  000029                     LCD_String_xy@location:
   262                           	callstack 0
   263                           
   264                           ; 1 bytes @ 0x8
   265  000029                     	ds	1
   266  00002A                     main@Temperatura:
   267                           	callstack 0
   268                           
   269                           ; 3 bytes @ 0x9
   270  00002A                     	ds	3
   271  00002D                     main@bandera:
   272                           	callstack 0
   273                           
   274                           ; 1 bytes @ 0xC
   275  00002D                     	ds	1
   276  00002E                     main@tecla:
   277                           	callstack 0
   278                           
   279                           ; 1 bytes @ 0xD
   280  00002E                     	ds	1
   281  00002F                     main@indice:
   282                           	callstack 0
   283                           
   284                           ; 1 bytes @ 0xE
   285  00002F                     	ds	1
   286                           
   287 ;;
   288 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   289 ;;
   290 ;; *************** function _main *****************
   291 ;; Defined at:
   292 ;;		line 18 in file "Main_Invernadero.c"
   293 ;; Parameters:    Size  Location     Type
   294 ;;		None
   295 ;; Auto vars:     Size  Location     Type
   296 ;;  Temperatura     3    9[COMRAM] unsigned char [3]
   297 ;;  indice          1   14[COMRAM] unsigned char 
   298 ;;  tecla           1   13[COMRAM] unsigned char 
   299 ;;  bandera         1   12[COMRAM] _Bool 
   300 ;; Return value:  Size  Location     Type
   301 ;;                  1    wreg      void 
   302 ;; Registers used:
   303 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   304 ;; Tracked objects:
   305 ;;		On entry : 0/0
   306 ;;		On exit  : 0/0
   307 ;;		Unchanged: 0/0
   308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   309 ;;      Params:         0       0       0       0       0       0       0       0       0
   310 ;;      Locals:         6       0       0       0       0       0       0       0       0
   311 ;;      Temps:          0       0       0       0       0       0       0       0       0
   312 ;;      Totals:         6       0       0       0       0       0       0       0       0
   313 ;;Total ram usage:        6 bytes
   314 ;; Hardware stack levels required when called: 3
   315 ;; This function calls:
   316 ;;		_ImprimirTemperaturaAdecuada
   317 ;;		_LCD_Char
   318 ;;		_LCD_Clear
   319 ;;		_LCD_Command
   320 ;;		_LCD_Init
   321 ;;		_LCD_String_xy
   322 ;;		_PrenderLed
   323 ;;		_keyfind
   324 ;; This function is called by:
   325 ;;		Startup code after reset
   326 ;; This function uses a non-reentrant model
   327 ;;
   328                           
   329                           	psect	text0
   330  000A4C                     __ptext0:
   331                           	callstack 0
   332  000A4C                     _main:
   333                           	callstack 28
   334  000A4C                     
   335                           ;Main_Invernadero.c: 19:     _Bool bandera = 0;
   336  000A4C  0E00               	movlw	0
   337  000A4E  6E2D               	movwf	main@bandera^0,c
   338                           
   339                           ;Main_Invernadero.c: 21:     unsigned char tecla;;Main_Invernadero.c: 22:     OSCCON = 0
      +                          x70;
   340  000A50  0E70               	movlw	112
   341  000A52  6ED3               	movwf	211,c	;volatile
   342                           
   343                           ;Main_Invernadero.c: 23:     TRISE = 0;
   344  000A54  0E00               	movlw	0
   345  000A56  6E96               	movwf	150,c	;volatile
   346                           
   347                           ;Main_Invernadero.c: 25:     unsigned char Temperatura[3];;Main_Invernadero.c: 26:     u
      +                          nsigned char indice = 0;
   348  000A58  0E00               	movlw	0
   349  000A5A  6E2F               	movwf	main@indice^0,c
   350  000A5C                     
   351                           ;Main_Invernadero.c: 28:     RBPU=0;
   352  000A5C  9EF1               	bcf	4081,7,c	;volatile
   353  000A5E                     
   354                           ;Main_Invernadero.c: 29:     LCD_Init();
   355  000A5E  EC23  F006         	call	_LCD_Init	;wreg free
   356  000A62                     
   357                           ;Main_Invernadero.c: 30:     LCD_String_xy(0,0,"Temp. Adecuada");
   358  000A62  0E00               	movlw	0
   359  000A64  6E25               	movwf	LCD_String_xy@pos^0,c
   360  000A66  0E11               	movlw	low STR_1
   361  000A68  6E26               	movwf	LCD_String_xy@msg^0,c
   362  000A6A  0E08               	movlw	high STR_1
   363  000A6C  6E27               	movwf	(LCD_String_xy@msg+1)^0,c
   364  000A6E  0E00               	movlw	0
   365  000A70  ECCA  F005         	call	_LCD_String_xy
   366  000A74                     
   367                           ;Main_Invernadero.c: 31:     LCD_Command(0xC0);
   368  000A74  0EC0               	movlw	192
   369  000A76  EC7A  F005         	call	_LCD_Command
   370  000A7A                     l1355:
   371                           
   372                           ;Main_Invernadero.c: 33:      if(indice<3){
   373  000A7A  0E03               	movlw	3
   374  000A7C  602F               	cpfslt	main@indice^0,c
   375  000A7E  EF43  F005         	goto	u701
   376  000A82  EF45  F005         	goto	u700
   377  000A86                     u701:
   378  000A86  EF58  F005         	goto	l1367
   379  000A8A                     u700:
   380  000A8A                     
   381                           ;Main_Invernadero.c: 34:      PrenderLed();
   382  000A8A  EC69  F006         	call	_PrenderLed	;wreg free
   383  000A8E                     
   384                           ;Main_Invernadero.c: 35:      tecla=keyfind();
   385  000A8E  EC11  F004         	call	_keyfind	;wreg free
   386  000A92  6E2E               	movwf	main@tecla^0,c
   387  000A94                     
   388                           ;Main_Invernadero.c: 36:      LCD_Char(tecla);
   389  000A94  502E               	movf	main@tecla^0,w,c
   390  000A96  ECA2  F005         	call	_LCD_Char
   391  000A9A                     
   392                           ;Main_Invernadero.c: 37:      Temperatura[indice] = tecla;
   393  000A9A  0E2A               	movlw	low main@Temperatura
   394  000A9C  242F               	addwf	main@indice^0,w,c
   395  000A9E  6ED9               	movwf	fsr2l,c
   396  000AA0  6ADA               	clrf	fsr2h,c
   397  000AA2  0E00               	movlw	high main@Temperatura
   398  000AA4  22DA               	addwfc	fsr2h,f,c
   399  000AA6  C02E  FFDF         	movff	main@tecla,indf2
   400  000AAA                     
   401                           ;Main_Invernadero.c: 38:      indice++;
   402  000AAA  2A2F               	incf	main@indice^0,f,c
   403                           
   404                           ;Main_Invernadero.c: 39:     }else{
   405  000AAC  EF3D  F005         	goto	l1355
   406  000AB0                     l1367:
   407                           
   408                           ;Main_Invernadero.c: 40:        if(bandera==0){
   409  000AB0  502D               	movf	main@bandera^0,w,c
   410  000AB2  A4D8               	btfss	status,2,c
   411  000AB4  EF5E  F005         	goto	u711
   412  000AB8  EF60  F005         	goto	u710
   413  000ABC                     u711:
   414  000ABC  EF3D  F005         	goto	l1355
   415  000AC0                     u710:
   416  000AC0                     
   417                           ;Main_Invernadero.c: 41:        LCD_Clear();
   418  000AC0  EC65  F006         	call	_LCD_Clear	;wreg free
   419  000AC4                     
   420                           ;Main_Invernadero.c: 42:        LCD_String_xy(0,0,"Temp. digitada:");
   421  000AC4  0E00               	movlw	0
   422  000AC6  6E25               	movwf	LCD_String_xy@pos^0,c
   423  000AC8  0E01               	movlw	low STR_2
   424  000ACA  6E26               	movwf	LCD_String_xy@msg^0,c
   425  000ACC  0E08               	movlw	high STR_2
   426  000ACE  6E27               	movwf	(LCD_String_xy@msg+1)^0,c
   427  000AD0  0E00               	movlw	0
   428  000AD2  ECCA  F005         	call	_LCD_String_xy
   429  000AD6                     
   430                           ;Main_Invernadero.c: 43:        LCD_Command(0xC0);
   431  000AD6  0EC0               	movlw	192
   432  000AD8  EC7A  F005         	call	_LCD_Command
   433  000ADC                     
   434                           ;Main_Invernadero.c: 44:        ImprimirTemperaturaAdecuada(Temperatura);
   435  000ADC  0E2A               	movlw	low main@Temperatura
   436  000ADE  6E23               	movwf	ImprimirTemperaturaAdecuada@prmTemperatura^0,c
   437  000AE0  0E00               	movlw	high main@Temperatura
   438  000AE2  6E24               	movwf	(ImprimirTemperaturaAdecuada@prmTemperatura+1)^0,c
   439  000AE4  ECEA  F005         	call	_ImprimirTemperaturaAdecuada	;wreg free
   440  000AE8                     
   441                           ;Main_Invernadero.c: 45:        bandera=1;
   442  000AE8  0E01               	movlw	1
   443  000AEA  6E2D               	movwf	main@bandera^0,c
   444  000AEC  EF3D  F005         	goto	l1355
   445  000AF0  EF00  F000         	goto	start
   446  000AF4                     __end_of_main:
   447                           	callstack 0
   448                           
   449 ;; *************** function _keyfind *****************
   450 ;; Defined at:
   451 ;;		line 174 in file "keypad.c"
   452 ;; Parameters:    Size  Location     Type
   453 ;;		None
   454 ;; Auto vars:     Size  Location     Type
   455 ;;  temp1           1    0        unsigned char 
   456 ;; Return value:  Size  Location     Type
   457 ;;                  1    wreg      unsigned char 
   458 ;; Registers used:
   459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   460 ;; Tracked objects:
   461 ;;		On entry : 0/0
   462 ;;		On exit  : 0/0
   463 ;;		Unchanged: 0/0
   464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   465 ;;      Params:         0       0       0       0       0       0       0       0       0
   466 ;;      Locals:         0       0       0       0       0       0       0       0       0
   467 ;;      Temps:          1       0       0       0       0       0       0       0       0
   468 ;;      Totals:         1       0       0       0       0       0       0       0       0
   469 ;;Total ram usage:        1 bytes
   470 ;; Hardware stack levels used: 1
   471 ;; This function calls:
   472 ;;		Nothing
   473 ;; This function is called by:
   474 ;;		_main
   475 ;; This function uses a non-reentrant model
   476 ;;
   477                           
   478                           	psect	text1
   479  000822                     __ptext1:
   480                           	callstack 0
   481  000822                     _keyfind:
   482                           	callstack 30
   483  000822                     
   484                           ;keypad.c: 177:     TRISB = 0xf0;
   485  000822  0EF0               	movlw	240
   486  000824  6E93               	movwf	147,c	;volatile
   487                           
   488                           ;keypad.c: 178:     unsigned char temp1;;keypad.c: 180:         LATB = 0xf0;
   489  000826  0EF0               	movlw	240
   490  000828  6E8A               	movwf	138,c	;volatile
   491  00082A                     l1053:
   492                           
   493                           ;keypad.c: 184:         {;keypad.c: 186:             col_loc = PORTB & 0xf0;
   494  00082A  5081               	movf	129,w,c	;volatile
   495  00082C  0BF0               	andlw	240
   496  00082E  6E32               	movwf	_col_loc^0,c
   497  000830                     
   498                           ;keypad.c: 188:         }while(col_loc!=0xf0);
   499  000830  0EF0               	movlw	240
   500  000832  1832               	xorwf	_col_loc^0,w,c
   501  000834  A4D8               	btfss	status,2,c
   502  000836  EF1F  F004         	goto	u31
   503  00083A  EF21  F004         	goto	u30
   504  00083E                     u31:
   505  00083E  EF15  F004         	goto	l1053
   506  000842                     u30:
   507  000842                     
   508                           ;keypad.c: 189:          col_loc = PORTB & 0xf0;
   509  000842  5081               	movf	129,w,c	;volatile
   510  000844  0BF0               	andlw	240
   511  000846  6E32               	movwf	_col_loc^0,c
   512                           
   513                           ;keypad.c: 190:       }while(col_loc!=0xf0);
   514  000848  0EF0               	movlw	240
   515  00084A  1832               	xorwf	_col_loc^0,w,c
   516  00084C  A4D8               	btfss	status,2,c
   517  00084E  EF2B  F004         	goto	u41
   518  000852  EF2D  F004         	goto	u40
   519  000856                     u41:
   520  000856  EF15  F004         	goto	l1053
   521  00085A                     u40:
   522  00085A                     
   523                           ;keypad.c: 192:       _delay((unsigned long)((30)*(8000000L/4000.0)));
   524  00085A  0E4E               	movlw	78
   525  00085C  6E21               	movwf	??_keyfind^0,c
   526  00085E  0EEB               	movlw	235
   527  000860                     u727:
   528  000860  2EE8               	decfsz	wreg,f,c
   529  000862  D7FE               	bra	u727
   530  000864  2E21               	decfsz	??_keyfind^0,f,c
   531  000866  D7FC               	bra	u727
   532  000868  F000               	nop	
   533  00086A                     
   534                           ;keypad.c: 193:         LATB = 0xf0;
   535  00086A  0EF0               	movlw	240
   536  00086C  6E8A               	movwf	138,c	;volatile
   537  00086E                     l1063:
   538                           
   539                           ;keypad.c: 197:             {;keypad.c: 199:                 col_loc = PORTB & 0xf0;
   540  00086E  5081               	movf	129,w,c	;volatile
   541  000870  0BF0               	andlw	240
   542  000872  6E32               	movwf	_col_loc^0,c
   543  000874                     
   544                           ;keypad.c: 200:             }while(col_loc==0xf0);
   545  000874  0EF0               	movlw	240
   546  000876  1832               	xorwf	_col_loc^0,w,c
   547  000878  B4D8               	btfsc	status,2,c
   548  00087A  EF41  F004         	goto	u51
   549  00087E  EF43  F004         	goto	u50
   550  000882                     u51:
   551  000882  EF37  F004         	goto	l1063
   552  000886                     u50:
   553  000886                     
   554                           ;keypad.c: 201:          col_loc = PORTB & 0xf0;
   555  000886  5081               	movf	129,w,c	;volatile
   556  000888  0BF0               	andlw	240
   557  00088A  6E32               	movwf	_col_loc^0,c
   558                           
   559                           ;keypad.c: 202:         }while(col_loc==0xf0);
   560  00088C  0EF0               	movlw	240
   561  00088E  1832               	xorwf	_col_loc^0,w,c
   562  000890  B4D8               	btfsc	status,2,c
   563  000892  EF4D  F004         	goto	u61
   564  000896  EF4F  F004         	goto	u60
   565  00089A                     u61:
   566  00089A  EF37  F004         	goto	l1063
   567  00089E                     u60:
   568  00089E                     
   569                           ;keypad.c: 204:         _delay((unsigned long)((30)*(8000000L/4000.0)));
   570  00089E  0E4E               	movlw	78
   571  0008A0  6E21               	movwf	??_keyfind^0,c
   572  0008A2  0EEB               	movlw	235
   573  0008A4                     u737:
   574  0008A4  2EE8               	decfsz	wreg,f,c
   575  0008A6  D7FE               	bra	u737
   576  0008A8  2E21               	decfsz	??_keyfind^0,f,c
   577  0008AA  D7FC               	bra	u737
   578  0008AC  F000               	nop	
   579  0008AE                     
   580                           ;keypad.c: 206:         col_loc = PORTB & 0xf0;
   581  0008AE  5081               	movf	129,w,c	;volatile
   582  0008B0  0BF0               	andlw	240
   583  0008B2  6E32               	movwf	_col_loc^0,c
   584  0008B4                     l1073:
   585                           
   586                           ;keypad.c: 211:     {;keypad.c: 212:         LATB = 0xfe;
   587  0008B4  0EFE               	movlw	254
   588  0008B6  6E8A               	movwf	138,c	;volatile
   589  0008B8                     
   590                           ;keypad.c: 213:         col_loc = PORTB & 0xf0;
   591  0008B8  5081               	movf	129,w,c	;volatile
   592  0008BA  0BF0               	andlw	240
   593  0008BC  6E32               	movwf	_col_loc^0,c
   594  0008BE                     
   595                           ;keypad.c: 214:         temp_col=col_loc;
   596  0008BE  C032  F030         	movff	_col_loc,_temp_col
   597  0008C2                     
   598                           ;keypad.c: 215:         if(col_loc!=0xf0)
   599  0008C2  0EF0               	movlw	240
   600  0008C4  1832               	xorwf	_col_loc^0,w,c
   601  0008C6  B4D8               	btfsc	status,2,c
   602  0008C8  EF68  F004         	goto	u71
   603  0008CC  EF6A  F004         	goto	u70
   604  0008D0                     u71:
   605  0008D0  EF7C  F004         	goto	l1085
   606  0008D4                     u70:
   607  0008D4                     
   608                           ;keypad.c: 216:         {;keypad.c: 217:             rowloc=0;
   609  0008D4  0E00               	movlw	0
   610  0008D6  6E31               	movwf	_rowloc^0,c
   611                           
   612                           ;keypad.c: 218:             while(temp_col!=0xf0)
   613  0008D8  EF71  F004         	goto	l267
   614  0008DC                     l1083:
   615                           
   616                           ;keypad.c: 219:             {;keypad.c: 220:                 temp_col = PORTB & 0xf0;
   617  0008DC  5081               	movf	129,w,c	;volatile
   618  0008DE  0BF0               	andlw	240
   619  0008E0  6E30               	movwf	_temp_col^0,c
   620  0008E2                     l267:
   621                           
   622                           ;keypad.c: 218:             while(temp_col!=0xf0)
   623  0008E2  0EF0               	movlw	240
   624  0008E4  1830               	xorwf	_temp_col^0,w,c
   625  0008E6  A4D8               	btfss	status,2,c
   626  0008E8  EF78  F004         	goto	u81
   627  0008EC  EF7A  F004         	goto	u80
   628  0008F0                     u81:
   629  0008F0  EF6E  F004         	goto	l1083
   630  0008F4                     u80:
   631  0008F4  EFE0  F004         	goto	l1121
   632  0008F8                     l1085:
   633                           
   634                           ;keypad.c: 225:         LATB = 0xfd;
   635  0008F8  0EFD               	movlw	253
   636  0008FA  6E8A               	movwf	138,c	;volatile
   637  0008FC                     
   638                           ;keypad.c: 226:         col_loc = PORTB & 0xf0;
   639  0008FC  5081               	movf	129,w,c	;volatile
   640  0008FE  0BF0               	andlw	240
   641  000900  6E32               	movwf	_col_loc^0,c
   642  000902                     
   643                           ;keypad.c: 227:         temp_col=col_loc;
   644  000902  C032  F030         	movff	_col_loc,_temp_col
   645  000906                     
   646                           ;keypad.c: 228:         if(col_loc!=0xf0)
   647  000906  0EF0               	movlw	240
   648  000908  1832               	xorwf	_col_loc^0,w,c
   649  00090A  B4D8               	btfsc	status,2,c
   650  00090C  EF8A  F004         	goto	u91
   651  000910  EF8C  F004         	goto	u90
   652  000914                     u91:
   653  000914  EF9E  F004         	goto	l1097
   654  000918                     u90:
   655  000918                     
   656                           ;keypad.c: 229:         {;keypad.c: 230:             rowloc=1;
   657  000918  0E01               	movlw	1
   658  00091A  6E31               	movwf	_rowloc^0,c
   659                           
   660                           ;keypad.c: 231:             while(temp_col!=0xf0)
   661  00091C  EF93  F004         	goto	l272
   662  000920                     l1095:
   663                           
   664                           ;keypad.c: 232:             {;keypad.c: 233:                 temp_col = PORTB & 0xf0;
   665  000920  5081               	movf	129,w,c	;volatile
   666  000922  0BF0               	andlw	240
   667  000924  6E30               	movwf	_temp_col^0,c
   668  000926                     l272:
   669                           
   670                           ;keypad.c: 231:             while(temp_col!=0xf0)
   671  000926  0EF0               	movlw	240
   672  000928  1830               	xorwf	_temp_col^0,w,c
   673  00092A  A4D8               	btfss	status,2,c
   674  00092C  EF9A  F004         	goto	u101
   675  000930  EF9C  F004         	goto	u100
   676  000934                     u101:
   677  000934  EF90  F004         	goto	l1095
   678  000938                     u100:
   679  000938  EFE0  F004         	goto	l1121
   680  00093C                     l1097:
   681                           
   682                           ;keypad.c: 238:         LATB = 0xfb;
   683  00093C  0EFB               	movlw	251
   684  00093E  6E8A               	movwf	138,c	;volatile
   685  000940                     
   686                           ;keypad.c: 239:         col_loc = PORTB & 0xf0;
   687  000940  5081               	movf	129,w,c	;volatile
   688  000942  0BF0               	andlw	240
   689  000944  6E32               	movwf	_col_loc^0,c
   690  000946                     
   691                           ;keypad.c: 240:         temp_col=col_loc;
   692  000946  C032  F030         	movff	_col_loc,_temp_col
   693  00094A                     
   694                           ;keypad.c: 241:         if(col_loc!=0xf0)
   695  00094A  0EF0               	movlw	240
   696  00094C  1832               	xorwf	_col_loc^0,w,c
   697  00094E  B4D8               	btfsc	status,2,c
   698  000950  EFAC  F004         	goto	u111
   699  000954  EFAE  F004         	goto	u110
   700  000958                     u111:
   701  000958  EFC0  F004         	goto	l1109
   702  00095C                     u110:
   703  00095C                     
   704                           ;keypad.c: 242:         {;keypad.c: 243:             rowloc=2;
   705  00095C  0E02               	movlw	2
   706  00095E  6E31               	movwf	_rowloc^0,c
   707                           
   708                           ;keypad.c: 244:             while(temp_col!=0xf0)
   709  000960  EFB5  F004         	goto	l276
   710  000964                     l1107:
   711                           
   712                           ;keypad.c: 245:             {;keypad.c: 246:                 temp_col = PORTB & 0xf0;
   713  000964  5081               	movf	129,w,c	;volatile
   714  000966  0BF0               	andlw	240
   715  000968  6E30               	movwf	_temp_col^0,c
   716  00096A                     l276:
   717                           
   718                           ;keypad.c: 244:             while(temp_col!=0xf0)
   719  00096A  0EF0               	movlw	240
   720  00096C  1830               	xorwf	_temp_col^0,w,c
   721  00096E  A4D8               	btfss	status,2,c
   722  000970  EFBC  F004         	goto	u121
   723  000974  EFBE  F004         	goto	u120
   724  000978                     u121:
   725  000978  EFB2  F004         	goto	l1107
   726  00097C                     u120:
   727  00097C  EFE0  F004         	goto	l1121
   728  000980                     l1109:
   729                           
   730                           ;keypad.c: 251:         LATB = 0xf7;
   731  000980  0EF7               	movlw	247
   732  000982  6E8A               	movwf	138,c	;volatile
   733  000984                     
   734                           ;keypad.c: 252:         col_loc = PORTB & 0xf0;
   735  000984  5081               	movf	129,w,c	;volatile
   736  000986  0BF0               	andlw	240
   737  000988  6E32               	movwf	_col_loc^0,c
   738  00098A                     
   739                           ;keypad.c: 253:         temp_col=col_loc;
   740  00098A  C032  F030         	movff	_col_loc,_temp_col
   741  00098E                     
   742                           ;keypad.c: 254:         if(col_loc!=0xf0)
   743  00098E  0EF0               	movlw	240
   744  000990  1832               	xorwf	_col_loc^0,w,c
   745  000992  B4D8               	btfsc	status,2,c
   746  000994  EFCE  F004         	goto	u131
   747  000998  EFD0  F004         	goto	u130
   748  00099C                     u131:
   749  00099C  EF5A  F004         	goto	l1073
   750  0009A0                     u130:
   751  0009A0                     
   752                           ;keypad.c: 255:         {;keypad.c: 256:             rowloc=3;
   753  0009A0  0E03               	movlw	3
   754  0009A2  6E31               	movwf	_rowloc^0,c
   755                           
   756                           ;keypad.c: 257:             while(temp_col!=0xf0)
   757  0009A4  EFD7  F004         	goto	l280
   758  0009A8                     l1119:
   759                           
   760                           ;keypad.c: 258:             {;keypad.c: 259:                 temp_col = PORTB & 0xf0;
   761  0009A8  5081               	movf	129,w,c	;volatile
   762  0009AA  0BF0               	andlw	240
   763  0009AC  6E30               	movwf	_temp_col^0,c
   764  0009AE                     l280:
   765                           
   766                           ;keypad.c: 257:             while(temp_col!=0xf0)
   767  0009AE  0EF0               	movlw	240
   768  0009B0  1830               	xorwf	_temp_col^0,w,c
   769  0009B2  A4D8               	btfss	status,2,c
   770  0009B4  EFDE  F004         	goto	u141
   771  0009B8  EFE0  F004         	goto	u140
   772  0009BC                     u141:
   773  0009BC  EFD4  F004         	goto	l1119
   774  0009C0                     u140:
   775  0009C0                     l1121:
   776                           
   777                           ;keypad.c: 268:     {;keypad.c: 270:         if(col_loc==0xe0)
   778  0009C0  0EE0               	movlw	224
   779  0009C2  1832               	xorwf	_col_loc^0,w,c
   780  0009C4  A4D8               	btfss	status,2,c
   781  0009C6  EFE7  F004         	goto	u151
   782  0009CA  EFE9  F004         	goto	u150
   783  0009CE                     u151:
   784  0009CE  EFF4  F004         	goto	l1129
   785  0009D2                     u150:
   786  0009D2                     
   787                           ;keypad.c: 271:         {;keypad.c: 272:              return keypad[rowloc][0];
   788  0009D2  5031               	movf	_rowloc^0,w,c
   789  0009D4  0D04               	mullw	4
   790  0009D6  0E01               	movlw	low _keypad
   791  0009D8  24F3               	addwf	243,w,c
   792  0009DA  6ED9               	movwf	fsr2l,c
   793  0009DC  0E00               	movlw	high _keypad
   794  0009DE  20F4               	addwfc	prodh,w,c
   795  0009E0  6EDA               	movwf	fsr2h,c
   796  0009E2  50DF               	movf	indf2,w,c
   797  0009E4  EF25  F005         	goto	l286
   798  0009E8                     l1129:
   799                           
   800                           ;keypad.c: 275:             if(col_loc==0xd0)
   801  0009E8  0ED0               	movlw	208
   802  0009EA  1832               	xorwf	_col_loc^0,w,c
   803  0009EC  A4D8               	btfss	status,2,c
   804  0009EE  EFFB  F004         	goto	u161
   805  0009F2  EFFD  F004         	goto	u160
   806  0009F6                     u161:
   807  0009F6  EF08  F005         	goto	l1137
   808  0009FA                     u160:
   809  0009FA                     
   810                           ;keypad.c: 276:         {;keypad.c: 277:             return keypad[rowloc][1];
   811  0009FA  5031               	movf	_rowloc^0,w,c
   812  0009FC  0D04               	mullw	4
   813  0009FE  0E02               	movlw	low (_keypad+1)
   814  000A00  24F3               	addwf	243,w,c
   815  000A02  6ED9               	movwf	fsr2l,c
   816  000A04  0E00               	movlw	high (_keypad+1)
   817  000A06  20F4               	addwfc	prodh,w,c
   818  000A08  6EDA               	movwf	fsr2h,c
   819  000A0A  50DF               	movf	indf2,w,c
   820  000A0C  EF25  F005         	goto	l286
   821  000A10                     l1137:
   822                           
   823                           ;keypad.c: 280:             if(col_loc==0xb0)
   824  000A10  0EB0               	movlw	176
   825  000A12  1832               	xorwf	_col_loc^0,w,c
   826  000A14  A4D8               	btfss	status,2,c
   827  000A16  EF0F  F005         	goto	u171
   828  000A1A  EF11  F005         	goto	u170
   829  000A1E                     u171:
   830  000A1E  EF1C  F005         	goto	l1145
   831  000A22                     u170:
   832  000A22                     
   833                           ;keypad.c: 281:         {;keypad.c: 282:             return keypad[rowloc][2];
   834  000A22  5031               	movf	_rowloc^0,w,c
   835  000A24  0D04               	mullw	4
   836  000A26  0E03               	movlw	low (_keypad+2)
   837  000A28  24F3               	addwf	243,w,c
   838  000A2A  6ED9               	movwf	fsr2l,c
   839  000A2C  0E00               	movlw	high (_keypad+2)
   840  000A2E  20F4               	addwfc	prodh,w,c
   841  000A30  6EDA               	movwf	fsr2h,c
   842  000A32  50DF               	movf	indf2,w,c
   843  000A34  EF25  F005         	goto	l286
   844  000A38                     l1145:
   845                           
   846                           ;keypad.c: 286:         {;keypad.c: 287:             return keypad[rowloc][3];
   847  000A38  5031               	movf	_rowloc^0,w,c
   848  000A3A  0D04               	mullw	4
   849  000A3C  0E04               	movlw	low (_keypad+3)
   850  000A3E  24F3               	addwf	243,w,c
   851  000A40  6ED9               	movwf	fsr2l,c
   852  000A42  0E00               	movlw	high (_keypad+3)
   853  000A44  20F4               	addwfc	prodh,w,c
   854  000A46  6EDA               	movwf	fsr2h,c
   855  000A48  50DF               	movf	indf2,w,c
   856  000A4A                     l286:
   857  000A4A  0012               	return		;funcret
   858  000A4C                     __end_of_keyfind:
   859                           	callstack 0
   860                           
   861 ;; *************** function _PrenderLed *****************
   862 ;; Defined at:
   863 ;;		line 52 in file "Main_Invernadero.c"
   864 ;; Parameters:    Size  Location     Type
   865 ;;		None
   866 ;; Auto vars:     Size  Location     Type
   867 ;;		None
   868 ;; Return value:  Size  Location     Type
   869 ;;                  1    wreg      void 
   870 ;; Registers used:
   871 ;;		None
   872 ;; Tracked objects:
   873 ;;		On entry : 0/0
   874 ;;		On exit  : 0/0
   875 ;;		Unchanged: 0/0
   876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   877 ;;      Params:         0       0       0       0       0       0       0       0       0
   878 ;;      Locals:         0       0       0       0       0       0       0       0       0
   879 ;;      Temps:          0       0       0       0       0       0       0       0       0
   880 ;;      Totals:         0       0       0       0       0       0       0       0       0
   881 ;;Total ram usage:        0 bytes
   882 ;; Hardware stack levels used: 1
   883 ;; This function calls:
   884 ;;		Nothing
   885 ;; This function is called by:
   886 ;;		_main
   887 ;; This function uses a non-reentrant model
   888 ;;
   889                           
   890                           	psect	text2
   891  000CD2                     __ptext2:
   892                           	callstack 0
   893  000CD2                     _PrenderLed:
   894                           	callstack 30
   895  000CD2                     
   896                           ;Main_Invernadero.c: 58:         LATE2=1;
   897  000CD2  848D               	bsf	3981,2,c	;volatile
   898  000CD4  0012               	return		;funcret
   899  000CD6                     __end_of_PrenderLed:
   900                           	callstack 0
   901                           
   902 ;; *************** function _LCD_String_xy *****************
   903 ;; Defined at:
   904 ;;		line 81 in file "LCD.c"
   905 ;; Parameters:    Size  Location     Type
   906 ;;  row             1    wreg     unsigned char 
   907 ;;  pos             1    4[COMRAM] unsigned char 
   908 ;;  msg             2    5[COMRAM] PTR const unsigned char 
   909 ;;		 -> STR_2(16), STR_1(15), 
   910 ;; Auto vars:     Size  Location     Type
   911 ;;  row             1    7[COMRAM] unsigned char 
   912 ;;  location        1    8[COMRAM] unsigned char 
   913 ;; Return value:  Size  Location     Type
   914 ;;                  1    wreg      void 
   915 ;; Registers used:
   916 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   917 ;; Tracked objects:
   918 ;;		On entry : 0/0
   919 ;;		On exit  : 0/0
   920 ;;		Unchanged: 0/0
   921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   922 ;;      Params:         3       0       0       0       0       0       0       0       0
   923 ;;      Locals:         2       0       0       0       0       0       0       0       0
   924 ;;      Temps:          0       0       0       0       0       0       0       0       0
   925 ;;      Totals:         5       0       0       0       0       0       0       0       0
   926 ;;Total ram usage:        5 bytes
   927 ;; Hardware stack levels used: 1
   928 ;; Hardware stack levels required when called: 2
   929 ;; This function calls:
   930 ;;		_LCD_Command
   931 ;;		_LCD_String
   932 ;; This function is called by:
   933 ;;		_main
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           
   937                           	psect	text3
   938  000B94                     __ptext3:
   939                           	callstack 0
   940  000B94                     _LCD_String_xy:
   941                           	callstack 28
   942                           
   943                           ;incstack = 0
   944                           ;LCD_String_xy@row stored from wreg
   945  000B94  6E28               	movwf	LCD_String_xy@row^0,c
   946  000B96                     
   947                           ;LCD.c: 84:     if(row<=1)
   948  000B96  0E02               	movlw	2
   949  000B98  6028               	cpfslt	LCD_String_xy@row^0,c
   950  000B9A  EFD1  F005         	goto	u681
   951  000B9E  EFD3  F005         	goto	u680
   952  000BA2                     u681:
   953  000BA2  EFDC  F005         	goto	l1327
   954  000BA6                     u680:
   955  000BA6                     
   956                           ;LCD.c: 85:     {;LCD.c: 86:         location = (0x80) | ((pos) & 0x0f);
   957  000BA6  5025               	movf	LCD_String_xy@pos^0,w,c
   958  000BA8  0B0F               	andlw	15
   959  000BAA  0980               	iorlw	128
   960  000BAC  6E29               	movwf	LCD_String_xy@location^0,c
   961  000BAE                     
   962                           ;LCD.c: 87:         LCD_Command(location);
   963  000BAE  5029               	movf	LCD_String_xy@location^0,w,c
   964  000BB0  EC7A  F005         	call	_LCD_Command
   965                           
   966                           ;LCD.c: 88:     }
   967  000BB4  EFE3  F005         	goto	l1331
   968  000BB8                     l1327:
   969                           
   970                           ;LCD.c: 90:     {;LCD.c: 91:         location = (0xC0) | ((pos) & 0x0f);
   971  000BB8  5025               	movf	LCD_String_xy@pos^0,w,c
   972  000BBA  0B0F               	andlw	15
   973  000BBC  09C0               	iorlw	192
   974  000BBE  6E29               	movwf	LCD_String_xy@location^0,c
   975  000BC0                     
   976                           ;LCD.c: 92:         LCD_Command(location);
   977  000BC0  5029               	movf	LCD_String_xy@location^0,w,c
   978  000BC2  EC7A  F005         	call	_LCD_Command
   979  000BC6                     l1331:
   980                           
   981                           ;LCD.c: 96:     LCD_String(msg);
   982  000BC6  C026  F023         	movff	LCD_String_xy@msg,LCD_String@msg
   983  000BCA  C027  F024         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
   984  000BCE  EC08  F006         	call	_LCD_String	;wreg free
   985  000BD2  0012               	return		;funcret
   986  000BD4                     __end_of_LCD_String_xy:
   987                           	callstack 0
   988                           
   989 ;; *************** function _LCD_String *****************
   990 ;; Defined at:
   991 ;;		line 71 in file "LCD.c"
   992 ;; Parameters:    Size  Location     Type
   993 ;;  msg             2    2[COMRAM] PTR const unsigned char 
   994 ;;		 -> STR_2(16), STR_1(15), 
   995 ;; Auto vars:     Size  Location     Type
   996 ;;		None
   997 ;; Return value:  Size  Location     Type
   998 ;;                  1    wreg      void 
   999 ;; Registers used:
  1000 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1001 ;; Tracked objects:
  1002 ;;		On entry : 0/0
  1003 ;;		On exit  : 0/0
  1004 ;;		Unchanged: 0/0
  1005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1006 ;;      Params:         2       0       0       0       0       0       0       0       0
  1007 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1008 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1009 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1010 ;;Total ram usage:        2 bytes
  1011 ;; Hardware stack levels used: 1
  1012 ;; Hardware stack levels required when called: 1
  1013 ;; This function calls:
  1014 ;;		_LCD_Char
  1015 ;; This function is called by:
  1016 ;;		_LCD_String_xy
  1017 ;; This function uses a non-reentrant model
  1018 ;;
  1019                           
  1020                           	psect	text4
  1021  000C10                     __ptext4:
  1022                           	callstack 0
  1023  000C10                     _LCD_String:
  1024                           	callstack 28
  1025  000C10                     
  1026                           ;LCD.c: 71: void LCD_String(const char *msg);LCD.c: 72: {;LCD.c: 73:  while((*msg)!=0)
  1027  000C10  EF14  F006         	goto	l1317
  1028  000C14                     l1313:
  1029                           
  1030                           ;LCD.c: 74:  {;LCD.c: 75:    LCD_Char(*msg);
  1031  000C14  C023  FFF6         	movff	LCD_String@msg,tblptrl
  1032  000C18  C024  FFF7         	movff	LCD_String@msg+1,tblptrh
  1033  000C1C                     	if	0	;tblptru may be non-zero
  1034  000C1C                     	endif
  1035  000C1C                     	if	0	;tblptru may be non-zero
  1036  000C1C                     	endif
  1037  000C1C  0008               	tblrd		*
  1038  000C1E  50F5               	movf	tablat,w,c
  1039  000C20  ECA2  F005         	call	_LCD_Char
  1040  000C24                     
  1041                           ;LCD.c: 76:    msg++;
  1042  000C24  4A23               	infsnz	LCD_String@msg^0,f,c
  1043  000C26  2A24               	incf	(LCD_String@msg+1)^0,f,c
  1044  000C28                     l1317:
  1045                           
  1046                           ;LCD.c: 73:  while((*msg)!=0)
  1047  000C28  C023  FFF6         	movff	LCD_String@msg,tblptrl
  1048  000C2C  C024  FFF7         	movff	LCD_String@msg+1,tblptrh
  1049  000C30                     	if	0	;tblptru may be non-zero
  1050  000C30                     	endif
  1051  000C30                     	if	0	;tblptru may be non-zero
  1052  000C30                     	endif
  1053  000C30  0008               	tblrd		*
  1054  000C32  50F5               	movf	tablat,w,c
  1055  000C34  0900               	iorlw	0
  1056  000C36  A4D8               	btfss	status,2,c
  1057  000C38  EF20  F006         	goto	u671
  1058  000C3C  EF22  F006         	goto	u670
  1059  000C40                     u671:
  1060  000C40  EF0A  F006         	goto	l1313
  1061  000C44                     u670:
  1062  000C44  0012               	return		;funcret
  1063  000C46                     __end_of_LCD_String:
  1064                           	callstack 0
  1065                           
  1066 ;; *************** function _LCD_Init *****************
  1067 ;; Defined at:
  1068 ;;		line 26 in file "LCD.c"
  1069 ;; Parameters:    Size  Location     Type
  1070 ;;		None
  1071 ;; Auto vars:     Size  Location     Type
  1072 ;;		None
  1073 ;; Return value:  Size  Location     Type
  1074 ;;                  1    wreg      void 
  1075 ;; Registers used:
  1076 ;;		wreg, status,2, status,0, cstack
  1077 ;; Tracked objects:
  1078 ;;		On entry : 0/0
  1079 ;;		On exit  : 0/0
  1080 ;;		Unchanged: 0/0
  1081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1082 ;;      Params:         0       0       0       0       0       0       0       0       0
  1083 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1084 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1085 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1086 ;;Total ram usage:        1 bytes
  1087 ;; Hardware stack levels used: 1
  1088 ;; Hardware stack levels required when called: 1
  1089 ;; This function calls:
  1090 ;;		_LCD_Command
  1091 ;; This function is called by:
  1092 ;;		_main
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           	psect	text5
  1097  000C46                     __ptext5:
  1098                           	callstack 0
  1099  000C46                     _LCD_Init:
  1100                           	callstack 29
  1101  000C46                     
  1102                           ;LCD.c: 28:     TRISD = 0;
  1103  000C46  0E00               	movlw	0
  1104  000C48  6E95               	movwf	149,c	;volatile
  1105  000C4A                     
  1106                           ;LCD.c: 29:     _delay((unsigned long)((15)*(8000000L/4000.0)));
  1107  000C4A  0E27               	movlw	39
  1108  000C4C  6E23               	movwf	??_LCD_Init^0,c
  1109  000C4E  0EF5               	movlw	245
  1110  000C50                     u747:
  1111  000C50  2EE8               	decfsz	wreg,f,c
  1112  000C52  D7FE               	bra	u747
  1113  000C54  2E23               	decfsz	??_LCD_Init^0,f,c
  1114  000C56  D7FC               	bra	u747
  1115  000C58  F000               	nop	
  1116  000C5A                     
  1117                           ;LCD.c: 30:     LCD_Command(0x02);
  1118  000C5A  0E02               	movlw	2
  1119  000C5C  EC7A  F005         	call	_LCD_Command
  1120  000C60                     
  1121                           ;LCD.c: 32:     LCD_Command(0x28);
  1122  000C60  0E28               	movlw	40
  1123  000C62  EC7A  F005         	call	_LCD_Command
  1124  000C66                     
  1125                           ;LCD.c: 34:  LCD_Command(0x01);
  1126  000C66  0E01               	movlw	1
  1127  000C68  EC7A  F005         	call	_LCD_Command
  1128  000C6C                     
  1129                           ;LCD.c: 35:     LCD_Command(0x0c);
  1130  000C6C  0E0C               	movlw	12
  1131  000C6E  EC7A  F005         	call	_LCD_Command
  1132  000C72                     
  1133                           ;LCD.c: 36:  LCD_Command(0x06);
  1134  000C72  0E06               	movlw	6
  1135  000C74  EC7A  F005         	call	_LCD_Command
  1136  000C78  0012               	return		;funcret
  1137  000C7A                     __end_of_LCD_Init:
  1138                           	callstack 0
  1139                           
  1140 ;; *************** function _LCD_Clear *****************
  1141 ;; Defined at:
  1142 ;;		line 100 in file "LCD.c"
  1143 ;; Parameters:    Size  Location     Type
  1144 ;;		None
  1145 ;; Auto vars:     Size  Location     Type
  1146 ;;		None
  1147 ;; Return value:  Size  Location     Type
  1148 ;;                  1    wreg      void 
  1149 ;; Registers used:
  1150 ;;		wreg, status,2, status,0, cstack
  1151 ;; Tracked objects:
  1152 ;;		On entry : 0/0
  1153 ;;		On exit  : 0/0
  1154 ;;		Unchanged: 0/0
  1155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1156 ;;      Params:         0       0       0       0       0       0       0       0       0
  1157 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1158 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1159 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1160 ;;Total ram usage:        0 bytes
  1161 ;; Hardware stack levels used: 1
  1162 ;; Hardware stack levels required when called: 1
  1163 ;; This function calls:
  1164 ;;		_LCD_Command
  1165 ;; This function is called by:
  1166 ;;		_main
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           
  1170                           	psect	text6
  1171  000CCA                     __ptext6:
  1172                           	callstack 0
  1173  000CCA                     _LCD_Clear:
  1174                           	callstack 29
  1175  000CCA                     
  1176                           ;LCD.c: 102:     LCD_Command(0x01);
  1177  000CCA  0E01               	movlw	1
  1178  000CCC  EC7A  F005         	call	_LCD_Command
  1179  000CD0  0012               	return		;funcret
  1180  000CD2                     __end_of_LCD_Clear:
  1181                           	callstack 0
  1182                           
  1183 ;; *************** function _LCD_Command *****************
  1184 ;; Defined at:
  1185 ;;		line 39 in file "LCD.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;  cmd             1    wreg     unsigned char 
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;  cmd             1    1[COMRAM] unsigned char 
  1190 ;; Return value:  Size  Location     Type
  1191 ;;                  1    wreg      void 
  1192 ;; Registers used:
  1193 ;;		wreg, status,2, status,0
  1194 ;; Tracked objects:
  1195 ;;		On entry : 0/0
  1196 ;;		On exit  : 0/0
  1197 ;;		Unchanged: 0/0
  1198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1199 ;;      Params:         0       0       0       0       0       0       0       0       0
  1200 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1201 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1202 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1203 ;;Total ram usage:        2 bytes
  1204 ;; Hardware stack levels used: 1
  1205 ;; This function calls:
  1206 ;;		Nothing
  1207 ;; This function is called by:
  1208 ;;		_main
  1209 ;;		_LCD_Init
  1210 ;;		_LCD_String_xy
  1211 ;;		_LCD_Clear
  1212 ;; This function uses a non-reentrant model
  1213 ;;
  1214                           
  1215                           	psect	text7
  1216  000AF4                     __ptext7:
  1217                           	callstack 0
  1218  000AF4                     _LCD_Command:
  1219                           	callstack 29
  1220                           
  1221                           ;incstack = 0
  1222                           ;LCD_Command@cmd stored from wreg
  1223  000AF4  6E22               	movwf	LCD_Command@cmd^0,c
  1224  000AF6                     
  1225                           ;LCD.c: 39: void LCD_Command(unsigned char cmd );LCD.c: 40: {;LCD.c: 41:  LATD = (LATD &
      +                           0x0f) |(0xF0 & cmd);
  1226  000AF6  C022  F021         	movff	LCD_Command@cmd,??_LCD_Command
  1227  000AFA  0EF0               	movlw	240
  1228  000AFC  1621               	andwf	??_LCD_Command^0,f,c
  1229  000AFE  508C               	movf	140,w,c	;volatile
  1230  000B00  0B0F               	andlw	15
  1231  000B02  1021               	iorwf	??_LCD_Command^0,w,c
  1232  000B04  6E8C               	movwf	140,c	;volatile
  1233  000B06                     
  1234                           ;LCD.c: 42:  LATD0 = 0;
  1235  000B06  908C               	bcf	3980,0,c	;volatile
  1236  000B08                     
  1237                           ;LCD.c: 43:  LATD1 = 1;
  1238  000B08  828C               	bsf	3980,1,c	;volatile
  1239  000B0A                     
  1240                           ;LCD.c: 44:  __nop();
  1241  000B0A  F000               	nop	
  1242  000B0C                     
  1243                           ;LCD.c: 45:  LATD1 = 0;
  1244  000B0C  928C               	bcf	3980,1,c	;volatile
  1245  000B0E                     
  1246                           ;LCD.c: 46:  _delay((unsigned long)((1)*(8000000L/4000.0)));
  1247  000B0E  0E03               	movlw	3
  1248  000B10  6E21               	movwf	??_LCD_Command^0,c
  1249  000B12  0E98               	movlw	152
  1250  000B14                     u757:
  1251  000B14  2EE8               	decfsz	wreg,f,c
  1252  000B16  D7FE               	bra	u757
  1253  000B18  2E21               	decfsz	??_LCD_Command^0,f,c
  1254  000B1A  D7FC               	bra	u757
  1255  000B1C                     
  1256                           ;LCD.c: 47:     LATD = (LATD & 0x0f) | (cmd<<4);
  1257  000B1C  C022  F021         	movff	LCD_Command@cmd,??_LCD_Command
  1258  000B20  3A21               	swapf	??_LCD_Command^0,f,c
  1259  000B22  0EF0               	movlw	240
  1260  000B24  1621               	andwf	??_LCD_Command^0,f,c
  1261  000B26  508C               	movf	140,w,c	;volatile
  1262  000B28  0B0F               	andlw	15
  1263  000B2A  1021               	iorwf	??_LCD_Command^0,w,c
  1264  000B2C  6E8C               	movwf	140,c	;volatile
  1265  000B2E                     
  1266                           ;LCD.c: 48:  LATD1 = 1;
  1267  000B2E  828C               	bsf	3980,1,c	;volatile
  1268  000B30                     
  1269                           ;LCD.c: 49:  __nop();
  1270  000B30  F000               	nop	
  1271  000B32                     
  1272                           ;LCD.c: 50:  LATD1 = 0;
  1273  000B32  928C               	bcf	3980,1,c	;volatile
  1274                           
  1275                           ;LCD.c: 51:  _delay((unsigned long)((3)*(8000000L/4000.0)));
  1276  000B34  0E08               	movlw	8
  1277  000B36  6E21               	movwf	??_LCD_Command^0,c
  1278  000B38  0ECA               	movlw	202
  1279  000B3A                     u767:
  1280  000B3A  2EE8               	decfsz	wreg,f,c
  1281  000B3C  D7FE               	bra	u767
  1282  000B3E  2E21               	decfsz	??_LCD_Command^0,f,c
  1283  000B40  D7FC               	bra	u767
  1284  000B42  0012               	return		;funcret
  1285  000B44                     __end_of_LCD_Command:
  1286                           	callstack 0
  1287                           
  1288 ;; *************** function _ImprimirTemperaturaAdecuada *****************
  1289 ;; Defined at:
  1290 ;;		line 62 in file "Main_Invernadero.c"
  1291 ;; Parameters:    Size  Location     Type
  1292 ;;  prmTemperatu    2    2[COMRAM] PTR unsigned char 
  1293 ;;		 -> main@Temperatura(3), 
  1294 ;; Auto vars:     Size  Location     Type
  1295 ;;  i               2    4[COMRAM] int 
  1296 ;; Return value:  Size  Location     Type
  1297 ;;                  1    wreg      void 
  1298 ;; Registers used:
  1299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1300 ;; Tracked objects:
  1301 ;;		On entry : 0/0
  1302 ;;		On exit  : 0/0
  1303 ;;		Unchanged: 0/0
  1304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1305 ;;      Params:         2       0       0       0       0       0       0       0       0
  1306 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1307 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1308 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1309 ;;Total ram usage:        4 bytes
  1310 ;; Hardware stack levels used: 1
  1311 ;; Hardware stack levels required when called: 1
  1312 ;; This function calls:
  1313 ;;		_LCD_Char
  1314 ;; This function is called by:
  1315 ;;		_main
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319                           	psect	text8
  1320  000BD4                     __ptext8:
  1321                           	callstack 0
  1322  000BD4                     _ImprimirTemperaturaAdecuada:
  1323                           	callstack 29
  1324  000BD4                     
  1325                           ;Main_Invernadero.c: 63:     for(int i = 0 ; i<3;i++){
  1326  000BD4  0E00               	movlw	0
  1327  000BD6  6E26               	movwf	(ImprimirTemperaturaAdecuada@i+1)^0,c
  1328  000BD8  0E00               	movlw	0
  1329  000BDA  6E25               	movwf	ImprimirTemperaturaAdecuada@i^0,c
  1330  000BDC                     l1339:
  1331                           
  1332                           ;Main_Invernadero.c: 64:       LCD_Char(prmTemperatura[i]);
  1333  000BDC  5025               	movf	ImprimirTemperaturaAdecuada@i^0,w,c
  1334  000BDE  2423               	addwf	ImprimirTemperaturaAdecuada@prmTemperatura^0,w,c
  1335  000BE0  6ED9               	movwf	fsr2l,c
  1336  000BE2  5026               	movf	(ImprimirTemperaturaAdecuada@i+1)^0,w,c
  1337  000BE4  2024               	addwfc	(ImprimirTemperaturaAdecuada@prmTemperatura+1)^0,w,c
  1338  000BE6  6EDA               	movwf	fsr2h,c
  1339  000BE8  50DF               	movf	indf2,w,c
  1340  000BEA  ECA2  F005         	call	_LCD_Char
  1341  000BEE                     
  1342                           ;Main_Invernadero.c: 65:     }
  1343  000BEE  4A25               	infsnz	ImprimirTemperaturaAdecuada@i^0,f,c
  1344  000BF0  2A26               	incf	(ImprimirTemperaturaAdecuada@i+1)^0,f,c
  1345  000BF2  BE26               	btfsc	(ImprimirTemperaturaAdecuada@i+1)^0,7,c
  1346  000BF4  EF05  F006         	goto	u691
  1347  000BF8  5026               	movf	(ImprimirTemperaturaAdecuada@i+1)^0,w,c
  1348  000BFA  E109               	bnz	u690
  1349  000BFC  0E03               	movlw	3
  1350  000BFE  5C25               	subwf	ImprimirTemperaturaAdecuada@i^0,w,c
  1351  000C00  A0D8               	btfss	status,0,c
  1352  000C02  EF05  F006         	goto	u691
  1353  000C06  EF07  F006         	goto	u690
  1354  000C0A                     u691:
  1355  000C0A  EFEE  F005         	goto	l1339
  1356  000C0E                     u690:
  1357  000C0E  0012               	return		;funcret
  1358  000C10                     __end_of_ImprimirTemperaturaAdecuada:
  1359                           	callstack 0
  1360                           
  1361 ;; *************** function _LCD_Char *****************
  1362 ;; Defined at:
  1363 ;;		line 57 in file "LCD.c"
  1364 ;; Parameters:    Size  Location     Type
  1365 ;;  dat             1    wreg     unsigned char 
  1366 ;; Auto vars:     Size  Location     Type
  1367 ;;  dat             1    1[COMRAM] unsigned char 
  1368 ;; Return value:  Size  Location     Type
  1369 ;;                  1    wreg      void 
  1370 ;; Registers used:
  1371 ;;		wreg, status,2, status,0
  1372 ;; Tracked objects:
  1373 ;;		On entry : 0/0
  1374 ;;		On exit  : 0/0
  1375 ;;		Unchanged: 0/0
  1376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1377 ;;      Params:         0       0       0       0       0       0       0       0       0
  1378 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1379 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1380 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1381 ;;Total ram usage:        2 bytes
  1382 ;; Hardware stack levels used: 1
  1383 ;; This function calls:
  1384 ;;		Nothing
  1385 ;; This function is called by:
  1386 ;;		_main
  1387 ;;		_ImprimirTemperaturaAdecuada
  1388 ;;		_LCD_String
  1389 ;; This function uses a non-reentrant model
  1390 ;;
  1391                           
  1392                           	psect	text9
  1393  000B44                     __ptext9:
  1394                           	callstack 0
  1395  000B44                     _LCD_Char:
  1396                           	callstack 28
  1397                           
  1398                           ;incstack = 0
  1399                           ;LCD_Char@dat stored from wreg
  1400  000B44  6E22               	movwf	LCD_Char@dat^0,c
  1401  000B46                     
  1402                           ;LCD.c: 57: void LCD_Char(unsigned char dat);LCD.c: 58: {;LCD.c: 59:  LATD = (LATD & 0x0
      +                          f) | (0xF0 & dat);
  1403  000B46  C022  F021         	movff	LCD_Char@dat,??_LCD_Char
  1404  000B4A  0EF0               	movlw	240
  1405  000B4C  1621               	andwf	??_LCD_Char^0,f,c
  1406  000B4E  508C               	movf	140,w,c	;volatile
  1407  000B50  0B0F               	andlw	15
  1408  000B52  1021               	iorwf	??_LCD_Char^0,w,c
  1409  000B54  6E8C               	movwf	140,c	;volatile
  1410  000B56                     
  1411                           ;LCD.c: 60:  LATD0 = 1;
  1412  000B56  808C               	bsf	3980,0,c	;volatile
  1413  000B58                     
  1414                           ;LCD.c: 61:  LATD1 = 1;
  1415  000B58  828C               	bsf	3980,1,c	;volatile
  1416  000B5A                     
  1417                           ;LCD.c: 62:  __nop();
  1418  000B5A  F000               	nop	
  1419  000B5C                     
  1420                           ;LCD.c: 63:  LATD1 = 0;
  1421  000B5C  928C               	bcf	3980,1,c	;volatile
  1422  000B5E                     
  1423                           ;LCD.c: 64:  _delay((unsigned long)((1)*(8000000L/4000.0)));
  1424  000B5E  0E03               	movlw	3
  1425  000B60  6E21               	movwf	??_LCD_Char^0,c
  1426  000B62  0E98               	movlw	152
  1427  000B64                     u777:
  1428  000B64  2EE8               	decfsz	wreg,f,c
  1429  000B66  D7FE               	bra	u777
  1430  000B68  2E21               	decfsz	??_LCD_Char^0,f,c
  1431  000B6A  D7FC               	bra	u777
  1432  000B6C                     
  1433                           ;LCD.c: 65:     LATD = (LATD & 0x0f) | (dat<<4);
  1434  000B6C  C022  F021         	movff	LCD_Char@dat,??_LCD_Char
  1435  000B70  3A21               	swapf	??_LCD_Char^0,f,c
  1436  000B72  0EF0               	movlw	240
  1437  000B74  1621               	andwf	??_LCD_Char^0,f,c
  1438  000B76  508C               	movf	140,w,c	;volatile
  1439  000B78  0B0F               	andlw	15
  1440  000B7A  1021               	iorwf	??_LCD_Char^0,w,c
  1441  000B7C  6E8C               	movwf	140,c	;volatile
  1442  000B7E                     
  1443                           ;LCD.c: 66:  LATD1 = 1;
  1444  000B7E  828C               	bsf	3980,1,c	;volatile
  1445  000B80                     
  1446                           ;LCD.c: 67:  __nop();
  1447  000B80  F000               	nop	
  1448  000B82                     
  1449                           ;LCD.c: 68:  LATD1 = 0;
  1450  000B82  928C               	bcf	3980,1,c	;volatile
  1451                           
  1452                           ;LCD.c: 69:  _delay((unsigned long)((3)*(8000000L/4000.0)));
  1453  000B84  0E08               	movlw	8
  1454  000B86  6E21               	movwf	??_LCD_Char^0,c
  1455  000B88  0ECA               	movlw	202
  1456  000B8A                     u787:
  1457  000B8A  2EE8               	decfsz	wreg,f,c
  1458  000B8C  D7FE               	bra	u787
  1459  000B8E  2E21               	decfsz	??_LCD_Char^0,f,c
  1460  000B90  D7FC               	bra	u787
  1461  000B92  0012               	return		;funcret
  1462  000B94                     __end_of_LCD_Char:
  1463                           	callstack 0
  1464                           
  1465                           	psect	rparam
  1466  0000                     
  1467                           	psect	idloc
  1468                           
  1469                           ;Config register IDLOC0 @ 0x200000
  1470                           ;	unspecified, using default values
  1471  200000                     	org	2097152
  1472  200000  FF                 	db	255
  1473                           
  1474                           ;Config register IDLOC1 @ 0x200001
  1475                           ;	unspecified, using default values
  1476  200001                     	org	2097153
  1477  200001  FF                 	db	255
  1478                           
  1479                           ;Config register IDLOC2 @ 0x200002
  1480                           ;	unspecified, using default values
  1481  200002                     	org	2097154
  1482  200002  FF                 	db	255
  1483                           
  1484                           ;Config register IDLOC3 @ 0x200003
  1485                           ;	unspecified, using default values
  1486  200003                     	org	2097155
  1487  200003  FF                 	db	255
  1488                           
  1489                           ;Config register IDLOC4 @ 0x200004
  1490                           ;	unspecified, using default values
  1491  200004                     	org	2097156
  1492  200004  FF                 	db	255
  1493                           
  1494                           ;Config register IDLOC5 @ 0x200005
  1495                           ;	unspecified, using default values
  1496  200005                     	org	2097157
  1497  200005  FF                 	db	255
  1498                           
  1499                           ;Config register IDLOC6 @ 0x200006
  1500                           ;	unspecified, using default values
  1501  200006                     	org	2097158
  1502  200006  FF                 	db	255
  1503                           
  1504                           ;Config register IDLOC7 @ 0x200007
  1505                           ;	unspecified, using default values
  1506  200007                     	org	2097159
  1507  200007  FF                 	db	255
  1508                           
  1509                           	psect	config
  1510                           
  1511                           ;Config register CONFIG1L @ 0x300000
  1512                           ;	unspecified, using default values
  1513                           ;	PLL Prescaler Selection bits
  1514                           ;	PLLDIV = 0x0, unprogrammed default
  1515                           ;	System Clock Postscaler Selection bits
  1516                           ;	CPUDIV = 0x0, unprogrammed default
  1517                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1518                           ;	USBDIV = 0x0, unprogrammed default
  1519  300000                     	org	3145728
  1520  300000  00                 	db	0
  1521                           
  1522                           ;Config register CONFIG1H @ 0x300001
  1523                           ;	Oscillator Selection bits
  1524                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  1525                           ;	Fail-Safe Clock Monitor Enable bit
  1526                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1527                           ;	Internal/External Oscillator Switchover bit
  1528                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1529  300001                     	org	3145729
  1530  300001  09                 	db	9
  1531                           
  1532                           ;Config register CONFIG2L @ 0x300002
  1533                           ;	Power-up Timer Enable bit
  1534                           ;	PWRT = OFF, PWRT disabled
  1535                           ;	Brown-out Reset Enable bits
  1536                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1537                           ;	Brown-out Reset Voltage bits
  1538                           ;	BORV = 3, Minimum setting 2.05V
  1539                           ;	USB Voltage Regulator Enable bit
  1540                           ;	VREGEN = OFF, USB voltage regulator disabled
  1541  300002                     	org	3145730
  1542  300002  1F                 	db	31
  1543                           
  1544                           ;Config register CONFIG2H @ 0x300003
  1545                           ;	Watchdog Timer Enable bit
  1546                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1547                           ;	Watchdog Timer Postscale Select bits
  1548                           ;	WDTPS = 32768, 1:32768
  1549  300003                     	org	3145731
  1550  300003  1E                 	db	30
  1551                           
  1552                           ; Padding undefined space
  1553  300004                     	org	3145732
  1554  300004  FF                 	db	255
  1555                           
  1556                           ;Config register CONFIG3H @ 0x300005
  1557                           ;	CCP2 MUX bit
  1558                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1559                           ;	PORTB A/D Enable bit
  1560                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1561                           ;	Low-Power Timer 1 Oscillator Enable bit
  1562                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1563                           ;	MCLR Pin Enable bit
  1564                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  1565  300005                     	org	3145733
  1566  300005  01                 	db	1
  1567                           
  1568                           ;Config register CONFIG4L @ 0x300006
  1569                           ;	Stack Full/Underflow Reset Enable bit
  1570                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1571                           ;	Single-Supply ICSP Enable bit
  1572                           ;	LVP = OFF, Single-Supply ICSP disabled
  1573                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1574                           ;	ICPRT = OFF, ICPORT disabled
  1575                           ;	Extended Instruction Set Enable bit
  1576                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1577                           ;	Background Debugger Enable bit
  1578                           ;	DEBUG = 0x1, unprogrammed default
  1579  300006                     	org	3145734
  1580  300006  81                 	db	129
  1581                           
  1582                           ; Padding undefined space
  1583  300007                     	org	3145735
  1584  300007  FF                 	db	255
  1585                           
  1586                           ;Config register CONFIG5L @ 0x300008
  1587                           ;	Code Protection bit
  1588                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1589                           ;	Code Protection bit
  1590                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1591                           ;	Code Protection bit
  1592                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1593                           ;	Code Protection bit
  1594                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1595  300008                     	org	3145736
  1596  300008  0F                 	db	15
  1597                           
  1598                           ;Config register CONFIG5H @ 0x300009
  1599                           ;	Boot Block Code Protection bit
  1600                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1601                           ;	Data EEPROM Code Protection bit
  1602                           ;	CPD = OFF, Data EEPROM is not code-protected
  1603  300009                     	org	3145737
  1604  300009  C0                 	db	192
  1605                           
  1606                           ;Config register CONFIG6L @ 0x30000A
  1607                           ;	Write Protection bit
  1608                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1609                           ;	Write Protection bit
  1610                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1611                           ;	Write Protection bit
  1612                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1613                           ;	Write Protection bit
  1614                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1615  30000A                     	org	3145738
  1616  30000A  0F                 	db	15
  1617                           
  1618                           ;Config register CONFIG6H @ 0x30000B
  1619                           ;	Configuration Register Write Protection bit
  1620                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1621                           ;	Boot Block Write Protection bit
  1622                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1623                           ;	Data EEPROM Write Protection bit
  1624                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1625  30000B                     	org	3145739
  1626  30000B  E0                 	db	224
  1627                           
  1628                           ;Config register CONFIG7L @ 0x30000C
  1629                           ;	Table Read Protection bit
  1630                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1631                           ;	Table Read Protection bit
  1632                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1633                           ;	Table Read Protection bit
  1634                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1635                           ;	Table Read Protection bit
  1636                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1637  30000C                     	org	3145740
  1638  30000C  0F                 	db	15
  1639                           
  1640                           ;Config register CONFIG7H @ 0x30000D
  1641                           ;	Boot Block Table Read Protection bit
  1642                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1643  30000D                     	org	3145741
  1644  30000D  40                 	db	64
  1645                           tosu	equ	0xFFF
  1646                           tosh	equ	0xFFE
  1647                           tosl	equ	0xFFD
  1648                           stkptr	equ	0xFFC
  1649                           pclatu	equ	0xFFB
  1650                           pclath	equ	0xFFA
  1651                           pcl	equ	0xFF9
  1652                           tblptru	equ	0xFF8
  1653                           tblptrh	equ	0xFF7
  1654                           tblptrl	equ	0xFF6
  1655                           tablat	equ	0xFF5
  1656                           prodh	equ	0xFF4
  1657                           prodl	equ	0xFF3
  1658                           indf0	equ	0xFEF
  1659                           postinc0	equ	0xFEE
  1660                           postdec0	equ	0xFED
  1661                           preinc0	equ	0xFEC
  1662                           plusw0	equ	0xFEB
  1663                           fsr0h	equ	0xFEA
  1664                           fsr0l	equ	0xFE9
  1665                           wreg	equ	0xFE8
  1666                           indf1	equ	0xFE7
  1667                           postinc1	equ	0xFE6
  1668                           postdec1	equ	0xFE5
  1669                           preinc1	equ	0xFE4
  1670                           plusw1	equ	0xFE3
  1671                           fsr1h	equ	0xFE2
  1672                           fsr1l	equ	0xFE1
  1673                           bsr	equ	0xFE0
  1674                           indf2	equ	0xFDF
  1675                           postinc2	equ	0xFDE
  1676                           postdec2	equ	0xFDD
  1677                           preinc2	equ	0xFDC
  1678                           plusw2	equ	0xFDB
  1679                           fsr2h	equ	0xFDA
  1680                           fsr2l	equ	0xFD9
  1681                           status	equ	0xFD8

Data Sizes:
    Strings     31
    Constant    0
    Data        32
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     15      50
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_2(CODE[16]), STR_1(CODE[15]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_2(CODE[16]), STR_1(CODE[15]), 

    ImprimirTemperaturaAdecuada@prmTemperatura	PTR unsigned char  size(2) Largest target is 3
		 -> main@Temperatura(COMRAM[3]), 


Critical Paths under _main in COMRAM

    _main->_LCD_String_xy
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command
    _ImprimirTemperaturaAdecuada->_LCD_Char

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    1098
                                              9 COMRAM     6     6      0
        _ImprimirTemperaturaAdecuada
                           _LCD_Char
                          _LCD_Clear
                        _LCD_Command
                           _LCD_Init
                      _LCD_String_xy
                         _PrenderLed
                            _keyfind
 ---------------------------------------------------------------------------------
 (1) _keyfind                                              2     2      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _PrenderLed                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        5     2      3     620
                                              4 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2     151
                                              2 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      30
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0      30
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ImprimirTemperaturaAdecuada                          4     2      2     196
                                              2 COMRAM     4     2      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ImprimirTemperaturaAdecuada
     _LCD_Char
   _LCD_Char
   _LCD_Clear
     _LCD_Command
   _LCD_Command
   _LCD_Init
     _LCD_Command
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
   _PrenderLed
   _keyfind

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      F      32       1       52.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      32      20        0.0%
DATA                 0      0      32       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Sep 21 15:43:24 2021

                             ?_LCD_Command 0021                                         l53 0C0E  
                                       l70 0C78                                         l46 0CD2  
                                       l48 0CD4                                         l73 0B42  
                                       l90 0CD0                                         l82 0C44  
                                       l76 0B92                                         l87 0BD2  
                                       u30 0842                                         u31 083E  
                                       u40 085A                                         u41 0856  
                                       u50 0886                                         u51 0882  
                                       u60 089E                                         u61 089A  
                                       u70 08D4                                         u71 08D0  
                                       u80 08F4                                         u81 08F0  
                                       u90 0918                                         u91 0914  
                              ?_LCD_String 0023                                        l280 09AE  
                                      l272 0926                                        l267 08E2  
                                      l276 096A                                        l286 0A4A  
                                      l971 0B56                                        l981 0B6C  
                                      l973 0B58                                        l983 0B7E  
                                      l975 0B5A                                        l991 0B06  
                                      l985 0B80                                        l977 0B5C  
                                      l969 0B46                                        l993 0B08  
                                      l987 0B82                                        l979 0B5E  
                                      l995 0B0A                                        l997 0B0C  
                                      l989 0AF6                                        l999 0B0E  
                                      u100 0938                                        u101 0934  
                                      u110 095C                                        u111 0958  
                                      u120 097C                                        u121 0978  
                                      u130 09A0                                        u131 099C  
                                      u140 09C0                                        u141 09BC  
                                      u150 09D2                                        u151 09CE  
                                      u160 09FA                                        u161 09F6  
                                      u170 0A22                                        u171 0A1E  
                                      u700 0A8A                                        u701 0A86  
                                      u710 0AC0                                        u711 0ABC  
                                      u670 0C44                                        u671 0C40  
                                      u727 0860                                        u680 0BA6  
                                      u681 0BA2                                        u737 08A4  
                                      u690 0C0E                                        u691 0C0A  
                                      u747 0C50                                        u757 0B14  
                                      u767 0B3A                                        u777 0B64  
                                      u787 0B8A                                        prod 000FF3  
                                      wreg 000FE8                                main@bandera 002D  
                              LCD_Char@dat 0022                                       l1001 0B1C  
                                     l1003 0B2E                                       l1005 0B30  
                                     l1021 0C5A                                       l1101 0946  
                                     l1007 0B32                                       l1023 0C60  
                                     l1111 0984                                       l1103 094A  
                                     l1025 0C66                                       l1017 0C46  
                                     l1113 098A                                       l1105 095C  
                                     l1121 09C0                                       l1027 0C6C  
                                     l1019 0C4A                                       l1131 09FA  
                                     l1123 09D2                                       l1115 098E  
                                     l1107 0964                                       l1051 0822  
                                     l1029 0C72                                       l1045 0CD2  
                                     l1117 09A0                                       l1109 0980  
                                     l1061 086A                                       l1053 082A  
                                     l1151 0CCA                                       l1311 0C10  
                                     l1119 09A8                                       l1071 08AE  
                                     l1063 086E                                       l1055 0830  
                                     l1313 0C14                                       l1321 0B96  
                                     l1145 0A38                                       l1137 0A10  
                                     l1129 09E8                                       l1081 08D4  
                                     l1073 08B4                                       l1065 0874  
                                     l1057 0842                                       l1315 0C24  
                                     l1331 0BC6                                       l1323 0BA6  
                                     l1139 0A22                                       l1091 0906  
                                     l1083 08DC                                       l1075 08B8  
                                     l1067 0886                                       l1059 085A  
                                     l1341 0BEE                                       l1333 0BD4  
                                     l1317 0C28                                       l1325 0BAE  
                                     l1093 0918                                       l1085 08F8  
                                     l1077 08BE                                       l1069 089E  
                                     l1343 0BF2                                       l1327 0BB8  
                                     l1319 0B96                                       l1095 0920  
                                     l1087 08FC                                       l1079 08C2  
                                     l1351 0A62                                       l1329 0BC0  
                                     l1097 093C                                       l1089 0902  
                                     l1361 0A94                                       l1353 0A74  
                                     l1345 0A4C                                       l1339 0BDC  
                                     l1099 0940                                       l1371 0AC4  
                                     l1363 0A9A                                       l1355 0A7A  
                                     l1347 0A5C                                       l1373 0AD6  
                                     l1365 0AAA                                       l1357 0A8A  
                                     l1349 0A5E                                       l1375 0ADC  
                                     l1359 0A8E                                       l1367 0AB0  
                                     l1377 0AE8                                       l1369 0AC0  
                                     STR_1 0811                                       STR_2 0801  
                                     _LATB 000F8A                                       _LATD 000F8C  
                                     _RBPU 007F8F                                       _main 0A4C  
                       __size_of_LCD_Clear 0008                                       indf2 000FDF  
                                     fsr1l 000FE1                                       fsr2l 000FD9  
                                     prodl 000FF3                                       start 0000  
                            _LCD_String_xy 0B94                               ___param_bank 000000  
                         __end_of_LCD_Char 0B94                           __end_of_LCD_Init 0C7A  
                                    ?_main 0021                                      _LATD0 007C60  
                                    _LATD1 007C61                                      _LATE0 007C68  
                                    _LATE1 007C69                                      _LATE2 007C6A  
                                    _PORTB 000F81                                      _PORTD 000F83  
                                    _TRISB 000F93                                      _TRISD 000F95  
                                    _TRISE 000F96                            __end_of_keyfind 0A4C  
                                    tablat 000FF5                                      status 000FD8  
                      __size_of_LCD_String 0036                             ?_LCD_String_xy 0025  
                          __initialization 0C7A                               __end_of_main 0AF4  
ImprimirTemperaturaAdecuada@prmTemperatura 0023                                     ??_main 002A  
                        __end_of_LCD_Clear 0CD2                              __activetblptr 000002  
                         LCD_String_xy@msg 0026                           LCD_String_xy@pos 0025  
                         LCD_String_xy@row 0028                                     _OSCCON 000FD3  
                               _PrenderLed 0CD2                                     _keypad 0001  
                                   isa$std 000001                                     _rowloc 0031  
                     __size_of_LCD_Command 0050                               __pdataCOMRAM 0001  
                                ??_keyfind 0021                               __mediumconst 0000  
                                   tblptrh 000FF7                                     tblptrl 000FF6  
                                   tblptru 000FF8                                  ?_LCD_Char 0021  
                               __accesstop 0060                    __end_of__initialization 0CA0  
                                ?_LCD_Init 0021                            ??_LCD_String_xy 0028  
     __size_of_ImprimirTemperaturaAdecuada 003C                              ___rparam_used 000001  
                           __pcstackCOMRAM 0021                               ??_LCD_String 0025  
                               ??_LCD_Char 0021                                 ??_LCD_Init 0023  
                       __end_of_LCD_String 0C46                                ?_PrenderLed 0021  
                          main@Temperatura 002A                              LCD_String@msg 0023  
                                  __Hparam 0000                                    __Lparam 0000  
                             __psmallconst 0800                                    __pcinit 0C7A  
                                  __ramtop 0800                                    __ptext0 0A4C  
                                  __ptext1 0822                                    __ptext2 0CD2  
                                  __ptext3 0B94                                    __ptext4 0C10  
                                  __ptext5 0C46                                    __ptext6 0CCA  
                                  __ptext7 0AF4                                    __ptext8 0BD4  
                                  __ptext9 0B44                                    _col_loc 0032  
                                  _keyfind 0822                                  _LCD_Clear 0CCA  
                      __size_of_PrenderLed 0004                       end_of_initialization 0CA0  
                           LCD_Command@cmd 0022                              __Lmediumconst 0000  
                                  postdec1 000FE5                                    postinc0 000FEE  
                                _PORTDbits 000F83               ?_ImprimirTemperaturaAdecuada 0023  
                               ?_LCD_Clear 0021                                 main@indice 002F  
                        __size_of_LCD_Char 0050                          __size_of_LCD_Init 0034  
                            ??_LCD_Command 0021               ImprimirTemperaturaAdecuada@i 0025  
                            __pidataCOMRAM 0CAA                         keypad_getkey@F3168 0011  
                      start_initialization 0C7A              ??_ImprimirTemperaturaAdecuada 0025  
                    __end_of_LCD_String_xy 0BD4                               ??_PrenderLed 0021  
                      __end_of_LCD_Command 0B44                                __pbssCOMRAM 0030  
                              ??_LCD_Clear 0023                         __end_of_PrenderLed 0CD6  
                              __smallconst 0800                                   ?_keyfind 0021  
                    LCD_String_xy@location 0029                                   _LCD_Char 0B44  
                                 _LCD_Init 0C46                                   _LATDbits 000F8C  
                              _LCD_Command 0AF4                                  main@tecla 002E  
                              _INTCON2bits 000FF1                                  copy_data0 0C8E  
                                 __Hrparam 0000                                   __Lrparam 0000  
                         __size_of_keyfind 022A                              __size_of_main 00A8  
                                 _temp_col 0030                                   isa$xinst 000000  
                               _LCD_String 0C10        __end_of_ImprimirTemperaturaAdecuada 0C10  
              _ImprimirTemperaturaAdecuada 0BD4                     __size_of_LCD_String_xy 0040  
