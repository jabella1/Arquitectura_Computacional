

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Oct 11 17:04:21 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    58  0000                     
    59                           ; Version 2.20
    60                           ; Generated 12/02/2020 GMT
    61                           ; 
    62                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F4550 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     
    94                           	psect	idataBANK0
    95  001DBC                     __pidataBANK0:
    96                           	callstack 0
    97                           
    98                           ;initializer for _keypad
    99  001DBC  31                 	db	49
   100  001DBD  32                 	db	50
   101  001DBE  33                 	db	51
   102  001DBF  34                 	db	52
   103  001DC0  35                 	db	53
   104  001DC1  36                 	db	54
   105  001DC2  37                 	db	55
   106  001DC3  38                 	db	56
   107  001DC4  39                 	db	57
   108  001DC5  2A                 	db	42
   109  001DC6  30                 	db	48
   110  001DC7  23                 	db	35
   111                           
   112                           ;initializer for _PrimeraVez
   113  001DC8  01                 	db	1
   114  0000                     _TRISE	set	3990
   115  0000                     _TRISC	set	3988
   116  0000                     _TRISAbits	set	3986
   117  0000                     _PORTAbits	set	3968
   118  0000                     _PORTB	set	3969
   119  0000                     _LATB	set	3978
   120  0000                     _TRISB	set	3987
   121  0000                     _INTCON2bits	set	4081
   122  0000                     _LATD	set	3980
   123  0000                     _TRISD	set	3989
   124  0000                     _ADCON1	set	4033
   125  0000                     _OSCCON	set	4051
   126  0000                     _LATE2	set	31850
   127  0000                     _LATE0	set	31848
   128  0000                     _LATE1	set	31849
   129  0000                     _LATC6	set	31838
   130  0000                     _LATC2	set	31834
   131  0000                     _LATC1	set	31833
   132  0000                     _LATC0	set	31832
   133  0000                     _LATA0	set	31816
   134  0000                     _RBPU	set	32655
   135  0000                     _LATD1	set	31841
   136  0000                     _LATD0	set	31840
   137                           
   138                           	psect	smallconst
   139  000800                     __psmallconst:
   140                           	callstack 0
   141  000800  00                 	db	0
   142  000801                     STR_1:
   143  000801  54                 	db	84	;'T'
   144  000802  65                 	db	101	;'e'
   145  000803  6D                 	db	109	;'m'
   146  000804  70                 	db	112	;'p'
   147  000805  2E                 	db	46
   148  000806  20                 	db	32
   149  000807  41                 	db	65	;'A'
   150  000808  64                 	db	100	;'d'
   151  000809  65                 	db	101	;'e'
   152  00080A  63                 	db	99	;'c'
   153  00080B  75                 	db	117	;'u'
   154  00080C  61                 	db	97	;'a'
   155  00080D  64                 	db	100	;'d'
   156  00080E  61                 	db	97	;'a'
   157  00080F  00                 	db	0
   158  000810                     STR_2:
   159  000810  4D                 	db	77	;'M'
   160  000811  67                 	db	103	;'g'
   161  000812  6E                 	db	110	;'n'
   162  000813  20                 	db	32
   163  000814  45                 	db	69	;'E'
   164  000815  72                 	db	114	;'r'
   165  000816  72                 	db	114	;'r'
   166  000817  6F                 	db	111	;'o'
   167  000818  72                 	db	114	;'r'
   168  000819  20                 	db	32
   169  00081A  54                 	db	84	;'T'
   170  00081B  65                 	db	101	;'e'
   171  00081C  6D                 	db	109	;'m'
   172  00081D  70                 	db	112	;'p'
   173  00081E  00                 	db	0
   174  00081F                     STR_3:
   175  00081F  48                 	db	72	;'H'
   176  000820  75                 	db	117	;'u'
   177  000821  6D                 	db	109	;'m'
   178  000822  2E                 	db	46
   179  000823  20                 	db	32
   180  000824  41                 	db	65	;'A'
   181  000825  64                 	db	100	;'d'
   182  000826  65                 	db	101	;'e'
   183  000827  63                 	db	99	;'c'
   184  000828  75                 	db	117	;'u'
   185  000829  61                 	db	97	;'a'
   186  00082A  64                 	db	100	;'d'
   187  00082B  61                 	db	97	;'a'
   188  00082C  00                 	db	0
   189  00082D                     STR_4:
   190  00082D  4D                 	db	77	;'M'
   191  00082E  67                 	db	103	;'g'
   192  00082F  6E                 	db	110	;'n'
   193  000830  20                 	db	32
   194  000831  45                 	db	69	;'E'
   195  000832  72                 	db	114	;'r'
   196  000833  72                 	db	114	;'r'
   197  000834  6F                 	db	111	;'o'
   198  000835  72                 	db	114	;'r'
   199  000836  20                 	db	32
   200  000837  48                 	db	72	;'H'
   201  000838  75                 	db	117	;'u'
   202  000839  6D                 	db	109	;'m'
   203  00083A  00                 	db	0
   204  00083B                     STR_10:
   205  00083B  43                 	db	67	;'C'
   206  00083C  20                 	db	32
   207  00083D  54                 	db	84	;'T'
   208  00083E  65                 	db	101	;'e'
   209  00083F  6D                 	db	109	;'m'
   210  000840  70                 	db	112	;'p'
   211  000841  2E                 	db	46
   212  000842  00                 	db	0
   213  000843                     STR_7:
   214  000843  20                 	db	32
   215  000844  20                 	db	32
   216  000845  48                 	db	72	;'H'
   217  000846  75                 	db	117	;'u'
   218  000847  6D                 	db	109	;'m'
   219  000848  2E                 	db	46
   220  000849  00                 	db	0
   221  00084A                     STR_6:
   222  00084A  2E                 	db	46
   223  00084B  25                 	db	37
   224  00084C  64                 	db	100	;'d'
   225  00084D  00                 	db	0
   226  00084E  00                 	db	0	; dummy byte at the end
   227  0000                     
   228                           ; #config settings
   229                           
   230                           	psect	cinit
   231  001C80                     __pcinit:
   232                           	callstack 0
   233  001C80                     start_initialization:
   234                           	callstack 0
   235  001C80                     __initialization:
   236                           	callstack 0
   237                           
   238                           ; Initialize objects allocated to BANK0 (13 bytes)
   239                           ; load TBLPTR registers with __pidataBANK0
   240  001C80  0EBC               	movlw	low __pidataBANK0
   241  001C82  6EF6               	movwf	tblptrl,c
   242  001C84  0E1D               	movlw	high __pidataBANK0
   243  001C86  6EF7               	movwf	tblptrh,c
   244  001C88  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   245  001C8A  6EF8               	movwf	tblptru,c
   246  001C8C  EE00  F0A5         	lfsr	0,__pdataBANK0
   247  001C90  EE10 F00D          	lfsr	1,13
   248  001C94                     copy_data0:
   249  001C94  0009               	tblrd		*+
   250  001C96  CFF5 FFEE          	movff	tablat,postinc0
   251  001C9A  50E5               	movf	postdec1,w,c
   252  001C9C  50E1               	movf	fsr1l,w,c
   253  001C9E  E1FA               	bnz	copy_data0
   254                           
   255                           ; Clear objects allocated to BANK0 (69 bytes)
   256  001CA0  EE00  F060         	lfsr	0,__pbssBANK0
   257  001CA4  0E45               	movlw	69
   258  001CA6                     clear_0:
   259  001CA6  6AEE               	clrf	postinc0,c
   260  001CA8  06E8               	decf	wreg,f,c
   261  001CAA  E1FD               	bnz	clear_0
   262  001CAC                     end_of_initialization:
   263                           	callstack 0
   264  001CAC                     __end_of__initialization:
   265                           	callstack 0
   266  001CAC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   267  001CAE  6EF8               	movwf	tblptru,c
   268  001CB0  0100               	movlb	0
   269  001CB2  EFF8  F008         	goto	_main	;jump to C main() function
   270                           
   271                           	psect	bssBANK0
   272  000060                     __pbssBANK0:
   273                           	callstack 0
   274  000060                     _nout:
   275                           	callstack 0
   276  000060                     	ds	2
   277  000062                     _width:
   278                           	callstack 0
   279  000062                     	ds	2
   280  000064                     _prec:
   281                           	callstack 0
   282  000064                     	ds	2
   283  000066                     _flags:
   284                           	callstack 0
   285  000066                     	ds	2
   286  000068                     _HumedadAdecuada:
   287                           	callstack 0
   288  000068                     	ds	2
   289  00006A                     _TemperaturaAdecuada:
   290                           	callstack 0
   291  00006A                     	ds	2
   292  00006C                     _MargenEH:
   293                           	callstack 0
   294  00006C                     	ds	2
   295  00006E                     _MargenET:
   296                           	callstack 0
   297  00006E                     	ds	2
   298  000070                     _temp_col:
   299                           	callstack 0
   300  000070                     	ds	1
   301  000071                     _rowloc:
   302                           	callstack 0
   303  000071                     	ds	1
   304  000072                     _col_loc:
   305                           	callstack 0
   306  000072                     	ds	1
   307  000073                     _dbuf:
   308                           	callstack 0
   309  000073                     	ds	32
   310  000093                     _Cadena:
   311                           	callstack 0
   312  000093                     	ds	10
   313  00009D                     _Datos:
   314                           	callstack 0
   315  00009D                     	ds	2
   316  00009F                     _Humedad:
   317                           	callstack 0
   318  00009F                     	ds	2
   319  0000A1                     _Temperatura:
   320                           	callstack 0
   321  0000A1                     	ds	2
   322  0000A3                     _MargenErrorH:
   323                           	callstack 0
   324  0000A3                     	ds	1
   325  0000A4                     _MargenErrorT:
   326                           	callstack 0
   327  0000A4                     	ds	1
   328                           
   329                           	psect	dataBANK0
   330  0000A5                     __pdataBANK0:
   331                           	callstack 0
   332  0000A5                     _keypad:
   333                           	callstack 0
   334  0000A5                     	ds	12
   335  0000B1                     _PrimeraVez:
   336                           	callstack 0
   337  0000B1                     	ds	1
   338                           
   339                           	psect	cstackBANK0
   340  0000B2                     __pcstackBANK0:
   341                           	callstack 0
   342  0000B2                     sprintf@ap:
   343                           	callstack 0
   344                           
   345                           ; 2 bytes @ 0x0
   346  0000B2                     	ds	2
   347  0000B4                     sprintf@f:
   348                           	callstack 0
   349                           
   350                           ; 6 bytes @ 0x2
   351  0000B4                     	ds	6
   352  0000BA                     MostrarHumedad@Cadena:
   353                           	callstack 0
   354  0000BA                     MostrarTemperatura@Cadena:
   355                           	callstack 0
   356                           
   357                           ; 2 bytes @ 0x8
   358  0000BA                     	ds	2
   359  0000BC                     MostrarHumedad@Humedad:
   360                           	callstack 0
   361  0000BC                     MostrarTemperatura@Temperatura:
   362                           	callstack 0
   363                           
   364                           ; 1 bytes @ 0xA
   365  0000BC                     	ds	1
   366                           
   367                           	psect	cstackCOMRAM
   368  000001                     __pcstackCOMRAM:
   369                           	callstack 0
   370  000001                     ??_LCD_Command:
   371  000001                     ??_keyfind:
   372  000001                     ??_LCD_Char:
   373  000001                     ??_DHT11_Start:
   374  000001                     ?_strlen:
   375                           	callstack 0
   376  000001                     ?___wmul:
   377                           	callstack 0
   378  000001                     ?___aodiv:
   379                           	callstack 0
   380  000001                     ?___aomod:
   381                           	callstack 0
   382  000001                     DHT11_ReadData@i:
   383                           	callstack 0
   384  000001                     PrenderLed@HumedadAdecuada:
   385                           	callstack 0
   386  000001                     ControlHumedadAspersor@HumedadActual:
   387                           	callstack 0
   388  000001                     ControlTemperaturaVentilador@TempActual:
   389                           	callstack 0
   390  000001                     ___wmul@multiplier:
   391                           	callstack 0
   392  000001                     fputc@c:
   393                           	callstack 0
   394  000001                     strlen@s:
   395                           	callstack 0
   396  000001                     ___aodiv@dividend:
   397                           	callstack 0
   398  000001                     ___aomod@dividend:
   399                           	callstack 0
   400                           
   401                           ; 8 bytes @ 0x0
   402  000001                     	ds	1
   403  000002                     LCD_Command@cmd:
   404                           	callstack 0
   405  000002                     LCD_Char@dat:
   406                           	callstack 0
   407  000002                     DHT11_ReadData@data:
   408                           	callstack 0
   409  000002                     PrenderLed@TemperaturaAdecuada:
   410                           	callstack 0
   411                           
   412                           ; 1 bytes @ 0x1
   413  000002                     	ds	1
   414  000003                     ??_LCD_Init:
   415  000003                     ??_LCD_Clear:
   416  000003                     LCD_String@msg:
   417                           	callstack 0
   418  000003                     DatosSensorTH@Datos:
   419                           	callstack 0
   420  000003                     Comparar_T_H_Adecuados@TempActual:
   421                           	callstack 0
   422  000003                     ControlHumedadAspersor@HumedadDigitada:
   423                           	callstack 0
   424  000003                     ControlTemperaturaVentilador@TempDigitada:
   425                           	callstack 0
   426  000003                     ___wmul@multiplicand:
   427                           	callstack 0
   428  000003                     fputc@fp:
   429                           	callstack 0
   430  000003                     strlen@a:
   431                           	callstack 0
   432                           
   433                           ; 2 bytes @ 0x2
   434  000003                     	ds	2
   435  000005                     ??_fputc:
   436  000005                     LCD_String_xy@pos:
   437                           	callstack 0
   438  000005                     DatosSensorTH@RH_Integral:
   439                           	callstack 0
   440  000005                     Comparar_T_H_Adecuados@HumActual:
   441                           	callstack 0
   442  000005                     ControlHumedadAspersor@MargenErrorH:
   443                           	callstack 0
   444  000005                     ControlTemperaturaVentilador@MargenErrorT:
   445                           	callstack 0
   446  000005                     ___wmul@product:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0x4
   450  000005                     	ds	1
   451  000006                     DatosSensorTH@T_Integral:
   452                           	callstack 0
   453  000006                     LCD_String_xy@msg:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0x5
   457  000006                     	ds	1
   458  000007                     ??_ControlHumedadAspersor:
   459  000007                     ??_ControlTemperaturaVentilador:
   460  000007                     ?_DatoDigitadoAEntero:
   461                           	callstack 0
   462  000007                     DatoDigitadoAEntero@prmTemperatura:
   463                           	callstack 0
   464  000007                     Comparar_T_H_Adecuados@TempDigitada:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x6
   468  000007                     	ds	1
   469  000008                     LCD_String_xy@row:
   470                           	callstack 0
   471                           
   472                           ; 1 bytes @ 0x7
   473  000008                     	ds	1
   474  000009                     ??_DatoDigitadoAEntero:
   475  000009                     LCD_String_xy@location:
   476                           	callstack 0
   477  000009                     Comparar_T_H_Adecuados@HumDigitada:
   478                           	callstack 0
   479  000009                     ___aodiv@divisor:
   480                           	callstack 0
   481  000009                     ___aomod@divisor:
   482                           	callstack 0
   483                           
   484                           ; 8 bytes @ 0x8
   485  000009                     	ds	1
   486  00000A                     PedirDato@Etiqueta:
   487                           	callstack 0
   488  00000A                     DatoDigitadoAEntero@Unidad:
   489                           	callstack 0
   490  00000A                     fputs@s:
   491                           	callstack 0
   492                           
   493                           ; 2 bytes @ 0x9
   494  00000A                     	ds	1
   495  00000B                     Comparar_T_H_Adecuados@MargenErrorT:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0xA
   499  00000B                     	ds	1
   500  00000C                     PedirDato@vecLlenar:
   501                           	callstack 0
   502  00000C                     DatoDigitadoAEntero@Resultado:
   503                           	callstack 0
   504  00000C                     fputs@fp:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0xB
   508  00000C                     	ds	1
   509  00000D                     Comparar_T_H_Adecuados@MargenErrorH:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0xC
   513  00000D                     	ds	1
   514  00000E                     fputs@c:
   515                           	callstack 0
   516  00000E                     PedirDato@CantDatos:
   517                           	callstack 0
   518  00000E                     DatoDigitadoAEntero@Decena:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0xD
   522  00000E                     	ds	1
   523  00000F                     ??_Comparar_T_H_Adecuados:
   524  00000F                     fputs@i:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0xE
   528  00000F                     	ds	1
   529  000010                     ??_PedirDato:
   530                           
   531                           ; 1 bytes @ 0xF
   532  000010                     	ds	1
   533  000011                     ?_pad:
   534                           	callstack 0
   535  000011                     ___aodiv@counter:
   536                           	callstack 0
   537  000011                     ___aomod@counter:
   538                           	callstack 0
   539  000011                     pad@fp:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0x10
   543  000011                     	ds	1
   544  000012                     ___aodiv@sign:
   545                           	callstack 0
   546  000012                     ___aomod@sign:
   547                           	callstack 0
   548  000012                     PedirDato@i:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x11
   552  000012                     	ds	1
   553  000013                     ?_abs:
   554                           	callstack 0
   555  000013                     pad@buf:
   556                           	callstack 0
   557  000013                     abs@a:
   558                           	callstack 0
   559  000013                     ___aodiv@quotient:
   560                           	callstack 0
   561                           
   562                           ; 8 bytes @ 0x12
   563  000013                     	ds	1
   564  000014                     PedirDato@tecla:
   565                           	callstack 0
   566  000014                     Comparar_T_H_Adecuados@TemperaturaAdecuada:
   567                           	callstack 0
   568                           
   569                           ; 1 bytes @ 0x13
   570  000014                     	ds	1
   571  000015                     ??_abs:
   572  000015                     Comparar_T_H_Adecuados@HumedadAdecuada:
   573                           	callstack 0
   574  000015                     PedirTodosLosDatos@Temperatura:
   575                           	callstack 0
   576  000015                     pad@p:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x14
   580  000015                     	ds	2
   581  000017                     ??_pad:
   582  000017                     PedirTodosLosDatos@Humedad:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x16
   586  000017                     	ds	1
   587  000018                     pad@i:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x17
   591  000018                     	ds	1
   592  000019                     PedirTodosLosDatos@MargenErrorT:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0x18
   596  000019                     	ds	1
   597  00001A                     pad@w:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x19
   601  00001A                     	ds	1
   602  00001B                     PedirTodosLosDatos@MargenErrorH:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x1A
   606  00001B                     	ds	1
   607  00001C                     ?_dtoa:
   608                           	callstack 0
   609  00001C                     dtoa@fp:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x1B
   613  00001C                     	ds	1
   614  00001D                     ??_PedirTodosLosDatos:
   615                           
   616                           ; 1 bytes @ 0x1C
   617  00001D                     	ds	1
   618  00001E                     dtoa@d:
   619                           	callstack 0
   620                           
   621                           ; 8 bytes @ 0x1D
   622  00001E                     	ds	8
   623  000026                     ??_dtoa:
   624                           
   625                           ; 1 bytes @ 0x25
   626  000026                     	ds	8
   627  00002E                     _dtoa$946:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x2D
   631  00002E                     	ds	2
   632  000030                     dtoa@p:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x2F
   636  000030                     	ds	2
   637  000032                     dtoa@w:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0x31
   641  000032                     	ds	2
   642  000034                     dtoa@s:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x33
   646  000034                     	ds	2
   647  000036                     dtoa@n:
   648                           	callstack 0
   649                           
   650                           ; 8 bytes @ 0x35
   651  000036                     	ds	8
   652  00003E                     dtoa@i:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x3D
   656  00003E                     	ds	2
   657  000040                     ?_vfpfcnvrt:
   658                           	callstack 0
   659  000040                     vfpfcnvrt@fp:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x3F
   663  000040                     	ds	2
   664  000042                     vfpfcnvrt@fmt:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0x41
   668  000042                     	ds	2
   669  000044                     vfpfcnvrt@ap:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x43
   673  000044                     	ds	2
   674  000046                     ??_vfpfcnvrt:
   675                           
   676                           ; 1 bytes @ 0x45
   677  000046                     	ds	2
   678  000048                     vfpfcnvrt@ll:
   679                           	callstack 0
   680                           
   681                           ; 8 bytes @ 0x47
   682  000048                     	ds	8
   683  000050                     ?_vfprintf:
   684                           	callstack 0
   685  000050                     vfprintf@fp:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x4F
   689  000050                     	ds	2
   690  000052                     vfprintf@fmt:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x51
   694  000052                     	ds	2
   695  000054                     vfprintf@ap:
   696                           	callstack 0
   697                           
   698                           ; 2 bytes @ 0x53
   699  000054                     	ds	2
   700  000056                     vfprintf@cfmt:
   701                           	callstack 0
   702                           
   703                           ; 2 bytes @ 0x55
   704  000056                     	ds	2
   705  000058                     ?_sprintf:
   706                           	callstack 0
   707  000058                     sprintf@s:
   708                           	callstack 0
   709                           
   710                           ; 2 bytes @ 0x57
   711  000058                     	ds	2
   712  00005A                     sprintf@fmt:
   713                           	callstack 0
   714                           
   715                           ; 2 bytes @ 0x59
   716  00005A                     	ds	4
   717  00005E                     ??_main:
   718                           
   719                           ; 1 bytes @ 0x5D
   720  00005E                     	ds	2
   721                           
   722 ;;
   723 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   724 ;;
   725 ;; *************** function _main *****************
   726 ;; Defined at:
   727 ;;		line 12 in file "Main_Invernadero.c"
   728 ;; Parameters:    Size  Location     Type
   729 ;;		None
   730 ;; Auto vars:     Size  Location     Type
   731 ;;		None
   732 ;; Return value:  Size  Location     Type
   733 ;;                  1    wreg      void 
   734 ;; Registers used:
   735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   736 ;; Tracked objects:
   737 ;;		On entry : 0/0
   738 ;;		On exit  : 0/0
   739 ;;		Unchanged: 0/0
   740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   741 ;;      Params:         0       0       0       0       0       0       0       0       0
   742 ;;      Locals:         0       0       0       0       0       0       0       0       0
   743 ;;      Temps:          2       0       0       0       0       0       0       0       0
   744 ;;      Totals:         2       0       0       0       0       0       0       0       0
   745 ;;Total ram usage:        2 bytes
   746 ;; Hardware stack levels required when called: 9
   747 ;; This function calls:
   748 ;;		_ApagarAspersores
   749 ;;		_ApagarLeds
   750 ;;		_ApagarVentiladores
   751 ;;		_Comparar_T_H_Adecuados
   752 ;;		_ConfigurarPuertosLCD
   753 ;;		_ControlHumedadAspersor
   754 ;;		_ControlTemperaturaVentilador
   755 ;;		_DatoDigitadoAEntero
   756 ;;		_DatosSensorTH
   757 ;;		_LCD_Init
   758 ;;		_MostrarHumedad
   759 ;;		_MostrarTemperatura
   760 ;;		_PedirTodosLosDatos
   761 ;;		_initActuadores
   762 ;;		_initTeclado
   763 ;; This function is called by:
   764 ;;		Startup code after reset
   765 ;; This function uses a non-reentrant model
   766 ;;
   767                           
   768                           	psect	text0
   769  0011F0                     __ptext0:
   770                           	callstack 0
   771  0011F0                     _main:
   772                           	callstack 22
   773  0011F0                     
   774                           ;Main_Invernadero.c: 14:     OSCCON=0x72;
   775  0011F0  0E72               	movlw	114
   776  0011F2  6ED3               	movwf	211,c	;volatile
   777                           
   778                           ;Main_Invernadero.c: 15:     ADCON1=0x0F;
   779  0011F4  0E0F               	movlw	15
   780  0011F6  6EC1               	movwf	193,c	;volatile
   781  0011F8                     
   782                           ;Main_Invernadero.c: 17:     ConfigurarPuertosLCD();
   783  0011F8  ECFA  F00E         	call	_ConfigurarPuertosLCD	;wreg free
   784  0011FC                     
   785                           ;Main_Invernadero.c: 18:     initActuadores();
   786  0011FC  ECE5  F00E         	call	_initActuadores	;wreg free
   787  001200                     
   788                           ;Main_Invernadero.c: 19:     LCD_Init();
   789  001200  EC76  F00E         	call	_LCD_Init	;wreg free
   790  001204                     
   791                           ;Main_Invernadero.c: 20:     initTeclado();
   792  001204  ECFD  F00E         	call	_initTeclado	;wreg free
   793  001208                     
   794                           ;Main_Invernadero.c: 21:     ApagarAspersores();
   795  001208  ECF7  F00E         	call	_ApagarAspersores	;wreg free
   796  00120C                     
   797                           ;Main_Invernadero.c: 22:     ApagarVentiladores();
   798  00120C  ECF1  F00E         	call	_ApagarVentiladores	;wreg free
   799  001210                     
   800                           ;Main_Invernadero.c: 23:     ApagarLeds();
   801  001210  ECEA  F00E         	call	_ApagarLeds	;wreg free
   802  001214                     l2405:
   803                           
   804                           ;Main_Invernadero.c: 26:      if(PrimeraVez==1){
   805  001214  0100               	movlb	0	; () banked
   806  001216  05B1               	decf	_PrimeraVez& (0+255),w,b
   807  001218  A4D8               	btfss	status,2,c
   808  00121A  EF11  F009         	goto	u1681
   809  00121E  EF13  F009         	goto	u1680
   810  001222                     u1681:
   811  001222  EF48  F009         	goto	l2419
   812  001226                     u1680:
   813  001226                     
   814                           ; BSR set to: 0
   815                           ;Main_Invernadero.c: 27:          PedirTodosLosDatos(Temperatura,Humedad,MargenErrorT,Ma
      +                          rgenErrorH);
   816  001226  0EA1               	movlw	low _Temperatura
   817  001228  6E15               	movwf	PedirTodosLosDatos@Temperatura^0,c
   818  00122A  0E00               	movlw	high _Temperatura
   819  00122C  6E16               	movwf	(PedirTodosLosDatos@Temperatura+1)^0,c
   820  00122E  0E9F               	movlw	low _Humedad
   821  001230  6E17               	movwf	PedirTodosLosDatos@Humedad^0,c
   822  001232  0E00               	movlw	high _Humedad
   823  001234  6E18               	movwf	(PedirTodosLosDatos@Humedad+1)^0,c
   824  001236  0EA4               	movlw	low _MargenErrorT
   825  001238  6E19               	movwf	PedirTodosLosDatos@MargenErrorT^0,c
   826  00123A  0E00               	movlw	high _MargenErrorT
   827  00123C  6E1A               	movwf	(PedirTodosLosDatos@MargenErrorT+1)^0,c
   828  00123E  0EA3               	movlw	low _MargenErrorH
   829  001240  6E1B               	movwf	PedirTodosLosDatos@MargenErrorH^0,c
   830  001242  0E00               	movlw	high _MargenErrorH
   831  001244  6E1C               	movwf	(PedirTodosLosDatos@MargenErrorH+1)^0,c
   832  001246  ECEB  F00A         	call	_PedirTodosLosDatos	;wreg free
   833  00124A                     
   834                           ;Main_Invernadero.c: 28:          TemperaturaAdecuada = DatoDigitadoAEntero(Temperatura)
      +                          ;
   835  00124A  0EA1               	movlw	low _Temperatura
   836  00124C  6E07               	movwf	DatoDigitadoAEntero@prmTemperatura^0,c
   837  00124E  0E00               	movlw	high _Temperatura
   838  001250  6E08               	movwf	(DatoDigitadoAEntero@prmTemperatura+1)^0,c
   839  001252  EC9C  F00B         	call	_DatoDigitadoAEntero	;wreg free
   840  001256  C007  F06A         	movff	?_DatoDigitadoAEntero,_TemperaturaAdecuada
   841  00125A  C008  F06B         	movff	?_DatoDigitadoAEntero+1,_TemperaturaAdecuada+1
   842  00125E                     
   843                           ;Main_Invernadero.c: 29:          HumedadAdecuada = DatoDigitadoAEntero(Humedad);
   844  00125E  0E9F               	movlw	low _Humedad
   845  001260  6E07               	movwf	DatoDigitadoAEntero@prmTemperatura^0,c
   846  001262  0E00               	movlw	high _Humedad
   847  001264  6E08               	movwf	(DatoDigitadoAEntero@prmTemperatura+1)^0,c
   848  001266  EC9C  F00B         	call	_DatoDigitadoAEntero	;wreg free
   849  00126A  C007  F068         	movff	?_DatoDigitadoAEntero,_HumedadAdecuada
   850  00126E  C008  F069         	movff	?_DatoDigitadoAEntero+1,_HumedadAdecuada+1
   851  001272                     
   852                           ;Main_Invernadero.c: 30:          MargenET = MargenErrorT[0]-48;
   853  001272  0ED0               	movlw	208
   854  001274  0100               	movlb	0	; () banked
   855  001276  25A4               	addwf	_MargenErrorT& (0+255),w,b
   856  001278  6F6E               	movwf	_MargenET& (0+255),b
   857  00127A  6B6F               	clrf	(_MargenET+1)& (0+255),b
   858  00127C  0EFF               	movlw	255
   859  00127E  236F               	addwfc	(_MargenET+1)& (0+255),f,b
   860  001280                     
   861                           ; BSR set to: 0
   862                           ;Main_Invernadero.c: 31:          MargenEH = MargenErrorH[0]-48;
   863  001280  0ED0               	movlw	208
   864  001282  25A3               	addwf	_MargenErrorH& (0+255),w,b
   865  001284  6F6C               	movwf	_MargenEH& (0+255),b
   866  001286  6B6D               	clrf	(_MargenEH+1)& (0+255),b
   867  001288  0EFF               	movlw	255
   868  00128A  236D               	addwfc	(_MargenEH+1)& (0+255),f,b
   869  00128C                     
   870                           ; BSR set to: 0
   871                           ;Main_Invernadero.c: 32:          PrimeraVez=0;
   872  00128C  0E00               	movlw	0
   873  00128E  6FB1               	movwf	_PrimeraVez& (0+255),b
   874  001290                     l2419:
   875                           
   876                           ; BSR set to: 0
   877                           ;Main_Invernadero.c: 34:         DatosSensorTH(Datos);
   878  001290  0E9D               	movlw	low _Datos
   879  001292  6E03               	movwf	DatosSensorTH@Datos^0,c
   880  001294  0E00               	movlw	high _Datos
   881  001296  6E04               	movwf	(DatosSensorTH@Datos+1)^0,c
   882  001298  EC21  F00E         	call	_DatosSensorTH	;wreg free
   883  00129C                     
   884                           ;Main_Invernadero.c: 35:         Comparar_T_H_Adecuados(&Datos[0],&Datos[1],TemperaturaA
      +                          decuada,HumedadAdecuada,MargenET,MargenEH);
   885  00129C  0E9D               	movlw	low _Datos
   886  00129E  6E03               	movwf	Comparar_T_H_Adecuados@TempActual^0,c
   887  0012A0  0E00               	movlw	high _Datos
   888  0012A2  6E04               	movwf	(Comparar_T_H_Adecuados@TempActual+1)^0,c
   889  0012A4  0E9E               	movlw	low (_Datos+1)
   890  0012A6  6E05               	movwf	Comparar_T_H_Adecuados@HumActual^0,c
   891  0012A8  0E00               	movlw	high (_Datos+1)
   892  0012AA  6E06               	movwf	(Comparar_T_H_Adecuados@HumActual+1)^0,c
   893  0012AC  C06A  F007         	movff	_TemperaturaAdecuada,Comparar_T_H_Adecuados@TempDigitada
   894  0012B0  C06B  F008         	movff	_TemperaturaAdecuada+1,Comparar_T_H_Adecuados@TempDigitada+1
   895  0012B4  C068  F009         	movff	_HumedadAdecuada,Comparar_T_H_Adecuados@HumDigitada
   896  0012B8  C069  F00A         	movff	_HumedadAdecuada+1,Comparar_T_H_Adecuados@HumDigitada+1
   897  0012BC  C06E  F00B         	movff	_MargenET,Comparar_T_H_Adecuados@MargenErrorT
   898  0012C0  C06F  F00C         	movff	_MargenET+1,Comparar_T_H_Adecuados@MargenErrorT+1
   899  0012C4  C06C  F00D         	movff	_MargenEH,Comparar_T_H_Adecuados@MargenErrorH
   900  0012C8  C06D  F00E         	movff	_MargenEH+1,Comparar_T_H_Adecuados@MargenErrorH+1
   901  0012CC  ECA5  F009         	call	_Comparar_T_H_Adecuados	;wreg free
   902  0012D0                     
   903                           ;Main_Invernadero.c: 36:         ControlHumedadAspersor(&Datos[1],HumedadAdecuada,Margen
      +                          EH);
   904  0012D0  0E9E               	movlw	low (_Datos+1)
   905  0012D2  6E01               	movwf	ControlHumedadAspersor@HumedadActual^0,c
   906  0012D4  0E00               	movlw	high (_Datos+1)
   907  0012D6  6E02               	movwf	(ControlHumedadAspersor@HumedadActual+1)^0,c
   908  0012D8  C068  F003         	movff	_HumedadAdecuada,ControlHumedadAspersor@HumedadDigitada
   909  0012DC  C069  F004         	movff	_HumedadAdecuada+1,ControlHumedadAspersor@HumedadDigitada+1
   910  0012E0  C06C  F005         	movff	_MargenEH,ControlHumedadAspersor@MargenErrorH
   911  0012E4  C06D  F006         	movff	_MargenEH+1,ControlHumedadAspersor@MargenErrorH+1
   912  0012E8  EC9C  F00D         	call	_ControlHumedadAspersor	;wreg free
   913  0012EC                     
   914                           ;Main_Invernadero.c: 37:         ControlTemperaturaVentilador(&Datos[0],TemperaturaAdecu
      +                          ada,MargenET);
   915  0012EC  0E9D               	movlw	low _Datos
   916  0012EE  6E01               	movwf	ControlTemperaturaVentilador@TempActual^0,c
   917  0012F0  0E00               	movlw	high _Datos
   918  0012F2  6E02               	movwf	(ControlTemperaturaVentilador@TempActual+1)^0,c
   919  0012F4  C06A  F003         	movff	_TemperaturaAdecuada,ControlTemperaturaVentilador@TempDigitada
   920  0012F8  C06B  F004         	movff	_TemperaturaAdecuada+1,ControlTemperaturaVentilador@TempDigitada+1
   921  0012FC  C06E  F005         	movff	_MargenET,ControlTemperaturaVentilador@MargenErrorT
   922  001300  C06F  F006         	movff	_MargenET+1,ControlTemperaturaVentilador@MargenErrorT+1
   923  001304  EC79  F00D         	call	_ControlTemperaturaVentilador	;wreg free
   924  001308                     
   925                           ;Main_Invernadero.c: 39:         MostrarHumedad(Cadena,Datos[1]);
   926  001308  0E93               	movlw	low _Cadena
   927  00130A  0100               	movlb	0	; () banked
   928  00130C  6FBA               	movwf	MostrarHumedad@Cadena& (0+255),b
   929  00130E  0E00               	movlw	high _Cadena
   930  001310  6FBB               	movwf	(MostrarHumedad@Cadena+1)& (0+255),b
   931  001312  C09E  F0BC         	movff	_Datos+1,MostrarHumedad@Humedad
   932  001316  EC0F  F00C         	call	_MostrarHumedad	;wreg free
   933  00131A                     
   934                           ;Main_Invernadero.c: 41:         MostrarTemperatura(Cadena,Datos[0]);
   935  00131A  0E93               	movlw	low _Cadena
   936  00131C  0100               	movlb	0	; () banked
   937  00131E  6FBA               	movwf	MostrarTemperatura@Cadena& (0+255),b
   938  001320  0E00               	movlw	high _Cadena
   939  001322  6FBB               	movwf	(MostrarTemperatura@Cadena+1)& (0+255),b
   940  001324  C09D  F0BC         	movff	_Datos,MostrarTemperatura@Temperatura
   941  001328  ECD7  F00B         	call	_MostrarTemperatura	;wreg free
   942  00132C                     
   943                           ;Main_Invernadero.c: 43:        _delay((unsigned long)((500)*(8000000L/4000.0)));
   944  00132C  0E06               	movlw	6
   945  00132E  6E5F               	movwf	(??_main+1)^0,c
   946  001330  0E13               	movlw	19
   947  001332  6E5E               	movwf	??_main^0,c
   948  001334  0EAE               	movlw	174
   949  001336                     u1697:
   950  001336  2EE8               	decfsz	wreg,f,c
   951  001338  D7FE               	bra	u1697
   952  00133A  2E5E               	decfsz	??_main^0,f,c
   953  00133C  D7FC               	bra	u1697
   954  00133E  2E5F               	decfsz	(??_main+1)^0,f,c
   955  001340  D7FA               	bra	u1697
   956  001342  EF0A  F009         	goto	l2405
   957  001346  EF00  F000         	goto	start
   958  00134A                     __end_of_main:
   959                           	callstack 0
   960                           
   961 ;; *************** function _initTeclado *****************
   962 ;; Defined at:
   963 ;;		line 146 in file "keypad.c"
   964 ;; Parameters:    Size  Location     Type
   965 ;;		None
   966 ;; Auto vars:     Size  Location     Type
   967 ;;		None
   968 ;; Return value:  Size  Location     Type
   969 ;;                  1    wreg      void 
   970 ;; Registers used:
   971 ;;		None
   972 ;; Tracked objects:
   973 ;;		On entry : 0/0
   974 ;;		On exit  : 0/0
   975 ;;		Unchanged: 0/0
   976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   977 ;;      Params:         0       0       0       0       0       0       0       0       0
   978 ;;      Locals:         0       0       0       0       0       0       0       0       0
   979 ;;      Temps:          0       0       0       0       0       0       0       0       0
   980 ;;      Totals:         0       0       0       0       0       0       0       0       0
   981 ;;Total ram usage:        0 bytes
   982 ;; Hardware stack levels used: 1
   983 ;; This function calls:
   984 ;;		Nothing
   985 ;; This function is called by:
   986 ;;		_main
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990                           	psect	text1
   991  001DFA                     __ptext1:
   992                           	callstack 0
   993  001DFA                     _initTeclado:
   994                           	callstack 30
   995  001DFA                     
   996                           ;keypad.c: 147:     RBPU=0;
   997  001DFA  9EF1               	bcf	4081,7,c	;volatile
   998  001DFC  0012               	return		;funcret
   999  001DFE                     __end_of_initTeclado:
  1000                           	callstack 0
  1001                           
  1002 ;; *************** function _initActuadores *****************
  1003 ;; Defined at:
  1004 ;;		line 11 in file "Actuadores.c"
  1005 ;; Parameters:    Size  Location     Type
  1006 ;;		None
  1007 ;; Auto vars:     Size  Location     Type
  1008 ;;		None
  1009 ;; Return value:  Size  Location     Type
  1010 ;;                  1    wreg      void 
  1011 ;; Registers used:
  1012 ;;		wreg, status,2
  1013 ;; Tracked objects:
  1014 ;;		On entry : 0/0
  1015 ;;		On exit  : 0/0
  1016 ;;		Unchanged: 0/0
  1017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1018 ;;      Params:         0       0       0       0       0       0       0       0       0
  1019 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1020 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1021 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1022 ;;Total ram usage:        0 bytes
  1023 ;; Hardware stack levels used: 1
  1024 ;; This function calls:
  1025 ;;		Nothing
  1026 ;; This function is called by:
  1027 ;;		_main
  1028 ;; This function uses a non-reentrant model
  1029 ;;
  1030                           
  1031                           	psect	text2
  1032  001DCA                     __ptext2:
  1033                           	callstack 0
  1034  001DCA                     _initActuadores:
  1035                           	callstack 30
  1036  001DCA                     
  1037                           ;Actuadores.c: 12:     TRISC=0x00;
  1038  001DCA  0E00               	movlw	0
  1039  001DCC  6E94               	movwf	148,c	;volatile
  1040                           
  1041                           ;Actuadores.c: 13:     TRISE = 0;
  1042  001DCE  0E00               	movlw	0
  1043  001DD0  6E96               	movwf	150,c	;volatile
  1044  001DD2  0012               	return		;funcret
  1045  001DD4                     __end_of_initActuadores:
  1046                           	callstack 0
  1047                           
  1048 ;; *************** function _PedirTodosLosDatos *****************
  1049 ;; Defined at:
  1050 ;;		line 132 in file "LCD.c"
  1051 ;; Parameters:    Size  Location     Type
  1052 ;;  Temperatura     2   20[COMRAM] PTR unsigned char 
  1053 ;;		 -> Temperatura(2), 
  1054 ;;  Humedad         2   22[COMRAM] PTR unsigned char 
  1055 ;;		 -> Humedad(2), 
  1056 ;;  MargenErrorT    2   24[COMRAM] PTR unsigned char 
  1057 ;;		 -> MargenErrorT(1), 
  1058 ;;  MargenErrorH    2   26[COMRAM] PTR unsigned char 
  1059 ;;		 -> MargenErrorH(1), 
  1060 ;; Auto vars:     Size  Location     Type
  1061 ;;		None
  1062 ;; Return value:  Size  Location     Type
  1063 ;;                  1    wreg      void 
  1064 ;; Registers used:
  1065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1066 ;; Tracked objects:
  1067 ;;		On entry : 0/0
  1068 ;;		On exit  : 0/0
  1069 ;;		Unchanged: 0/0
  1070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1071 ;;      Params:         8       0       0       0       0       0       0       0       0
  1072 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1073 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1074 ;;      Totals:        10       0       0       0       0       0       0       0       0
  1075 ;;Total ram usage:       10 bytes
  1076 ;; Hardware stack levels used: 1
  1077 ;; Hardware stack levels required when called: 4
  1078 ;; This function calls:
  1079 ;;		_PedirDato
  1080 ;; This function is called by:
  1081 ;;		_main
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085                           	psect	text3
  1086  0015D6                     __ptext3:
  1087                           	callstack 0
  1088  0015D6                     _PedirTodosLosDatos:
  1089                           	callstack 26
  1090  0015D6                     
  1091                           ;LCD.c: 133:        PedirDato("Temp. Adecuada",Temperatura,2);
  1092  0015D6  0E01               	movlw	low STR_1
  1093  0015D8  6E0A               	movwf	PedirDato@Etiqueta^0,c
  1094  0015DA  0E08               	movlw	high STR_1
  1095  0015DC  6E0B               	movwf	(PedirDato@Etiqueta+1)^0,c
  1096  0015DE  C015  F00C         	movff	PedirTodosLosDatos@Temperatura,PedirDato@vecLlenar
  1097  0015E2  C016  F00D         	movff	PedirTodosLosDatos@Temperatura+1,PedirDato@vecLlenar+1
  1098  0015E6  0E00               	movlw	0
  1099  0015E8  6E0F               	movwf	(PedirDato@CantDatos+1)^0,c
  1100  0015EA  0E02               	movlw	2
  1101  0015EC  6E0E               	movwf	PedirDato@CantDatos^0,c
  1102  0015EE  EC48  F00B         	call	_PedirDato	;wreg free
  1103  0015F2                     
  1104                           ;LCD.c: 134:        _delay((unsigned long)((100)*(8000000L/4000.0)));
  1105  0015F2  0E02               	movlw	2
  1106  0015F4  6E1E               	movwf	(??_PedirTodosLosDatos+1)^0,c
  1107  0015F6  0E04               	movlw	4
  1108  0015F8  6E1D               	movwf	??_PedirTodosLosDatos^0,c
  1109  0015FA  0EBA               	movlw	186
  1110  0015FC                     u1707:
  1111  0015FC  2EE8               	decfsz	wreg,f,c
  1112  0015FE  D7FE               	bra	u1707
  1113  001600  2E1D               	decfsz	??_PedirTodosLosDatos^0,f,c
  1114  001602  D7FC               	bra	u1707
  1115  001604  2E1E               	decfsz	(??_PedirTodosLosDatos+1)^0,f,c
  1116  001606  D7FA               	bra	u1707
  1117  001608  D000               	nop2	
  1118  00160A                     
  1119                           ;LCD.c: 135:        PedirDato("Mgn Error Temp",MargenErrorT,1);
  1120  00160A  0E10               	movlw	low STR_2
  1121  00160C  6E0A               	movwf	PedirDato@Etiqueta^0,c
  1122  00160E  0E08               	movlw	high STR_2
  1123  001610  6E0B               	movwf	(PedirDato@Etiqueta+1)^0,c
  1124  001612  C019  F00C         	movff	PedirTodosLosDatos@MargenErrorT,PedirDato@vecLlenar
  1125  001616  C01A  F00D         	movff	PedirTodosLosDatos@MargenErrorT+1,PedirDato@vecLlenar+1
  1126  00161A  0E00               	movlw	0
  1127  00161C  6E0F               	movwf	(PedirDato@CantDatos+1)^0,c
  1128  00161E  0E01               	movlw	1
  1129  001620  6E0E               	movwf	PedirDato@CantDatos^0,c
  1130  001622  EC48  F00B         	call	_PedirDato	;wreg free
  1131                           
  1132                           ;LCD.c: 136:         _delay((unsigned long)((100)*(8000000L/4000.0)));
  1133  001626  0E02               	movlw	2
  1134  001628  6E1E               	movwf	(??_PedirTodosLosDatos+1)^0,c
  1135  00162A  0E04               	movlw	4
  1136  00162C  6E1D               	movwf	??_PedirTodosLosDatos^0,c
  1137  00162E  0EBA               	movlw	186
  1138  001630                     u1717:
  1139  001630  2EE8               	decfsz	wreg,f,c
  1140  001632  D7FE               	bra	u1717
  1141  001634  2E1D               	decfsz	??_PedirTodosLosDatos^0,f,c
  1142  001636  D7FC               	bra	u1717
  1143  001638  2E1E               	decfsz	(??_PedirTodosLosDatos+1)^0,f,c
  1144  00163A  D7FA               	bra	u1717
  1145  00163C  D000               	nop2	
  1146  00163E                     
  1147                           ;LCD.c: 137:        PedirDato("Hum. Adecuada",Humedad,2);
  1148  00163E  0E1F               	movlw	low STR_3
  1149  001640  6E0A               	movwf	PedirDato@Etiqueta^0,c
  1150  001642  0E08               	movlw	high STR_3
  1151  001644  6E0B               	movwf	(PedirDato@Etiqueta+1)^0,c
  1152  001646  C017  F00C         	movff	PedirTodosLosDatos@Humedad,PedirDato@vecLlenar
  1153  00164A  C018  F00D         	movff	PedirTodosLosDatos@Humedad+1,PedirDato@vecLlenar+1
  1154  00164E  0E00               	movlw	0
  1155  001650  6E0F               	movwf	(PedirDato@CantDatos+1)^0,c
  1156  001652  0E02               	movlw	2
  1157  001654  6E0E               	movwf	PedirDato@CantDatos^0,c
  1158  001656  EC48  F00B         	call	_PedirDato	;wreg free
  1159  00165A                     
  1160                           ;LCD.c: 138:        _delay((unsigned long)((100)*(8000000L/4000.0)));
  1161  00165A  0E02               	movlw	2
  1162  00165C  6E1E               	movwf	(??_PedirTodosLosDatos+1)^0,c
  1163  00165E  0E04               	movlw	4
  1164  001660  6E1D               	movwf	??_PedirTodosLosDatos^0,c
  1165  001662  0EBA               	movlw	186
  1166  001664                     u1727:
  1167  001664  2EE8               	decfsz	wreg,f,c
  1168  001666  D7FE               	bra	u1727
  1169  001668  2E1D               	decfsz	??_PedirTodosLosDatos^0,f,c
  1170  00166A  D7FC               	bra	u1727
  1171  00166C  2E1E               	decfsz	(??_PedirTodosLosDatos+1)^0,f,c
  1172  00166E  D7FA               	bra	u1727
  1173  001670  D000               	nop2	
  1174                           
  1175                           ;LCD.c: 139:        PedirDato("Mgn Error Hum",MargenErrorH,1);
  1176  001672  0E2D               	movlw	low STR_4
  1177  001674  6E0A               	movwf	PedirDato@Etiqueta^0,c
  1178  001676  0E08               	movlw	high STR_4
  1179  001678  6E0B               	movwf	(PedirDato@Etiqueta+1)^0,c
  1180  00167A  C01B  F00C         	movff	PedirTodosLosDatos@MargenErrorH,PedirDato@vecLlenar
  1181  00167E  C01C  F00D         	movff	PedirTodosLosDatos@MargenErrorH+1,PedirDato@vecLlenar+1
  1182  001682  0E00               	movlw	0
  1183  001684  6E0F               	movwf	(PedirDato@CantDatos+1)^0,c
  1184  001686  0E01               	movlw	1
  1185  001688  6E0E               	movwf	PedirDato@CantDatos^0,c
  1186  00168A  EC48  F00B         	call	_PedirDato	;wreg free
  1187  00168E  0012               	return		;funcret
  1188  001690                     __end_of_PedirTodosLosDatos:
  1189                           	callstack 0
  1190                           
  1191 ;; *************** function _PedirDato *****************
  1192 ;; Defined at:
  1193 ;;		line 108 in file "LCD.c"
  1194 ;; Parameters:    Size  Location     Type
  1195 ;;  Etiqueta        2    9[COMRAM] PTR unsigned char 
  1196 ;;		 -> STR_4(14), STR_3(14), STR_2(15), STR_1(15), 
  1197 ;;  vecLlenar       2   11[COMRAM] PTR unsigned char 
  1198 ;;		 -> MargenErrorH(1), MargenErrorT(1), Humedad(2), Temperatura(2), 
  1199 ;;  CantDatos       2   13[COMRAM] int 
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;  i               2   17[COMRAM] int 
  1202 ;;  tecla           1   19[COMRAM] unsigned char 
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  1    wreg      void 
  1205 ;; Registers used:
  1206 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1212 ;;      Params:         6       0       0       0       0       0       0       0       0
  1213 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1214 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1215 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1216 ;;Total ram usage:       11 bytes
  1217 ;; Hardware stack levels used: 1
  1218 ;; Hardware stack levels required when called: 3
  1219 ;; This function calls:
  1220 ;;		_LCD_Char
  1221 ;;		_LCD_Clear
  1222 ;;		_LCD_Command
  1223 ;;		_LCD_String_xy
  1224 ;;		_keyfind
  1225 ;; This function is called by:
  1226 ;;		_PedirTodosLosDatos
  1227 ;; This function uses a non-reentrant model
  1228 ;;
  1229                           
  1230                           	psect	text4
  1231  001690                     __ptext4:
  1232                           	callstack 0
  1233  001690                     _PedirDato:
  1234                           	callstack 26
  1235  001690                     
  1236                           ;LCD.c: 109:      LCD_Clear();
  1237  001690  ECA6  F00E         	call	_LCD_Clear	;wreg free
  1238  001694                     
  1239                           ;LCD.c: 111:      unsigned char tecla;;LCD.c: 112:      LCD_String_xy(0,0,Etiqueta);
  1240  001694  0E00               	movlw	0
  1241  001696  6E05               	movwf	LCD_String_xy@pos^0,c
  1242  001698  C00A  F006         	movff	PedirDato@Etiqueta,LCD_String_xy@msg
  1243  00169C  C00B  F007         	movff	PedirDato@Etiqueta+1,LCD_String_xy@msg+1
  1244  0016A0  0E00               	movlw	0
  1245  0016A2  EC01  F00E         	call	_LCD_String_xy
  1246  0016A6                     
  1247                           ;LCD.c: 113:      LCD_Command(0xC0);
  1248  0016A6  0EC0               	movlw	192
  1249  0016A8  EC51  F00D         	call	_LCD_Command
  1250  0016AC                     
  1251                           ;LCD.c: 115:      for(int i=0 ; i < CantDatos ; i++){
  1252  0016AC  0E00               	movlw	0
  1253  0016AE  6E13               	movwf	(PedirDato@i+1)^0,c
  1254  0016B0  0E00               	movlw	0
  1255  0016B2  6E12               	movwf	PedirDato@i^0,c
  1256  0016B4  EF7E  F00B         	goto	l2203
  1257  0016B8                     l2191:
  1258                           
  1259                           ;LCD.c: 117:      tecla=keyfind();
  1260  0016B8  EC99  F005         	call	_keyfind	;wreg free
  1261  0016BC  6E14               	movwf	PedirDato@tecla^0,c
  1262  0016BE                     
  1263                           ;LCD.c: 118:      }while(tecla=='*'||tecla=='#');
  1264  0016BE  0E2A               	movlw	42
  1265  0016C0  1814               	xorwf	PedirDato@tecla^0,w,c
  1266  0016C2  B4D8               	btfsc	status,2,c
  1267  0016C4  EF66  F00B         	goto	u1481
  1268  0016C8  EF68  F00B         	goto	u1480
  1269  0016CC                     u1481:
  1270  0016CC  EF5C  F00B         	goto	l2191
  1271  0016D0                     u1480:
  1272  0016D0  0E23               	movlw	35
  1273  0016D2  1814               	xorwf	PedirDato@tecla^0,w,c
  1274  0016D4  B4D8               	btfsc	status,2,c
  1275  0016D6  EF6F  F00B         	goto	u1491
  1276  0016DA  EF71  F00B         	goto	u1490
  1277  0016DE                     u1491:
  1278  0016DE  EF5C  F00B         	goto	l2191
  1279  0016E2                     u1490:
  1280  0016E2                     
  1281                           ;LCD.c: 119:      LCD_Char(tecla);
  1282  0016E2  5014               	movf	PedirDato@tecla^0,w,c
  1283  0016E4  EC29  F00D         	call	_LCD_Char
  1284  0016E8                     
  1285                           ;LCD.c: 120:      vecLlenar[i] = tecla;
  1286  0016E8  5012               	movf	PedirDato@i^0,w,c
  1287  0016EA  240C               	addwf	PedirDato@vecLlenar^0,w,c
  1288  0016EC  6ED9               	movwf	fsr2l,c
  1289  0016EE  5013               	movf	(PedirDato@i+1)^0,w,c
  1290  0016F0  200D               	addwfc	(PedirDato@vecLlenar+1)^0,w,c
  1291  0016F2  6EDA               	movwf	fsr2h,c
  1292  0016F4  C014  FFDF         	movff	PedirDato@tecla,indf2
  1293  0016F8                     
  1294                           ;LCD.c: 122:      }
  1295  0016F8  4A12               	infsnz	PedirDato@i^0,f,c
  1296  0016FA  2A13               	incf	(PedirDato@i+1)^0,f,c
  1297  0016FC                     l2203:
  1298  0016FC  500E               	movf	PedirDato@CantDatos^0,w,c
  1299  0016FE  5C12               	subwf	PedirDato@i^0,w,c
  1300  001700  5013               	movf	(PedirDato@i+1)^0,w,c
  1301  001702  0A80               	xorlw	128
  1302  001704  6E10               	movwf	??_PedirDato^0,c
  1303  001706  500F               	movf	(PedirDato@CantDatos+1)^0,w,c
  1304  001708  0A80               	xorlw	128
  1305  00170A  5810               	subwfb	??_PedirDato^0,w,c
  1306  00170C  A0D8               	btfss	status,0,c
  1307  00170E  EF8B  F00B         	goto	u1501
  1308  001712  EF8D  F00B         	goto	u1500
  1309  001716                     u1501:
  1310  001716  EF5C  F00B         	goto	l2191
  1311  00171A                     u1500:
  1312  00171A                     
  1313                           ;LCD.c: 123:      _delay((unsigned long)((100)*(8000000L/4000.0)));
  1314  00171A  0E02               	movlw	2
  1315  00171C  6E11               	movwf	(??_PedirDato+1)^0,c
  1316  00171E  0E04               	movlw	4
  1317  001720  6E10               	movwf	??_PedirDato^0,c
  1318  001722  0EBA               	movlw	186
  1319  001724                     u1737:
  1320  001724  2EE8               	decfsz	wreg,f,c
  1321  001726  D7FE               	bra	u1737
  1322  001728  2E10               	decfsz	??_PedirDato^0,f,c
  1323  00172A  D7FC               	bra	u1737
  1324  00172C  2E11               	decfsz	(??_PedirDato+1)^0,f,c
  1325  00172E  D7FA               	bra	u1737
  1326  001730  D000               	nop2	
  1327  001732                     
  1328                           ;LCD.c: 124:      LCD_Clear();
  1329  001732  ECA6  F00E         	call	_LCD_Clear	;wreg free
  1330  001736  0012               	return		;funcret
  1331  001738                     __end_of_PedirDato:
  1332                           	callstack 0
  1333                           
  1334 ;; *************** function _keyfind *****************
  1335 ;; Defined at:
  1336 ;;		line 18 in file "keypad.c"
  1337 ;; Parameters:    Size  Location     Type
  1338 ;;		None
  1339 ;; Auto vars:     Size  Location     Type
  1340 ;;		None
  1341 ;; Return value:  Size  Location     Type
  1342 ;;                  1    wreg      unsigned char 
  1343 ;; Registers used:
  1344 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1345 ;; Tracked objects:
  1346 ;;		On entry : 0/0
  1347 ;;		On exit  : 0/0
  1348 ;;		Unchanged: 0/0
  1349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1350 ;;      Params:         0       0       0       0       0       0       0       0       0
  1351 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1352 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1353 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1354 ;;Total ram usage:        1 bytes
  1355 ;; Hardware stack levels used: 1
  1356 ;; This function calls:
  1357 ;;		Nothing
  1358 ;; This function is called by:
  1359 ;;		_PedirDato
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363                           	psect	text5
  1364  000B32                     __ptext5:
  1365                           	callstack 0
  1366  000B32                     _keyfind:
  1367                           	callstack 28
  1368  000B32                     
  1369                           ;keypad.c: 21:          TRISB = 0xf0;
  1370  000B32  0EF0               	movlw	240
  1371  000B34  6E93               	movwf	147,c	;volatile
  1372                           
  1373                           ;keypad.c: 22:          LATB = 0xf0;
  1374  000B36  0EF0               	movlw	240
  1375  000B38  6E8A               	movwf	138,c	;volatile
  1376  000B3A                     l2079:
  1377                           
  1378                           ;keypad.c: 26:         {;keypad.c: 28:             col_loc = PORTB & 0xf0;
  1379  000B3A  5081               	movf	129,w,c	;volatile
  1380  000B3C  0BF0               	andlw	240
  1381  000B3E  0100               	movlb	0	; () banked
  1382  000B40  6F72               	movwf	_col_loc& (0+255),b
  1383  000B42                     
  1384                           ; BSR set to: 0
  1385                           ;keypad.c: 30:         }while(col_loc!=0xf0);
  1386  000B42  0EF0               	movlw	240
  1387  000B44  1972               	xorwf	_col_loc& (0+255),w,b
  1388  000B46  A4D8               	btfss	status,2,c
  1389  000B48  EFA8  F005         	goto	u1321
  1390  000B4C  EFAA  F005         	goto	u1320
  1391  000B50                     u1321:
  1392  000B50  EF9D  F005         	goto	l2079
  1393  000B54                     u1320:
  1394  000B54                     
  1395                           ; BSR set to: 0
  1396                           ;keypad.c: 31:          col_loc = PORTB & 0xf0;
  1397  000B54  5081               	movf	129,w,c	;volatile
  1398  000B56  0BF0               	andlw	240
  1399  000B58  6F72               	movwf	_col_loc& (0+255),b
  1400                           
  1401                           ;keypad.c: 32:       }while(col_loc!=0xf0);
  1402  000B5A  0EF0               	movlw	240
  1403  000B5C  1972               	xorwf	_col_loc& (0+255),w,b
  1404  000B5E  A4D8               	btfss	status,2,c
  1405  000B60  EFB4  F005         	goto	u1331
  1406  000B64  EFB6  F005         	goto	u1330
  1407  000B68                     u1331:
  1408  000B68  EF9D  F005         	goto	l2079
  1409  000B6C                     u1330:
  1410  000B6C                     
  1411                           ; BSR set to: 0
  1412                           ;keypad.c: 34:       _delay((unsigned long)((30)*(8000000L/4000.0)));
  1413  000B6C  0E4E               	movlw	78
  1414  000B6E  6E01               	movwf	??_keyfind^0,c
  1415  000B70  0EEB               	movlw	235
  1416  000B72                     u1747:
  1417  000B72  2EE8               	decfsz	wreg,f,c
  1418  000B74  D7FE               	bra	u1747
  1419  000B76  2E01               	decfsz	??_keyfind^0,f,c
  1420  000B78  D7FC               	bra	u1747
  1421  000B7A  F000               	nop	
  1422  000B7C                     
  1423                           ;keypad.c: 35:         LATB = 0xf0;
  1424  000B7C  0EF0               	movlw	240
  1425  000B7E  6E8A               	movwf	138,c	;volatile
  1426  000B80                     l2089:
  1427                           
  1428                           ;keypad.c: 39:             {;keypad.c: 40:                 col_loc = PORTB & 0xf0;
  1429  000B80  5081               	movf	129,w,c	;volatile
  1430  000B82  0BF0               	andlw	240
  1431  000B84  0100               	movlb	0	; () banked
  1432  000B86  6F72               	movwf	_col_loc& (0+255),b
  1433  000B88                     
  1434                           ; BSR set to: 0
  1435                           ;keypad.c: 41:             }while(col_loc==0xf0);
  1436  000B88  0EF0               	movlw	240
  1437  000B8A  1972               	xorwf	_col_loc& (0+255),w,b
  1438  000B8C  B4D8               	btfsc	status,2,c
  1439  000B8E  EFCB  F005         	goto	u1341
  1440  000B92  EFCD  F005         	goto	u1340
  1441  000B96                     u1341:
  1442  000B96  EFC0  F005         	goto	l2089
  1443  000B9A                     u1340:
  1444  000B9A                     
  1445                           ; BSR set to: 0
  1446                           ;keypad.c: 42:          col_loc = PORTB & 0xf0;
  1447  000B9A  5081               	movf	129,w,c	;volatile
  1448  000B9C  0BF0               	andlw	240
  1449  000B9E  6F72               	movwf	_col_loc& (0+255),b
  1450                           
  1451                           ;keypad.c: 43:         }while(col_loc==0xf0);
  1452  000BA0  0EF0               	movlw	240
  1453  000BA2  1972               	xorwf	_col_loc& (0+255),w,b
  1454  000BA4  B4D8               	btfsc	status,2,c
  1455  000BA6  EFD7  F005         	goto	u1351
  1456  000BAA  EFD9  F005         	goto	u1350
  1457  000BAE                     u1351:
  1458  000BAE  EFC0  F005         	goto	l2089
  1459  000BB2                     u1350:
  1460  000BB2                     
  1461                           ; BSR set to: 0
  1462                           ;keypad.c: 45:         _delay((unsigned long)((30)*(8000000L/4000.0)));
  1463  000BB2  0E4E               	movlw	78
  1464  000BB4  6E01               	movwf	??_keyfind^0,c
  1465  000BB6  0EEB               	movlw	235
  1466  000BB8                     u1757:
  1467  000BB8  2EE8               	decfsz	wreg,f,c
  1468  000BBA  D7FE               	bra	u1757
  1469  000BBC  2E01               	decfsz	??_keyfind^0,f,c
  1470  000BBE  D7FC               	bra	u1757
  1471  000BC0  F000               	nop	
  1472  000BC2                     
  1473                           ;keypad.c: 47:         col_loc = PORTB & 0xf0;
  1474  000BC2  5081               	movf	129,w,c	;volatile
  1475  000BC4  0BF0               	andlw	240
  1476  000BC6  0100               	movlb	0	; () banked
  1477  000BC8  6F72               	movwf	_col_loc& (0+255),b
  1478  000BCA                     l2099:
  1479                           
  1480                           ; BSR set to: 0
  1481                           ;keypad.c: 52:     {;keypad.c: 53:         LATB = 0xfe;
  1482  000BCA  0EFE               	movlw	254
  1483  000BCC  6E8A               	movwf	138,c	;volatile
  1484  000BCE                     
  1485                           ; BSR set to: 0
  1486                           ;keypad.c: 54:         col_loc = PORTB & 0xf0;
  1487  000BCE  5081               	movf	129,w,c	;volatile
  1488  000BD0  0BF0               	andlw	240
  1489  000BD2  6F72               	movwf	_col_loc& (0+255),b
  1490  000BD4                     
  1491                           ; BSR set to: 0
  1492                           ;keypad.c: 55:         temp_col=col_loc;
  1493  000BD4  C072  F070         	movff	_col_loc,_temp_col
  1494  000BD8                     
  1495                           ; BSR set to: 0
  1496                           ;keypad.c: 56:         if(col_loc!=0xf0)
  1497  000BD8  0EF0               	movlw	240
  1498  000BDA  1972               	xorwf	_col_loc& (0+255),w,b
  1499  000BDC  B4D8               	btfsc	status,2,c
  1500  000BDE  EFF3  F005         	goto	u1361
  1501  000BE2  EFF5  F005         	goto	u1360
  1502  000BE6                     u1361:
  1503  000BE6  EF07  F006         	goto	l2111
  1504  000BEA                     u1360:
  1505  000BEA                     
  1506                           ; BSR set to: 0
  1507                           ;keypad.c: 57:         {;keypad.c: 58:             rowloc=0;
  1508  000BEA  0E00               	movlw	0
  1509  000BEC  6F71               	movwf	_rowloc& (0+255),b
  1510                           
  1511                           ;keypad.c: 59:             while(temp_col!=0xf0)
  1512  000BEE  EFFC  F005         	goto	l166
  1513  000BF2                     l2109:
  1514                           
  1515                           ; BSR set to: 0
  1516                           ;keypad.c: 60:             {;keypad.c: 61:                 temp_col = PORTB & 0xf0;
  1517  000BF2  5081               	movf	129,w,c	;volatile
  1518  000BF4  0BF0               	andlw	240
  1519  000BF6  6F70               	movwf	_temp_col& (0+255),b
  1520  000BF8                     l166:
  1521                           
  1522                           ; BSR set to: 0
  1523                           ;keypad.c: 59:             while(temp_col!=0xf0)
  1524  000BF8  0EF0               	movlw	240
  1525  000BFA  1970               	xorwf	_temp_col& (0+255),w,b
  1526  000BFC  A4D8               	btfss	status,2,c
  1527  000BFE  EF03  F006         	goto	u1371
  1528  000C02  EF05  F006         	goto	u1370
  1529  000C06                     u1371:
  1530  000C06  EFF9  F005         	goto	l2109
  1531  000C0A                     u1370:
  1532  000C0A  EF6D  F006         	goto	l2147
  1533  000C0E                     l2111:
  1534                           
  1535                           ; BSR set to: 0
  1536                           ;keypad.c: 66:         LATB = 0xfd;
  1537  000C0E  0EFD               	movlw	253
  1538  000C10  6E8A               	movwf	138,c	;volatile
  1539  000C12                     
  1540                           ; BSR set to: 0
  1541                           ;keypad.c: 67:         col_loc = PORTB & 0xf0;
  1542  000C12  5081               	movf	129,w,c	;volatile
  1543  000C14  0BF0               	andlw	240
  1544  000C16  6F72               	movwf	_col_loc& (0+255),b
  1545  000C18                     
  1546                           ; BSR set to: 0
  1547                           ;keypad.c: 68:         temp_col=col_loc;
  1548  000C18  C072  F070         	movff	_col_loc,_temp_col
  1549  000C1C                     
  1550                           ; BSR set to: 0
  1551                           ;keypad.c: 69:         if(col_loc!=0xf0)
  1552  000C1C  0EF0               	movlw	240
  1553  000C1E  1972               	xorwf	_col_loc& (0+255),w,b
  1554  000C20  B4D8               	btfsc	status,2,c
  1555  000C22  EF15  F006         	goto	u1381
  1556  000C26  EF17  F006         	goto	u1380
  1557  000C2A                     u1381:
  1558  000C2A  EF29  F006         	goto	l2123
  1559  000C2E                     u1380:
  1560  000C2E                     
  1561                           ; BSR set to: 0
  1562                           ;keypad.c: 70:         {;keypad.c: 71:             rowloc=1;
  1563  000C2E  0E01               	movlw	1
  1564  000C30  6F71               	movwf	_rowloc& (0+255),b
  1565                           
  1566                           ;keypad.c: 72:             while(temp_col!=0xf0)
  1567  000C32  EF1E  F006         	goto	l171
  1568  000C36                     l2121:
  1569                           
  1570                           ; BSR set to: 0
  1571                           ;keypad.c: 73:             {;keypad.c: 74:                 temp_col = PORTB & 0xf0;
  1572  000C36  5081               	movf	129,w,c	;volatile
  1573  000C38  0BF0               	andlw	240
  1574  000C3A  6F70               	movwf	_temp_col& (0+255),b
  1575  000C3C                     l171:
  1576                           
  1577                           ; BSR set to: 0
  1578                           ;keypad.c: 72:             while(temp_col!=0xf0)
  1579  000C3C  0EF0               	movlw	240
  1580  000C3E  1970               	xorwf	_temp_col& (0+255),w,b
  1581  000C40  A4D8               	btfss	status,2,c
  1582  000C42  EF25  F006         	goto	u1391
  1583  000C46  EF27  F006         	goto	u1390
  1584  000C4A                     u1391:
  1585  000C4A  EF1B  F006         	goto	l2121
  1586  000C4E                     u1390:
  1587  000C4E  EF6D  F006         	goto	l2147
  1588  000C52                     l2123:
  1589                           
  1590                           ; BSR set to: 0
  1591                           ;keypad.c: 79:         LATB = 0xfb;
  1592  000C52  0EFB               	movlw	251
  1593  000C54  6E8A               	movwf	138,c	;volatile
  1594  000C56                     
  1595                           ; BSR set to: 0
  1596                           ;keypad.c: 80:         col_loc = PORTB & 0xf0;
  1597  000C56  5081               	movf	129,w,c	;volatile
  1598  000C58  0BF0               	andlw	240
  1599  000C5A  6F72               	movwf	_col_loc& (0+255),b
  1600  000C5C                     
  1601                           ; BSR set to: 0
  1602                           ;keypad.c: 81:         temp_col=col_loc;
  1603  000C5C  C072  F070         	movff	_col_loc,_temp_col
  1604  000C60                     
  1605                           ; BSR set to: 0
  1606                           ;keypad.c: 82:         if(col_loc!=0xf0)
  1607  000C60  0EF0               	movlw	240
  1608  000C62  1972               	xorwf	_col_loc& (0+255),w,b
  1609  000C64  B4D8               	btfsc	status,2,c
  1610  000C66  EF37  F006         	goto	u1401
  1611  000C6A  EF39  F006         	goto	u1400
  1612  000C6E                     u1401:
  1613  000C6E  EF4B  F006         	goto	l2135
  1614  000C72                     u1400:
  1615  000C72                     
  1616                           ; BSR set to: 0
  1617                           ;keypad.c: 83:         {;keypad.c: 84:             rowloc=2;
  1618  000C72  0E02               	movlw	2
  1619  000C74  6F71               	movwf	_rowloc& (0+255),b
  1620                           
  1621                           ;keypad.c: 85:             while(temp_col!=0xf0)
  1622  000C76  EF40  F006         	goto	l175
  1623  000C7A                     l2133:
  1624                           
  1625                           ; BSR set to: 0
  1626                           ;keypad.c: 86:             {;keypad.c: 87:                 temp_col = PORTB & 0xf0;
  1627  000C7A  5081               	movf	129,w,c	;volatile
  1628  000C7C  0BF0               	andlw	240
  1629  000C7E  6F70               	movwf	_temp_col& (0+255),b
  1630  000C80                     l175:
  1631                           
  1632                           ; BSR set to: 0
  1633                           ;keypad.c: 85:             while(temp_col!=0xf0)
  1634  000C80  0EF0               	movlw	240
  1635  000C82  1970               	xorwf	_temp_col& (0+255),w,b
  1636  000C84  A4D8               	btfss	status,2,c
  1637  000C86  EF47  F006         	goto	u1411
  1638  000C8A  EF49  F006         	goto	u1410
  1639  000C8E                     u1411:
  1640  000C8E  EF3D  F006         	goto	l2133
  1641  000C92                     u1410:
  1642  000C92  EF6D  F006         	goto	l2147
  1643  000C96                     l2135:
  1644                           
  1645                           ; BSR set to: 0
  1646                           ;keypad.c: 92:         LATB = 0xf7;
  1647  000C96  0EF7               	movlw	247
  1648  000C98  6E8A               	movwf	138,c	;volatile
  1649  000C9A                     
  1650                           ; BSR set to: 0
  1651                           ;keypad.c: 93:         col_loc = PORTB & 0xf0;
  1652  000C9A  5081               	movf	129,w,c	;volatile
  1653  000C9C  0BF0               	andlw	240
  1654  000C9E  6F72               	movwf	_col_loc& (0+255),b
  1655  000CA0                     
  1656                           ; BSR set to: 0
  1657                           ;keypad.c: 94:         temp_col=col_loc;
  1658  000CA0  C072  F070         	movff	_col_loc,_temp_col
  1659  000CA4                     
  1660                           ; BSR set to: 0
  1661                           ;keypad.c: 95:         if(col_loc!=0xf0)
  1662  000CA4  0EF0               	movlw	240
  1663  000CA6  1972               	xorwf	_col_loc& (0+255),w,b
  1664  000CA8  B4D8               	btfsc	status,2,c
  1665  000CAA  EF59  F006         	goto	u1421
  1666  000CAE  EF5B  F006         	goto	u1420
  1667  000CB2                     u1421:
  1668  000CB2  EFE5  F005         	goto	l2099
  1669  000CB6                     u1420:
  1670  000CB6                     
  1671                           ; BSR set to: 0
  1672                           ;keypad.c: 96:         {;keypad.c: 97:             rowloc=3;
  1673  000CB6  0E03               	movlw	3
  1674  000CB8  6F71               	movwf	_rowloc& (0+255),b
  1675                           
  1676                           ;keypad.c: 98:             while(temp_col!=0xf0)
  1677  000CBA  EF62  F006         	goto	l179
  1678  000CBE                     l2145:
  1679                           
  1680                           ; BSR set to: 0
  1681                           ;keypad.c: 99:             {;keypad.c: 100:                 temp_col = PORTB & 0xf0;
  1682  000CBE  5081               	movf	129,w,c	;volatile
  1683  000CC0  0BF0               	andlw	240
  1684  000CC2  6F70               	movwf	_temp_col& (0+255),b
  1685  000CC4                     l179:
  1686                           
  1687                           ; BSR set to: 0
  1688                           ;keypad.c: 98:             while(temp_col!=0xf0)
  1689  000CC4  0EF0               	movlw	240
  1690  000CC6  1970               	xorwf	_temp_col& (0+255),w,b
  1691  000CC8  A4D8               	btfss	status,2,c
  1692  000CCA  EF69  F006         	goto	u1431
  1693  000CCE  EF6B  F006         	goto	u1430
  1694  000CD2                     u1431:
  1695  000CD2  EF5F  F006         	goto	l2145
  1696  000CD6                     u1430:
  1697  000CD6  EF6D  F006         	goto	l2147
  1698  000CDA                     l169:
  1699  000CDA                     l2147:
  1700                           
  1701                           ; BSR set to: 0
  1702                           ;keypad.c: 109:     {;keypad.c: 111:         if(col_loc==0xe0)
  1703  000CDA  0EE0               	movlw	224
  1704  000CDC  1972               	xorwf	_col_loc& (0+255),w,b
  1705  000CDE  A4D8               	btfss	status,2,c
  1706  000CE0  EF74  F006         	goto	u1441
  1707  000CE4  EF76  F006         	goto	u1440
  1708  000CE8                     u1441:
  1709  000CE8  EF81  F006         	goto	l2155
  1710  000CEC                     u1440:
  1711  000CEC                     
  1712                           ; BSR set to: 0
  1713                           ;keypad.c: 112:         {;keypad.c: 113:              return keypad[rowloc][0];
  1714  000CEC  5171               	movf	_rowloc& (0+255),w,b
  1715  000CEE  0D03               	mullw	3
  1716  000CF0  0EA5               	movlw	low _keypad
  1717  000CF2  24F3               	addwf	243,w,c
  1718  000CF4  6ED9               	movwf	fsr2l,c
  1719  000CF6  0E00               	movlw	high _keypad
  1720  000CF8  20F4               	addwfc	prodh,w,c
  1721  000CFA  6EDA               	movwf	fsr2h,c
  1722  000CFC  50DF               	movf	indf2,w,c
  1723  000CFE  EFA7  F006         	goto	l185
  1724  000D02                     l2155:
  1725                           
  1726                           ; BSR set to: 0
  1727                           ;keypad.c: 116:             if(col_loc==0xd0)
  1728  000D02  0ED0               	movlw	208
  1729  000D04  1972               	xorwf	_col_loc& (0+255),w,b
  1730  000D06  A4D8               	btfss	status,2,c
  1731  000D08  EF88  F006         	goto	u1451
  1732  000D0C  EF8A  F006         	goto	u1450
  1733  000D10                     u1451:
  1734  000D10  EF95  F006         	goto	l2163
  1735  000D14                     u1450:
  1736  000D14                     
  1737                           ; BSR set to: 0
  1738                           ;keypad.c: 117:         {;keypad.c: 118:             return keypad[rowloc][1];
  1739  000D14  5171               	movf	_rowloc& (0+255),w,b
  1740  000D16  0D03               	mullw	3
  1741  000D18  0EA6               	movlw	low (_keypad+1)
  1742  000D1A  24F3               	addwf	243,w,c
  1743  000D1C  6ED9               	movwf	fsr2l,c
  1744  000D1E  0E00               	movlw	high (_keypad+1)
  1745  000D20  20F4               	addwfc	prodh,w,c
  1746  000D22  6EDA               	movwf	fsr2h,c
  1747  000D24  50DF               	movf	indf2,w,c
  1748  000D26  EFA7  F006         	goto	l185
  1749  000D2A                     l2163:
  1750                           
  1751                           ; BSR set to: 0
  1752                           ;keypad.c: 121:             if(col_loc==0xb0)
  1753  000D2A  0EB0               	movlw	176
  1754  000D2C  1972               	xorwf	_col_loc& (0+255),w,b
  1755  000D2E  A4D8               	btfss	status,2,c
  1756  000D30  EF9C  F006         	goto	u1461
  1757  000D34  EF9E  F006         	goto	u1460
  1758  000D38                     u1461:
  1759  000D38  EF6D  F006         	goto	l169
  1760  000D3C                     u1460:
  1761  000D3C                     
  1762                           ; BSR set to: 0
  1763                           ;keypad.c: 122:         {;keypad.c: 123:             return keypad[rowloc][2];
  1764  000D3C  5171               	movf	_rowloc& (0+255),w,b
  1765  000D3E  0D03               	mullw	3
  1766  000D40  0EA7               	movlw	low (_keypad+2)
  1767  000D42  24F3               	addwf	243,w,c
  1768  000D44  6ED9               	movwf	fsr2l,c
  1769  000D46  0E00               	movlw	high (_keypad+2)
  1770  000D48  20F4               	addwfc	prodh,w,c
  1771  000D4A  6EDA               	movwf	fsr2h,c
  1772  000D4C  50DF               	movf	indf2,w,c
  1773  000D4E                     l185:
  1774                           
  1775                           ; BSR set to: 0
  1776  000D4E  0012               	return		;funcret
  1777  000D50                     __end_of_keyfind:
  1778                           	callstack 0
  1779                           
  1780 ;; *************** function _LCD_Clear *****************
  1781 ;; Defined at:
  1782 ;;		line 96 in file "LCD.c"
  1783 ;; Parameters:    Size  Location     Type
  1784 ;;		None
  1785 ;; Auto vars:     Size  Location     Type
  1786 ;;		None
  1787 ;; Return value:  Size  Location     Type
  1788 ;;                  1    wreg      void 
  1789 ;; Registers used:
  1790 ;;		wreg, status,2, status,0, cstack
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1796 ;;      Params:         0       0       0       0       0       0       0       0       0
  1797 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1798 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1799 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1800 ;;Total ram usage:        1 bytes
  1801 ;; Hardware stack levels used: 1
  1802 ;; Hardware stack levels required when called: 1
  1803 ;; This function calls:
  1804 ;;		_LCD_Command
  1805 ;; This function is called by:
  1806 ;;		_PedirDato
  1807 ;; This function uses a non-reentrant model
  1808 ;;
  1809                           
  1810                           	psect	text6
  1811  001D4C                     __ptext6:
  1812                           	callstack 0
  1813  001D4C                     _LCD_Clear:
  1814                           	callstack 27
  1815  001D4C                     
  1816                           ;LCD.c: 98:     LCD_Command(0x01);
  1817  001D4C  0E01               	movlw	1
  1818  001D4E  EC51  F00D         	call	_LCD_Command
  1819  001D52                     
  1820                           ;LCD.c: 99:     _delay((unsigned long)((3)*(8000000L/4000.0)));
  1821  001D52  0E08               	movlw	8
  1822  001D54  6E03               	movwf	??_LCD_Clear^0,c
  1823  001D56  0ECA               	movlw	202
  1824  001D58                     u1767:
  1825  001D58  2EE8               	decfsz	wreg,f,c
  1826  001D5A  D7FE               	bra	u1767
  1827  001D5C  2E03               	decfsz	??_LCD_Clear^0,f,c
  1828  001D5E  D7FC               	bra	u1767
  1829  001D60                     
  1830                           ;LCD.c: 100:     LCD_Command (0x80);
  1831  001D60  0E80               	movlw	128
  1832  001D62  EC51  F00D         	call	_LCD_Command
  1833                           
  1834                           ;LCD.c: 101:     _delay((unsigned long)((1)*(8000000L/4000.0)));
  1835  001D66  0E03               	movlw	3
  1836  001D68  6E03               	movwf	??_LCD_Clear^0,c
  1837  001D6A  0E98               	movlw	152
  1838  001D6C                     u1777:
  1839  001D6C  2EE8               	decfsz	wreg,f,c
  1840  001D6E  D7FE               	bra	u1777
  1841  001D70  2E03               	decfsz	??_LCD_Clear^0,f,c
  1842  001D72  D7FC               	bra	u1777
  1843  001D74  0012               	return		;funcret
  1844  001D76                     __end_of_LCD_Clear:
  1845                           	callstack 0
  1846                           
  1847 ;; *************** function _MostrarTemperatura *****************
  1848 ;; Defined at:
  1849 ;;		line 151 in file "LCD.c"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;  Cadena          2    8[BANK0 ] PTR unsigned char 
  1852 ;;		 -> Cadena(10), 
  1853 ;;  Temperatura     1   10[BANK0 ] unsigned char 
  1854 ;; Auto vars:     Size  Location     Type
  1855 ;;		None
  1856 ;; Return value:  Size  Location     Type
  1857 ;;                  1    wreg      void 
  1858 ;; Registers used:
  1859 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1860 ;; Tracked objects:
  1861 ;;		On entry : 0/0
  1862 ;;		On exit  : 0/0
  1863 ;;		Unchanged: 0/0
  1864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1865 ;;      Params:         0       3       0       0       0       0       0       0       0
  1866 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1867 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1868 ;;      Totals:         0       3       0       0       0       0       0       0       0
  1869 ;;Total ram usage:        3 bytes
  1870 ;; Hardware stack levels used: 1
  1871 ;; Hardware stack levels required when called: 8
  1872 ;; This function calls:
  1873 ;;		_LCD_Char
  1874 ;;		_LCD_String
  1875 ;;		_LCD_String_xy
  1876 ;;		_sprintf
  1877 ;; This function is called by:
  1878 ;;		_main
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           
  1882                           	psect	text7
  1883  0017AE                     __ptext7:
  1884                           	callstack 0
  1885  0017AE                     _MostrarTemperatura:
  1886                           	callstack 22
  1887  0017AE                     
  1888                           ;LCD.c: 152:        sprintf(Cadena,"%d",Temperatura);
  1889  0017AE  C0BA  F058         	movff	MostrarTemperatura@Cadena,sprintf@s
  1890  0017B2  C0BB  F059         	movff	MostrarTemperatura@Cadena+1,sprintf@s+1
  1891  0017B6  0E4B               	movlw	low (STR_6+1)
  1892  0017B8  6E5A               	movwf	sprintf@fmt^0,c
  1893  0017BA  0E08               	movlw	high (STR_6+1)
  1894  0017BC  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1895  0017BE  C0BC  F05C         	movff	MostrarTemperatura@Temperatura,?_sprintf+4
  1896  0017C2  6A5D               	clrf	(?_sprintf+5)^0,c
  1897  0017C4  EC00  F00D         	call	_sprintf	;wreg free
  1898  0017C8                     
  1899                           ;LCD.c: 153:        LCD_String_xy(2,0,Cadena);
  1900  0017C8  0E00               	movlw	0
  1901  0017CA  6E05               	movwf	LCD_String_xy@pos^0,c
  1902  0017CC  C0BA  F006         	movff	MostrarTemperatura@Cadena,LCD_String_xy@msg
  1903  0017D0  C0BB  F007         	movff	MostrarTemperatura@Cadena+1,LCD_String_xy@msg+1
  1904  0017D4  0E02               	movlw	2
  1905  0017D6  EC01  F00E         	call	_LCD_String_xy
  1906  0017DA                     
  1907                           ;LCD.c: 154:        sprintf(Cadena,".%d",0);
  1908  0017DA  C0BA  F058         	movff	MostrarTemperatura@Cadena,sprintf@s
  1909  0017DE  C0BB  F059         	movff	MostrarTemperatura@Cadena+1,sprintf@s+1
  1910  0017E2  0E4A               	movlw	low STR_6
  1911  0017E4  6E5A               	movwf	sprintf@fmt^0,c
  1912  0017E6  0E08               	movlw	high STR_6
  1913  0017E8  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1914  0017EA  0E00               	movlw	0
  1915  0017EC  6E5D               	movwf	(?_sprintf+5)^0,c
  1916  0017EE  0E00               	movlw	0
  1917  0017F0  6E5C               	movwf	(?_sprintf+4)^0,c
  1918  0017F2  EC00  F00D         	call	_sprintf	;wreg free
  1919  0017F6                     
  1920                           ;LCD.c: 155:        LCD_Char(0xdf);
  1921  0017F6  0EDF               	movlw	223
  1922  0017F8  EC29  F00D         	call	_LCD_Char
  1923  0017FC                     
  1924                           ;LCD.c: 156:        sprintf(Cadena,"C Temp.");
  1925  0017FC  C0BA  F058         	movff	MostrarTemperatura@Cadena,sprintf@s
  1926  001800  C0BB  F059         	movff	MostrarTemperatura@Cadena+1,sprintf@s+1
  1927  001804  0E3B               	movlw	low STR_10
  1928  001806  6E5A               	movwf	sprintf@fmt^0,c
  1929  001808  0E08               	movlw	high STR_10
  1930  00180A  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1931  00180C  EC00  F00D         	call	_sprintf	;wreg free
  1932  001810                     
  1933                           ;LCD.c: 157:        LCD_String(Cadena);
  1934  001810  C0BA  F003         	movff	MostrarTemperatura@Cadena,LCD_String@msg
  1935  001814  C0BB  F004         	movff	MostrarTemperatura@Cadena+1,LCD_String@msg+1
  1936  001818  EC78  F00C         	call	_LCD_String	;wreg free
  1937  00181C  0012               	return		;funcret
  1938  00181E                     __end_of_MostrarTemperatura:
  1939                           	callstack 0
  1940                           
  1941 ;; *************** function _MostrarHumedad *****************
  1942 ;; Defined at:
  1943 ;;		line 142 in file "LCD.c"
  1944 ;; Parameters:    Size  Location     Type
  1945 ;;  Cadena          2    8[BANK0 ] PTR unsigned char 
  1946 ;;		 -> Cadena(10), 
  1947 ;;  Humedad         1   10[BANK0 ] unsigned char 
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;		None
  1950 ;; Return value:  Size  Location     Type
  1951 ;;                  1    wreg      void 
  1952 ;; Registers used:
  1953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1954 ;; Tracked objects:
  1955 ;;		On entry : 0/0
  1956 ;;		On exit  : 0/0
  1957 ;;		Unchanged: 0/0
  1958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1959 ;;      Params:         0       3       0       0       0       0       0       0       0
  1960 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1961 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1962 ;;      Totals:         0       3       0       0       0       0       0       0       0
  1963 ;;Total ram usage:        3 bytes
  1964 ;; Hardware stack levels used: 1
  1965 ;; Hardware stack levels required when called: 8
  1966 ;; This function calls:
  1967 ;;		_LCD_Char
  1968 ;;		_LCD_String
  1969 ;;		_LCD_String_xy
  1970 ;;		_sprintf
  1971 ;; This function is called by:
  1972 ;;		_main
  1973 ;; This function uses a non-reentrant model
  1974 ;;
  1975                           
  1976                           	psect	text8
  1977  00181E                     __ptext8:
  1978                           	callstack 0
  1979  00181E                     _MostrarHumedad:
  1980                           	callstack 22
  1981  00181E                     
  1982                           ;LCD.c: 143:         sprintf(Cadena,"%d",Humedad);
  1983  00181E  C0BA  F058         	movff	MostrarHumedad@Cadena,sprintf@s
  1984  001822  C0BB  F059         	movff	MostrarHumedad@Cadena+1,sprintf@s+1
  1985  001826  0E4B               	movlw	low (STR_6+1)
  1986  001828  6E5A               	movwf	sprintf@fmt^0,c
  1987  00182A  0E08               	movlw	high (STR_6+1)
  1988  00182C  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1989  00182E  C0BC  F05C         	movff	MostrarHumedad@Humedad,?_sprintf+4
  1990  001832  6A5D               	clrf	(?_sprintf+5)^0,c
  1991  001834  EC00  F00D         	call	_sprintf	;wreg free
  1992  001838                     
  1993                           ;LCD.c: 144:         LCD_String_xy(0,0,Cadena);
  1994  001838  0E00               	movlw	0
  1995  00183A  6E05               	movwf	LCD_String_xy@pos^0,c
  1996  00183C  C0BA  F006         	movff	MostrarHumedad@Cadena,LCD_String_xy@msg
  1997  001840  C0BB  F007         	movff	MostrarHumedad@Cadena+1,LCD_String_xy@msg+1
  1998  001844  0E00               	movlw	0
  1999  001846  EC01  F00E         	call	_LCD_String_xy
  2000  00184A                     
  2001                           ;LCD.c: 145:         sprintf(Cadena,".%d",0);
  2002  00184A  C0BA  F058         	movff	MostrarHumedad@Cadena,sprintf@s
  2003  00184E  C0BB  F059         	movff	MostrarHumedad@Cadena+1,sprintf@s+1
  2004  001852  0E4A               	movlw	low STR_6
  2005  001854  6E5A               	movwf	sprintf@fmt^0,c
  2006  001856  0E08               	movlw	high STR_6
  2007  001858  6E5B               	movwf	(sprintf@fmt+1)^0,c
  2008  00185A  0E00               	movlw	0
  2009  00185C  6E5D               	movwf	(?_sprintf+5)^0,c
  2010  00185E  0E00               	movlw	0
  2011  001860  6E5C               	movwf	(?_sprintf+4)^0,c
  2012  001862  EC00  F00D         	call	_sprintf	;wreg free
  2013  001866                     
  2014                           ;LCD.c: 146:         LCD_Char('%');
  2015  001866  0E25               	movlw	37
  2016  001868  EC29  F00D         	call	_LCD_Char
  2017  00186C                     
  2018                           ;LCD.c: 147:         sprintf(Cadena,"  Hum.");
  2019  00186C  C0BA  F058         	movff	MostrarHumedad@Cadena,sprintf@s
  2020  001870  C0BB  F059         	movff	MostrarHumedad@Cadena+1,sprintf@s+1
  2021  001874  0E43               	movlw	low STR_7
  2022  001876  6E5A               	movwf	sprintf@fmt^0,c
  2023  001878  0E08               	movlw	high STR_7
  2024  00187A  6E5B               	movwf	(sprintf@fmt+1)^0,c
  2025  00187C  EC00  F00D         	call	_sprintf	;wreg free
  2026  001880                     
  2027                           ;LCD.c: 148:         LCD_String(Cadena);
  2028  001880  C0BA  F003         	movff	MostrarHumedad@Cadena,LCD_String@msg
  2029  001884  C0BB  F004         	movff	MostrarHumedad@Cadena+1,LCD_String@msg+1
  2030  001888  EC78  F00C         	call	_LCD_String	;wreg free
  2031  00188C  0012               	return		;funcret
  2032  00188E                     __end_of_MostrarHumedad:
  2033                           	callstack 0
  2034                           
  2035 ;; *************** function _sprintf *****************
  2036 ;; Defined at:
  2037 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;  s               2   87[COMRAM] PTR unsigned char 
  2040 ;;		 -> Cadena(10), 
  2041 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
  2042 ;;		 -> STR_10(8), STR_9(4), STR_8(3), STR_7(7), 
  2043 ;;		 -> STR_6(4), STR_5(3), 
  2044 ;; Auto vars:     Size  Location     Type
  2045 ;;  f               6    2[BANK0 ] struct _IO_FILE
  2046 ;;  ap              2    0[BANK0 ] PTR void [1]
  2047 ;;		 -> ?_sprintf(2), 
  2048 ;;  ret             2    0        int 
  2049 ;; Return value:  Size  Location     Type
  2050 ;;                  2   87[COMRAM] int 
  2051 ;; Registers used:
  2052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2053 ;; Tracked objects:
  2054 ;;		On entry : 0/0
  2055 ;;		On exit  : 0/0
  2056 ;;		Unchanged: 0/0
  2057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2058 ;;      Params:         6       0       0       0       0       0       0       0       0
  2059 ;;      Locals:         0       8       0       0       0       0       0       0       0
  2060 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2061 ;;      Totals:         6       8       0       0       0       0       0       0       0
  2062 ;;Total ram usage:       14 bytes
  2063 ;; Hardware stack levels used: 1
  2064 ;; Hardware stack levels required when called: 7
  2065 ;; This function calls:
  2066 ;;		_vfprintf
  2067 ;; This function is called by:
  2068 ;;		_MostrarHumedad
  2069 ;;		_MostrarTemperatura
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073                           	psect	text9
  2074  001A00                     __ptext9:
  2075                           	callstack 0
  2076  001A00                     _sprintf:
  2077                           	callstack 22
  2078  001A00  0E5C               	movlw	low (?_sprintf+4)
  2079  001A02  0100               	movlb	0	; () banked
  2080  001A04  6FB2               	movwf	sprintf@ap& (0+255),b
  2081  001A06  0E00               	movlw	high (?_sprintf+4)
  2082  001A08  6FB3               	movwf	(sprintf@ap+1)& (0+255),b
  2083  001A0A  C058  F0B4         	movff	sprintf@s,sprintf@f
  2084  001A0E  C059  F0B5         	movff	sprintf@s+1,sprintf@f+1
  2085  001A12                     
  2086                           ; BSR set to: 0
  2087  001A12  0E00               	movlw	0
  2088  001A14  6FB7               	movwf	(sprintf@f+3)& (0+255),b
  2089  001A16  0E00               	movlw	0
  2090  001A18  6FB6               	movwf	(sprintf@f+2)& (0+255),b
  2091  001A1A                     
  2092                           ; BSR set to: 0
  2093  001A1A  0E00               	movlw	0
  2094  001A1C  6FB9               	movwf	(sprintf@f+5)& (0+255),b
  2095  001A1E  0E00               	movlw	0
  2096  001A20  6FB8               	movwf	(sprintf@f+4)& (0+255),b
  2097  001A22                     
  2098                           ; BSR set to: 0
  2099  001A22  0EB4               	movlw	low sprintf@f
  2100  001A24  6E50               	movwf	vfprintf@fp^0,c
  2101  001A26  0E00               	movlw	high sprintf@f
  2102  001A28  6E51               	movwf	(vfprintf@fp+1)^0,c
  2103  001A2A  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
  2104  001A2E  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2105  001A32  0EB2               	movlw	low sprintf@ap
  2106  001A34  6E54               	movwf	vfprintf@ap^0,c
  2107  001A36  0E00               	movlw	high sprintf@ap
  2108  001A38  6E55               	movwf	(vfprintf@ap+1)^0,c
  2109  001A3A  EC47  F00C         	call	_vfprintf	;wreg free
  2110  001A3E  0100               	movlb	0	; () banked
  2111  001A40  51B6               	movf	(sprintf@f+2)& (0+255),w,b
  2112  001A42  2458               	addwf	sprintf@s^0,w,c
  2113  001A44  6ED9               	movwf	fsr2l,c
  2114  001A46  51B7               	movf	(sprintf@f+3)& (0+255),w,b
  2115  001A48  2059               	addwfc	(sprintf@s+1)^0,w,c
  2116  001A4A  6EDA               	movwf	fsr2h,c
  2117  001A4C  0E00               	movlw	0
  2118  001A4E  6EDF               	movwf	indf2,c
  2119  001A50                     
  2120                           ; BSR set to: 0
  2121  001A50  0012               	return		;funcret
  2122  001A52                     __end_of_sprintf:
  2123                           	callstack 0
  2124                           
  2125 ;; *************** function _vfprintf *****************
  2126 ;; Defined at:
  2127 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2128 ;; Parameters:    Size  Location     Type
  2129 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  2130 ;;		 -> sprintf@f(6), 
  2131 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  2132 ;;		 -> STR_10(8), STR_9(4), STR_8(3), STR_7(7), 
  2133 ;;		 -> STR_6(4), STR_5(3), 
  2134 ;;  ap              2   83[COMRAM] PTR PTR void 
  2135 ;;		 -> sprintf@ap(2), 
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  2138 ;;		 -> STR_10(8), STR_9(4), STR_8(3), STR_7(7), 
  2139 ;;		 -> STR_6(4), STR_5(3), 
  2140 ;; Return value:  Size  Location     Type
  2141 ;;                  2   79[COMRAM] int 
  2142 ;; Registers used:
  2143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2149 ;;      Params:         6       0       0       0       0       0       0       0       0
  2150 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2151 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2152 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2153 ;;Total ram usage:        8 bytes
  2154 ;; Hardware stack levels used: 1
  2155 ;; Hardware stack levels required when called: 6
  2156 ;; This function calls:
  2157 ;;		_vfpfcnvrt
  2158 ;; This function is called by:
  2159 ;;		_sprintf
  2160 ;; This function uses a non-reentrant model
  2161 ;;
  2162                           
  2163                           	psect	text10
  2164  00188E                     __ptext10:
  2165                           	callstack 0
  2166  00188E                     _vfprintf:
  2167                           	callstack 22
  2168  00188E                     
  2169                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2170  00188E  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  2171  001892  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2172  001896                     
  2173                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2174  001896  0E00               	movlw	0
  2175  001898  0100               	movlb	0	; () banked
  2176  00189A  6F61               	movwf	(_nout+1)& (0+255),b
  2177  00189C  0E00               	movlw	0
  2178  00189E  6F60               	movwf	_nout& (0+255),b
  2179                           
  2180                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2181  0018A0  EF65  F00C         	goto	l2177
  2182  0018A4                     l2175:
  2183                           
  2184                           ; BSR set to: 0
  2185                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2186  0018A4  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  2187  0018A8  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2188  0018AC  0E56               	movlw	low vfprintf@cfmt
  2189  0018AE  6E42               	movwf	vfpfcnvrt@fmt^0,c
  2190  0018B0  0E00               	movlw	high vfprintf@cfmt
  2191  0018B2  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2192  0018B4  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  2193  0018B8  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2194  0018BC  ECA8  F006         	call	_vfpfcnvrt	;wreg free
  2195  0018C0  5040               	movf	?_vfpfcnvrt^0,w,c
  2196  0018C2  0100               	movlb	0	; () banked
  2197  0018C4  2760               	addwf	_nout& (0+255),f,b
  2198  0018C6  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  2199  0018C8  2361               	addwfc	(_nout+1)& (0+255),f,b
  2200  0018CA                     l2177:
  2201                           
  2202                           ; BSR set to: 0
  2203                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2204  0018CA  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  2205  0018CE  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2206  0018D2                     	if	0	;tblptru may be non-zero
  2207  0018D2                     	endif
  2208  0018D2                     	if	0	;tblptru may be non-zero
  2209  0018D2                     	endif
  2210  0018D2  0008               	tblrd		*
  2211  0018D4  50F5               	movf	tablat,w,c
  2212  0018D6  0900               	iorlw	0
  2213  0018D8  A4D8               	btfss	status,2,c
  2214  0018DA  EF71  F00C         	goto	u1471
  2215  0018DE  EF73  F00C         	goto	u1470
  2216  0018E2                     u1471:
  2217  0018E2  EF52  F00C         	goto	l2175
  2218  0018E6                     u1470:
  2219  0018E6                     
  2220                           ; BSR set to: 0
  2221                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2222  0018E6  C060  F050         	movff	_nout,?_vfprintf
  2223  0018EA  C061  F051         	movff	_nout+1,?_vfprintf+1
  2224  0018EE                     
  2225                           ; BSR set to: 0
  2226  0018EE  0012               	return		;funcret
  2227  0018F0                     __end_of_vfprintf:
  2228                           	callstack 0
  2229                           
  2230 ;; *************** function _vfpfcnvrt *****************
  2231 ;; Defined at:
  2232 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2233 ;; Parameters:    Size  Location     Type
  2234 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  2235 ;;		 -> sprintf@f(6), 
  2236 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  2237 ;;		 -> vfprintf@cfmt(2), 
  2238 ;;  ap              2   67[COMRAM] PTR PTR void 
  2239 ;;		 -> sprintf@ap(2), 
  2240 ;; Auto vars:     Size  Location     Type
  2241 ;;  ll              8   71[COMRAM] long long 
  2242 ;;  llu             8    0        unsigned long long 
  2243 ;;  f               4    0        unsigned long long 
  2244 ;;  vp              3    0        PTR void 
  2245 ;;  ct              3    0        unsigned char [3]
  2246 ;;  cp              3    0        PTR unsigned char 
  2247 ;;  i               2    0        int 
  2248 ;;  done            2    0        int 
  2249 ;;  c               1    0        unsigned char 
  2250 ;; Return value:  Size  Location     Type
  2251 ;;                  2   63[COMRAM] int 
  2252 ;; Registers used:
  2253 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2254 ;; Tracked objects:
  2255 ;;		On entry : 0/0
  2256 ;;		On exit  : 0/0
  2257 ;;		Unchanged: 0/0
  2258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2259 ;;      Params:         6       0       0       0       0       0       0       0       0
  2260 ;;      Locals:         8       0       0       0       0       0       0       0       0
  2261 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2262 ;;      Totals:        16       0       0       0       0       0       0       0       0
  2263 ;;Total ram usage:       16 bytes
  2264 ;; Hardware stack levels used: 1
  2265 ;; Hardware stack levels required when called: 5
  2266 ;; This function calls:
  2267 ;;		_dtoa
  2268 ;;		_fputc
  2269 ;; This function is called by:
  2270 ;;		_vfprintf
  2271 ;; This function uses a non-reentrant model
  2272 ;;
  2273                           
  2274                           	psect	text11
  2275  000D50                     __ptext11:
  2276                           	callstack 0
  2277  000D50                     _vfpfcnvrt:
  2278                           	callstack 22
  2279  000D50                     
  2280                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2281  000D50  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2282  000D54  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2283  000D58  CFDE FFF6          	movff	postinc2,tblptrl
  2284  000D5C  CFDD FFF7          	movff	postdec2,tblptrh
  2285  000D60                     	if	0	;tblptru may be non-zero
  2286  000D60                     	endif
  2287  000D60                     	if	0	;tblptru may be non-zero
  2288  000D60                     	endif
  2289  000D60  0008               	tblrd		*
  2290  000D62  50F5               	movf	tablat,w,c
  2291  000D64  0A25               	xorlw	37
  2292  000D66  A4D8               	btfss	status,2,c
  2293  000D68  EFB8  F006         	goto	u1271
  2294  000D6C  EFBA  F006         	goto	u1270
  2295  000D70                     u1271:
  2296  000D70  EF66  F007         	goto	l2047
  2297  000D74                     u1270:
  2298  000D74                     
  2299                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2300  000D74  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2301  000D78  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2302  000D7C  2ADE               	incf	postinc2,f,c
  2303  000D7E  0E00               	movlw	0
  2304  000D80  22DD               	addwfc	postdec2,f,c
  2305  000D82                     
  2306                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2307  000D82  0E00               	movlw	0
  2308  000D84  0100               	movlb	0	; () banked
  2309  000D86  6F63               	movwf	(_width+1)& (0+255),b
  2310  000D88  0E00               	movlw	0
  2311  000D8A  6F62               	movwf	_width& (0+255),b
  2312  000D8C  C062  F066         	movff	_width,_flags
  2313  000D90  C063  F067         	movff	_width+1,_flags+1
  2314  000D94                     
  2315                           ; BSR set to: 0
  2316                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2317  000D94  6964               	setf	_prec& (0+255),b
  2318  000D96  6965               	setf	(_prec+1)& (0+255),b
  2319  000D98                     
  2320                           ; BSR set to: 0
  2321                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2322  000D98  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2323  000D9C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2324  000DA0  CFDE FFF6          	movff	postinc2,tblptrl
  2325  000DA4  CFDD FFF7          	movff	postdec2,tblptrh
  2326  000DA8                     	if	0	;tblptru may be non-zero
  2327  000DA8                     	endif
  2328  000DA8                     	if	0	;tblptru may be non-zero
  2329  000DA8                     	endif
  2330  000DA8  0008               	tblrd		*
  2331  000DAA  50F5               	movf	tablat,w,c
  2332  000DAC  0A64               	xorlw	100
  2333  000DAE  B4D8               	btfsc	status,2,c
  2334  000DB0  EFDC  F006         	goto	u1281
  2335  000DB4  EFDE  F006         	goto	u1280
  2336  000DB8                     u1281:
  2337  000DB8  EFF0  F006         	goto	l2025
  2338  000DBC                     u1280:
  2339  000DBC                     
  2340                           ; BSR set to: 0
  2341  000DBC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2342  000DC0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2343  000DC4  CFDE FFF6          	movff	postinc2,tblptrl
  2344  000DC8  CFDD FFF7          	movff	postdec2,tblptrh
  2345  000DCC                     	if	0	;tblptru may be non-zero
  2346  000DCC                     	endif
  2347  000DCC                     	if	0	;tblptru may be non-zero
  2348  000DCC                     	endif
  2349  000DCC  0008               	tblrd		*
  2350  000DCE  50F5               	movf	tablat,w,c
  2351  000DD0  0A69               	xorlw	105
  2352  000DD2  A4D8               	btfss	status,2,c
  2353  000DD4  EFEE  F006         	goto	u1291
  2354  000DD8  EFF0  F006         	goto	u1290
  2355  000DDC                     u1291:
  2356  000DDC  EF30  F007         	goto	l2031
  2357  000DE0                     u1290:
  2358  000DE0                     l2025:
  2359                           
  2360                           ; BSR set to: 0
  2361                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2362  000DE0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2363  000DE4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2364  000DE8  2ADE               	incf	postinc2,f,c
  2365  000DEA  0E00               	movlw	0
  2366  000DEC  22DD               	addwfc	postdec2,f,c
  2367                           
  2368                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2369  000DEE  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2370  000DF2  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2371  000DF6  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2372  000DFA  0E02               	movlw	2
  2373  000DFC  26DE               	addwf	postinc2,f,c
  2374  000DFE  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2375  000E02  0E00               	movlw	0
  2376  000E04  22DD               	addwfc	postdec2,f,c
  2377  000E06  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2378  000E0A  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2379  000E0E  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  2380  000E12  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  2381  000E16  0E00               	movlw	0
  2382  000E18  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  2383  000E1A  0EFF               	movlw	-1
  2384  000E1C  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  2385  000E1E  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  2386  000E20  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  2387  000E22  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  2388  000E24  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  2389  000E26  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  2390  000E28                     
  2391                           ; BSR set to: 0
  2392                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2393  000E28  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2394  000E2C  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2395  000E30  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  2396  000E34  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2397  000E38  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2398  000E3C  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2399  000E40  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2400  000E44  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2401  000E48  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2402  000E4C  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2403  000E50  EC28  F004         	call	_dtoa	;wreg free
  2404  000E54  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  2405  000E58  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2406  000E5C  EF81  F007         	goto	l1048
  2407  000E60                     l2031:
  2408                           
  2409                           ; BSR set to: 0
  2410                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2411  000E60  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2412  000E64  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2413  000E68  CFDE FFF6          	movff	postinc2,tblptrl
  2414  000E6C  CFDD FFF7          	movff	postdec2,tblptrh
  2415  000E70                     	if	0	;tblptru may be non-zero
  2416  000E70                     	endif
  2417  000E70                     	if	0	;tblptru may be non-zero
  2418  000E70                     	endif
  2419  000E70  0008               	tblrd		*
  2420  000E72  50F5               	movf	tablat,w,c
  2421  000E74  0A25               	xorlw	37
  2422  000E76  A4D8               	btfss	status,2,c
  2423  000E78  EF40  F007         	goto	u1301
  2424  000E7C  EF42  F007         	goto	u1300
  2425  000E80                     u1301:
  2426  000E80  EF59  F007         	goto	l2041
  2427  000E84                     u1300:
  2428  000E84                     
  2429                           ; BSR set to: 0
  2430                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2431  000E84  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2432  000E88  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2433  000E8C  2ADE               	incf	postinc2,f,c
  2434  000E8E  0E00               	movlw	0
  2435  000E90  22DD               	addwfc	postdec2,f,c
  2436  000E92                     
  2437                           ; BSR set to: 0
  2438                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2439  000E92  0E00               	movlw	0
  2440  000E94  6E02               	movwf	(fputc@c+1)^0,c
  2441  000E96  0E25               	movlw	37
  2442  000E98  6E01               	movwf	fputc@c^0,c
  2443  000E9A  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2444  000E9E  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2445  000EA2  EC23  F00A         	call	_fputc	;wreg free
  2446  000EA6                     l2037:
  2447                           
  2448                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2449  000EA6  0E00               	movlw	0
  2450  000EA8  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  2451  000EAA  0E01               	movlw	1
  2452  000EAC  6E40               	movwf	?_vfpfcnvrt^0,c
  2453  000EAE  EF81  F007         	goto	l1048
  2454  000EB2                     l2041:
  2455                           
  2456                           ; BSR set to: 0
  2457                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2458  000EB2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2459  000EB6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2460  000EBA  2ADE               	incf	postinc2,f,c
  2461  000EBC  0E00               	movlw	0
  2462  000EBE  22DD               	addwfc	postdec2,f,c
  2463  000EC0                     
  2464                           ; BSR set to: 0
  2465                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2466  000EC0  0E00               	movlw	0
  2467  000EC2  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  2468  000EC4  0E00               	movlw	0
  2469  000EC6  6E40               	movwf	?_vfpfcnvrt^0,c
  2470  000EC8  EF81  F007         	goto	l1048
  2471  000ECC                     l2047:
  2472                           
  2473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2474  000ECC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2475  000ED0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2476  000ED4  CFDE FFF6          	movff	postinc2,tblptrl
  2477  000ED8  CFDD FFF7          	movff	postdec2,tblptrh
  2478  000EDC                     	if	0	;tblptru may be non-zero
  2479  000EDC                     	endif
  2480  000EDC                     	if	0	;tblptru may be non-zero
  2481  000EDC                     	endif
  2482  000EDC  0008               	tblrd		*
  2483  000EDE  50F5               	movf	tablat,w,c
  2484  000EE0  6E01               	movwf	fputc@c^0,c
  2485  000EE2  6A02               	clrf	(fputc@c+1)^0,c
  2486  000EE4  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2487  000EE8  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2488  000EEC  EC23  F00A         	call	_fputc	;wreg free
  2489  000EF0                     
  2490                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2491  000EF0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2492  000EF4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2493  000EF8  2ADE               	incf	postinc2,f,c
  2494  000EFA  0E00               	movlw	0
  2495  000EFC  22DD               	addwfc	postdec2,f,c
  2496  000EFE  EF53  F007         	goto	l2037
  2497  000F02                     l1048:
  2498  000F02  0012               	return		;funcret
  2499  000F04                     __end_of_vfpfcnvrt:
  2500                           	callstack 0
  2501                           
  2502 ;; *************** function _dtoa *****************
  2503 ;; Defined at:
  2504 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2505 ;; Parameters:    Size  Location     Type
  2506 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2507 ;;		 -> sprintf@f(6), 
  2508 ;;  d               8   29[COMRAM] long long 
  2509 ;; Auto vars:     Size  Location     Type
  2510 ;;  n               8   53[COMRAM] long long 
  2511 ;;  i               2   61[COMRAM] int 
  2512 ;;  s               2   51[COMRAM] int 
  2513 ;;  w               2   49[COMRAM] int 
  2514 ;;  p               2   47[COMRAM] int 
  2515 ;; Return value:  Size  Location     Type
  2516 ;;                  2   27[COMRAM] int 
  2517 ;; Registers used:
  2518 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2524 ;;      Params:        10       0       0       0       0       0       0       0       0
  2525 ;;      Locals:        18       0       0       0       0       0       0       0       0
  2526 ;;      Temps:          8       0       0       0       0       0       0       0       0
  2527 ;;      Totals:        36       0       0       0       0       0       0       0       0
  2528 ;;Total ram usage:       36 bytes
  2529 ;; Hardware stack levels used: 1
  2530 ;; Hardware stack levels required when called: 4
  2531 ;; This function calls:
  2532 ;;		___aodiv
  2533 ;;		___aomod
  2534 ;;		_abs
  2535 ;;		_pad
  2536 ;; This function is called by:
  2537 ;;		_vfpfcnvrt
  2538 ;; This function uses a non-reentrant model
  2539 ;;
  2540                           
  2541                           	psect	text12
  2542  000850                     __ptext12:
  2543                           	callstack 0
  2544  000850                     _dtoa:
  2545                           	callstack 22
  2546  000850                     
  2547                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2548  000850  C01E  F036         	movff	dtoa@d,dtoa@n
  2549  000854  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  2550  000858  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  2551  00085C  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  2552  000860  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  2553  000864  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  2554  000868  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  2555  00086C  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  2556  000870                     
  2557                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2558  000870  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  2559  000872  EF3D  F004         	goto	u1091
  2560  000876  EF40  F004         	goto	u1090
  2561  00087A                     u1091:
  2562  00087A  0E01               	movlw	1
  2563  00087C  EF41  F004         	goto	u1100
  2564  000880                     u1090:
  2565  000880  0E00               	movlw	0
  2566  000882                     u1100:
  2567  000882  6E34               	movwf	dtoa@s^0,c
  2568  000884  6A35               	clrf	(dtoa@s+1)^0,c
  2569                           
  2570                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2571  000886  5034               	movf	dtoa@s^0,w,c
  2572  000888  1035               	iorwf	(dtoa@s+1)^0,w,c
  2573  00088A  B4D8               	btfsc	status,2,c
  2574  00088C  EF4A  F004         	goto	u1111
  2575  000890  EF4C  F004         	goto	u1110
  2576  000894                     u1111:
  2577  000894  EF5C  F004         	goto	l1929
  2578  000898                     u1110:
  2579  000898                     
  2580                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2581  000898  1E3D               	comf	(dtoa@n+7)^0,f,c
  2582  00089A  1E3C               	comf	(dtoa@n+6)^0,f,c
  2583  00089C  1E3B               	comf	(dtoa@n+5)^0,f,c
  2584  00089E  1E3A               	comf	(dtoa@n+4)^0,f,c
  2585  0008A0  1E39               	comf	(dtoa@n+3)^0,f,c
  2586  0008A2  1E38               	comf	(dtoa@n+2)^0,f,c
  2587  0008A4  1E37               	comf	(dtoa@n+1)^0,f,c
  2588  0008A6  6C36               	negf	dtoa@n^0,c
  2589  0008A8  0E00               	movlw	0
  2590  0008AA  2237               	addwfc	(dtoa@n+1)^0,f,c
  2591  0008AC  2238               	addwfc	(dtoa@n+2)^0,f,c
  2592  0008AE  2239               	addwfc	(dtoa@n+3)^0,f,c
  2593  0008B0  223A               	addwfc	(dtoa@n+4)^0,f,c
  2594  0008B2  223B               	addwfc	(dtoa@n+5)^0,f,c
  2595  0008B4  223C               	addwfc	(dtoa@n+6)^0,f,c
  2596  0008B6  223D               	addwfc	(dtoa@n+7)^0,f,c
  2597  0008B8                     l1929:
  2598                           
  2599                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2600  0008B8  0100               	movlb	0	; () banked
  2601  0008BA  BF65               	btfsc	(_prec+1)& (0+255),7,b
  2602  0008BC  EF62  F004         	goto	u1121
  2603  0008C0  EF64  F004         	goto	u1120
  2604  0008C4                     u1121:
  2605  0008C4  EF65  F004         	goto	l1933
  2606  0008C8                     u1120:
  2607  0008C8                     
  2608                           ; BSR set to: 0
  2609                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2610  0008C8  9366               	bcf	_flags& (0+255),1,b
  2611  0008CA                     l1933:
  2612                           
  2613                           ; BSR set to: 0
  2614                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2615  0008CA  BF65               	btfsc	(_prec+1)& (0+255),7,b
  2616  0008CC  EF72  F004         	goto	u1130
  2617  0008D0  5165               	movf	(_prec+1)& (0+255),w,b
  2618  0008D2  E106               	bnz	u1131
  2619  0008D4  0564               	decf	_prec& (0+255),w,b
  2620  0008D6  B0D8               	btfsc	status,0,c
  2621  0008D8  EF70  F004         	goto	u1131
  2622  0008DC  EF72  F004         	goto	u1130
  2623  0008E0                     u1131:
  2624  0008E0  EF78  F004         	goto	l1021
  2625  0008E4                     u1130:
  2626  0008E4                     
  2627                           ; BSR set to: 0
  2628  0008E4  0E00               	movlw	0
  2629  0008E6  6E31               	movwf	(dtoa@p+1)^0,c
  2630  0008E8  0E01               	movlw	1
  2631  0008EA  6E30               	movwf	dtoa@p^0,c
  2632  0008EC  EF7C  F004         	goto	l1023
  2633  0008F0                     l1021:
  2634                           
  2635                           ; BSR set to: 0
  2636  0008F0  C064  F030         	movff	_prec,dtoa@p
  2637  0008F4  C065  F031         	movff	_prec+1,dtoa@p+1
  2638  0008F8                     l1023:
  2639                           
  2640                           ; BSR set to: 0
  2641                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2642  0008F8  C062  F032         	movff	_width,dtoa@w
  2643  0008FC  C063  F033         	movff	_width+1,dtoa@w+1
  2644  000900                     
  2645                           ; BSR set to: 0
  2646                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2647  000900  5034               	movf	dtoa@s^0,w,c
  2648  000902  1035               	iorwf	(dtoa@s+1)^0,w,c
  2649  000904  A4D8               	btfss	status,2,c
  2650  000906  EF87  F004         	goto	u1141
  2651  00090A  EF89  F004         	goto	u1140
  2652  00090E                     u1141:
  2653  00090E  EF90  F004         	goto	l1941
  2654  000912                     u1140:
  2655  000912                     
  2656                           ; BSR set to: 0
  2657  000912  A566               	btfss	_flags& (0+255),2,b
  2658  000914  EF8E  F004         	goto	u1151
  2659  000918  EF90  F004         	goto	u1150
  2660  00091C                     u1151:
  2661  00091C  EF93  F004         	goto	l1943
  2662  000920                     u1150:
  2663  000920                     l1941:
  2664                           
  2665                           ; BSR set to: 0
  2666                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  2667  000920  0632               	decf	dtoa@w^0,f,c
  2668  000922  A0D8               	btfss	status,0,c
  2669  000924  0633               	decf	(dtoa@w+1)^0,f,c
  2670  000926                     l1943:
  2671                           
  2672                           ; BSR set to: 0
  2673                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2674  000926  0E00               	movlw	0
  2675  000928  6E3F               	movwf	(dtoa@i+1)^0,c
  2676  00092A  0E1F               	movlw	31
  2677  00092C  6E3E               	movwf	dtoa@i^0,c
  2678  00092E                     
  2679                           ; BSR set to: 0
  2680                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2681  00092E  0E00               	movlw	0
  2682  000930  6F92               	movwf	(_dbuf+31)& (0+255),b
  2683                           
  2684                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2685  000932  EF17  F005         	goto	l1957
  2686  000936                     l1947:
  2687                           
  2688                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  2689  000936  063E               	decf	dtoa@i^0,f,c
  2690  000938  A0D8               	btfss	status,0,c
  2691  00093A  063F               	decf	(dtoa@i+1)^0,f,c
  2692  00093C                     
  2693                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2694  00093C  0E73               	movlw	low _dbuf
  2695  00093E  243E               	addwf	dtoa@i^0,w,c
  2696  000940  6ED9               	movwf	fsr2l,c
  2697  000942  0E00               	movlw	high _dbuf
  2698  000944  203F               	addwfc	(dtoa@i+1)^0,w,c
  2699  000946  6EDA               	movwf	fsr2h,c
  2700  000948  C036  F001         	movff	dtoa@n,___aomod@dividend
  2701  00094C  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2702  000950  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2703  000954  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2704  000958  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2705  00095C  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2706  000960  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2707  000964  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2708  000968  0E0A               	movlw	10
  2709  00096A  6E09               	movwf	___aomod@divisor^0,c
  2710  00096C  0E00               	movlw	0
  2711  00096E  6E0A               	movwf	(___aomod@divisor+1)^0,c
  2712  000970  0E00               	movlw	0
  2713  000972  6E0B               	movwf	(___aomod@divisor+2)^0,c
  2714  000974  0E00               	movlw	0
  2715  000976  6E0C               	movwf	(___aomod@divisor+3)^0,c
  2716  000978  0E00               	movlw	0
  2717  00097A  6E0D               	movwf	(___aomod@divisor+4)^0,c
  2718  00097C  0E00               	movlw	0
  2719  00097E  6E0E               	movwf	(___aomod@divisor+5)^0,c
  2720  000980  0E00               	movlw	0
  2721  000982  6E0F               	movwf	(___aomod@divisor+6)^0,c
  2722  000984  0E00               	movlw	0
  2723  000986  6E10               	movwf	(___aomod@divisor+7)^0,c
  2724  000988  EC46  F008         	call	___aomod	;wreg free
  2725  00098C  C001  F026         	movff	?___aomod,??_dtoa
  2726  000990  C002  F027         	movff	?___aomod+1,??_dtoa+1
  2727  000994  C003  F028         	movff	?___aomod+2,??_dtoa+2
  2728  000998  C004  F029         	movff	?___aomod+3,??_dtoa+3
  2729  00099C  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  2730  0009A0  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  2731  0009A4  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  2732  0009A8  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  2733  0009AC  C026  F013         	movff	??_dtoa,abs@a
  2734  0009B0  C028  F014         	movff	??_dtoa+2,abs@a+1
  2735  0009B4  ECE1  F00D         	call	_abs	;wreg free
  2736  0009B8  5013               	movf	?_abs^0,w,c
  2737  0009BA  0F30               	addlw	48
  2738  0009BC  6EDF               	movwf	indf2,c
  2739  0009BE                     
  2740                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  2741  0009BE  0630               	decf	dtoa@p^0,f,c
  2742  0009C0  A0D8               	btfss	status,0,c
  2743  0009C2  0631               	decf	(dtoa@p+1)^0,f,c
  2744  0009C4                     
  2745                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  2746  0009C4  0632               	decf	dtoa@w^0,f,c
  2747  0009C6  A0D8               	btfss	status,0,c
  2748  0009C8  0633               	decf	(dtoa@w+1)^0,f,c
  2749  0009CA                     
  2750                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2751  0009CA  C036  F001         	movff	dtoa@n,___aodiv@dividend
  2752  0009CE  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2753  0009D2  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2754  0009D6  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2755  0009DA  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2756  0009DE  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2757  0009E2  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2758  0009E6  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2759  0009EA  0E0A               	movlw	10
  2760  0009EC  6E09               	movwf	___aodiv@divisor^0,c
  2761  0009EE  0E00               	movlw	0
  2762  0009F0  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  2763  0009F2  0E00               	movlw	0
  2764  0009F4  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  2765  0009F6  0E00               	movlw	0
  2766  0009F8  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  2767  0009FA  0E00               	movlw	0
  2768  0009FC  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  2769  0009FE  0E00               	movlw	0
  2770  000A00  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  2771  000A02  0E00               	movlw	0
  2772  000A04  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  2773  000A06  0E00               	movlw	0
  2774  000A08  6E10               	movwf	(___aodiv@divisor+7)^0,c
  2775  000A0A  EC82  F007         	call	___aodiv	;wreg free
  2776  000A0E  C001  F036         	movff	?___aodiv,dtoa@n
  2777  000A12  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  2778  000A16  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  2779  000A1A  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  2780  000A1E  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  2781  000A22  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  2782  000A26  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  2783  000A2A  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  2784  000A2E                     l1957:
  2785                           
  2786                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2787  000A2E  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  2788  000A30  EF22  F005         	goto	u1161
  2789  000A34  503F               	movf	(dtoa@i+1)^0,w,c
  2790  000A36  E108               	bnz	u1160
  2791  000A38  043E               	decf	dtoa@i^0,w,c
  2792  000A3A  A0D8               	btfss	status,0,c
  2793  000A3C  EF22  F005         	goto	u1161
  2794  000A40  EF24  F005         	goto	u1160
  2795  000A44                     u1161:
  2796  000A44  EF55  F005         	goto	l1967
  2797  000A48                     u1160:
  2798  000A48  5036               	movf	dtoa@n^0,w,c
  2799  000A4A  1037               	iorwf	(dtoa@n+1)^0,w,c
  2800  000A4C  1038               	iorwf	(dtoa@n+2)^0,w,c
  2801  000A4E  1039               	iorwf	(dtoa@n+3)^0,w,c
  2802  000A50  103A               	iorwf	(dtoa@n+4)^0,w,c
  2803  000A52  103B               	iorwf	(dtoa@n+5)^0,w,c
  2804  000A54  103C               	iorwf	(dtoa@n+6)^0,w,c
  2805  000A56  103D               	iorwf	(dtoa@n+7)^0,w,c
  2806  000A58  A4D8               	btfss	status,2,c
  2807  000A5A  EF31  F005         	goto	u1171
  2808  000A5E  EF33  F005         	goto	u1170
  2809  000A62                     u1171:
  2810  000A62  EF9B  F004         	goto	l1947
  2811  000A66                     u1170:
  2812  000A66  BE31               	btfsc	(dtoa@p+1)^0,7,c
  2813  000A68  EF40  F005         	goto	u1180
  2814  000A6C  5031               	movf	(dtoa@p+1)^0,w,c
  2815  000A6E  E106               	bnz	u1181
  2816  000A70  0430               	decf	dtoa@p^0,w,c
  2817  000A72  B0D8               	btfsc	status,0,c
  2818  000A74  EF3E  F005         	goto	u1181
  2819  000A78  EF40  F005         	goto	u1180
  2820  000A7C                     u1181:
  2821  000A7C  EF9B  F004         	goto	l1947
  2822  000A80                     u1180:
  2823  000A80  BE33               	btfsc	(dtoa@w+1)^0,7,c
  2824  000A82  EF4B  F005         	goto	u1191
  2825  000A86  5033               	movf	(dtoa@w+1)^0,w,c
  2826  000A88  E108               	bnz	u1190
  2827  000A8A  0432               	decf	dtoa@w^0,w,c
  2828  000A8C  A0D8               	btfss	status,0,c
  2829  000A8E  EF4B  F005         	goto	u1191
  2830  000A92  EF4D  F005         	goto	u1190
  2831  000A96                     u1191:
  2832  000A96  EF55  F005         	goto	l1967
  2833  000A9A                     u1190:
  2834  000A9A  0100               	movlb	0	; () banked
  2835  000A9C  B366               	btfsc	_flags& (0+255),1,b
  2836  000A9E  EF53  F005         	goto	u1201
  2837  000AA2  EF55  F005         	goto	u1200
  2838  000AA6                     u1201:
  2839  000AA6  EF9B  F004         	goto	l1947
  2840  000AAA                     u1200:
  2841  000AAA                     l1967:
  2842                           
  2843                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2844  000AAA  5034               	movf	dtoa@s^0,w,c
  2845  000AAC  1035               	iorwf	(dtoa@s+1)^0,w,c
  2846  000AAE  A4D8               	btfss	status,2,c
  2847  000AB0  EF5C  F005         	goto	u1211
  2848  000AB4  EF5E  F005         	goto	u1210
  2849  000AB8                     u1211:
  2850  000AB8  EF66  F005         	goto	l1971
  2851  000ABC                     u1210:
  2852  000ABC  0100               	movlb	0	; () banked
  2853  000ABE  A566               	btfss	_flags& (0+255),2,b
  2854  000AC0  EF64  F005         	goto	u1221
  2855  000AC4  EF66  F005         	goto	u1220
  2856  000AC8                     u1221:
  2857  000AC8  EF84  F005         	goto	l1981
  2858  000ACC                     u1220:
  2859  000ACC                     l1971:
  2860                           
  2861                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  2862  000ACC  063E               	decf	dtoa@i^0,f,c
  2863  000ACE  A0D8               	btfss	status,0,c
  2864  000AD0  063F               	decf	(dtoa@i+1)^0,f,c
  2865  000AD2                     
  2866                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2867  000AD2  5034               	movf	dtoa@s^0,w,c
  2868  000AD4  1035               	iorwf	(dtoa@s+1)^0,w,c
  2869  000AD6  A4D8               	btfss	status,2,c
  2870  000AD8  EF70  F005         	goto	u1231
  2871  000ADC  EF72  F005         	goto	u1230
  2872  000AE0                     u1231:
  2873  000AE0  EF78  F005         	goto	l1977
  2874  000AE4                     u1230:
  2875  000AE4  0E00               	movlw	0
  2876  000AE6  6E2F               	movwf	(_dtoa$946+1)^0,c
  2877  000AE8  0E2B               	movlw	43
  2878  000AEA  6E2E               	movwf	_dtoa$946^0,c
  2879  000AEC  EF7C  F005         	goto	l1979
  2880  000AF0                     l1977:
  2881  000AF0  0E00               	movlw	0
  2882  000AF2  6E2F               	movwf	(_dtoa$946+1)^0,c
  2883  000AF4  0E2D               	movlw	45
  2884  000AF6  6E2E               	movwf	_dtoa$946^0,c
  2885  000AF8                     l1979:
  2886  000AF8  0E73               	movlw	low _dbuf
  2887  000AFA  243E               	addwf	dtoa@i^0,w,c
  2888  000AFC  6ED9               	movwf	fsr2l,c
  2889  000AFE  0E00               	movlw	high _dbuf
  2890  000B00  203F               	addwfc	(dtoa@i+1)^0,w,c
  2891  000B02  6EDA               	movwf	fsr2h,c
  2892  000B04  C02E  FFDF         	movff	_dtoa$946,indf2
  2893  000B08                     l1981:
  2894                           
  2895                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2896  000B08  C01C  F011         	movff	dtoa@fp,pad@fp
  2897  000B0C  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  2898  000B10  0E73               	movlw	low _dbuf
  2899  000B12  243E               	addwf	dtoa@i^0,w,c
  2900  000B14  6E13               	movwf	pad@buf^0,c
  2901  000B16  0E00               	movlw	high _dbuf
  2902  000B18  203F               	addwfc	(dtoa@i+1)^0,w,c
  2903  000B1A  6E14               	movwf	(pad@buf+1)^0,c
  2904  000B1C  C032  F015         	movff	dtoa@w,pad@p
  2905  000B20  C033  F016         	movff	dtoa@w+1,pad@p+1
  2906  000B24  EC88  F00A         	call	_pad	;wreg free
  2907  000B28  C011  F01C         	movff	?_pad,?_dtoa
  2908  000B2C  C012  F01D         	movff	?_pad+1,?_dtoa+1
  2909  000B30  0012               	return		;funcret
  2910  000B32                     __end_of_dtoa:
  2911                           	callstack 0
  2912                           
  2913 ;; *************** function _pad *****************
  2914 ;; Defined at:
  2915 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2916 ;; Parameters:    Size  Location     Type
  2917 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2918 ;;		 -> sprintf@f(6), 
  2919 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2920 ;;		 -> dbuf(32), 
  2921 ;;  p               2   20[COMRAM] int 
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;  w               2   25[COMRAM] int 
  2924 ;;  i               2   23[COMRAM] int 
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  2   16[COMRAM] int 
  2927 ;; Registers used:
  2928 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2934 ;;      Params:         6       0       0       0       0       0       0       0       0
  2935 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2936 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2937 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2938 ;;Total ram usage:       11 bytes
  2939 ;; Hardware stack levels used: 1
  2940 ;; Hardware stack levels required when called: 3
  2941 ;; This function calls:
  2942 ;;		_fputc
  2943 ;;		_fputs
  2944 ;;		_strlen
  2945 ;; This function is called by:
  2946 ;;		_dtoa
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950                           	psect	text13
  2951  001510                     __ptext13:
  2952                           	callstack 0
  2953  001510                     _pad:
  2954                           	callstack 22
  2955  001510                     
  2956                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2957  001510  0100               	movlb	0	; () banked
  2958  001512  A166               	btfss	_flags& (0+255),0,b
  2959  001514  EF8E  F00A         	goto	u1041
  2960  001518  EF90  F00A         	goto	u1040
  2961  00151C                     u1041:
  2962  00151C  EF9A  F00A         	goto	l1881
  2963  001520                     u1040:
  2964  001520                     
  2965                           ; BSR set to: 0
  2966                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2967  001520  C013  F00A         	movff	pad@buf,fputs@s
  2968  001524  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2969  001528  C011  F00C         	movff	pad@fp,fputs@fp
  2970  00152C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2971  001530  ECBF  F00D         	call	_fputs	;wreg free
  2972  001534                     l1881:
  2973                           
  2974                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2975  001534  BE16               	btfsc	(pad@p+1)^0,7,c
  2976  001536  EF9F  F00A         	goto	u1051
  2977  00153A  EFA1  F00A         	goto	u1050
  2978  00153E                     u1051:
  2979  00153E  EFA7  F00A         	goto	l1885
  2980  001542                     u1050:
  2981  001542  C015  F01A         	movff	pad@p,pad@w
  2982  001546  C016  F01B         	movff	pad@p+1,pad@w+1
  2983  00154A  EFAB  F00A         	goto	l1010
  2984  00154E                     l1885:
  2985  00154E  0E00               	movlw	0
  2986  001550  6E1B               	movwf	(pad@w+1)^0,c
  2987  001552  0E00               	movlw	0
  2988  001554  6E1A               	movwf	pad@w^0,c
  2989  001556                     l1010:
  2990                           
  2991                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2992  001556  0E00               	movlw	0
  2993  001558  6E19               	movwf	(pad@i+1)^0,c
  2994  00155A  0E00               	movlw	0
  2995  00155C  6E18               	movwf	pad@i^0,c
  2996                           
  2997                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2998  00155E  EFBD  F00A         	goto	l1891
  2999  001562                     l1887:
  3000                           
  3001                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3002  001562  0E00               	movlw	0
  3003  001564  6E02               	movwf	(fputc@c+1)^0,c
  3004  001566  0E20               	movlw	32
  3005  001568  6E01               	movwf	fputc@c^0,c
  3006  00156A  C011  F003         	movff	pad@fp,fputc@fp
  3007  00156E  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3008  001572  EC23  F00A         	call	_fputc	;wreg free
  3009  001576                     
  3010                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3011  001576  4A18               	infsnz	pad@i^0,f,c
  3012  001578  2A19               	incf	(pad@i+1)^0,f,c
  3013  00157A                     l1891:
  3014                           
  3015                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3016  00157A  501A               	movf	pad@w^0,w,c
  3017  00157C  5C18               	subwf	pad@i^0,w,c
  3018  00157E  5019               	movf	(pad@i+1)^0,w,c
  3019  001580  0A80               	xorlw	128
  3020  001582  6E17               	movwf	??_pad^0,c
  3021  001584  501B               	movf	(pad@w+1)^0,w,c
  3022  001586  0A80               	xorlw	128
  3023  001588  5817               	subwfb	??_pad^0,w,c
  3024  00158A  A0D8               	btfss	status,0,c
  3025  00158C  EFCA  F00A         	goto	u1061
  3026  001590  EFCC  F00A         	goto	u1060
  3027  001594                     u1061:
  3028  001594  EFB1  F00A         	goto	l1887
  3029  001598                     u1060:
  3030  001598                     
  3031                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3032  001598  0100               	movlb	0	; () banked
  3033  00159A  B166               	btfsc	_flags& (0+255),0,b
  3034  00159C  EFD2  F00A         	goto	u1071
  3035  0015A0  EFD4  F00A         	goto	u1070
  3036  0015A4                     u1071:
  3037  0015A4  EFDE  F00A         	goto	l1895
  3038  0015A8                     u1070:
  3039  0015A8                     
  3040                           ; BSR set to: 0
  3041                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3042  0015A8  C013  F00A         	movff	pad@buf,fputs@s
  3043  0015AC  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3044  0015B0  C011  F00C         	movff	pad@fp,fputs@fp
  3045  0015B4  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3046  0015B8  ECBF  F00D         	call	_fputs	;wreg free
  3047  0015BC                     l1895:
  3048                           
  3049                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3050  0015BC  C013  F001         	movff	pad@buf,strlen@s
  3051  0015C0  C014  F002         	movff	pad@buf+1,strlen@s+1
  3052  0015C4  EC5B  F00E         	call	_strlen	;wreg free
  3053  0015C8  501A               	movf	pad@w^0,w,c
  3054  0015CA  2401               	addwf	?_strlen^0,w,c
  3055  0015CC  6E11               	movwf	?_pad^0,c
  3056  0015CE  501B               	movf	(pad@w+1)^0,w,c
  3057  0015D0  2002               	addwfc	(?_strlen+1)^0,w,c
  3058  0015D2  6E12               	movwf	(?_pad+1)^0,c
  3059  0015D4  0012               	return		;funcret
  3060  0015D6                     __end_of_pad:
  3061                           	callstack 0
  3062                           
  3063 ;; *************** function _strlen *****************
  3064 ;; Defined at:
  3065 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  3066 ;; Parameters:    Size  Location     Type
  3067 ;;  s               2    0[COMRAM] PTR const unsigned char 
  3068 ;;		 -> dbuf(32), 
  3069 ;; Auto vars:     Size  Location     Type
  3070 ;;  a               2    2[COMRAM] PTR const unsigned char 
  3071 ;;		 -> dbuf(32), 
  3072 ;; Return value:  Size  Location     Type
  3073 ;;                  2    0[COMRAM] unsigned int 
  3074 ;; Registers used:
  3075 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3076 ;; Tracked objects:
  3077 ;;		On entry : 0/0
  3078 ;;		On exit  : 0/0
  3079 ;;		Unchanged: 0/0
  3080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3081 ;;      Params:         2       0       0       0       0       0       0       0       0
  3082 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3083 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3084 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3085 ;;Total ram usage:        4 bytes
  3086 ;; Hardware stack levels used: 1
  3087 ;; This function calls:
  3088 ;;		Nothing
  3089 ;; This function is called by:
  3090 ;;		_pad
  3091 ;; This function uses a non-reentrant model
  3092 ;;
  3093                           
  3094                           	psect	text14
  3095  001CB6                     __ptext14:
  3096                           	callstack 0
  3097  001CB6                     _strlen:
  3098                           	callstack 24
  3099  001CB6  C001  F003         	movff	strlen@s,strlen@a
  3100  001CBA  C002  F004         	movff	strlen@s+1,strlen@a+1
  3101  001CBE  EF63  F00E         	goto	l1791
  3102  001CC2                     l1789:
  3103  001CC2  4A01               	infsnz	strlen@s^0,f,c
  3104  001CC4  2A02               	incf	(strlen@s+1)^0,f,c
  3105  001CC6                     l1791:
  3106  001CC6  C001  FFD9         	movff	strlen@s,fsr2l
  3107  001CCA  C002  FFDA         	movff	strlen@s+1,fsr2h
  3108  001CCE  50DF               	movf	indf2,w,c
  3109  001CD0  A4D8               	btfss	status,2,c
  3110  001CD2  EF6D  F00E         	goto	u901
  3111  001CD6  EF6F  F00E         	goto	u900
  3112  001CDA                     u901:
  3113  001CDA  EF61  F00E         	goto	l1789
  3114  001CDE                     u900:
  3115  001CDE  5003               	movf	strlen@a^0,w,c
  3116  001CE0  5C01               	subwf	strlen@s^0,w,c
  3117  001CE2  6E01               	movwf	?_strlen^0,c
  3118  001CE4  5004               	movf	(strlen@a+1)^0,w,c
  3119  001CE6  5802               	subwfb	(strlen@s+1)^0,w,c
  3120  001CE8  6E02               	movwf	(?_strlen+1)^0,c
  3121  001CEA  0012               	return		;funcret
  3122  001CEC                     __end_of_strlen:
  3123                           	callstack 0
  3124                           
  3125 ;; *************** function _fputs *****************
  3126 ;; Defined at:
  3127 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  3128 ;; Parameters:    Size  Location     Type
  3129 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3130 ;;		 -> dbuf(32), 
  3131 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3132 ;;		 -> sprintf@f(6), 
  3133 ;; Auto vars:     Size  Location     Type
  3134 ;;  i               2   14[COMRAM] int 
  3135 ;;  c               1   13[COMRAM] unsigned char 
  3136 ;; Return value:  Size  Location     Type
  3137 ;;                  2    9[COMRAM] int 
  3138 ;; Registers used:
  3139 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3140 ;; Tracked objects:
  3141 ;;		On entry : 0/0
  3142 ;;		On exit  : 0/0
  3143 ;;		Unchanged: 0/0
  3144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3145 ;;      Params:         4       0       0       0       0       0       0       0       0
  3146 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3147 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3148 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3149 ;;Total ram usage:        7 bytes
  3150 ;; Hardware stack levels used: 1
  3151 ;; Hardware stack levels required when called: 2
  3152 ;; This function calls:
  3153 ;;		_fputc
  3154 ;; This function is called by:
  3155 ;;		_pad
  3156 ;; This function uses a non-reentrant model
  3157 ;;
  3158                           
  3159                           	psect	text15
  3160  001B7E                     __ptext15:
  3161                           	callstack 0
  3162  001B7E                     _fputs:
  3163                           	callstack 22
  3164  001B7E  0E00               	movlw	0
  3165  001B80  6E10               	movwf	(fputs@i+1)^0,c
  3166  001B82  0E00               	movlw	0
  3167  001B84  6E0F               	movwf	fputs@i^0,c
  3168  001B86  EFD0  F00D         	goto	l1785
  3169  001B8A                     l1781:
  3170  001B8A  C00E  F001         	movff	fputs@c,fputc@c
  3171  001B8E  6A02               	clrf	(fputc@c+1)^0,c
  3172  001B90  C00C  F003         	movff	fputs@fp,fputc@fp
  3173  001B94  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  3174  001B98  EC23  F00A         	call	_fputc	;wreg free
  3175  001B9C  4A0F               	infsnz	fputs@i^0,f,c
  3176  001B9E  2A10               	incf	(fputs@i+1)^0,f,c
  3177  001BA0                     l1785:
  3178  001BA0  500F               	movf	fputs@i^0,w,c
  3179  001BA2  240A               	addwf	fputs@s^0,w,c
  3180  001BA4  6ED9               	movwf	fsr2l,c
  3181  001BA6  5010               	movf	(fputs@i+1)^0,w,c
  3182  001BA8  200B               	addwfc	(fputs@s+1)^0,w,c
  3183  001BAA  6EDA               	movwf	fsr2h,c
  3184  001BAC  50DF               	movf	indf2,w,c
  3185  001BAE  6E0E               	movwf	fputs@c^0,c
  3186  001BB0  500E               	movf	fputs@c^0,w,c
  3187  001BB2  A4D8               	btfss	status,2,c
  3188  001BB4  EFDE  F00D         	goto	u891
  3189  001BB8  EFE0  F00D         	goto	u890
  3190  001BBC                     u891:
  3191  001BBC  EFC5  F00D         	goto	l1781
  3192  001BC0                     u890:
  3193  001BC0  0012               	return		;funcret
  3194  001BC2                     __end_of_fputs:
  3195                           	callstack 0
  3196                           
  3197 ;; *************** function _fputc *****************
  3198 ;; Defined at:
  3199 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  3200 ;; Parameters:    Size  Location     Type
  3201 ;;  c               2    0[COMRAM] int 
  3202 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  3203 ;;		 -> sprintf@f(6), 
  3204 ;; Auto vars:     Size  Location     Type
  3205 ;;		None
  3206 ;; Return value:  Size  Location     Type
  3207 ;;                  2    0[COMRAM] int 
  3208 ;; Registers used:
  3209 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3210 ;; Tracked objects:
  3211 ;;		On entry : 0/0
  3212 ;;		On exit  : 0/0
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3215 ;;      Params:         4       0       0       0       0       0       0       0       0
  3216 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3217 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3218 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3219 ;;Total ram usage:        9 bytes
  3220 ;; Hardware stack levels used: 1
  3221 ;; Hardware stack levels required when called: 1
  3222 ;; This function calls:
  3223 ;;		_putch
  3224 ;; This function is called by:
  3225 ;;		_pad
  3226 ;;		_vfpfcnvrt
  3227 ;;		_fputs
  3228 ;; This function uses a non-reentrant model
  3229 ;;
  3230                           
  3231                           	psect	text16
  3232  001446                     __ptext16:
  3233                           	callstack 0
  3234  001446                     _fputc:
  3235                           	callstack 25
  3236  001446  5003               	movf	fputc@fp^0,w,c
  3237  001448  1004               	iorwf	(fputc@fp+1)^0,w,c
  3238  00144A  B4D8               	btfsc	status,2,c
  3239  00144C  EF2A  F00A         	goto	u851
  3240  001450  EF2C  F00A         	goto	u850
  3241  001454                     u851:
  3242  001454  EF35  F00A         	goto	l1769
  3243  001458                     u850:
  3244  001458  5003               	movf	fputc@fp^0,w,c
  3245  00145A  1004               	iorwf	(fputc@fp+1)^0,w,c
  3246  00145C  A4D8               	btfss	status,2,c
  3247  00145E  EF33  F00A         	goto	u861
  3248  001462  EF35  F00A         	goto	u860
  3249  001466                     u861:
  3250  001466  EF3A  F00A         	goto	l1771
  3251  00146A                     u860:
  3252  00146A                     l1769:
  3253  00146A  5001               	movf	fputc@c^0,w,c
  3254  00146C  ECFF  F00E         	call	_putch
  3255  001470  EF87  F00A         	goto	l1074
  3256  001474                     l1771:
  3257  001474  EE20 F004          	lfsr	2,4
  3258  001478  5003               	movf	fputc@fp^0,w,c
  3259  00147A  26D9               	addwf	fsr2l,f,c
  3260  00147C  5004               	movf	(fputc@fp+1)^0,w,c
  3261  00147E  22DA               	addwfc	fsr2h,f,c
  3262  001480  50DE               	movf	postinc2,w,c
  3263  001482  10DE               	iorwf	postinc2,w,c
  3264  001484  B4D8               	btfsc	status,2,c
  3265  001486  EF47  F00A         	goto	u871
  3266  00148A  EF49  F00A         	goto	u870
  3267  00148E                     u871:
  3268  00148E  EF64  F00A         	goto	l1775
  3269  001492                     u870:
  3270  001492  EE20 F004          	lfsr	2,4
  3271  001496  5003               	movf	fputc@fp^0,w,c
  3272  001498  26D9               	addwf	fsr2l,f,c
  3273  00149A  5004               	movf	(fputc@fp+1)^0,w,c
  3274  00149C  22DA               	addwfc	fsr2h,f,c
  3275  00149E  EE10 F002          	lfsr	1,2
  3276  0014A2  5003               	movf	fputc@fp^0,w,c
  3277  0014A4  26E1               	addwf	fsr1l,f,c
  3278  0014A6  5004               	movf	(fputc@fp+1)^0,w,c
  3279  0014A8  22E2               	addwfc	fsr1h,f,c
  3280  0014AA  50DE               	movf	postinc2,w,c
  3281  0014AC  5CE6               	subwf	postinc1,w,c
  3282  0014AE  50E6               	movf	postinc1,w,c
  3283  0014B0  0A80               	xorlw	128
  3284  0014B2  6E09               	movwf	(??_fputc+4)^0,c
  3285  0014B4  50DE               	movf	postinc2,w,c
  3286  0014B6  0A80               	xorlw	128
  3287  0014B8  5809               	subwfb	(??_fputc+4)^0,w,c
  3288  0014BA  B0D8               	btfsc	status,0,c
  3289  0014BC  EF62  F00A         	goto	u881
  3290  0014C0  EF64  F00A         	goto	u880
  3291  0014C4                     u881:
  3292  0014C4  EF87  F00A         	goto	l1074
  3293  0014C8                     u880:
  3294  0014C8                     l1775:
  3295  0014C8  EE20 F002          	lfsr	2,2
  3296  0014CC  5003               	movf	fputc@fp^0,w,c
  3297  0014CE  26D9               	addwf	fsr2l,f,c
  3298  0014D0  5004               	movf	(fputc@fp+1)^0,w,c
  3299  0014D2  22DA               	addwfc	fsr2h,f,c
  3300  0014D4  CFDE F005          	movff	postinc2,??_fputc
  3301  0014D8  CFDD F006          	movff	postdec2,??_fputc+1
  3302  0014DC  C003  FFD9         	movff	fputc@fp,fsr2l
  3303  0014E0  C004  FFDA         	movff	fputc@fp+1,fsr2h
  3304  0014E4  CFDE F007          	movff	postinc2,??_fputc+2
  3305  0014E8  CFDD F008          	movff	postdec2,??_fputc+3
  3306  0014EC  5005               	movf	??_fputc^0,w,c
  3307  0014EE  2407               	addwf	(??_fputc+2)^0,w,c
  3308  0014F0  6ED9               	movwf	fsr2l,c
  3309  0014F2  5006               	movf	(??_fputc+1)^0,w,c
  3310  0014F4  2008               	addwfc	(??_fputc+3)^0,w,c
  3311  0014F6  6EDA               	movwf	fsr2h,c
  3312  0014F8  C001  FFDF         	movff	fputc@c,indf2
  3313  0014FC  EE20 F002          	lfsr	2,2
  3314  001500  5003               	movf	fputc@fp^0,w,c
  3315  001502  26D9               	addwf	fsr2l,f,c
  3316  001504  5004               	movf	(fputc@fp+1)^0,w,c
  3317  001506  22DA               	addwfc	fsr2h,f,c
  3318  001508  2ADE               	incf	postinc2,f,c
  3319  00150A  0E00               	movlw	0
  3320  00150C  22DD               	addwfc	postdec2,f,c
  3321  00150E                     l1074:
  3322  00150E  0012               	return		;funcret
  3323  001510                     __end_of_fputc:
  3324                           	callstack 0
  3325                           
  3326 ;; *************** function _putch *****************
  3327 ;; Defined at:
  3328 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;  c               1    wreg     unsigned char 
  3331 ;; Auto vars:     Size  Location     Type
  3332 ;;  c               1    0[COMRAM] unsigned char 
  3333 ;; Return value:  Size  Location     Type
  3334 ;;                  1    wreg      void 
  3335 ;; Registers used:
  3336 ;;		wreg
  3337 ;; Tracked objects:
  3338 ;;		On entry : 0/0
  3339 ;;		On exit  : 0/0
  3340 ;;		Unchanged: 0/0
  3341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3342 ;;      Params:         0       0       0       0       0       0       0       0       0
  3343 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3344 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3345 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3346 ;;Total ram usage:        0 bytes
  3347 ;; Hardware stack levels used: 1
  3348 ;; This function calls:
  3349 ;;		Nothing
  3350 ;; This function is called by:
  3351 ;;		_fputc
  3352 ;; This function uses a non-reentrant model
  3353 ;;
  3354                           
  3355                           	psect	text17
  3356  001DFE                     __ptext17:
  3357                           	callstack 0
  3358  001DFE                     _putch:
  3359                           	callstack 25
  3360  001DFE  0012               	return		;funcret
  3361  001E00                     __end_of_putch:
  3362                           	callstack 0
  3363                           
  3364 ;; *************** function _abs *****************
  3365 ;; Defined at:
  3366 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  3367 ;; Parameters:    Size  Location     Type
  3368 ;;  a               2   18[COMRAM] int 
  3369 ;; Auto vars:     Size  Location     Type
  3370 ;;		None
  3371 ;; Return value:  Size  Location     Type
  3372 ;;                  2   18[COMRAM] int 
  3373 ;; Registers used:
  3374 ;;		wreg, status,2, status,0
  3375 ;; Tracked objects:
  3376 ;;		On entry : 0/0
  3377 ;;		On exit  : 0/0
  3378 ;;		Unchanged: 0/0
  3379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3380 ;;      Params:         2       0       0       0       0       0       0       0       0
  3381 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3382 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3383 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3384 ;;Total ram usage:        4 bytes
  3385 ;; Hardware stack levels used: 1
  3386 ;; This function calls:
  3387 ;;		Nothing
  3388 ;; This function is called by:
  3389 ;;		_dtoa
  3390 ;; This function uses a non-reentrant model
  3391 ;;
  3392                           
  3393                           	psect	text18
  3394  001BC2                     __ptext18:
  3395                           	callstack 0
  3396  001BC2                     _abs:
  3397                           	callstack 25
  3398  001BC2  BE14               	btfsc	(abs@a+1)^0,7,c
  3399  001BC4  EFEE  F00D         	goto	u1080
  3400  001BC8  5014               	movf	(abs@a+1)^0,w,c
  3401  001BCA  E106               	bnz	u1081
  3402  001BCC  0413               	decf	abs@a^0,w,c
  3403  001BCE  B0D8               	btfsc	status,0,c
  3404  001BD0  EFEC  F00D         	goto	u1081
  3405  001BD4  EFEE  F00D         	goto	u1080
  3406  001BD8                     u1081:
  3407  001BD8  EFFC  F00D         	goto	l1059
  3408  001BDC                     u1080:
  3409  001BDC  C013  F015         	movff	abs@a,??_abs
  3410  001BE0  C014  F016         	movff	abs@a+1,??_abs+1
  3411  001BE4  1E15               	comf	??_abs^0,f,c
  3412  001BE6  1E16               	comf	(??_abs+1)^0,f,c
  3413  001BE8  4A15               	infsnz	??_abs^0,f,c
  3414  001BEA  2A16               	incf	(??_abs+1)^0,f,c
  3415  001BEC  C015  F013         	movff	??_abs,?_abs
  3416  001BF0  C016  F014         	movff	??_abs+1,?_abs+1
  3417  001BF4  EF00  F00E         	goto	l1062
  3418  001BF8                     l1059:
  3419  001BF8  C013  F013         	movff	abs@a,?_abs
  3420  001BFC  C014  F014         	movff	abs@a+1,?_abs+1
  3421  001C00                     l1062:
  3422  001C00  0012               	return		;funcret
  3423  001C02                     __end_of_abs:
  3424                           	callstack 0
  3425                           
  3426 ;; *************** function ___aomod *****************
  3427 ;; Defined at:
  3428 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  3429 ;; Parameters:    Size  Location     Type
  3430 ;;  dividend        8    0[COMRAM] long long 
  3431 ;;  divisor         8    8[COMRAM] long long 
  3432 ;; Auto vars:     Size  Location     Type
  3433 ;;  sign            1   17[COMRAM] unsigned char 
  3434 ;;  counter         1   16[COMRAM] unsigned char 
  3435 ;; Return value:  Size  Location     Type
  3436 ;;                  8    0[COMRAM] long long 
  3437 ;; Registers used:
  3438 ;;		wreg, status,2, status,0
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3444 ;;      Params:        16       0       0       0       0       0       0       0       0
  3445 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3446 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3447 ;;      Totals:        18       0       0       0       0       0       0       0       0
  3448 ;;Total ram usage:       18 bytes
  3449 ;; Hardware stack levels used: 1
  3450 ;; This function calls:
  3451 ;;		Nothing
  3452 ;; This function is called by:
  3453 ;;		_dtoa
  3454 ;; This function uses a non-reentrant model
  3455 ;;
  3456                           
  3457                           	psect	text19
  3458  00108C                     __ptext19:
  3459                           	callstack 0
  3460  00108C                     ___aomod:
  3461                           	callstack 25
  3462  00108C  0E00               	movlw	0
  3463  00108E  6E12               	movwf	___aomod@sign^0,c
  3464  001090  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  3465  001092  EF4F  F008         	goto	u980
  3466  001096  EF4D  F008         	goto	u981
  3467  00109A                     u981:
  3468  00109A  EF61  F008         	goto	l1849
  3469  00109E                     u980:
  3470  00109E  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3471  0010A0  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3472  0010A2  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3473  0010A4  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3474  0010A6  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3475  0010A8  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3476  0010AA  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3477  0010AC  6C01               	negf	___aomod@dividend^0,c
  3478  0010AE  0E00               	movlw	0
  3479  0010B0  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3480  0010B2  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3481  0010B4  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3482  0010B6  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3483  0010B8  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3484  0010BA  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3485  0010BC  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3486  0010BE  0E01               	movlw	1
  3487  0010C0  6E12               	movwf	___aomod@sign^0,c
  3488  0010C2                     l1849:
  3489  0010C2  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  3490  0010C4  EF68  F008         	goto	u990
  3491  0010C8  EF66  F008         	goto	u991
  3492  0010CC                     u991:
  3493  0010CC  EF78  F008         	goto	l1853
  3494  0010D0                     u990:
  3495  0010D0  1E10               	comf	(___aomod@divisor+7)^0,f,c
  3496  0010D2  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  3497  0010D4  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  3498  0010D6  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  3499  0010D8  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  3500  0010DA  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  3501  0010DC  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  3502  0010DE  6C09               	negf	___aomod@divisor^0,c
  3503  0010E0  0E00               	movlw	0
  3504  0010E2  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  3505  0010E4  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  3506  0010E6  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  3507  0010E8  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  3508  0010EA  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  3509  0010EC  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  3510  0010EE  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  3511  0010F0                     l1853:
  3512  0010F0  5009               	movf	___aomod@divisor^0,w,c
  3513  0010F2  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  3514  0010F4  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  3515  0010F6  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  3516  0010F8  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  3517  0010FA  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  3518  0010FC  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  3519  0010FE  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  3520  001100  B4D8               	btfsc	status,2,c
  3521  001102  EF85  F008         	goto	u1001
  3522  001106  EF87  F008         	goto	u1000
  3523  00110A                     u1001:
  3524  00110A  EFCF  F008         	goto	l1869
  3525  00110E                     u1000:
  3526  00110E  0E01               	movlw	1
  3527  001110  6E11               	movwf	___aomod@counter^0,c
  3528  001112  EF95  F008         	goto	l1859
  3529  001116                     l1857:
  3530  001116  90D8               	bcf	status,0,c
  3531  001118  3609               	rlcf	___aomod@divisor^0,f,c
  3532  00111A  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  3533  00111C  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  3534  00111E  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  3535  001120  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  3536  001122  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  3537  001124  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  3538  001126  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  3539  001128  2A11               	incf	___aomod@counter^0,f,c
  3540  00112A                     l1859:
  3541  00112A  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  3542  00112C  EF9A  F008         	goto	u1011
  3543  001130  EF9C  F008         	goto	u1010
  3544  001134                     u1011:
  3545  001134  EF8B  F008         	goto	l1857
  3546  001138                     u1010:
  3547  001138                     l1861:
  3548  001138  5009               	movf	___aomod@divisor^0,w,c
  3549  00113A  5C01               	subwf	___aomod@dividend^0,w,c
  3550  00113C  500A               	movf	(___aomod@divisor+1)^0,w,c
  3551  00113E  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  3552  001140  500B               	movf	(___aomod@divisor+2)^0,w,c
  3553  001142  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  3554  001144  500C               	movf	(___aomod@divisor+3)^0,w,c
  3555  001146  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  3556  001148  500D               	movf	(___aomod@divisor+4)^0,w,c
  3557  00114A  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  3558  00114C  500E               	movf	(___aomod@divisor+5)^0,w,c
  3559  00114E  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  3560  001150  500F               	movf	(___aomod@divisor+6)^0,w,c
  3561  001152  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  3562  001154  5010               	movf	(___aomod@divisor+7)^0,w,c
  3563  001156  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  3564  001158  A0D8               	btfss	status,0,c
  3565  00115A  EFB1  F008         	goto	u1021
  3566  00115E  EFB3  F008         	goto	u1020
  3567  001162                     u1021:
  3568  001162  EFC3  F008         	goto	l1865
  3569  001166                     u1020:
  3570  001166  5009               	movf	___aomod@divisor^0,w,c
  3571  001168  5E01               	subwf	___aomod@dividend^0,f,c
  3572  00116A  500A               	movf	(___aomod@divisor+1)^0,w,c
  3573  00116C  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  3574  00116E  500B               	movf	(___aomod@divisor+2)^0,w,c
  3575  001170  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  3576  001172  500C               	movf	(___aomod@divisor+3)^0,w,c
  3577  001174  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  3578  001176  500D               	movf	(___aomod@divisor+4)^0,w,c
  3579  001178  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  3580  00117A  500E               	movf	(___aomod@divisor+5)^0,w,c
  3581  00117C  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  3582  00117E  500F               	movf	(___aomod@divisor+6)^0,w,c
  3583  001180  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  3584  001182  5010               	movf	(___aomod@divisor+7)^0,w,c
  3585  001184  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  3586  001186                     l1865:
  3587  001186  90D8               	bcf	status,0,c
  3588  001188  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  3589  00118A  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  3590  00118C  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  3591  00118E  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  3592  001190  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  3593  001192  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  3594  001194  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  3595  001196  3209               	rrcf	___aomod@divisor^0,f,c
  3596  001198  2E11               	decfsz	___aomod@counter^0,f,c
  3597  00119A  EF9C  F008         	goto	l1861
  3598  00119E                     l1869:
  3599  00119E  5012               	movf	___aomod@sign^0,w,c
  3600  0011A0  B4D8               	btfsc	status,2,c
  3601  0011A2  EFD5  F008         	goto	u1031
  3602  0011A6  EFD7  F008         	goto	u1030
  3603  0011AA                     u1031:
  3604  0011AA  EFE7  F008         	goto	l1873
  3605  0011AE                     u1030:
  3606  0011AE  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3607  0011B0  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3608  0011B2  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3609  0011B4  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3610  0011B6  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3611  0011B8  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3612  0011BA  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3613  0011BC  6C01               	negf	___aomod@dividend^0,c
  3614  0011BE  0E00               	movlw	0
  3615  0011C0  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3616  0011C2  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3617  0011C4  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3618  0011C6  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3619  0011C8  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3620  0011CA  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3621  0011CC  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3622  0011CE                     l1873:
  3623  0011CE  C001  F001         	movff	___aomod@dividend,?___aomod
  3624  0011D2  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3625  0011D6  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3626  0011DA  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3627  0011DE  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3628  0011E2  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3629  0011E6  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3630  0011EA  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3631  0011EE  0012               	return		;funcret
  3632  0011F0                     __end_of___aomod:
  3633                           	callstack 0
  3634                           
  3635 ;; *************** function ___aodiv *****************
  3636 ;; Defined at:
  3637 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  3638 ;; Parameters:    Size  Location     Type
  3639 ;;  dividend        8    0[COMRAM] long long 
  3640 ;;  divisor         8    8[COMRAM] long long 
  3641 ;; Auto vars:     Size  Location     Type
  3642 ;;  quotient        8   18[COMRAM] long long 
  3643 ;;  sign            1   17[COMRAM] unsigned char 
  3644 ;;  counter         1   16[COMRAM] unsigned char 
  3645 ;; Return value:  Size  Location     Type
  3646 ;;                  8    0[COMRAM] long long 
  3647 ;; Registers used:
  3648 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3649 ;; Tracked objects:
  3650 ;;		On entry : 0/0
  3651 ;;		On exit  : 0/0
  3652 ;;		Unchanged: 0/0
  3653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3654 ;;      Params:        16       0       0       0       0       0       0       0       0
  3655 ;;      Locals:        10       0       0       0       0       0       0       0       0
  3656 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3657 ;;      Totals:        26       0       0       0       0       0       0       0       0
  3658 ;;Total ram usage:       26 bytes
  3659 ;; Hardware stack levels used: 1
  3660 ;; This function calls:
  3661 ;;		Nothing
  3662 ;; This function is called by:
  3663 ;;		_dtoa
  3664 ;; This function uses a non-reentrant model
  3665 ;;
  3666                           
  3667                           	psect	text20
  3668  000F04                     __ptext20:
  3669                           	callstack 0
  3670  000F04                     ___aodiv:
  3671                           	callstack 25
  3672  000F04  0E00               	movlw	0
  3673  000F06  6E12               	movwf	___aodiv@sign^0,c
  3674  000F08  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3675  000F0A  EF8B  F007         	goto	u910
  3676  000F0E  EF89  F007         	goto	u911
  3677  000F12                     u911:
  3678  000F12  EF9D  F007         	goto	l1805
  3679  000F16                     u910:
  3680  000F16  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3681  000F18  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3682  000F1A  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3683  000F1C  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3684  000F1E  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3685  000F20  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3686  000F22  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3687  000F24  6C09               	negf	___aodiv@divisor^0,c
  3688  000F26  0E00               	movlw	0
  3689  000F28  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3690  000F2A  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3691  000F2C  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3692  000F2E  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3693  000F30  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3694  000F32  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3695  000F34  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3696  000F36  0E01               	movlw	1
  3697  000F38  6E12               	movwf	___aodiv@sign^0,c
  3698  000F3A                     l1805:
  3699  000F3A  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3700  000F3C  EFA4  F007         	goto	u920
  3701  000F40  EFA2  F007         	goto	u921
  3702  000F44                     u921:
  3703  000F44  EFB6  F007         	goto	l1811
  3704  000F48                     u920:
  3705  000F48  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3706  000F4A  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3707  000F4C  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3708  000F4E  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3709  000F50  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3710  000F52  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3711  000F54  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3712  000F56  6C01               	negf	___aodiv@dividend^0,c
  3713  000F58  0E00               	movlw	0
  3714  000F5A  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3715  000F5C  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3716  000F5E  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3717  000F60  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3718  000F62  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3719  000F64  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3720  000F66  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3721  000F68  0E01               	movlw	1
  3722  000F6A  1A12               	xorwf	___aodiv@sign^0,f,c
  3723  000F6C                     l1811:
  3724  000F6C  EE20  F013         	lfsr	2,___aodiv@quotient
  3725  000F70  0E07               	movlw	7
  3726  000F72                     u931:
  3727  000F72  6ADE               	clrf	postinc2,c
  3728  000F74  06E8               	decf	wreg,f,c
  3729  000F76  E2FD               	bc	u931
  3730  000F78  5009               	movf	___aodiv@divisor^0,w,c
  3731  000F7A  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3732  000F7C  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3733  000F7E  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3734  000F80  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3735  000F82  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3736  000F84  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3737  000F86  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  3738  000F88  B4D8               	btfsc	status,2,c
  3739  000F8A  EFC9  F007         	goto	u941
  3740  000F8E  EFCB  F007         	goto	u940
  3741  000F92                     u941:
  3742  000F92  EF1D  F008         	goto	l1833
  3743  000F96                     u940:
  3744  000F96  0E01               	movlw	1
  3745  000F98  6E11               	movwf	___aodiv@counter^0,c
  3746  000F9A  EFD9  F007         	goto	l1819
  3747  000F9E                     l1817:
  3748  000F9E  90D8               	bcf	status,0,c
  3749  000FA0  3609               	rlcf	___aodiv@divisor^0,f,c
  3750  000FA2  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3751  000FA4  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3752  000FA6  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3753  000FA8  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3754  000FAA  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3755  000FAC  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3756  000FAE  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  3757  000FB0  2A11               	incf	___aodiv@counter^0,f,c
  3758  000FB2                     l1819:
  3759  000FB2  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  3760  000FB4  EFDE  F007         	goto	u951
  3761  000FB8  EFE0  F007         	goto	u950
  3762  000FBC                     u951:
  3763  000FBC  EFCF  F007         	goto	l1817
  3764  000FC0                     u950:
  3765  000FC0                     l1821:
  3766  000FC0  90D8               	bcf	status,0,c
  3767  000FC2  3613               	rlcf	___aodiv@quotient^0,f,c
  3768  000FC4  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3769  000FC6  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3770  000FC8  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3771  000FCA  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3772  000FCC  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3773  000FCE  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3774  000FD0  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3775  000FD2  5009               	movf	___aodiv@divisor^0,w,c
  3776  000FD4  5C01               	subwf	___aodiv@dividend^0,w,c
  3777  000FD6  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3778  000FD8  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3779  000FDA  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3780  000FDC  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3781  000FDE  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3782  000FE0  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3783  000FE2  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3784  000FE4  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3785  000FE6  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3786  000FE8  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3787  000FEA  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3788  000FEC  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  3789  000FEE  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3790  000FF0  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  3791  000FF2  A0D8               	btfss	status,0,c
  3792  000FF4  EFFE  F007         	goto	u961
  3793  000FF8  EF00  F008         	goto	u960
  3794  000FFC                     u961:
  3795  000FFC  EF11  F008         	goto	l1829
  3796  001000                     u960:
  3797  001000  5009               	movf	___aodiv@divisor^0,w,c
  3798  001002  5E01               	subwf	___aodiv@dividend^0,f,c
  3799  001004  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3800  001006  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3801  001008  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3802  00100A  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3803  00100C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3804  00100E  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3805  001010  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3806  001012  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3807  001014  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3808  001016  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3809  001018  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3810  00101A  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3811  00101C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3812  00101E  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  3813  001020  8013               	bsf	___aodiv@quotient^0,0,c
  3814  001022                     l1829:
  3815  001022  90D8               	bcf	status,0,c
  3816  001024  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  3817  001026  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3818  001028  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3819  00102A  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3820  00102C  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3821  00102E  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3822  001030  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3823  001032  3209               	rrcf	___aodiv@divisor^0,f,c
  3824  001034  2E11               	decfsz	___aodiv@counter^0,f,c
  3825  001036  EFE0  F007         	goto	l1821
  3826  00103A                     l1833:
  3827  00103A  5012               	movf	___aodiv@sign^0,w,c
  3828  00103C  B4D8               	btfsc	status,2,c
  3829  00103E  EF23  F008         	goto	u971
  3830  001042  EF25  F008         	goto	u970
  3831  001046                     u971:
  3832  001046  EF35  F008         	goto	l1837
  3833  00104A                     u970:
  3834  00104A  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  3835  00104C  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  3836  00104E  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  3837  001050  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  3838  001052  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  3839  001054  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  3840  001056  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  3841  001058  6C13               	negf	___aodiv@quotient^0,c
  3842  00105A  0E00               	movlw	0
  3843  00105C  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3844  00105E  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3845  001060  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3846  001062  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3847  001064  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3848  001066  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3849  001068  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3850  00106A                     l1837:
  3851  00106A  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3852  00106E  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3853  001072  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3854  001076  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3855  00107A  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3856  00107E  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3857  001082  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3858  001086  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3859  00108A  0012               	return		;funcret
  3860  00108C                     __end_of___aodiv:
  3861                           	callstack 0
  3862                           
  3863 ;; *************** function _LCD_String_xy *****************
  3864 ;; Defined at:
  3865 ;;		line 77 in file "LCD.c"
  3866 ;; Parameters:    Size  Location     Type
  3867 ;;  row             1    wreg     unsigned char 
  3868 ;;  pos             1    4[COMRAM] unsigned char 
  3869 ;;  msg             2    5[COMRAM] PTR const unsigned char 
  3870 ;;		 -> STR_4(14), STR_3(14), STR_2(15), STR_1(15), 
  3871 ;;		 -> Cadena(10), 
  3872 ;; Auto vars:     Size  Location     Type
  3873 ;;  row             1    7[COMRAM] unsigned char 
  3874 ;;  location        1    8[COMRAM] unsigned char 
  3875 ;; Return value:  Size  Location     Type
  3876 ;;                  1    wreg      void 
  3877 ;; Registers used:
  3878 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3879 ;; Tracked objects:
  3880 ;;		On entry : 0/0
  3881 ;;		On exit  : 0/0
  3882 ;;		Unchanged: 0/0
  3883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3884 ;;      Params:         3       0       0       0       0       0       0       0       0
  3885 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3886 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3887 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3888 ;;Total ram usage:        5 bytes
  3889 ;; Hardware stack levels used: 1
  3890 ;; Hardware stack levels required when called: 2
  3891 ;; This function calls:
  3892 ;;		_LCD_Command
  3893 ;;		_LCD_String
  3894 ;; This function is called by:
  3895 ;;		_PedirDato
  3896 ;;		_MostrarHumedad
  3897 ;;		_MostrarTemperatura
  3898 ;; This function uses a non-reentrant model
  3899 ;;
  3900                           
  3901                           	psect	text21
  3902  001C02                     __ptext21:
  3903                           	callstack 0
  3904  001C02                     _LCD_String_xy:
  3905                           	callstack 26
  3906                           
  3907                           ;incstack = 0
  3908                           ;LCD_String_xy@row stored from wreg
  3909  001C02  6E08               	movwf	LCD_String_xy@row^0,c
  3910  001C04                     
  3911                           ;LCD.c: 80:     if(row<=1)
  3912  001C04  0E02               	movlw	2
  3913  001C06  6008               	cpfslt	LCD_String_xy@row^0,c
  3914  001C08  EF08  F00E         	goto	u1311
  3915  001C0C  EF0A  F00E         	goto	u1310
  3916  001C10                     u1311:
  3917  001C10  EF13  F00E         	goto	l2065
  3918  001C14                     u1310:
  3919  001C14                     
  3920                           ;LCD.c: 81:     {;LCD.c: 82:         location = (0x80) | ((pos) & 0x0f);
  3921  001C14  5005               	movf	LCD_String_xy@pos^0,w,c
  3922  001C16  0B0F               	andlw	15
  3923  001C18  0980               	iorlw	128
  3924  001C1A  6E09               	movwf	LCD_String_xy@location^0,c
  3925  001C1C                     
  3926                           ;LCD.c: 83:         LCD_Command(location);
  3927  001C1C  5009               	movf	LCD_String_xy@location^0,w,c
  3928  001C1E  EC51  F00D         	call	_LCD_Command
  3929                           
  3930                           ;LCD.c: 84:     }
  3931  001C22  EF1A  F00E         	goto	l2069
  3932  001C26                     l2065:
  3933                           
  3934                           ;LCD.c: 86:     {;LCD.c: 87:         location = (0xC0) | ((pos) & 0x0f);
  3935  001C26  5005               	movf	LCD_String_xy@pos^0,w,c
  3936  001C28  0B0F               	andlw	15
  3937  001C2A  09C0               	iorlw	192
  3938  001C2C  6E09               	movwf	LCD_String_xy@location^0,c
  3939  001C2E                     
  3940                           ;LCD.c: 88:         LCD_Command(location);
  3941  001C2E  5009               	movf	LCD_String_xy@location^0,w,c
  3942  001C30  EC51  F00D         	call	_LCD_Command
  3943  001C34                     l2069:
  3944                           
  3945                           ;LCD.c: 92:     LCD_String(msg);
  3946  001C34  C006  F003         	movff	LCD_String_xy@msg,LCD_String@msg
  3947  001C38  C007  F004         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  3948  001C3C  EC78  F00C         	call	_LCD_String	;wreg free
  3949  001C40  0012               	return		;funcret
  3950  001C42                     __end_of_LCD_String_xy:
  3951                           	callstack 0
  3952                           
  3953 ;; *************** function _LCD_String *****************
  3954 ;; Defined at:
  3955 ;;		line 67 in file "LCD.c"
  3956 ;; Parameters:    Size  Location     Type
  3957 ;;  msg             2    2[COMRAM] PTR const unsigned char 
  3958 ;;		 -> STR_4(14), STR_3(14), STR_2(15), STR_1(15), 
  3959 ;;		 -> Cadena(10), 
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;		None
  3962 ;; Return value:  Size  Location     Type
  3963 ;;                  1    wreg      void 
  3964 ;; Registers used:
  3965 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3966 ;; Tracked objects:
  3967 ;;		On entry : 0/0
  3968 ;;		On exit  : 0/0
  3969 ;;		Unchanged: 0/0
  3970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3971 ;;      Params:         2       0       0       0       0       0       0       0       0
  3972 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3973 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3974 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3975 ;;Total ram usage:        2 bytes
  3976 ;; Hardware stack levels used: 1
  3977 ;; Hardware stack levels required when called: 1
  3978 ;; This function calls:
  3979 ;;		_LCD_Char
  3980 ;; This function is called by:
  3981 ;;		_LCD_String_xy
  3982 ;;		_MostrarHumedad
  3983 ;;		_MostrarTemperatura
  3984 ;; This function uses a non-reentrant model
  3985 ;;
  3986                           
  3987                           	psect	text22
  3988  0018F0                     __ptext22:
  3989                           	callstack 0
  3990  0018F0                     _LCD_String:
  3991                           	callstack 26
  3992  0018F0                     
  3993                           ;LCD.c: 67: void LCD_String(const char *msg);LCD.c: 68: {;LCD.c: 69:  while((*msg)!=0)
  3994  0018F0  EF8E  F00C         	goto	l2011
  3995  0018F4                     l2007:
  3996                           
  3997                           ;LCD.c: 70:  {;LCD.c: 71:    LCD_Char(*msg);
  3998  0018F4  C003  FFF6         	movff	LCD_String@msg,tblptrl
  3999  0018F8  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  4000  0018FC  6AF8               	clrf	tblptru,c
  4001  0018FE  0E07               	movlw	(high __ramtop+-1)
  4002  001900  64F7               	cpfsgt	tblptrh,c
  4003  001902  D003               	bra	u1247
  4004  001904  0008               	tblrd		*
  4005  001906  50F5               	movf	tablat,w,c
  4006  001908  D005               	bra	u1240
  4007  00190A                     u1247:
  4008  00190A  CFF6 FFE1          	movff	tblptrl,fsr1l
  4009  00190E  CFF7 FFE2          	movff	tblptrh,fsr1h
  4010  001912  50E7               	movf	indf1,w,c
  4011  001914                     u1240:
  4012  001914  EC29  F00D         	call	_LCD_Char
  4013  001918                     
  4014                           ;LCD.c: 72:    msg++;
  4015  001918  4A03               	infsnz	LCD_String@msg^0,f,c
  4016  00191A  2A04               	incf	(LCD_String@msg+1)^0,f,c
  4017  00191C                     l2011:
  4018                           
  4019                           ;LCD.c: 69:  while((*msg)!=0)
  4020  00191C  C003  FFF6         	movff	LCD_String@msg,tblptrl
  4021  001920  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  4022  001924  6AF8               	clrf	tblptru,c
  4023  001926  0E07               	movlw	(high __ramtop+-1)
  4024  001928  64F7               	cpfsgt	tblptrh,c
  4025  00192A  D003               	bra	u1257
  4026  00192C  0008               	tblrd		*
  4027  00192E  50F5               	movf	tablat,w,c
  4028  001930  D005               	bra	u1250
  4029  001932                     u1257:
  4030  001932  CFF6 FFE1          	movff	tblptrl,fsr1l
  4031  001936  CFF7 FFE2          	movff	tblptrh,fsr1h
  4032  00193A  50E7               	movf	indf1,w,c
  4033  00193C                     u1250:
  4034  00193C  0900               	iorlw	0
  4035  00193E  A4D8               	btfss	status,2,c
  4036  001940  EFA4  F00C         	goto	u1261
  4037  001944  EFA6  F00C         	goto	u1260
  4038  001948                     u1261:
  4039  001948  EF7A  F00C         	goto	l2007
  4040  00194C                     u1260:
  4041  00194C  0012               	return		;funcret
  4042  00194E                     __end_of_LCD_String:
  4043                           	callstack 0
  4044                           
  4045 ;; *************** function _LCD_Char *****************
  4046 ;; Defined at:
  4047 ;;		line 53 in file "LCD.c"
  4048 ;; Parameters:    Size  Location     Type
  4049 ;;  dat             1    wreg     unsigned char 
  4050 ;; Auto vars:     Size  Location     Type
  4051 ;;  dat             1    1[COMRAM] unsigned char 
  4052 ;; Return value:  Size  Location     Type
  4053 ;;                  1    wreg      void 
  4054 ;; Registers used:
  4055 ;;		wreg, status,2, status,0
  4056 ;; Tracked objects:
  4057 ;;		On entry : 0/0
  4058 ;;		On exit  : 0/0
  4059 ;;		Unchanged: 0/0
  4060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4061 ;;      Params:         0       0       0       0       0       0       0       0       0
  4062 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4063 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4064 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4065 ;;Total ram usage:        2 bytes
  4066 ;; Hardware stack levels used: 1
  4067 ;; This function calls:
  4068 ;;		Nothing
  4069 ;; This function is called by:
  4070 ;;		_LCD_String
  4071 ;;		_PedirDato
  4072 ;;		_MostrarHumedad
  4073 ;;		_MostrarTemperatura
  4074 ;; This function uses a non-reentrant model
  4075 ;;
  4076                           
  4077                           	psect	text23
  4078  001A52                     __ptext23:
  4079                           	callstack 0
  4080  001A52                     _LCD_Char:
  4081                           	callstack 26
  4082                           
  4083                           ;incstack = 0
  4084                           ;LCD_Char@dat stored from wreg
  4085  001A52  6E02               	movwf	LCD_Char@dat^0,c
  4086  001A54                     
  4087                           ;LCD.c: 53: void LCD_Char(unsigned char dat);LCD.c: 54: {;LCD.c: 55:  LATD = (LATD & 0x0
      +                          f) | (0xF0 & dat);
  4088  001A54  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  4089  001A58  0EF0               	movlw	240
  4090  001A5A  1601               	andwf	??_LCD_Char^0,f,c
  4091  001A5C  508C               	movf	140,w,c	;volatile
  4092  001A5E  0B0F               	andlw	15
  4093  001A60  1001               	iorwf	??_LCD_Char^0,w,c
  4094  001A62  6E8C               	movwf	140,c	;volatile
  4095  001A64                     
  4096                           ;LCD.c: 56:  LATD0 = 1;
  4097  001A64  808C               	bsf	3980,0,c	;volatile
  4098  001A66                     
  4099                           ;LCD.c: 57:  LATD1 = 1;
  4100  001A66  828C               	bsf	3980,1,c	;volatile
  4101  001A68                     
  4102                           ;LCD.c: 58:  __nop();
  4103  001A68  F000               	nop	
  4104  001A6A                     
  4105                           ;LCD.c: 59:  LATD1 = 0;
  4106  001A6A  928C               	bcf	3980,1,c	;volatile
  4107  001A6C                     
  4108                           ;LCD.c: 60:  _delay((unsigned long)((1)*(8000000L/4000.0)));
  4109  001A6C  0E03               	movlw	3
  4110  001A6E  6E01               	movwf	??_LCD_Char^0,c
  4111  001A70  0E98               	movlw	152
  4112  001A72                     u1787:
  4113  001A72  2EE8               	decfsz	wreg,f,c
  4114  001A74  D7FE               	bra	u1787
  4115  001A76  2E01               	decfsz	??_LCD_Char^0,f,c
  4116  001A78  D7FC               	bra	u1787
  4117  001A7A                     
  4118                           ;LCD.c: 61:     LATD = (LATD & 0x0f) | (dat<<4);
  4119  001A7A  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  4120  001A7E  3A01               	swapf	??_LCD_Char^0,f,c
  4121  001A80  0EF0               	movlw	240
  4122  001A82  1601               	andwf	??_LCD_Char^0,f,c
  4123  001A84  508C               	movf	140,w,c	;volatile
  4124  001A86  0B0F               	andlw	15
  4125  001A88  1001               	iorwf	??_LCD_Char^0,w,c
  4126  001A8A  6E8C               	movwf	140,c	;volatile
  4127  001A8C                     
  4128                           ;LCD.c: 62:  LATD1 = 1;
  4129  001A8C  828C               	bsf	3980,1,c	;volatile
  4130  001A8E                     
  4131                           ;LCD.c: 63:  __nop();
  4132  001A8E  F000               	nop	
  4133  001A90                     
  4134                           ;LCD.c: 64:  LATD1 = 0;
  4135  001A90  928C               	bcf	3980,1,c	;volatile
  4136                           
  4137                           ;LCD.c: 65:  _delay((unsigned long)((3)*(8000000L/4000.0)));
  4138  001A92  0E08               	movlw	8
  4139  001A94  6E01               	movwf	??_LCD_Char^0,c
  4140  001A96  0ECA               	movlw	202
  4141  001A98                     u1797:
  4142  001A98  2EE8               	decfsz	wreg,f,c
  4143  001A9A  D7FE               	bra	u1797
  4144  001A9C  2E01               	decfsz	??_LCD_Char^0,f,c
  4145  001A9E  D7FC               	bra	u1797
  4146  001AA0  0012               	return		;funcret
  4147  001AA2                     __end_of_LCD_Char:
  4148                           	callstack 0
  4149                           
  4150 ;; *************** function _LCD_Init *****************
  4151 ;; Defined at:
  4152 ;;		line 25 in file "LCD.c"
  4153 ;; Parameters:    Size  Location     Type
  4154 ;;		None
  4155 ;; Auto vars:     Size  Location     Type
  4156 ;;		None
  4157 ;; Return value:  Size  Location     Type
  4158 ;;                  1    wreg      void 
  4159 ;; Registers used:
  4160 ;;		wreg, status,2, status,0, cstack
  4161 ;; Tracked objects:
  4162 ;;		On entry : 0/0
  4163 ;;		On exit  : 0/0
  4164 ;;		Unchanged: 0/0
  4165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4166 ;;      Params:         0       0       0       0       0       0       0       0       0
  4167 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4168 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4169 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4170 ;;Total ram usage:        1 bytes
  4171 ;; Hardware stack levels used: 1
  4172 ;; Hardware stack levels required when called: 1
  4173 ;; This function calls:
  4174 ;;		_LCD_Command
  4175 ;; This function is called by:
  4176 ;;		_main
  4177 ;; This function uses a non-reentrant model
  4178 ;;
  4179                           
  4180                           	psect	text24
  4181  001CEC                     __ptext24:
  4182                           	callstack 0
  4183  001CEC                     _LCD_Init:
  4184                           	callstack 29
  4185  001CEC                     
  4186                           ;LCD.c: 27:     TRISD = 0;
  4187  001CEC  0E00               	movlw	0
  4188  001CEE  6E95               	movwf	149,c	;volatile
  4189  001CF0                     
  4190                           ;LCD.c: 28:     _delay((unsigned long)((15)*(8000000L/4000.0)));
  4191  001CF0  0E27               	movlw	39
  4192  001CF2  6E03               	movwf	??_LCD_Init^0,c
  4193  001CF4  0EF5               	movlw	245
  4194  001CF6                     u1807:
  4195  001CF6  2EE8               	decfsz	wreg,f,c
  4196  001CF8  D7FE               	bra	u1807
  4197  001CFA  2E03               	decfsz	??_LCD_Init^0,f,c
  4198  001CFC  D7FC               	bra	u1807
  4199  001CFE  F000               	nop	
  4200  001D00                     
  4201                           ;LCD.c: 29:     LCD_Command(0x02);
  4202  001D00  0E02               	movlw	2
  4203  001D02  EC51  F00D         	call	_LCD_Command
  4204  001D06                     
  4205                           ;LCD.c: 31:     LCD_Command(0x28);
  4206  001D06  0E28               	movlw	40
  4207  001D08  EC51  F00D         	call	_LCD_Command
  4208  001D0C                     
  4209                           ;LCD.c: 33:  LCD_Command(0x01);
  4210  001D0C  0E01               	movlw	1
  4211  001D0E  EC51  F00D         	call	_LCD_Command
  4212  001D12                     
  4213                           ;LCD.c: 34:     LCD_Command(0x0c);
  4214  001D12  0E0C               	movlw	12
  4215  001D14  EC51  F00D         	call	_LCD_Command
  4216  001D18                     
  4217                           ;LCD.c: 35:  LCD_Command(0x06);
  4218  001D18  0E06               	movlw	6
  4219  001D1A  EC51  F00D         	call	_LCD_Command
  4220  001D1E  0012               	return		;funcret
  4221  001D20                     __end_of_LCD_Init:
  4222                           	callstack 0
  4223                           
  4224 ;; *************** function _LCD_Command *****************
  4225 ;; Defined at:
  4226 ;;		line 38 in file "LCD.c"
  4227 ;; Parameters:    Size  Location     Type
  4228 ;;  cmd             1    wreg     unsigned char 
  4229 ;; Auto vars:     Size  Location     Type
  4230 ;;  cmd             1    1[COMRAM] unsigned char 
  4231 ;; Return value:  Size  Location     Type
  4232 ;;                  1    wreg      void 
  4233 ;; Registers used:
  4234 ;;		wreg, status,2, status,0
  4235 ;; Tracked objects:
  4236 ;;		On entry : 0/0
  4237 ;;		On exit  : 0/0
  4238 ;;		Unchanged: 0/0
  4239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4240 ;;      Params:         0       0       0       0       0       0       0       0       0
  4241 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4242 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4243 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4244 ;;Total ram usage:        2 bytes
  4245 ;; Hardware stack levels used: 1
  4246 ;; This function calls:
  4247 ;;		Nothing
  4248 ;; This function is called by:
  4249 ;;		_LCD_Init
  4250 ;;		_LCD_String_xy
  4251 ;;		_LCD_Clear
  4252 ;;		_PedirDato
  4253 ;; This function uses a non-reentrant model
  4254 ;;
  4255                           
  4256                           	psect	text25
  4257  001AA2                     __ptext25:
  4258                           	callstack 0
  4259  001AA2                     _LCD_Command:
  4260                           	callstack 27
  4261                           
  4262                           ;incstack = 0
  4263                           ;LCD_Command@cmd stored from wreg
  4264  001AA2  6E02               	movwf	LCD_Command@cmd^0,c
  4265  001AA4                     
  4266                           ;LCD.c: 38: void LCD_Command(unsigned char cmd );LCD.c: 39: {;LCD.c: 40:  LATD = (LATD &
      +                           0x0f) |(0xF0 & cmd);
  4267  001AA4  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  4268  001AA8  0EF0               	movlw	240
  4269  001AAA  1601               	andwf	??_LCD_Command^0,f,c
  4270  001AAC  508C               	movf	140,w,c	;volatile
  4271  001AAE  0B0F               	andlw	15
  4272  001AB0  1001               	iorwf	??_LCD_Command^0,w,c
  4273  001AB2  6E8C               	movwf	140,c	;volatile
  4274  001AB4                     
  4275                           ;LCD.c: 41:  LATD0 = 0;
  4276  001AB4  908C               	bcf	3980,0,c	;volatile
  4277  001AB6                     
  4278                           ;LCD.c: 42:  LATD1 = 1;
  4279  001AB6  828C               	bsf	3980,1,c	;volatile
  4280  001AB8                     
  4281                           ;LCD.c: 43:  __nop();
  4282  001AB8  F000               	nop	
  4283  001ABA                     
  4284                           ;LCD.c: 44:  LATD1 = 0;
  4285  001ABA  928C               	bcf	3980,1,c	;volatile
  4286  001ABC                     
  4287                           ;LCD.c: 45:  _delay((unsigned long)((1)*(8000000L/4000.0)));
  4288  001ABC  0E03               	movlw	3
  4289  001ABE  6E01               	movwf	??_LCD_Command^0,c
  4290  001AC0  0E98               	movlw	152
  4291  001AC2                     u1817:
  4292  001AC2  2EE8               	decfsz	wreg,f,c
  4293  001AC4  D7FE               	bra	u1817
  4294  001AC6  2E01               	decfsz	??_LCD_Command^0,f,c
  4295  001AC8  D7FC               	bra	u1817
  4296  001ACA                     
  4297                           ;LCD.c: 46:     LATD = (LATD & 0x0f) | (cmd<<4);
  4298  001ACA  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  4299  001ACE  3A01               	swapf	??_LCD_Command^0,f,c
  4300  001AD0  0EF0               	movlw	240
  4301  001AD2  1601               	andwf	??_LCD_Command^0,f,c
  4302  001AD4  508C               	movf	140,w,c	;volatile
  4303  001AD6  0B0F               	andlw	15
  4304  001AD8  1001               	iorwf	??_LCD_Command^0,w,c
  4305  001ADA  6E8C               	movwf	140,c	;volatile
  4306  001ADC                     
  4307                           ;LCD.c: 47:  LATD1 = 1;
  4308  001ADC  828C               	bsf	3980,1,c	;volatile
  4309  001ADE                     
  4310                           ;LCD.c: 48:  __nop();
  4311  001ADE  F000               	nop	
  4312  001AE0                     
  4313                           ;LCD.c: 49:  LATD1 = 0;
  4314  001AE0  928C               	bcf	3980,1,c	;volatile
  4315                           
  4316                           ;LCD.c: 50:  _delay((unsigned long)((3)*(8000000L/4000.0)));
  4317  001AE2  0E08               	movlw	8
  4318  001AE4  6E01               	movwf	??_LCD_Command^0,c
  4319  001AE6  0ECA               	movlw	202
  4320  001AE8                     u1827:
  4321  001AE8  2EE8               	decfsz	wreg,f,c
  4322  001AEA  D7FE               	bra	u1827
  4323  001AEC  2E01               	decfsz	??_LCD_Command^0,f,c
  4324  001AEE  D7FC               	bra	u1827
  4325  001AF0  0012               	return		;funcret
  4326  001AF2                     __end_of_LCD_Command:
  4327                           	callstack 0
  4328                           
  4329 ;; *************** function _DatosSensorTH *****************
  4330 ;; Defined at:
  4331 ;;		line 43 in file "DHT11.c"
  4332 ;; Parameters:    Size  Location     Type
  4333 ;;  Datos           2    2[COMRAM] PTR unsigned char 
  4334 ;;		 -> Datos(2), 
  4335 ;; Auto vars:     Size  Location     Type
  4336 ;;  T_Integral      1    5[COMRAM] unsigned char 
  4337 ;;  RH_Integral     1    4[COMRAM] unsigned char 
  4338 ;;  Checksum        1    0        unsigned char 
  4339 ;;  T_Decimal       1    0        unsigned char 
  4340 ;;  RH_Decimal      1    0        unsigned char 
  4341 ;; Return value:  Size  Location     Type
  4342 ;;                  1    wreg      void 
  4343 ;; Registers used:
  4344 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4345 ;; Tracked objects:
  4346 ;;		On entry : 0/0
  4347 ;;		On exit  : 0/0
  4348 ;;		Unchanged: 0/0
  4349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4350 ;;      Params:         2       0       0       0       0       0       0       0       0
  4351 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4352 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4353 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4354 ;;Total ram usage:        4 bytes
  4355 ;; Hardware stack levels used: 1
  4356 ;; Hardware stack levels required when called: 1
  4357 ;; This function calls:
  4358 ;;		_DHT11_CheckResponse
  4359 ;;		_DHT11_ReadData
  4360 ;;		_DHT11_Start
  4361 ;; This function is called by:
  4362 ;;		_main
  4363 ;; This function uses a non-reentrant model
  4364 ;;
  4365                           
  4366                           	psect	text26
  4367  001C42                     __ptext26:
  4368                           	callstack 0
  4369  001C42                     _DatosSensorTH:
  4370                           	callstack 29
  4371  001C42                     
  4372                           ;DHT11.c: 44:          char RH_Decimal,RH_Integral,T_Decimal,T_Integral;;DHT11.c: 45:   
      +                                 char Checksum;;DHT11.c: 46:          DHT11_Start();
  4373  001C42  ECCE  F00E         	call	_DHT11_Start	;wreg free
  4374  001C46                     
  4375                           ;DHT11.c: 47:          DHT11_CheckResponse();
  4376  001C46  EC90  F00E         	call	_DHT11_CheckResponse	;wreg free
  4377  001C4A                     
  4378                           ;DHT11.c: 50:          RH_Integral = DHT11_ReadData();
  4379  001C4A  ECA7  F00C         	call	_DHT11_ReadData	;wreg free
  4380  001C4E  6E05               	movwf	DatosSensorTH@RH_Integral^0,c
  4381  001C50  ECA7  F00C         	call	_DHT11_ReadData	;wreg free
  4382  001C54                     
  4383                           ;DHT11.c: 52:          T_Integral = DHT11_ReadData();
  4384  001C54  ECA7  F00C         	call	_DHT11_ReadData	;wreg free
  4385  001C58  6E06               	movwf	DatosSensorTH@T_Integral^0,c
  4386  001C5A  ECA7  F00C         	call	_DHT11_ReadData	;wreg free
  4387  001C5E  ECA7  F00C         	call	_DHT11_ReadData	;wreg free
  4388  001C62                     
  4389                           ;DHT11.c: 56:          Datos[0]=T_Integral;
  4390  001C62  C003  FFD9         	movff	DatosSensorTH@Datos,fsr2l
  4391  001C66  C004  FFDA         	movff	DatosSensorTH@Datos+1,fsr2h
  4392  001C6A  C006  FFDF         	movff	DatosSensorTH@T_Integral,indf2
  4393  001C6E                     
  4394                           ;DHT11.c: 57:          Datos[1]=RH_Integral;
  4395  001C6E  EE20 F001          	lfsr	2,1
  4396  001C72  5003               	movf	DatosSensorTH@Datos^0,w,c
  4397  001C74  26D9               	addwf	fsr2l,f,c
  4398  001C76  5004               	movf	(DatosSensorTH@Datos+1)^0,w,c
  4399  001C78  22DA               	addwfc	fsr2h,f,c
  4400  001C7A  C005  FFDF         	movff	DatosSensorTH@RH_Integral,indf2
  4401  001C7E  0012               	return		;funcret
  4402  001C80                     __end_of_DatosSensorTH:
  4403                           	callstack 0
  4404                           
  4405 ;; *************** function _DHT11_Start *****************
  4406 ;; Defined at:
  4407 ;;		line 23 in file "DHT11.c"
  4408 ;; Parameters:    Size  Location     Type
  4409 ;;		None
  4410 ;; Auto vars:     Size  Location     Type
  4411 ;;		None
  4412 ;; Return value:  Size  Location     Type
  4413 ;;                  1    wreg      void 
  4414 ;; Registers used:
  4415 ;;		wreg
  4416 ;; Tracked objects:
  4417 ;;		On entry : 0/0
  4418 ;;		On exit  : 0/0
  4419 ;;		Unchanged: 0/0
  4420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4421 ;;      Params:         0       0       0       0       0       0       0       0       0
  4422 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4423 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4424 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4425 ;;Total ram usage:        1 bytes
  4426 ;; Hardware stack levels used: 1
  4427 ;; This function calls:
  4428 ;;		Nothing
  4429 ;; This function is called by:
  4430 ;;		_DatosSensorTH
  4431 ;; This function uses a non-reentrant model
  4432 ;;
  4433                           
  4434                           	psect	text27
  4435  001D9C                     __ptext27:
  4436                           	callstack 0
  4437  001D9C                     _DHT11_Start:
  4438                           	callstack 29
  4439  001D9C                     
  4440                           ;DHT11.c: 25:     TRISAbits.RA0 = 0;
  4441  001D9C  9092               	bcf	146,0,c	;volatile
  4442                           
  4443                           ;DHT11.c: 26:     LATA0 = 0;
  4444  001D9E  9089               	bcf	3977,0,c	;volatile
  4445  001DA0                     
  4446                           ;DHT11.c: 27:     _delay((unsigned long)((18)*(8000000L/4000.0)));
  4447  001DA0  0E2F               	movlw	47
  4448  001DA2  6E01               	movwf	??_DHT11_Start^0,c
  4449  001DA4  0EC0               	movlw	192
  4450  001DA6                     u1837:
  4451  001DA6  2EE8               	decfsz	wreg,f,c
  4452  001DA8  D7FE               	bra	u1837
  4453  001DAA  2E01               	decfsz	??_DHT11_Start^0,f,c
  4454  001DAC  D7FC               	bra	u1837
  4455  001DAE                     
  4456                           ;DHT11.c: 28:     LATA0 = 1;
  4457  001DAE  8089               	bsf	3977,0,c	;volatile
  4458                           
  4459                           ;DHT11.c: 29:     _delay((unsigned long)((20)*(8000000L/4000000.0)));
  4460  001DB0  0E0D               	movlw	13
  4461  001DB2                     u1847:
  4462  001DB2  2EE8               	decfsz	wreg,f,c
  4463  001DB4  D7FE               	bra	u1847
  4464  001DB6  F000               	nop	
  4465  001DB8                     
  4466                           ;DHT11.c: 30:     TRISAbits.RA0 = 1;
  4467  001DB8  8092               	bsf	146,0,c	;volatile
  4468  001DBA  0012               	return		;funcret
  4469  001DBC                     __end_of_DHT11_Start:
  4470                           	callstack 0
  4471                           
  4472 ;; *************** function _DHT11_ReadData *****************
  4473 ;; Defined at:
  4474 ;;		line 7 in file "DHT11.c"
  4475 ;; Parameters:    Size  Location     Type
  4476 ;;		None
  4477 ;; Auto vars:     Size  Location     Type
  4478 ;;  data            1    1[COMRAM] unsigned char 
  4479 ;;  i               1    0[COMRAM] unsigned char 
  4480 ;; Return value:  Size  Location     Type
  4481 ;;                  1    wreg      unsigned char 
  4482 ;; Registers used:
  4483 ;;		wreg, status,2, status,0
  4484 ;; Tracked objects:
  4485 ;;		On entry : 0/0
  4486 ;;		On exit  : 0/0
  4487 ;;		Unchanged: 0/0
  4488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4489 ;;      Params:         0       0       0       0       0       0       0       0       0
  4490 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4491 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4492 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4493 ;;Total ram usage:        2 bytes
  4494 ;; Hardware stack levels used: 1
  4495 ;; This function calls:
  4496 ;;		Nothing
  4497 ;; This function is called by:
  4498 ;;		_DatosSensorTH
  4499 ;; This function uses a non-reentrant model
  4500 ;;
  4501                           
  4502                           	psect	text28
  4503  00194E                     __ptext28:
  4504                           	callstack 0
  4505  00194E                     _DHT11_ReadData:
  4506                           	callstack 29
  4507  00194E                     
  4508                           ;DHT11.c: 9:   char i,data = 0;
  4509  00194E  0E00               	movlw	0
  4510  001950  6E02               	movwf	DHT11_ReadData@data^0,c
  4511                           
  4512                           ;DHT11.c: 10:     for(i=0;i<8;i++)
  4513  001952  0E00               	movlw	0
  4514  001954  6E01               	movwf	DHT11_ReadData@i^0,c
  4515  001956                     l212:
  4516  001956  A080               	btfss	128,0,c	;volatile
  4517  001958  EFB0  F00C         	goto	u1511
  4518  00195C  EFB2  F00C         	goto	u1510
  4519  001960                     u1511:
  4520  001960  EFAB  F00C         	goto	l212
  4521  001964                     u1510:
  4522  001964                     
  4523                           ;DHT11.c: 13:         _delay((unsigned long)((30)*(8000000L/4000000.0)));
  4524  001964  0E14               	movlw	20
  4525  001966                     u1857:
  4526  001966  2EE8               	decfsz	wreg,f,c
  4527  001968  D7FE               	bra	u1857
  4528  00196A                     
  4529                           ;DHT11.c: 14:         if(PORTAbits.RA0 & 1)
  4530  00196A  A080               	btfss	128,0,c	;volatile
  4531  00196C  EFBA  F00C         	goto	u1521
  4532  001970  EFBC  F00C         	goto	u1520
  4533  001974                     u1521:
  4534  001974  EFC0  F00C         	goto	l2233
  4535  001978                     u1520:
  4536  001978                     
  4537                           ;DHT11.c: 15:           data = ((data<<1) | 1);
  4538  001978  80D8               	bsf	status,0,c
  4539  00197A  3602               	rlcf	DHT11_ReadData@data^0,f,c
  4540  00197C  EFC3  F00C         	goto	l217
  4541  001980                     l2233:
  4542                           
  4543                           ;DHT11.c: 17:           data = (data<<1);
  4544  001980  5002               	movf	DHT11_ReadData@data^0,w,c
  4545  001982  2402               	addwf	DHT11_ReadData@data^0,w,c
  4546  001984  6E02               	movwf	DHT11_ReadData@data^0,c
  4547  001986                     l217:
  4548  001986  B080               	btfsc	128,0,c	;volatile
  4549  001988  EFC8  F00C         	goto	u1531
  4550  00198C  EFCA  F00C         	goto	u1530
  4551  001990                     u1531:
  4552  001990  EFC3  F00C         	goto	l217
  4553  001994                     u1530:
  4554  001994                     
  4555                           ;DHT11.c: 19:     }
  4556  001994  2A01               	incf	DHT11_ReadData@i^0,f,c
  4557  001996  0E07               	movlw	7
  4558  001998  6401               	cpfsgt	DHT11_ReadData@i^0,c
  4559  00199A  EFD1  F00C         	goto	u1541
  4560  00199E  EFD3  F00C         	goto	u1540
  4561  0019A2                     u1541:
  4562  0019A2  EFAB  F00C         	goto	l212
  4563  0019A6                     u1540:
  4564  0019A6                     
  4565                           ;DHT11.c: 20:   return data;
  4566  0019A6  5002               	movf	DHT11_ReadData@data^0,w,c
  4567  0019A8  0012               	return		;funcret
  4568  0019AA                     __end_of_DHT11_ReadData:
  4569                           	callstack 0
  4570                           
  4571 ;; *************** function _DHT11_CheckResponse *****************
  4572 ;; Defined at:
  4573 ;;		line 36 in file "DHT11.c"
  4574 ;; Parameters:    Size  Location     Type
  4575 ;;		None
  4576 ;; Auto vars:     Size  Location     Type
  4577 ;;		None
  4578 ;; Return value:  Size  Location     Type
  4579 ;;                  1    wreg      void 
  4580 ;; Registers used:
  4581 ;;		None
  4582 ;; Tracked objects:
  4583 ;;		On entry : 0/0
  4584 ;;		On exit  : 0/0
  4585 ;;		Unchanged: 0/0
  4586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4587 ;;      Params:         0       0       0       0       0       0       0       0       0
  4588 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4589 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4590 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4591 ;;Total ram usage:        0 bytes
  4592 ;; Hardware stack levels used: 1
  4593 ;; This function calls:
  4594 ;;		Nothing
  4595 ;; This function is called by:
  4596 ;;		_DatosSensorTH
  4597 ;; This function uses a non-reentrant model
  4598 ;;
  4599                           
  4600                           	psect	text29
  4601  001D20                     __ptext29:
  4602                           	callstack 0
  4603  001D20                     _DHT11_CheckResponse:
  4604                           	callstack 29
  4605  001D20                     l226:
  4606  001D20  B080               	btfsc	128,0,c	;volatile
  4607  001D22  EF95  F00E         	goto	u1551
  4608  001D26  EF97  F00E         	goto	u1550
  4609  001D2A                     u1551:
  4610  001D2A  EF90  F00E         	goto	l226
  4611  001D2E                     u1550:
  4612  001D2E                     l229:
  4613  001D2E  A080               	btfss	128,0,c	;volatile
  4614  001D30  EF9C  F00E         	goto	u1561
  4615  001D34  EF9E  F00E         	goto	u1560
  4616  001D38                     u1561:
  4617  001D38  EF97  F00E         	goto	l229
  4618  001D3C                     u1560:
  4619  001D3C                     l232:
  4620  001D3C  B080               	btfsc	128,0,c	;volatile
  4621  001D3E  EFA3  F00E         	goto	u1571
  4622  001D42  EFA5  F00E         	goto	u1570
  4623  001D46                     u1571:
  4624  001D46  EF9E  F00E         	goto	l232
  4625  001D4A                     u1570:
  4626  001D4A  0012               	return		;funcret
  4627  001D4C                     __end_of_DHT11_CheckResponse:
  4628                           	callstack 0
  4629                           
  4630 ;; *************** function _DatoDigitadoAEntero *****************
  4631 ;; Defined at:
  4632 ;;		line 131 in file "keypad.c"
  4633 ;; Parameters:    Size  Location     Type
  4634 ;;  prmTemperatu    2    6[COMRAM] PTR unsigned char 
  4635 ;;		 -> Humedad(2), Temperatura(2), 
  4636 ;; Auto vars:     Size  Location     Type
  4637 ;;  Decena          2   13[COMRAM] int 
  4638 ;;  Resultado       2   11[COMRAM] int 
  4639 ;;  Unidad          2    9[COMRAM] int 
  4640 ;; Return value:  Size  Location     Type
  4641 ;;                  2    6[COMRAM] int 
  4642 ;; Registers used:
  4643 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4644 ;; Tracked objects:
  4645 ;;		On entry : 0/0
  4646 ;;		On exit  : 0/0
  4647 ;;		Unchanged: 0/0
  4648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4649 ;;      Params:         2       0       0       0       0       0       0       0       0
  4650 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4651 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4652 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4653 ;;Total ram usage:        9 bytes
  4654 ;; Hardware stack levels used: 1
  4655 ;; Hardware stack levels required when called: 1
  4656 ;; This function calls:
  4657 ;;		___wmul
  4658 ;; This function is called by:
  4659 ;;		_main
  4660 ;; This function uses a non-reentrant model
  4661 ;;
  4662                           
  4663                           	psect	text30
  4664  001738                     __ptext30:
  4665                           	callstack 0
  4666  001738                     _DatoDigitadoAEntero:
  4667                           	callstack 29
  4668  001738                     
  4669                           ;keypad.c: 133:     int Unidad = 0;
  4670  001738  0E00               	movlw	0
  4671  00173A  6E0B               	movwf	(DatoDigitadoAEntero@Unidad+1)^0,c
  4672  00173C  0E00               	movlw	0
  4673  00173E  6E0A               	movwf	DatoDigitadoAEntero@Unidad^0,c
  4674                           
  4675                           ;keypad.c: 135:     int Resultado=0;
  4676  001740  0E00               	movlw	0
  4677  001742  6E0D               	movwf	(DatoDigitadoAEntero@Resultado+1)^0,c
  4678  001744  0E00               	movlw	0
  4679  001746  6E0C               	movwf	DatoDigitadoAEntero@Resultado^0,c
  4680  001748                     
  4681                           ;keypad.c: 137:     Decena = prmTemperatura[0]-'0';
  4682  001748  C007  FFD9         	movff	DatoDigitadoAEntero@prmTemperatura,fsr2l
  4683  00174C  C008  FFDA         	movff	DatoDigitadoAEntero@prmTemperatura+1,fsr2h
  4684  001750  50DF               	movf	indf2,w,c
  4685  001752  6E09               	movwf	??_DatoDigitadoAEntero^0,c
  4686  001754  0ED0               	movlw	208
  4687  001756  2409               	addwf	??_DatoDigitadoAEntero^0,w,c
  4688  001758  6E0E               	movwf	DatoDigitadoAEntero@Decena^0,c
  4689  00175A  6A0F               	clrf	(DatoDigitadoAEntero@Decena+1)^0,c
  4690  00175C  0EFF               	movlw	255
  4691  00175E  220F               	addwfc	(DatoDigitadoAEntero@Decena+1)^0,f,c
  4692  001760                     
  4693                           ;keypad.c: 138:     Unidad = prmTemperatura[1]-'0';
  4694  001760  EE20 F001          	lfsr	2,1
  4695  001764  5007               	movf	DatoDigitadoAEntero@prmTemperatura^0,w,c
  4696  001766  26D9               	addwf	fsr2l,f,c
  4697  001768  5008               	movf	(DatoDigitadoAEntero@prmTemperatura+1)^0,w,c
  4698  00176A  22DA               	addwfc	fsr2h,f,c
  4699  00176C  50DF               	movf	indf2,w,c
  4700  00176E  6E09               	movwf	??_DatoDigitadoAEntero^0,c
  4701  001770  0ED0               	movlw	208
  4702  001772  2409               	addwf	??_DatoDigitadoAEntero^0,w,c
  4703  001774  6E0A               	movwf	DatoDigitadoAEntero@Unidad^0,c
  4704  001776  6A0B               	clrf	(DatoDigitadoAEntero@Unidad+1)^0,c
  4705  001778  0EFF               	movlw	255
  4706  00177A  220B               	addwfc	(DatoDigitadoAEntero@Unidad+1)^0,f,c
  4707  00177C                     
  4708                           ;keypad.c: 140:     Decena = Decena * 10;
  4709  00177C  C00E  F001         	movff	DatoDigitadoAEntero@Decena,___wmul@multiplier
  4710  001780  C00F  F002         	movff	DatoDigitadoAEntero@Decena+1,___wmul@multiplier+1
  4711  001784  0E00               	movlw	0
  4712  001786  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4713  001788  0E0A               	movlw	10
  4714  00178A  6E03               	movwf	___wmul@multiplicand^0,c
  4715  00178C  ECBB  F00E         	call	___wmul	;wreg free
  4716  001790  C001  F00E         	movff	?___wmul,DatoDigitadoAEntero@Decena
  4717  001794  C002  F00F         	movff	?___wmul+1,DatoDigitadoAEntero@Decena+1
  4718  001798                     
  4719                           ;keypad.c: 141:     Resultado = Decena + Unidad;
  4720  001798  500A               	movf	DatoDigitadoAEntero@Unidad^0,w,c
  4721  00179A  240E               	addwf	DatoDigitadoAEntero@Decena^0,w,c
  4722  00179C  6E0C               	movwf	DatoDigitadoAEntero@Resultado^0,c
  4723  00179E  500B               	movf	(DatoDigitadoAEntero@Unidad+1)^0,w,c
  4724  0017A0  200F               	addwfc	(DatoDigitadoAEntero@Decena+1)^0,w,c
  4725  0017A2  6E0D               	movwf	(DatoDigitadoAEntero@Resultado+1)^0,c
  4726  0017A4                     
  4727                           ;keypad.c: 143:     return Resultado;
  4728  0017A4  C00C  F007         	movff	DatoDigitadoAEntero@Resultado,?_DatoDigitadoAEntero
  4729  0017A8  C00D  F008         	movff	DatoDigitadoAEntero@Resultado+1,?_DatoDigitadoAEntero+1
  4730  0017AC  0012               	return		;funcret
  4731  0017AE                     __end_of_DatoDigitadoAEntero:
  4732                           	callstack 0
  4733                           
  4734 ;; *************** function ___wmul *****************
  4735 ;; Defined at:
  4736 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  4737 ;; Parameters:    Size  Location     Type
  4738 ;;  multiplier      2    0[COMRAM] unsigned int 
  4739 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4740 ;; Auto vars:     Size  Location     Type
  4741 ;;  product         2    4[COMRAM] unsigned int 
  4742 ;; Return value:  Size  Location     Type
  4743 ;;                  2    0[COMRAM] unsigned int 
  4744 ;; Registers used:
  4745 ;;		wreg, status,2, status,0, prodl, prodh
  4746 ;; Tracked objects:
  4747 ;;		On entry : 0/0
  4748 ;;		On exit  : 0/0
  4749 ;;		Unchanged: 0/0
  4750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4751 ;;      Params:         4       0       0       0       0       0       0       0       0
  4752 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4753 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4754 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4755 ;;Total ram usage:        6 bytes
  4756 ;; Hardware stack levels used: 1
  4757 ;; This function calls:
  4758 ;;		Nothing
  4759 ;; This function is called by:
  4760 ;;		_DatoDigitadoAEntero
  4761 ;; This function uses a non-reentrant model
  4762 ;;
  4763                           
  4764                           	psect	text31
  4765  001D76                     __ptext31:
  4766                           	callstack 0
  4767  001D76                     ___wmul:
  4768                           	callstack 29
  4769  001D76  5001               	movf	___wmul@multiplier^0,w,c
  4770  001D78  0203               	mulwf	___wmul@multiplicand^0,c
  4771  001D7A  CFF3 F005          	movff	prodl,___wmul@product
  4772  001D7E  CFF4 F006          	movff	prodh,___wmul@product+1
  4773  001D82  5001               	movf	___wmul@multiplier^0,w,c
  4774  001D84  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  4775  001D86  50F3               	movf	243,w,c
  4776  001D88  2606               	addwf	(___wmul@product+1)^0,f,c
  4777  001D8A  5002               	movf	(___wmul@multiplier+1)^0,w,c
  4778  001D8C  0203               	mulwf	___wmul@multiplicand^0,c
  4779  001D8E  50F3               	movf	243,w,c
  4780  001D90  2606               	addwf	(___wmul@product+1)^0,f,c
  4781  001D92  C005  F001         	movff	___wmul@product,?___wmul
  4782  001D96  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4783  001D9A  0012               	return		;funcret
  4784  001D9C                     __end_of___wmul:
  4785                           	callstack 0
  4786                           
  4787 ;; *************** function _ControlTemperaturaVentilador *****************
  4788 ;; Defined at:
  4789 ;;		line 59 in file "Actuadores.c"
  4790 ;; Parameters:    Size  Location     Type
  4791 ;;  TempActual      2    0[COMRAM] PTR unsigned char 
  4792 ;;		 -> Datos(2), 
  4793 ;;  TempDigitada    2    2[COMRAM] int 
  4794 ;;  MargenErrorT    2    4[COMRAM] int 
  4795 ;; Auto vars:     Size  Location     Type
  4796 ;;		None
  4797 ;; Return value:  Size  Location     Type
  4798 ;;                  1    wreg      void 
  4799 ;; Registers used:
  4800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4801 ;; Tracked objects:
  4802 ;;		On entry : 0/0
  4803 ;;		On exit  : 0/0
  4804 ;;		Unchanged: 0/0
  4805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4806 ;;      Params:         6       0       0       0       0       0       0       0       0
  4807 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4808 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4809 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4810 ;;Total ram usage:       11 bytes
  4811 ;; Hardware stack levels used: 1
  4812 ;; Hardware stack levels required when called: 1
  4813 ;; This function calls:
  4814 ;;		_ApagarVentiladores
  4815 ;;		_PrenderVentiladores
  4816 ;; This function is called by:
  4817 ;;		_main
  4818 ;; This function uses a non-reentrant model
  4819 ;;
  4820                           
  4821                           	psect	text32
  4822  001AF2                     __ptext32:
  4823                           	callstack 0
  4824  001AF2                     _ControlTemperaturaVentilador:
  4825                           	callstack 29
  4826  001AF2                     
  4827                           ;Actuadores.c: 60:     if(*TempActual>TempDigitada+MargenErrorT){
  4828  001AF2  C001  FFD9         	movff	ControlTemperaturaVentilador@TempActual,fsr2l
  4829  001AF6  C002  FFDA         	movff	ControlTemperaturaVentilador@TempActual+1,fsr2h
  4830  001AFA  50DF               	movf	indf2,w,c
  4831  001AFC  6E07               	movwf	??_ControlTemperaturaVentilador^0,c
  4832  001AFE  6A08               	clrf	(??_ControlTemperaturaVentilador+1)^0,c
  4833  001B00  5005               	movf	ControlTemperaturaVentilador@MargenErrorT^0,w,c
  4834  001B02  2403               	addwf	ControlTemperaturaVentilador@TempDigitada^0,w,c
  4835  001B04  6E09               	movwf	(??_ControlTemperaturaVentilador+2)^0,c
  4836  001B06  5006               	movf	(ControlTemperaturaVentilador@MargenErrorT+1)^0,w,c
  4837  001B08  2004               	addwfc	(ControlTemperaturaVentilador@TempDigitada+1)^0,w,c
  4838  001B0A  6E0A               	movwf	(??_ControlTemperaturaVentilador+3)^0,c
  4839  001B0C  5007               	movf	??_ControlTemperaturaVentilador^0,w,c
  4840  001B0E  5C09               	subwf	(??_ControlTemperaturaVentilador+2)^0,w,c
  4841  001B10  500A               	movf	(??_ControlTemperaturaVentilador+3)^0,w,c
  4842  001B12  0A80               	xorlw	128
  4843  001B14  6E0B               	movwf	(??_ControlTemperaturaVentilador+4)^0,c
  4844  001B16  5008               	movf	(??_ControlTemperaturaVentilador+1)^0,w,c
  4845  001B18  0A80               	xorlw	128
  4846  001B1A  580B               	subwfb	(??_ControlTemperaturaVentilador+4)^0,w,c
  4847  001B1C  B0D8               	btfsc	status,0,c
  4848  001B1E  EF93  F00D         	goto	u1671
  4849  001B22  EF95  F00D         	goto	u1670
  4850  001B26                     u1671:
  4851  001B26  EF99  F00D         	goto	l2363
  4852  001B2A                     u1670:
  4853  001B2A                     
  4854                           ;Actuadores.c: 61:         PrenderVentiladores();
  4855  001B2A  ECEE  F00E         	call	_PrenderVentiladores	;wreg free
  4856                           
  4857                           ;Actuadores.c: 62:     }else{
  4858  001B2E  EF9B  F00D         	goto	l302
  4859  001B32                     l2363:
  4860                           
  4861                           ;Actuadores.c: 63:         ApagarVentiladores();
  4862  001B32  ECF1  F00E         	call	_ApagarVentiladores	;wreg free
  4863  001B36                     l302:
  4864  001B36  0012               	return		;funcret
  4865  001B38                     __end_of_ControlTemperaturaVentilador:
  4866                           	callstack 0
  4867                           
  4868 ;; *************** function _PrenderVentiladores *****************
  4869 ;; Defined at:
  4870 ;;		line 30 in file "Actuadores.c"
  4871 ;; Parameters:    Size  Location     Type
  4872 ;;		None
  4873 ;; Auto vars:     Size  Location     Type
  4874 ;;		None
  4875 ;; Return value:  Size  Location     Type
  4876 ;;                  1    wreg      void 
  4877 ;; Registers used:
  4878 ;;		None
  4879 ;; Tracked objects:
  4880 ;;		On entry : 0/0
  4881 ;;		On exit  : 0/0
  4882 ;;		Unchanged: 0/0
  4883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4884 ;;      Params:         0       0       0       0       0       0       0       0       0
  4885 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4886 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4887 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4888 ;;Total ram usage:        0 bytes
  4889 ;; Hardware stack levels used: 1
  4890 ;; This function calls:
  4891 ;;		Nothing
  4892 ;; This function is called by:
  4893 ;;		_ControlTemperaturaVentilador
  4894 ;; This function uses a non-reentrant model
  4895 ;;
  4896                           
  4897                           	psect	text33
  4898  001DDC                     __ptext33:
  4899                           	callstack 0
  4900  001DDC                     _PrenderVentiladores:
  4901                           	callstack 29
  4902  001DDC                     
  4903                           ;Actuadores.c: 31:     LATC2=1;
  4904  001DDC  848B               	bsf	3979,2,c	;volatile
  4905                           
  4906                           ;Actuadores.c: 32:     LATC6=1;
  4907  001DDE  8C8B               	bsf	3979,6,c	;volatile
  4908  001DE0  0012               	return		;funcret
  4909  001DE2                     __end_of_PrenderVentiladores:
  4910                           	callstack 0
  4911                           
  4912 ;; *************** function _ApagarVentiladores *****************
  4913 ;; Defined at:
  4914 ;;		line 20 in file "Actuadores.c"
  4915 ;; Parameters:    Size  Location     Type
  4916 ;;		None
  4917 ;; Auto vars:     Size  Location     Type
  4918 ;;		None
  4919 ;; Return value:  Size  Location     Type
  4920 ;;                  1    wreg      void 
  4921 ;; Registers used:
  4922 ;;		None
  4923 ;; Tracked objects:
  4924 ;;		On entry : 0/0
  4925 ;;		On exit  : 0/0
  4926 ;;		Unchanged: 0/0
  4927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4928 ;;      Params:         0       0       0       0       0       0       0       0       0
  4929 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4930 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4931 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4932 ;;Total ram usage:        0 bytes
  4933 ;; Hardware stack levels used: 1
  4934 ;; This function calls:
  4935 ;;		Nothing
  4936 ;; This function is called by:
  4937 ;;		_main
  4938 ;;		_ControlTemperaturaVentilador
  4939 ;; This function uses a non-reentrant model
  4940 ;;
  4941                           
  4942                           	psect	text34
  4943  001DE2                     __ptext34:
  4944                           	callstack 0
  4945  001DE2                     _ApagarVentiladores:
  4946                           	callstack 29
  4947  001DE2                     
  4948                           ;Actuadores.c: 21:     LATC2=0;
  4949  001DE2  948B               	bcf	3979,2,c	;volatile
  4950                           
  4951                           ;Actuadores.c: 22:     LATC6=0;
  4952  001DE4  9C8B               	bcf	3979,6,c	;volatile
  4953  001DE6  0012               	return		;funcret
  4954  001DE8                     __end_of_ApagarVentiladores:
  4955                           	callstack 0
  4956                           
  4957 ;; *************** function _ControlHumedadAspersor *****************
  4958 ;; Defined at:
  4959 ;;		line 51 in file "Actuadores.c"
  4960 ;; Parameters:    Size  Location     Type
  4961 ;;  HumedadActua    2    0[COMRAM] PTR unsigned char 
  4962 ;;		 -> Datos(2), 
  4963 ;;  HumedadDigit    2    2[COMRAM] int 
  4964 ;;  MargenErrorH    2    4[COMRAM] int 
  4965 ;; Auto vars:     Size  Location     Type
  4966 ;;		None
  4967 ;; Return value:  Size  Location     Type
  4968 ;;                  1    wreg      void 
  4969 ;; Registers used:
  4970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4971 ;; Tracked objects:
  4972 ;;		On entry : 0/0
  4973 ;;		On exit  : 0/0
  4974 ;;		Unchanged: 0/0
  4975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4976 ;;      Params:         6       0       0       0       0       0       0       0       0
  4977 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4978 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4979 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4980 ;;Total ram usage:       11 bytes
  4981 ;; Hardware stack levels used: 1
  4982 ;; Hardware stack levels required when called: 1
  4983 ;; This function calls:
  4984 ;;		_ApagarAspersores
  4985 ;;		_PrenderAspersores
  4986 ;; This function is called by:
  4987 ;;		_main
  4988 ;; This function uses a non-reentrant model
  4989 ;;
  4990                           
  4991                           	psect	text35
  4992  001B38                     __ptext35:
  4993                           	callstack 0
  4994  001B38                     _ControlHumedadAspersor:
  4995                           	callstack 29
  4996  001B38                     
  4997                           ;Actuadores.c: 52:     if(*HumedadActual<HumedadDigitada-MargenErrorH){
  4998  001B38  5005               	movf	ControlHumedadAspersor@MargenErrorH^0,w,c
  4999  001B3A  5C03               	subwf	ControlHumedadAspersor@HumedadDigitada^0,w,c
  5000  001B3C  6E07               	movwf	??_ControlHumedadAspersor^0,c
  5001  001B3E  5006               	movf	(ControlHumedadAspersor@MargenErrorH+1)^0,w,c
  5002  001B40  5804               	subwfb	(ControlHumedadAspersor@HumedadDigitada+1)^0,w,c
  5003  001B42  6E08               	movwf	(??_ControlHumedadAspersor+1)^0,c
  5004  001B44  C001  FFD9         	movff	ControlHumedadAspersor@HumedadActual,fsr2l
  5005  001B48  C002  FFDA         	movff	ControlHumedadAspersor@HumedadActual+1,fsr2h
  5006  001B4C  50DF               	movf	indf2,w,c
  5007  001B4E  6E09               	movwf	(??_ControlHumedadAspersor+2)^0,c
  5008  001B50  6A0A               	clrf	(??_ControlHumedadAspersor+3)^0,c
  5009  001B52  5007               	movf	??_ControlHumedadAspersor^0,w,c
  5010  001B54  5C09               	subwf	(??_ControlHumedadAspersor+2)^0,w,c
  5011  001B56  500A               	movf	(??_ControlHumedadAspersor+3)^0,w,c
  5012  001B58  0A80               	xorlw	128
  5013  001B5A  6E0B               	movwf	(??_ControlHumedadAspersor+4)^0,c
  5014  001B5C  5008               	movf	(??_ControlHumedadAspersor+1)^0,w,c
  5015  001B5E  0A80               	xorlw	128
  5016  001B60  580B               	subwfb	(??_ControlHumedadAspersor+4)^0,w,c
  5017  001B62  B0D8               	btfsc	status,0,c
  5018  001B64  EFB6  F00D         	goto	u1661
  5019  001B68  EFB8  F00D         	goto	u1660
  5020  001B6C                     u1661:
  5021  001B6C  EFBC  F00D         	goto	l2357
  5022  001B70                     u1660:
  5023  001B70                     
  5024                           ;Actuadores.c: 53:         PrenderAspersores();
  5025  001B70  ECF4  F00E         	call	_PrenderAspersores	;wreg free
  5026                           
  5027                           ;Actuadores.c: 54:     }else{
  5028  001B74  EFBE  F00D         	goto	l297
  5029  001B78                     l2357:
  5030                           
  5031                           ;Actuadores.c: 55:         ApagarAspersores();
  5032  001B78  ECF7  F00E         	call	_ApagarAspersores	;wreg free
  5033  001B7C                     l297:
  5034  001B7C  0012               	return		;funcret
  5035  001B7E                     __end_of_ControlHumedadAspersor:
  5036                           	callstack 0
  5037                           
  5038 ;; *************** function _PrenderAspersores *****************
  5039 ;; Defined at:
  5040 ;;		line 25 in file "Actuadores.c"
  5041 ;; Parameters:    Size  Location     Type
  5042 ;;		None
  5043 ;; Auto vars:     Size  Location     Type
  5044 ;;		None
  5045 ;; Return value:  Size  Location     Type
  5046 ;;                  1    wreg      void 
  5047 ;; Registers used:
  5048 ;;		None
  5049 ;; Tracked objects:
  5050 ;;		On entry : 0/0
  5051 ;;		On exit  : 0/0
  5052 ;;		Unchanged: 0/0
  5053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5054 ;;      Params:         0       0       0       0       0       0       0       0       0
  5055 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5056 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5057 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5058 ;;Total ram usage:        0 bytes
  5059 ;; Hardware stack levels used: 1
  5060 ;; This function calls:
  5061 ;;		Nothing
  5062 ;; This function is called by:
  5063 ;;		_ControlHumedadAspersor
  5064 ;; This function uses a non-reentrant model
  5065 ;;
  5066                           
  5067                           	psect	text36
  5068  001DE8                     __ptext36:
  5069                           	callstack 0
  5070  001DE8                     _PrenderAspersores:
  5071                           	callstack 29
  5072  001DE8                     
  5073                           ;Actuadores.c: 26:     LATC0=1;
  5074  001DE8  808B               	bsf	3979,0,c	;volatile
  5075                           
  5076                           ;Actuadores.c: 27:     LATC1=1;
  5077  001DEA  828B               	bsf	3979,1,c	;volatile
  5078  001DEC  0012               	return		;funcret
  5079  001DEE                     __end_of_PrenderAspersores:
  5080                           	callstack 0
  5081                           
  5082 ;; *************** function _ApagarAspersores *****************
  5083 ;; Defined at:
  5084 ;;		line 16 in file "Actuadores.c"
  5085 ;; Parameters:    Size  Location     Type
  5086 ;;		None
  5087 ;; Auto vars:     Size  Location     Type
  5088 ;;		None
  5089 ;; Return value:  Size  Location     Type
  5090 ;;                  1    wreg      void 
  5091 ;; Registers used:
  5092 ;;		None
  5093 ;; Tracked objects:
  5094 ;;		On entry : 0/0
  5095 ;;		On exit  : 0/0
  5096 ;;		Unchanged: 0/0
  5097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5098 ;;      Params:         0       0       0       0       0       0       0       0       0
  5099 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5100 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5101 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5102 ;;Total ram usage:        0 bytes
  5103 ;; Hardware stack levels used: 1
  5104 ;; This function calls:
  5105 ;;		Nothing
  5106 ;; This function is called by:
  5107 ;;		_main
  5108 ;;		_ControlHumedadAspersor
  5109 ;; This function uses a non-reentrant model
  5110 ;;
  5111                           
  5112                           	psect	text37
  5113  001DEE                     __ptext37:
  5114                           	callstack 0
  5115  001DEE                     _ApagarAspersores:
  5116                           	callstack 29
  5117  001DEE                     
  5118                           ;Actuadores.c: 17:     LATC0=0;
  5119  001DEE  908B               	bcf	3979,0,c	;volatile
  5120                           
  5121                           ;Actuadores.c: 18:     LATC1=0;
  5122  001DF0  928B               	bcf	3979,1,c	;volatile
  5123  001DF2  0012               	return		;funcret
  5124  001DF4                     __end_of_ApagarAspersores:
  5125                           	callstack 0
  5126                           
  5127 ;; *************** function _ConfigurarPuertosLCD *****************
  5128 ;; Defined at:
  5129 ;;		line 127 in file "LCD.c"
  5130 ;; Parameters:    Size  Location     Type
  5131 ;;		None
  5132 ;; Auto vars:     Size  Location     Type
  5133 ;;		None
  5134 ;; Return value:  Size  Location     Type
  5135 ;;                  1    wreg      void 
  5136 ;; Registers used:
  5137 ;;		wreg, status,2
  5138 ;; Tracked objects:
  5139 ;;		On entry : 0/0
  5140 ;;		On exit  : 0/0
  5141 ;;		Unchanged: 0/0
  5142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5143 ;;      Params:         0       0       0       0       0       0       0       0       0
  5144 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5145 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5146 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5147 ;;Total ram usage:        0 bytes
  5148 ;; Hardware stack levels used: 1
  5149 ;; This function calls:
  5150 ;;		Nothing
  5151 ;; This function is called by:
  5152 ;;		_main
  5153 ;; This function uses a non-reentrant model
  5154 ;;
  5155                           
  5156                           	psect	text38
  5157  001DF4                     __ptext38:
  5158                           	callstack 0
  5159  001DF4                     _ConfigurarPuertosLCD:
  5160                           	callstack 30
  5161  001DF4                     
  5162                           ;LCD.c: 128: TRISD=0x00;
  5163  001DF4  0E00               	movlw	0
  5164  001DF6  6E95               	movwf	149,c	;volatile
  5165  001DF8  0012               	return		;funcret
  5166  001DFA                     __end_of_ConfigurarPuertosLCD:
  5167                           	callstack 0
  5168                           
  5169 ;; *************** function _Comparar_T_H_Adecuados *****************
  5170 ;; Defined at:
  5171 ;;		line 60 in file "DHT11.c"
  5172 ;; Parameters:    Size  Location     Type
  5173 ;;  TempActual      2    2[COMRAM] PTR unsigned char 
  5174 ;;		 -> Datos(2), 
  5175 ;;  HumActual       2    4[COMRAM] PTR unsigned char 
  5176 ;;		 -> Datos(2), 
  5177 ;;  TempDigitada    2    6[COMRAM] int 
  5178 ;;  HumDigitada     2    8[COMRAM] int 
  5179 ;;  MargenErrorT    2   10[COMRAM] int 
  5180 ;;  MargenErrorH    2   12[COMRAM] int 
  5181 ;; Auto vars:     Size  Location     Type
  5182 ;;  HumedadAdecu    1   20[COMRAM] _Bool 
  5183 ;;  TemperaturaA    1   19[COMRAM] _Bool 
  5184 ;; Return value:  Size  Location     Type
  5185 ;;                  1    wreg      void 
  5186 ;; Registers used:
  5187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5188 ;; Tracked objects:
  5189 ;;		On entry : 0/0
  5190 ;;		On exit  : 0/0
  5191 ;;		Unchanged: 0/0
  5192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5193 ;;      Params:        12       0       0       0       0       0       0       0       0
  5194 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5195 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5196 ;;      Totals:        19       0       0       0       0       0       0       0       0
  5197 ;;Total ram usage:       19 bytes
  5198 ;; Hardware stack levels used: 1
  5199 ;; Hardware stack levels required when called: 2
  5200 ;; This function calls:
  5201 ;;		_PrenderLed
  5202 ;; This function is called by:
  5203 ;;		_main
  5204 ;; This function uses a non-reentrant model
  5205 ;;
  5206                           
  5207                           	psect	text39
  5208  00134A                     __ptext39:
  5209                           	callstack 0
  5210  00134A                     _Comparar_T_H_Adecuados:
  5211                           	callstack 28
  5212  00134A                     
  5213                           ;DHT11.c: 60: void Comparar_T_H_Adecuados(char *TempActual,char *HumActual,int TempDigit
      +                          ada,;DHT11.c: 61:         int HumDigitada,int MargenErrorT,int MargenErrorH){;DHT11.c: 6
      +                          2:     _Bool TemperaturaAdecuada= 1;
  5214  00134A  0E01               	movlw	1
  5215  00134C  6E14               	movwf	Comparar_T_H_Adecuados@TemperaturaAdecuada^0,c
  5216                           
  5217                           ;DHT11.c: 63:     _Bool HumedadAdecuada =1;
  5218  00134E  0E01               	movlw	1
  5219  001350  6E15               	movwf	Comparar_T_H_Adecuados@HumedadAdecuada^0,c
  5220  001352                     
  5221                           ;DHT11.c: 64:     if(*TempActual<TempDigitada-MargenErrorT || *TempActual >TempDigitada+
      +                          MargenErrorT){
  5222  001352  500B               	movf	Comparar_T_H_Adecuados@MargenErrorT^0,w,c
  5223  001354  5C07               	subwf	Comparar_T_H_Adecuados@TempDigitada^0,w,c
  5224  001356  6E0F               	movwf	??_Comparar_T_H_Adecuados^0,c
  5225  001358  500C               	movf	(Comparar_T_H_Adecuados@MargenErrorT+1)^0,w,c
  5226  00135A  5808               	subwfb	(Comparar_T_H_Adecuados@TempDigitada+1)^0,w,c
  5227  00135C  6E10               	movwf	(??_Comparar_T_H_Adecuados+1)^0,c
  5228  00135E  C003  FFD9         	movff	Comparar_T_H_Adecuados@TempActual,fsr2l
  5229  001362  C004  FFDA         	movff	Comparar_T_H_Adecuados@TempActual+1,fsr2h
  5230  001366  50DF               	movf	indf2,w,c
  5231  001368  6E11               	movwf	(??_Comparar_T_H_Adecuados+2)^0,c
  5232  00136A  6A12               	clrf	(??_Comparar_T_H_Adecuados+3)^0,c
  5233  00136C  500F               	movf	??_Comparar_T_H_Adecuados^0,w,c
  5234  00136E  5C11               	subwf	(??_Comparar_T_H_Adecuados+2)^0,w,c
  5235  001370  5012               	movf	(??_Comparar_T_H_Adecuados+3)^0,w,c
  5236  001372  0A80               	xorlw	128
  5237  001374  6E13               	movwf	(??_Comparar_T_H_Adecuados+4)^0,c
  5238  001376  5010               	movf	(??_Comparar_T_H_Adecuados+1)^0,w,c
  5239  001378  0A80               	xorlw	128
  5240  00137A  5813               	subwfb	(??_Comparar_T_H_Adecuados+4)^0,w,c
  5241  00137C  A0D8               	btfss	status,0,c
  5242  00137E  EFC3  F009         	goto	u1621
  5243  001382  EFC5  F009         	goto	u1620
  5244  001386                     u1621:
  5245  001386  EFE1  F009         	goto	l2343
  5246  00138A                     u1620:
  5247  00138A  C003  FFD9         	movff	Comparar_T_H_Adecuados@TempActual,fsr2l
  5248  00138E  C004  FFDA         	movff	Comparar_T_H_Adecuados@TempActual+1,fsr2h
  5249  001392  50DF               	movf	indf2,w,c
  5250  001394  6E0F               	movwf	??_Comparar_T_H_Adecuados^0,c
  5251  001396  6A10               	clrf	(??_Comparar_T_H_Adecuados+1)^0,c
  5252  001398  500B               	movf	Comparar_T_H_Adecuados@MargenErrorT^0,w,c
  5253  00139A  2407               	addwf	Comparar_T_H_Adecuados@TempDigitada^0,w,c
  5254  00139C  6E11               	movwf	(??_Comparar_T_H_Adecuados+2)^0,c
  5255  00139E  500C               	movf	(Comparar_T_H_Adecuados@MargenErrorT+1)^0,w,c
  5256  0013A0  2008               	addwfc	(Comparar_T_H_Adecuados@TempDigitada+1)^0,w,c
  5257  0013A2  6E12               	movwf	(??_Comparar_T_H_Adecuados+3)^0,c
  5258  0013A4  500F               	movf	??_Comparar_T_H_Adecuados^0,w,c
  5259  0013A6  5C11               	subwf	(??_Comparar_T_H_Adecuados+2)^0,w,c
  5260  0013A8  5012               	movf	(??_Comparar_T_H_Adecuados+3)^0,w,c
  5261  0013AA  0A80               	xorlw	128
  5262  0013AC  6E13               	movwf	(??_Comparar_T_H_Adecuados+4)^0,c
  5263  0013AE  5010               	movf	(??_Comparar_T_H_Adecuados+1)^0,w,c
  5264  0013B0  0A80               	xorlw	128
  5265  0013B2  5813               	subwfb	(??_Comparar_T_H_Adecuados+4)^0,w,c
  5266  0013B4  B0D8               	btfsc	status,0,c
  5267  0013B6  EFDF  F009         	goto	u1631
  5268  0013BA  EFE1  F009         	goto	u1630
  5269  0013BE                     u1631:
  5270  0013BE  EFE3  F009         	goto	l2345
  5271  0013C2                     u1630:
  5272  0013C2                     l2343:
  5273                           
  5274                           ;DHT11.c: 65:            TemperaturaAdecuada=0;
  5275  0013C2  0E00               	movlw	0
  5276  0013C4  6E14               	movwf	Comparar_T_H_Adecuados@TemperaturaAdecuada^0,c
  5277  0013C6                     l2345:
  5278                           
  5279                           ;DHT11.c: 67:     if(*HumActual<HumDigitada-MargenErrorH || *HumActual>HumDigitada+Marge
      +                          nErrorH){
  5280  0013C6  500D               	movf	Comparar_T_H_Adecuados@MargenErrorH^0,w,c
  5281  0013C8  5C09               	subwf	Comparar_T_H_Adecuados@HumDigitada^0,w,c
  5282  0013CA  6E0F               	movwf	??_Comparar_T_H_Adecuados^0,c
  5283  0013CC  500E               	movf	(Comparar_T_H_Adecuados@MargenErrorH+1)^0,w,c
  5284  0013CE  580A               	subwfb	(Comparar_T_H_Adecuados@HumDigitada+1)^0,w,c
  5285  0013D0  6E10               	movwf	(??_Comparar_T_H_Adecuados+1)^0,c
  5286  0013D2  C005  FFD9         	movff	Comparar_T_H_Adecuados@HumActual,fsr2l
  5287  0013D6  C006  FFDA         	movff	Comparar_T_H_Adecuados@HumActual+1,fsr2h
  5288  0013DA  50DF               	movf	indf2,w,c
  5289  0013DC  6E11               	movwf	(??_Comparar_T_H_Adecuados+2)^0,c
  5290  0013DE  6A12               	clrf	(??_Comparar_T_H_Adecuados+3)^0,c
  5291  0013E0  500F               	movf	??_Comparar_T_H_Adecuados^0,w,c
  5292  0013E2  5C11               	subwf	(??_Comparar_T_H_Adecuados+2)^0,w,c
  5293  0013E4  5012               	movf	(??_Comparar_T_H_Adecuados+3)^0,w,c
  5294  0013E6  0A80               	xorlw	128
  5295  0013E8  6E13               	movwf	(??_Comparar_T_H_Adecuados+4)^0,c
  5296  0013EA  5010               	movf	(??_Comparar_T_H_Adecuados+1)^0,w,c
  5297  0013EC  0A80               	xorlw	128
  5298  0013EE  5813               	subwfb	(??_Comparar_T_H_Adecuados+4)^0,w,c
  5299  0013F0  A0D8               	btfss	status,0,c
  5300  0013F2  EFFD  F009         	goto	u1641
  5301  0013F6  EFFF  F009         	goto	u1640
  5302  0013FA                     u1641:
  5303  0013FA  EF1B  F00A         	goto	l2349
  5304  0013FE                     u1640:
  5305  0013FE  C005  FFD9         	movff	Comparar_T_H_Adecuados@HumActual,fsr2l
  5306  001402  C006  FFDA         	movff	Comparar_T_H_Adecuados@HumActual+1,fsr2h
  5307  001406  50DF               	movf	indf2,w,c
  5308  001408  6E0F               	movwf	??_Comparar_T_H_Adecuados^0,c
  5309  00140A  6A10               	clrf	(??_Comparar_T_H_Adecuados+1)^0,c
  5310  00140C  500D               	movf	Comparar_T_H_Adecuados@MargenErrorH^0,w,c
  5311  00140E  2409               	addwf	Comparar_T_H_Adecuados@HumDigitada^0,w,c
  5312  001410  6E11               	movwf	(??_Comparar_T_H_Adecuados+2)^0,c
  5313  001412  500E               	movf	(Comparar_T_H_Adecuados@MargenErrorH+1)^0,w,c
  5314  001414  200A               	addwfc	(Comparar_T_H_Adecuados@HumDigitada+1)^0,w,c
  5315  001416  6E12               	movwf	(??_Comparar_T_H_Adecuados+3)^0,c
  5316  001418  500F               	movf	??_Comparar_T_H_Adecuados^0,w,c
  5317  00141A  5C11               	subwf	(??_Comparar_T_H_Adecuados+2)^0,w,c
  5318  00141C  5012               	movf	(??_Comparar_T_H_Adecuados+3)^0,w,c
  5319  00141E  0A80               	xorlw	128
  5320  001420  6E13               	movwf	(??_Comparar_T_H_Adecuados+4)^0,c
  5321  001422  5010               	movf	(??_Comparar_T_H_Adecuados+1)^0,w,c
  5322  001424  0A80               	xorlw	128
  5323  001426  5813               	subwfb	(??_Comparar_T_H_Adecuados+4)^0,w,c
  5324  001428  B0D8               	btfsc	status,0,c
  5325  00142A  EF19  F00A         	goto	u1651
  5326  00142E  EF1B  F00A         	goto	u1650
  5327  001432                     u1651:
  5328  001432  EF1D  F00A         	goto	l2351
  5329  001436                     u1650:
  5330  001436                     l2349:
  5331                           
  5332                           ;DHT11.c: 68:         HumedadAdecuada=0;
  5333  001436  0E00               	movlw	0
  5334  001438  6E15               	movwf	Comparar_T_H_Adecuados@HumedadAdecuada^0,c
  5335  00143A                     l2351:
  5336                           
  5337                           ;DHT11.c: 70:    PrenderLed(TemperaturaAdecuada,HumedadAdecuada);
  5338  00143A  C015  F001         	movff	Comparar_T_H_Adecuados@HumedadAdecuada,PrenderLed@HumedadAdecuada
  5339  00143E  5014               	movf	Comparar_T_H_Adecuados@TemperaturaAdecuada^0,w,c
  5340  001440  ECD5  F00C         	call	_PrenderLed
  5341  001444  0012               	return		;funcret
  5342  001446                     __end_of_Comparar_T_H_Adecuados:
  5343                           	callstack 0
  5344                           
  5345 ;; *************** function _PrenderLed *****************
  5346 ;; Defined at:
  5347 ;;		line 40 in file "Actuadores.c"
  5348 ;; Parameters:    Size  Location     Type
  5349 ;;  TemperaturaA    1    wreg     _Bool 
  5350 ;;  HumedadAdecu    1    0[COMRAM] _Bool 
  5351 ;; Auto vars:     Size  Location     Type
  5352 ;;  TemperaturaA    1    1[COMRAM] _Bool 
  5353 ;; Return value:  Size  Location     Type
  5354 ;;                  1    wreg      void 
  5355 ;; Registers used:
  5356 ;;		wreg, status,2, cstack
  5357 ;; Tracked objects:
  5358 ;;		On entry : 0/0
  5359 ;;		On exit  : 0/0
  5360 ;;		Unchanged: 0/0
  5361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5362 ;;      Params:         1       0       0       0       0       0       0       0       0
  5363 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5364 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5365 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5366 ;;Total ram usage:        2 bytes
  5367 ;; Hardware stack levels used: 1
  5368 ;; Hardware stack levels required when called: 1
  5369 ;; This function calls:
  5370 ;;		_ApagarLeds
  5371 ;; This function is called by:
  5372 ;;		_Comparar_T_H_Adecuados
  5373 ;; This function uses a non-reentrant model
  5374 ;;
  5375                           
  5376                           	psect	text40
  5377  0019AA                     __ptext40:
  5378                           	callstack 0
  5379  0019AA                     _PrenderLed:
  5380                           	callstack 28
  5381                           
  5382                           ;incstack = 0
  5383                           ;PrenderLed@TemperaturaAdecuada stored from wreg
  5384  0019AA  6E02               	movwf	PrenderLed@TemperaturaAdecuada^0,c
  5385  0019AC                     
  5386                           ;Actuadores.c: 41:     ApagarLeds();
  5387  0019AC  ECEA  F00E         	call	_ApagarLeds	;wreg free
  5388  0019B0                     
  5389                           ;Actuadores.c: 42:     if(TemperaturaAdecuada==0 && HumedadAdecuada==0){
  5390  0019B0  5002               	movf	PrenderLed@TemperaturaAdecuada^0,w,c
  5391  0019B2  A4D8               	btfss	status,2,c
  5392  0019B4  EFDE  F00C         	goto	u1581
  5393  0019B8  EFE0  F00C         	goto	u1580
  5394  0019BC                     u1581:
  5395  0019BC  EFEB  F00C         	goto	l2261
  5396  0019C0                     u1580:
  5397  0019C0  5001               	movf	PrenderLed@HumedadAdecuada^0,w,c
  5398  0019C2  A4D8               	btfss	status,2,c
  5399  0019C4  EFE6  F00C         	goto	u1591
  5400  0019C8  EFE8  F00C         	goto	u1590
  5401  0019CC                     u1591:
  5402  0019CC  EFEB  F00C         	goto	l2261
  5403  0019D0                     u1590:
  5404  0019D0                     
  5405                           ;Actuadores.c: 43:         LATE0=1;
  5406  0019D0  808D               	bsf	3981,0,c	;volatile
  5407                           
  5408                           ;Actuadores.c: 44:     }else if(TemperaturaAdecuada==0 || HumedadAdecuada==0){
  5409  0019D2  EFFF  F00C         	goto	l292
  5410  0019D6                     l2261:
  5411  0019D6  5002               	movf	PrenderLed@TemperaturaAdecuada^0,w,c
  5412  0019D8  B4D8               	btfsc	status,2,c
  5413  0019DA  EFF1  F00C         	goto	u1601
  5414  0019DE  EFF3  F00C         	goto	u1600
  5415  0019E2                     u1601:
  5416  0019E2  EFFB  F00C         	goto	l290
  5417  0019E6                     u1600:
  5418  0019E6  5001               	movf	PrenderLed@HumedadAdecuada^0,w,c
  5419  0019E8  A4D8               	btfss	status,2,c
  5420  0019EA  EFF9  F00C         	goto	u1611
  5421  0019EE  EFFB  F00C         	goto	u1610
  5422  0019F2                     u1611:
  5423  0019F2  EFFE  F00C         	goto	l288
  5424  0019F6                     u1610:
  5425  0019F6                     l290:
  5426                           
  5427                           ;Actuadores.c: 45:         LATE1=1;
  5428  0019F6  828D               	bsf	3981,1,c	;volatile
  5429                           
  5430                           ;Actuadores.c: 46:     }else{
  5431  0019F8  EFFF  F00C         	goto	l292
  5432  0019FC                     l288:
  5433                           
  5434                           ;Actuadores.c: 47:         LATE2=1;
  5435  0019FC  848D               	bsf	3981,2,c	;volatile
  5436  0019FE                     l292:
  5437  0019FE  0012               	return		;funcret
  5438  001A00                     __end_of_PrenderLed:
  5439                           	callstack 0
  5440                           
  5441 ;; *************** function _ApagarLeds *****************
  5442 ;; Defined at:
  5443 ;;		line 35 in file "Actuadores.c"
  5444 ;; Parameters:    Size  Location     Type
  5445 ;;		None
  5446 ;; Auto vars:     Size  Location     Type
  5447 ;;		None
  5448 ;; Return value:  Size  Location     Type
  5449 ;;                  1    wreg      void 
  5450 ;; Registers used:
  5451 ;;		None
  5452 ;; Tracked objects:
  5453 ;;		On entry : 0/0
  5454 ;;		On exit  : 0/0
  5455 ;;		Unchanged: 0/0
  5456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5457 ;;      Params:         0       0       0       0       0       0       0       0       0
  5458 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5459 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5460 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5461 ;;Total ram usage:        0 bytes
  5462 ;; Hardware stack levels used: 1
  5463 ;; This function calls:
  5464 ;;		Nothing
  5465 ;; This function is called by:
  5466 ;;		_main
  5467 ;;		_PrenderLed
  5468 ;; This function uses a non-reentrant model
  5469 ;;
  5470                           
  5471                           	psect	text41
  5472  001DD4                     __ptext41:
  5473                           	callstack 0
  5474  001DD4                     _ApagarLeds:
  5475                           	callstack 28
  5476  001DD4                     
  5477                           ;Actuadores.c: 36:     LATE1=0;
  5478  001DD4  928D               	bcf	3981,1,c	;volatile
  5479                           
  5480                           ;Actuadores.c: 37:     LATE0=0;
  5481  001DD6  908D               	bcf	3981,0,c	;volatile
  5482                           
  5483                           ;Actuadores.c: 38:     LATE2=0;
  5484  001DD8  948D               	bcf	3981,2,c	;volatile
  5485  001DDA  0012               	return		;funcret
  5486  001DDC                     __end_of_ApagarLeds:
  5487                           	callstack 0
  5488                           
  5489                           	psect	rparam
  5490  0000                     
  5491                           	psect	idloc
  5492                           
  5493                           ;Config register IDLOC0 @ 0x200000
  5494                           ;	unspecified, using default values
  5495  200000                     	org	2097152
  5496  200000  FF                 	db	255
  5497                           
  5498                           ;Config register IDLOC1 @ 0x200001
  5499                           ;	unspecified, using default values
  5500  200001                     	org	2097153
  5501  200001  FF                 	db	255
  5502                           
  5503                           ;Config register IDLOC2 @ 0x200002
  5504                           ;	unspecified, using default values
  5505  200002                     	org	2097154
  5506  200002  FF                 	db	255
  5507                           
  5508                           ;Config register IDLOC3 @ 0x200003
  5509                           ;	unspecified, using default values
  5510  200003                     	org	2097155
  5511  200003  FF                 	db	255
  5512                           
  5513                           ;Config register IDLOC4 @ 0x200004
  5514                           ;	unspecified, using default values
  5515  200004                     	org	2097156
  5516  200004  FF                 	db	255
  5517                           
  5518                           ;Config register IDLOC5 @ 0x200005
  5519                           ;	unspecified, using default values
  5520  200005                     	org	2097157
  5521  200005  FF                 	db	255
  5522                           
  5523                           ;Config register IDLOC6 @ 0x200006
  5524                           ;	unspecified, using default values
  5525  200006                     	org	2097158
  5526  200006  FF                 	db	255
  5527                           
  5528                           ;Config register IDLOC7 @ 0x200007
  5529                           ;	unspecified, using default values
  5530  200007                     	org	2097159
  5531  200007  FF                 	db	255
  5532                           
  5533                           	psect	config
  5534                           
  5535                           ;Config register CONFIG1L @ 0x300000
  5536                           ;	unspecified, using default values
  5537                           ;	PLL Prescaler Selection bits
  5538                           ;	PLLDIV = 0x0, unprogrammed default
  5539                           ;	System Clock Postscaler Selection bits
  5540                           ;	CPUDIV = 0x0, unprogrammed default
  5541                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  5542                           ;	USBDIV = 0x0, unprogrammed default
  5543  300000                     	org	3145728
  5544  300000  00                 	db	0
  5545                           
  5546                           ;Config register CONFIG1H @ 0x300001
  5547                           ;	Oscillator Selection bits
  5548                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  5549                           ;	Fail-Safe Clock Monitor Enable bit
  5550                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5551                           ;	Internal/External Oscillator Switchover bit
  5552                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5553  300001                     	org	3145729
  5554  300001  09                 	db	9
  5555                           
  5556                           ;Config register CONFIG2L @ 0x300002
  5557                           ;	Power-up Timer Enable bit
  5558                           ;	PWRT = OFF, PWRT disabled
  5559                           ;	Brown-out Reset Enable bits
  5560                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  5561                           ;	Brown-out Reset Voltage bits
  5562                           ;	BORV = 3, Minimum setting 2.05V
  5563                           ;	USB Voltage Regulator Enable bit
  5564                           ;	VREGEN = OFF, USB voltage regulator disabled
  5565  300002                     	org	3145730
  5566  300002  1F                 	db	31
  5567                           
  5568                           ;Config register CONFIG2H @ 0x300003
  5569                           ;	Watchdog Timer Enable bit
  5570                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5571                           ;	Watchdog Timer Postscale Select bits
  5572                           ;	WDTPS = 32768, 1:32768
  5573  300003                     	org	3145731
  5574  300003  1E                 	db	30
  5575                           
  5576                           ; Padding undefined space
  5577  300004                     	org	3145732
  5578  300004  FF                 	db	255
  5579                           
  5580                           ;Config register CONFIG3H @ 0x300005
  5581                           ;	CCP2 MUX bit
  5582                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  5583                           ;	PORTB A/D Enable bit
  5584                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5585                           ;	Low-Power Timer 1 Oscillator Enable bit
  5586                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5587                           ;	MCLR Pin Enable bit
  5588                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5589  300005                     	org	3145733
  5590  300005  81                 	db	129
  5591                           
  5592                           ;Config register CONFIG4L @ 0x300006
  5593                           ;	Stack Full/Underflow Reset Enable bit
  5594                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5595                           ;	Single-Supply ICSP Enable bit
  5596                           ;	LVP = OFF, Single-Supply ICSP disabled
  5597                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  5598                           ;	ICPRT = OFF, ICPORT disabled
  5599                           ;	Extended Instruction Set Enable bit
  5600                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5601                           ;	Background Debugger Enable bit
  5602                           ;	DEBUG = 0x1, unprogrammed default
  5603  300006                     	org	3145734
  5604  300006  81                 	db	129
  5605                           
  5606                           ; Padding undefined space
  5607  300007                     	org	3145735
  5608  300007  FF                 	db	255
  5609                           
  5610                           ;Config register CONFIG5L @ 0x300008
  5611                           ;	Code Protection bit
  5612                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  5613                           ;	Code Protection bit
  5614                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  5615                           ;	Code Protection bit
  5616                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  5617                           ;	Code Protection bit
  5618                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  5619  300008                     	org	3145736
  5620  300008  0F                 	db	15
  5621                           
  5622                           ;Config register CONFIG5H @ 0x300009
  5623                           ;	Boot Block Code Protection bit
  5624                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  5625                           ;	Data EEPROM Code Protection bit
  5626                           ;	CPD = OFF, Data EEPROM is not code-protected
  5627  300009                     	org	3145737
  5628  300009  C0                 	db	192
  5629                           
  5630                           ;Config register CONFIG6L @ 0x30000A
  5631                           ;	Write Protection bit
  5632                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  5633                           ;	Write Protection bit
  5634                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  5635                           ;	Write Protection bit
  5636                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  5637                           ;	Write Protection bit
  5638                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  5639  30000A                     	org	3145738
  5640  30000A  0F                 	db	15
  5641                           
  5642                           ;Config register CONFIG6H @ 0x30000B
  5643                           ;	Configuration Register Write Protection bit
  5644                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  5645                           ;	Boot Block Write Protection bit
  5646                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  5647                           ;	Data EEPROM Write Protection bit
  5648                           ;	WRTD = OFF, Data EEPROM is not write-protected
  5649  30000B                     	org	3145739
  5650  30000B  E0                 	db	224
  5651                           
  5652                           ;Config register CONFIG7L @ 0x30000C
  5653                           ;	Table Read Protection bit
  5654                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5655                           ;	Table Read Protection bit
  5656                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5657                           ;	Table Read Protection bit
  5658                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5659                           ;	Table Read Protection bit
  5660                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5661  30000C                     	org	3145740
  5662  30000C  0F                 	db	15
  5663                           
  5664                           ;Config register CONFIG7H @ 0x30000D
  5665                           ;	Boot Block Table Read Protection bit
  5666                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  5667  30000D                     	org	3145741
  5668  30000D  40                 	db	64
  5669                           tosu	equ	0xFFF
  5670                           tosh	equ	0xFFE
  5671                           tosl	equ	0xFFD
  5672                           stkptr	equ	0xFFC
  5673                           pclatu	equ	0xFFB
  5674                           pclath	equ	0xFFA
  5675                           pcl	equ	0xFF9
  5676                           tblptru	equ	0xFF8
  5677                           tblptrh	equ	0xFF7
  5678                           tblptrl	equ	0xFF6
  5679                           tablat	equ	0xFF5
  5680                           prodh	equ	0xFF4
  5681                           prodl	equ	0xFF3
  5682                           indf0	equ	0xFEF
  5683                           postinc0	equ	0xFEE
  5684                           postdec0	equ	0xFED
  5685                           preinc0	equ	0xFEC
  5686                           plusw0	equ	0xFEB
  5687                           fsr0h	equ	0xFEA
  5688                           fsr0l	equ	0xFE9
  5689                           wreg	equ	0xFE8
  5690                           indf1	equ	0xFE7
  5691                           postinc1	equ	0xFE6
  5692                           postdec1	equ	0xFE5
  5693                           preinc1	equ	0xFE4
  5694                           plusw1	equ	0xFE3
  5695                           fsr1h	equ	0xFE2
  5696                           fsr1l	equ	0xFE1
  5697                           bsr	equ	0xFE0
  5698                           indf2	equ	0xFDF
  5699                           postinc2	equ	0xFDE
  5700                           postdec2	equ	0xFDD
  5701                           preinc2	equ	0xFDC
  5702                           plusw2	equ	0xFDB
  5703                           fsr2h	equ	0xFDA
  5704                           fsr2l	equ	0xFD9
  5705                           status	equ	0xFD8

Data Sizes:
    Strings     77
    Constant    0
    Data        13
    BSS         69
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     11      93
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> Cadena(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_10(CODE[8]), STR_9(CODE[4]), STR_8(CODE[3]), STR_7(CODE[7]), 
		 -> STR_6(CODE[4]), STR_5(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 8
		 -> STR_10(CODE[8]), STR_9(CODE[4]), STR_8(CODE[3]), STR_7(CODE[7]), 
		 -> STR_6(CODE[4]), STR_5(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_10(CODE[8]), STR_9(CODE[4]), STR_8(CODE[3]), STR_7(CODE[7]), 
		 -> STR_6(CODE[4]), STR_5(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> Cadena(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S873_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> Cadena(BANK0[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> Cadena(BANK0[10]), 

    ControlTemperaturaVentilador@TempActual	PTR unsigned char  size(2) Largest target is 2
		 -> Datos(BANK0[2]), 

    ControlHumedadAspersor@HumedadActual	PTR unsigned char  size(2) Largest target is 2
		 -> Datos(BANK0[2]), 

    Comparar_T_H_Adecuados@HumActual	PTR unsigned char  size(2) Largest target is 2
		 -> Datos(BANK0[2]), 

    Comparar_T_H_Adecuados@TempActual	PTR unsigned char  size(2) Largest target is 2
		 -> Datos(BANK0[2]), 

    DatosSensorTH@Datos	PTR unsigned char  size(2) Largest target is 2
		 -> Datos(BANK0[2]), 

    DatoDigitadoAEntero@prmTemperatura	PTR unsigned char  size(2) Largest target is 2
		 -> Humedad(BANK0[2]), Temperatura(BANK0[2]), 

    MostrarTemperatura@Cadena	PTR unsigned char  size(2) Largest target is 10
		 -> Cadena(BANK0[10]), 

    MostrarHumedad@Cadena	PTR unsigned char  size(2) Largest target is 10
		 -> Cadena(BANK0[10]), 

    PedirTodosLosDatos@MargenErrorH	PTR unsigned char  size(2) Largest target is 1
		 -> MargenErrorH(BANK0[1]), 

    PedirTodosLosDatos@Humedad	PTR unsigned char  size(2) Largest target is 2
		 -> Humedad(BANK0[2]), 

    PedirTodosLosDatos@MargenErrorT	PTR unsigned char  size(2) Largest target is 1
		 -> MargenErrorT(BANK0[1]), 

    PedirTodosLosDatos@Temperatura	PTR unsigned char  size(2) Largest target is 2
		 -> Temperatura(BANK0[2]), 

    PedirDato@vecLlenar	PTR unsigned char  size(2) Largest target is 2
		 -> MargenErrorH(BANK0[1]), MargenErrorT(BANK0[1]), Humedad(BANK0[2]), Temperatura(BANK0[2]), 

    PedirDato@Etiqueta	PTR unsigned char  size(2) Largest target is 15
		 -> STR_4(CODE[14]), STR_3(CODE[14]), STR_2(CODE[15]), STR_1(CODE[15]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_4(CODE[14]), STR_3(CODE[14]), STR_2(CODE[15]), STR_1(CODE[15]), 
		 -> Cadena(BANK0[10]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_4(CODE[14]), STR_3(CODE[14]), STR_2(CODE[15]), STR_1(CODE[15]), 
		 -> Cadena(BANK0[10]), 


Critical Paths under _main in COMRAM

    _PedirTodosLosDatos->_PedirDato
    _PedirDato->_LCD_String_xy
    _LCD_Clear->_LCD_Command
    _MostrarTemperatura->_sprintf
    _MostrarHumedad->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Init->_LCD_Command
    _DatosSensorTH->_DHT11_ReadData
    _DatoDigitadoAEntero->___wmul
    _Comparar_T_H_Adecuados->_PrenderLed

Critical Paths under _main in BANK0

    _main->_MostrarHumedad
    _main->_MostrarTemperatura
    _MostrarTemperatura->_sprintf
    _MostrarHumedad->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   22757
                                             93 COMRAM     2     2      0
                   _ApagarAspersores
                         _ApagarLeds
                 _ApagarVentiladores
             _Comparar_T_H_Adecuados
               _ConfigurarPuertosLCD
             _ControlHumedadAspersor
       _ControlTemperaturaVentilador
                _DatoDigitadoAEntero
                      _DatosSensorTH
                           _LCD_Init
                     _MostrarHumedad
                 _MostrarTemperatura
                 _PedirTodosLosDatos
                     _initActuadores
                        _initTeclado
 ---------------------------------------------------------------------------------
 (1) _initTeclado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initActuadores                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PedirTodosLosDatos                                  10     2      8    2589
                                             20 COMRAM    10     2      8
                          _PedirDato
 ---------------------------------------------------------------------------------
 (2) _PedirDato                                           11     5      6    2197
                                              9 COMRAM    11     5      6
                           _LCD_Char
                          _LCD_Clear
                        _LCD_Command
                      _LCD_String_xy
                            _keyfind
 ---------------------------------------------------------------------------------
 (3) _keyfind                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_Clear                                            1     1      0      44
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _MostrarTemperatura                                   3     0      3    8813
                                              8 BANK0      3     0      3
                           _LCD_Char
                         _LCD_String
                      _LCD_String_xy
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _MostrarHumedad                                       3     0      3    8813
                                              8 BANK0      3     0      3
                           _LCD_Char
                         _LCD_String
                      _LCD_String_xy
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16    10      6    7216
                                             87 COMRAM     6     0      6
                                              0 BANK0      8     8      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (3) _LCD_String_xy                                        5     2      3     952
                                              4 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (4) _LCD_String                                           2     0      2     317
                                              2 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (5) _LCD_Char                                             2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      44
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (4) _LCD_Command                                          2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DatosSensorTH                                        7     5      2     284
                                              2 COMRAM     4     2      2
                _DHT11_CheckResponse
                     _DHT11_ReadData
                        _DHT11_Start
 ---------------------------------------------------------------------------------
 (2) _DHT11_Start                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DHT11_ReadData                                       2     2      0     115
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _DHT11_CheckResponse                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DatoDigitadoAEntero                                  9     7      2     694
                                              6 COMRAM     9     7      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _ControlTemperaturaVentilador                        11     5      6     294
                                              0 COMRAM    11     5      6
                 _ApagarVentiladores
                _PrenderVentiladores
 ---------------------------------------------------------------------------------
 (2) _PrenderVentiladores                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ApagarVentiladores                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlHumedadAspersor                              11     5      6     294
                                              0 COMRAM    11     5      6
                   _ApagarAspersores
                  _PrenderAspersores
 ---------------------------------------------------------------------------------
 (2) _PrenderAspersores                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ApagarAspersores                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigurarPuertosLCD                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Comparar_T_H_Adecuados                              19     7     12     932
                                              2 COMRAM    19     7     12
                         _PrenderLed
 ---------------------------------------------------------------------------------
 (2) _PrenderLed                                           2     1      1     164
                                              0 COMRAM     2     1      1
                         _ApagarLeds
 ---------------------------------------------------------------------------------
 (3) _ApagarLeds                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ApagarAspersores
   _ApagarLeds
   _ApagarVentiladores
   _Comparar_T_H_Adecuados
     _PrenderLed
       _ApagarLeds
   _ConfigurarPuertosLCD
   _ControlHumedadAspersor
     _ApagarAspersores
     _PrenderAspersores
   _ControlTemperaturaVentilador
     _ApagarVentiladores
     _PrenderVentiladores
   _DatoDigitadoAEntero
     ___wmul
   _DatosSensorTH
     _DHT11_CheckResponse
     _DHT11_ReadData
     _DHT11_Start
   _LCD_Init
     _LCD_Command
   _MostrarHumedad
     _LCD_Char
     _LCD_String
       _LCD_Char
     _LCD_String_xy
       _LCD_Command
       _LCD_String
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc
   _MostrarTemperatura
     _LCD_Char
     _LCD_String
     _LCD_String_xy
     _sprintf
   _PedirTodosLosDatos
     _PedirDato
       _LCD_Char
       _LCD_Clear
         _LCD_Command
       _LCD_Command
       _LCD_String_xy
       _keyfind
   _initActuadores
   _initTeclado

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      B      5D       5       58.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BC      20        0.0%
DATA                 0      0      BC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Oct 11 17:04:21 2021

       Comparar_T_H_Adecuados@TempDigitada 0007                               ?_LCD_Command 0001  
                                       l91 1AF0                                         l94 1AA0  
                                       l88 1D1E                        _PrenderVentiladores 1DDC  
                      ___wmul@multiplicand 0003                                ?_LCD_String 0003  
              __size_of_ApagarVentiladores 0006                                        l100 194C  
                                      l105 1C40                                        l122 168E  
                                      l220 19A8                                        l212 1956  
                                      l108 1D74                                        l116 1736  
                                      l125 188C                                        l302 1B36  
                                      l119 1DF8                                        l223 1DBA  
                                      l232 1D3C                                        l128 181C  
                                      l305 1D9A                                        l217 1986  
                                      l226 1D20                                        l235 1D4A  
                                      l171 0C3C                                        l229 1D2E  
                                      l238 1C7E                                        l166 0BF8  
                                      l247 1444                                        l271 1DF2  
                                      l175 0C80                                        l280 1DE0  
                                      l432 11EE                                        l185 0D4E  
                                      l169 0CDA                                        l290 19F6  
                                      l274 1DE6                                        l194 17AC  
                                      l283 1DDA                                        l419 108A  
                                      l179 0CC4                                        l292 19FE  
                                      l268 1DD2                                        l277 1DEC  
                                      l197 1DFC                                        l288 19FC  
                                      l297 1B7C                                        l983 1A50  
                                      u900 1CDE                                        u901 1CDA  
                                      u910 0F16                                        u911 0F12  
                                      u920 0F48                                        u921 0F44  
                                      u850 1458                                        u931 0F72  
                                      u851 1454                                        u940 0F96  
                                      u860 146A                                        u941 0F92  
                                      u861 1466                                        u950 0FC0  
                                      u870 1492                                        u951 0FBC  
                                      u871 148E                                        u960 1000  
                                      u880 14C8                                        u961 0FFC  
                                      u881 14C4                                        u970 104A  
                                      u890 1BC0                                        u971 1046  
                                      u891 1BBC                                        u980 109E  
                                      u981 109A                                        u990 10D0  
                                      u991 10CC                                        _abs 1BC2  
                                      _pad 1510                                        prod 000FF3  
                                      wreg 000FE8                  PedirTodosLosDatos@Humedad 0017  
                              LCD_Char@dat 0002                             PedirDato@tecla 0014  
                     MostrarHumedad@Cadena 00BA                                       l1010 1556  
                                     l1013 1598                                       l1021 08F0  
                                     l1015 15D4                                       l1023 08F8  
                                     l2001 1ADE                                       l1041 0B30  
                                     l2003 1AE0                                       l2011 191C  
                                     ?_abs 0013                                       l2005 18F0  
                                     l2021 0D98                                       l2013 0D50  
                                     l2101 0BCE                                       l1062 1C00  
                                     l1054 18E6                                       l2007 18F4  
                                     l2031 0E60                                       l2023 0DBC  
                                     l2015 0D74                                       l1055 18EE  
                                     l2111 0C0E                                       l2103 0BD4  
                                     l1048 0F02                                       l2009 1918  
                                     l2033 0E84                                       l2041 0EB2  
                                     l2025 0DE0                                       l2017 0D82  
                                     l2121 0C36                                       l2113 0C12  
                                     l2105 0BD8                                       l2201 16F8  
                                     l1074 150E                                       l1082 1BC0  
                                     l1059 1BF8                                       l1091 1CEA  
                                     l2043 0EC0                                       l2035 0E92  
                                     l2027 0E28                                       l2019 0D94  
                                     l2211 1A12                                       l2131 0C72  
                                     l2123 0C52                                       l2115 0C18  
                                     l2107 0BEA                                       l2203 16FC  
                                     l2221 194E                                       l2061 1C14  
                                     l1085 1DFE                                       l2037 0EA6  
                                     l2213 1A1A                                       l2141 0CA4  
                                     l2133 0C7A                                       l2125 0C56  
                                     l2117 0C1C                                       l2109 0BF2  
                                     l2205 171A                                       l2301 163E  
                                     l2055 1DD4                                       l2311 177C  
                                     l2231 1978                                       l2063 1C1C  
                                     l2047 0ECC                                       l2215 1A22  
                                     l2071 1D4C                                       l2143 0CB6  
                                     l2135 0C96                                       l2127 0C5C  
                                     l2119 0C2E                                       l2207 1732  
                                     l2303 165A                                       l2313 1798  
                                     l2305 1738                                       l2233 1980  
                                     l2321 1C46                                       l2065 1C26  
                                     l2057 1C04                                       l2049 0EF0  
                                     l2217 1A3E                                       l2209 1A00  
                                     l2073 1D52                                       l2145 0CBE  
                                     l2137 0C9A                                       l2129 0C60  
                                     l2081 0B42                                       l2401 120C  
                                     l2315 17A4                                       l2307 1748  
                                     l2251 1D20                                       l2235 1994  
                                     l2227 1964                                       l2243 1D9C  
                                     l2331 1C5E                                       l2323 1C4A  
                                     l2067 1C2E                                       l2059 1C04  
                                     l2171 188E                                       l2075 1D60  
                                     l2163 0D2A                                       l2155 0D02  
                                     l2139 0CA0                                       l2147 0CDA  
                                     l2091 0B88                                       l2083 0B54  
                                     l2411 125E                                       l2403 1210  
                                     l2261 19D6                                       l2253 19AC  
                                     l2341 138A                                       l2181 1DE2  
                                     l2309 1760                                       l2237 1996  
                                     l2229 196A                                       l2245 1DA0  
                                     l2333 1C62                                       l2325 1C50  
                                     l2069 1C34                                       l2173 1896  
                                     l2165 0D3C                                       l2157 0D14  
                                     l2149 0CEC                                       l2093 0B9A  
                                     l2085 0B6C                                       l2077 0B32  
                                     l2421 129C                                       l2413 1272  
                                     l2405 1214                                       l2263 19E6  
                                     l2255 19B0                                       l2351 143A  
                                     l2343 13C2                                       l2271 1D92  
                                     l2239 19A6                                       l2247 1DAE  
                                     l2335 1C6E                                       l2327 1C54  
                                     l2319 1C42                                       l2175 18A4  
                                     l2095 0BB2                                       l2087 0B7C  
                                     l2079 0B3A                                       l2191 16B8  
                                     l2183 1690                                       l2431 132C  
                                     l2423 12D0                                       l2415 1280  
                                     l2407 1226                                       l2257 19C0  
                                     l2345 13C6                                       l2337 134A  
                                     l2265 1DE8                                       l2353 1B38  
                                     l2361 1B2A                                       l2249 1DB8  
                                     l2329 1C5A                                       l2281 1CF0  
                                     l1801 0F16                                       l2177 18CA  
                                     l2097 0BC2                                       l2089 0B80  
                                     l2193 16BE                                       l2185 1694  
                                     l2425 12EC                                       l2417 128C  
                                     l2409 124A                                       l2259 19D0  
                                     l2347 13FE                                       l2339 1352  
                                     l2275 1DF4                                       l2179 1DEE  
                                     l2355 1B70                                       l2267 1DDC  
                                     l2363 1B32                                       l2291 1D18  
                                     l2283 1D00                                       l1811 0F6C  
                                     l1803 0F36                                       l2371 1866  
                                     l2099 0BCA                                       l2195 16D0  
                                     l2187 16A6                                       l2427 1308  
                                     l2419 1290                                       l2349 1436  
                                     l2357 1B78                                       l2269 1D76  
                                     l2285 1D06                                       l1821 0FC0  
                                     l1813 0F78                                       l1805 0F3A  
                                     l1901 1BDC                                       l2373 186C  
                                     l2365 181E                                       l2381 17DA  
                                     l2197 16E2                                       l2189 16AC  
                                     l2277 1DCA                                       l2293 1DFA  
                                     l2429 131A                                       l2359 1AF2  
                                     l2287 1D0C                                       l2279 1CEC  
                                     l1911 1A6A                                       l1903 1A54  
                                     l1831 1034                                       l1823 0FD2  
                                     l1815 0F96                                       l1807 0F48  
                                     l2375 1880                                       l2367 1838  
                                     l2383 17F6                                       l2199 16E8  
                                     l2295 15D6                                       l2391 11F8  
                                     l2289 1D12                                       l1921 1A90  
                                     l1913 1A6C                                       l1905 1A64  
                                     l1825 1000                                       l1817 0F9E  
                                     l1833 103A                                       l1809 0F68  
                                     l1841 108C                                       l2369 184A  
                                     l2385 17FC                                       l2377 17AE  
                                     l2297 15F2                                       l2393 11FC  
                                     l1915 1A7A                                       l1907 1A66  
                                     l1835 104A                                       l1827 1020  
                                     l1819 0FB2                                       l1851 10D0  
                                     l1843 1090                                       l1771 1474  
                                     l1931 08C8                                       l1923 0850  
                                     l2387 1810                                       l2379 17C8  
                                     l2299 160A                                       l2395 1200  
                                     l1917 1A8C                                       l1909 1A68  
                                     l1837 106A                                       l1829 1022  
                                     l1861 1138                                       l1853 10F0  
                                     l1845 109E                                       l1773 1492  
                                     l1765 1446                                       l1781 1B8A  
                                     l1941 0920                                       l1933 08CA  
                                     l1925 0870                                       l2397 1204  
                                     l2389 11F0                                       l1919 1A8E  
                                     l1871 11AE                                       l1863 1166  
                                     l1855 110E                                       l1847 10BE  
                                     l1775 14C8                                       l1767 1458  
                                     l1783 1B9C                                       l1791 1CC6  
                                     l1951 09BE                                       l1943 0926  
                                     l1935 08E4                                       l1927 0898  
                                     l2399 1208                                       l1873 11CE  
                                     l1865 1186                                       l1857 1116  
                                     l1849 10C2                                       l1769 146A  
                                     l1785 1BA0                                       l1793 1CDE  
                                     l1881 1534                                       l1961 0A66  
                                     l1953 09C4                                       l1945 092E  
                                     l1937 0900                                       l1929 08B8  
                                     l1867 1198                                       l1859 112A  
                                     l1779 1B7E                                       l1787 1CB6  
                                     l1891 157A                                       l1883 1542  
                                     l1971 0ACC                                       l1963 0A80  
                                     l1955 09CA                                       l1947 0936  
                                     l1939 0912                                       l1797 0F04  
                                     l1869 119E                                       l1789 1CC2  
                                     l1893 15A8                                       l1885 154E  
                                     l1877 1510                                       l1973 0AD2  
                                     l1981 0B08                                       l1965 0A9A  
                                     l1949 093C                                       l1957 0A2E  
                                     ?_pad 0011                                       l1991 1AB8  
                                     l1799 0F08                                       l1895 15BC  
                                     l1887 1562                                       l1879 1520  
                                     l1975 0AE4                                       l1959 0A48  
                                     l1967 0AAA                                       l1993 1ABA  
                                     l1985 1AA4                                       l1889 1576  
                                     l1977 0AF0                                       l1969 0ABC  
                                     l1995 1ABC                                       l1987 1AB4  
                                     l1899 1BC2                                       l1979 0AF8  
                                     l1997 1ACA                                       l1989 1AB6  
                                     l1999 1ADC                                       STR_1 0801  
                                     STR_2 0810                                       STR_3 081F  
                                     STR_4 082D                                       STR_5 084B  
                                     STR_6 084A                                       STR_7 0843  
                                     STR_8 084B                                       STR_9 084A  
                                     u1000 110E                                       u1001 110A  
                                     u1010 1138                                       u1011 1134  
                                     u1020 1166                                       u1100 0882  
                                     u1021 1162                                       u1030 11AE  
                                     u1110 0898                                       u1031 11AA  
                                     u1111 0894                                       u1040 1520  
                                     u1200 0AAA                                       u1120 08C8  
                                     u1041 151C                                       u1201 0AA6  
                                     u1121 08C4                                       u1050 1542  
                                     u1210 0ABC                                       u1130 08E4  
                                     u1051 153E                                       u1211 0AB8  
                                     u1131 08E0                                       u1060 1598  
                                     u1220 0ACC                                       u1140 0912  
                                     u1300 0E84                                       u1061 1594  
                                     u1221 0AC8                                       u1141 090E  
                                     u1301 0E80                                       u1310 1C14  
                                     u1070 15A8                                       u1230 0AE4  
                                     u1150 0920                                       u1311 1C10  
                                     u1071 15A4                                       u1231 0AE0  
                                     u1151 091C                                       u1240 1914  
                                     u1080 1BDC                                       u1160 0A48  
                                     u1400 0C72                                       u1320 0B54  
                                     u1081 1BD8                                       u1161 0A44  
                                     u1401 0C6E                                       u1321 0B50  
                                     u1250 193C                                       u1170 0A66  
                                     u1090 0880                                       u1410 0C92  
                                     u1330 0B6C                                       u1171 0A62  
                                     u1091 087A                                       u1411 0C8E  
                                     u1331 0B68                                       u1260 194C  
                                     u1180 0A80                                       u1420 0CB6  
                                     u1340 0B9A                                       u1500 171A  
                                     u1261 1948                                       u1181 0A7C  
                                     u1421 0CB2                                       u1341 0B96  
                                     u1501 1716                                       u1510 1964  
                                     u1190 0A9A                                       u1270 0D74  
                                     u1430 0CD6                                       u1350 0BB2  
                                     _LATB 000F8A                                       u1511 1960  
                                     u1247 190A                                       u1191 0A96  
                                     u1271 0D70                                       u1431 0CD2  
                                     u1351 0BAE                                       u1600 19E6  
                                     u1520 1978                                       u1280 0DBC  
                                     u1440 0CEC                                       u1360 0BEA  
                                     _LATD 000F8C                                       u1601 19E2  
                                     u1521 1974                                       u1257 1932  
                                     u1281 0DB8                                       u1441 0CE8  
                                     u1361 0BE6                                       u1610 19F6  
                                     u1530 1994                                       u1290 0DE0  
                                     u1450 0D14                                       u1370 0C0A  
                                     u1611 19F2                                       u1531 1990  
                                     u1291 0DDC                                       u1451 0D10  
                                     u1371 0C06                                       u1620 138A  
                                     u1540 19A6                                       u1460 0D3C  
                                     u1380 0C2E                                       u1621 1386  
                                     u1541 19A2                                       u1461 0D38  
                                     u1381 0C2A                                       u1630 13C2  
                                     u1550 1D2E                                       u1470 18E6  
                                     u1390 0C4E                                       u1631 13BE  
                                     u1551 1D2A                                       u1471 18E2  
                                     u1391 0C4A                                       u1640 13FE  
                                     u1560 1D3C                                       u1480 16D0  
                                     u1641 13FA                                       u1561 1D38  
                                     u1481 16CC                                       u1650 1436  
                                     u1570 1D4A                                       u1490 16E2  
                                     u1651 1432                                       u1571 1D46  
                                     u1491 16DE                                       u1707 15FC  
                                     u1580 19C0                                       u1660 1B70  
                                     u1581 19BC                                       u1661 1B6C  
                                     u1717 1630                                       u1590 19D0  
                                     u1670 1B2A                                       u1591 19CC  
                                     u1671 1B26                                       u1807 1CF6  
                                     u1727 1664                                       u1680 1226  
                                     u1817 1AC2                                       u1737 1724  
                                     u1681 1222                                       u1827 1AE8  
                                     u1747 0B72                       ?_PrenderVentiladores 0001  
                                     u1837 1DA6                                       u1757 0BB8  
                                     u1847 1DB2                                       u1767 1D58  
                                     u1857 1966                                       u1777 1D6C  
                                     u1697 1336                                       u1787 1A72  
                                     u1797 1A98                                       _RBPU 007F8F  
                 ??_Comparar_T_H_Adecuados 000F                                 _ApagarLeds 1DD4  
                                     abs@a 0013                                       _dbuf 0073  
                                     _main 11F0                                       _dtoa 0850  
                       __size_of_LCD_Clear 002A                                       _prec 0064  
                                     _nout 0060                                       pad@i 0018  
                                     pad@p 0015                                       fsr1h 000FE2  
                                     fsr2h 000FDA                                       indf1 000FE7  
                                     indf2 000FDF                                       fsr1l 000FE1  
                                     pad@w 001A                                       fsr2l 000FD9  
                                     prodh 000FF4                                       prodl 000FF3  
                                     start 0000                           ??_DHT11_ReadData 0001  
                            _LCD_String_xy 1C02                       __size_of_DHT11_Start 0020  
                               PedirDato@i 0012                               ___param_bank 000000  
                    __end_of_DatosSensorTH 1C80                                      ??_abs 0015  
                             ?_initTeclado 0001                                      ??_pad 0017  
                         __end_of_LCD_Char 1AA2                           __end_of_LCD_Init 1D20  
                          __end_of___aodiv 108C                                      ?_main 0001  
                                    ?_dtoa 001C                            __end_of___aomod 11F0  
                                    STR_10 083B                  __size_of_ApagarAspersores 0006  
                                    _LATA0 007C48                                      _LATC0 007C58  
                                    _LATC1 007C59                                      _LATD0 007C60  
                                    _LATC2 007C5A                                      _LATD1 007C61  
                                    _LATE0 007C68                                      _LATE1 007C69  
                                    _LATC6 007C5E                                      _LATE2 007C6A  
                             vfpfcnvrt@fmt 0042                                      _PORTB 000F81  
                                    _TRISB 000F93                                      _TRISC 000F94  
                                    _TRISD 000F95                                      _TRISE 000F96  
                                    _Datos 009D                      MostrarHumedad@Humedad 00BC  
                                    _flags 0066                                      _fputc 1446  
                          __end_of_keyfind 0D50                                      _fputs 1B7E  
                                    pad@fp 0011                      ??_PrenderVentiladores 0001  
                                    _width 0062                                      _putch 1DFE  
                                    dtoa@d 001E                                      dtoa@i 003E  
                                    dtoa@n 0036                                      dtoa@p 0030  
                                    dtoa@s 0034                                      dtoa@w 0032  
                                    tablat 000FF5      Comparar_T_H_Adecuados@HumedadAdecuada 0015  
                                    status 000FD8                        __size_of_LCD_String 005E  
                          __end_of_sprintf 1A52              PedirTodosLosDatos@Temperatura 0015  
                           ?_LCD_String_xy 0005                          _PrenderAspersores 1DE8  
                          __initialization 1C80                               __end_of_main 134A  
                             __end_of_dtoa 0B32                 __end_of_PedirTodosLosDatos 1690  
                       ?_PrenderAspersores 0001                    __size_of_MostrarHumedad 0070  
          Comparar_T_H_Adecuados@HumActual 0005                                     ??_main 005E  
                                   ??_dtoa 0026                          __end_of_LCD_Clear 1D76  
                      ??_PrenderAspersores 0001                              __activetblptr 000002  
                  __size_of_initActuadores 000A                    ?_ControlHumedadAspersor 0001  
                                   _ADCON1 000FC1                                     ?_fputc 0001  
                                   ?_fputs 000A                                     ?_putch 0001  
                      _DHT11_CheckResponse 1D20                           LCD_String_xy@msg 0006  
                         LCD_String_xy@pos 0005                           LCD_String_xy@row 0008  
                                   _OSCCON 000FD3                                ?_ApagarLeds 0001  
          __size_of_Comparar_T_H_Adecuados 00FC                                     _Cadena 0093  
              __end_of_DatoDigitadoAEntero 17AE                         __size_of_PedirDato 00A8  
                __end_of_PrenderAspersores 1DEE                               vfprintf@cfmt 0056  
                               _PrenderLed 19AA                                  ??___aodiv 0011  
                                ??___aomod 0011                                     ___wmul 1D76  
                     ?_DHT11_CheckResponse 0001                                     _keypad 00A5  
                               _PrimeraVez 00B1                                     clear_0 1CA6  
 ControlTemperaturaVentilador@MargenErrorT 0005                                     isa$std 000001  
                                   pad@buf 0013                                     _rowloc 0071  
                     __size_of_LCD_Command 0050                                     dtoa@fp 001C  
                                   _strlen 1CB6                                     fputc@c 0001  
                                   fputs@c 000E                                     fputs@i 000F  
                                   fputs@s 000A                                  ??_keyfind 0001  
           __end_of_ControlHumedadAspersor 1B7E                               __mediumconst 0000  
                                   tblptrh 000FF7                                     tblptrl 000FF6  
                                   tblptru 000FF8                                     putch@c 0001  
                         __end_of_vfprintf 18F0                                  ??_sprintf 005E  
     __end_of_ControlTemperaturaVentilador 1B38      __size_of_ControlTemperaturaVentilador 0046  
             _ControlTemperaturaVentilador 1AF2                          PedirDato@Etiqueta 000A  
                                ?_LCD_Char 0001                                 __accesstop 0060  
                  __end_of__initialization 1CAC                 __end_of_MostrarTemperatura 181E  
                                ?_LCD_Init 0001                            ??_LCD_String_xy 0008  
             __end_of_ConfigurarPuertosLCD 1DFA                              ___rparam_used 000001  
                           __pcstackCOMRAM 0001                               __pidataBANK0 1DBC  
                    ??_DHT11_CheckResponse 0001                              __end_of_fputc 1510  
                            __end_of_fputs 1BC2                              __end_of_putch 1E00  
                             ??_LCD_String 0005                     _Comparar_T_H_Adecuados 134A  
                     __size_of_initTeclado 0004                           _ApagarAspersores 1DEE  
                      __size_of_ApagarLeds 0008                          __end_of_PedirDato 1738  
                       DatosSensorTH@Datos 0003                                    ??_fputc 0005  
                                  ??_fputs 000E                                    ??_putch 0001  
                               __pbssBANK0 0060                                 ??_LCD_Char 0001  
                               ??_LCD_Init 0003              ?_ControlTemperaturaVentilador 0001  
               __size_of_PrenderAspersores 0006                         __end_of_LCD_String 194E  
                              ?_PrenderLed 0001                                    ?___wmul 0001  
                           _MostrarHumedad 181E                 __end_of_ApagarVentiladores 1DE8  
         Comparar_T_H_Adecuados@TempActual 0003                                    ?_strlen 0001  
                           _initActuadores 1DCA               DatoDigitadoAEntero@Resultado 000C  
                       __size_of_vfpfcnvrt 01B4                              ??_DHT11_Start 0001  
                            LCD_String@msg 0003                                    _Humedad 009F  
                                  __Hparam 0000                                    __Lparam 0000  
                   __end_of_MostrarHumedad 188E                                    ___aodiv 0F04  
                                  ___aomod 108C                            __size_of___wmul 0026  
                                ?_vfprintf 0050                               __psmallconst 0800  
                              _Temperatura 00A1                                    __pcinit 1C80  
                                  __ramtop 0800              PrenderLed@TemperaturaAdecuada 0002  
                                  __ptext0 11F0                                    __ptext1 1DFA  
                                  __ptext2 1DCA                                    __ptext3 15D6  
                                  __ptext4 1690                                    __ptext5 0B32  
                                  __ptext6 1D4C                                    __ptext7 17AE  
                                  __ptext8 181E                                    __ptext9 1A00  
                   __end_of_initActuadores 1DD4                                    _col_loc 0072  
                          __size_of_strlen 0036                               __size_of_abs 0040  
                             __size_of_pad 00C6                                    _keyfind 0B32  
              __end_of_PrenderVentiladores 1DE2                       _ConfigurarPuertosLCD 1DF4  
                       _PedirTodosLosDatos 15D6                                  _LCD_Clear 1D4C  
                                  _sprintf 1A00                        __size_of_PrenderLed 0056  
                       PedirDato@CantDatos 000E                     __size_of_DatosSensorTH 003E  
                     end_of_initialization 1CAC                        ?_PedirTodosLosDatos 0015  
                             ??_ApagarLeds 0001                                    fputc@fp 0003  
                           LCD_Command@cmd 0002                              __Lmediumconst 0000  
                                  fputs@fp 000C   ControlTemperaturaVentilador@TempDigitada 0003  
                          ?_MostrarHumedad 00BA             ??_ControlTemperaturaVentilador 0007  
                        __end_of_vfpfcnvrt 0F04                        __end_of_DHT11_Start 1DBC  
                                  postdec1 000FE5                                    postdec2 000FDD  
                                  postinc0 000FEE                                    postinc1 000FE6  
                                  postinc2 000FDE                                 ??_vfprintf 0056  
                     ??_PedirTodosLosDatos 001D                                    strlen@a 0003  
                                  strlen@s 0001                                  _PORTAbits 000F80  
                          ?_initActuadores 0001                    __size_of_DHT11_ReadData 005C  
                    ?_ConfigurarPuertosLCD 0001                         __end_of_ApagarLeds 1DDC  
                                _TRISAbits 000F92                                 ?_LCD_Clear 0001  
                             _MargenErrorH 00A3                               _MargenErrorT 00A4  
                 __end_of_ApagarAspersores 1DF4             PedirTodosLosDatos@MargenErrorH 001B  
           PedirTodosLosDatos@MargenErrorT 0019                          __size_of_LCD_Char 0050  
                        __size_of_LCD_Init 0034                         DHT11_ReadData@data 0002  
                  DatosSensorTH@T_Integral 0006                    ?_Comparar_T_H_Adecuados 0003  
             __size_of_DatoDigitadoAEntero 0076                              _DatosSensorTH 1C42  
                            ??_LCD_Command 0001                         _MostrarTemperatura 17AE  
                              vfpfcnvrt@ap 0044                                vfpfcnvrt@fp 0040  
                              vfpfcnvrt@ll 0048                             __end_of___wmul 1D9C  
                      ?_MostrarTemperatura 00BA                             __end_of_strlen 1CEC  
                      start_initialization 1C80                                __end_of_abs 1C02  
                              __end_of_pad 15D6                                  _PedirDato 1690  
        Comparar_T_H_Adecuados@HumDigitada 0009                                _DHT11_Start 1D9C  
              __end_of_DHT11_CheckResponse 1D4C                       ??_MostrarTemperatura 005E  
                    __end_of_LCD_String_xy 1C42          DatoDigitadoAEntero@prmTemperatura 0007  
           __end_of_Comparar_T_H_Adecuados 1446                                vfprintf@fmt 0052  
                             ??_PrenderLed 0002                             ?_DatosSensorTH 0003  
                                 ??___wmul 0005                              ??_initTeclado 0001  
                              __pdataBANK0 00A5                     ??_ConfigurarPuertosLCD 0001  
                                 ??_strlen 0003                        __end_of_LCD_Command 1AF2  
                            __pcstackBANK0 00B2                           ___aodiv@dividend 0001  
                       _ApagarVentiladores 1DE2                                ??_LCD_Clear 0003  
                               ?_PedirDato 000A                         PedirDato@vecLlenar 000C  
                       __end_of_PrenderLed 1A00              MostrarTemperatura@Temperatura 00BC  
                      ?_ApagarVentiladores 0001        ControlHumedadAspersor@HumedadActual 0001  
                                 ?___aodiv 0001                                   ?___aomod 0001  
                         ___aodiv@quotient 0013                   ??_ControlHumedadAspersor 0007  
                     ??_ApagarVentiladores 0001                             _DHT11_ReadData 194E  
                        __size_of_vfprintf 0062                                __smallconst 0800  
                      __end_of_initTeclado 1DFE                                   ?_keyfind 0001  
                    LCD_String_xy@location 0009                                   ?_sprintf 0058  
                           __size_of_fputc 00CA                             __size_of_fputs 0044  
                           __size_of_putch 0002     ControlTemperaturaVentilador@TempActual 0001  
                                 _LCD_Char 1A52                           ??_MostrarHumedad 005E  
                                 _LCD_Init 1CEC                             ___wmul@product 0005  
                          ??_DatosSensorTH 0005                           ??_initActuadores 0001  
                   __end_of_DHT11_ReadData 19AA                                _LCD_Command 1AA2  
                                _vfpfcnvrt 0D50                          ___wmul@multiplier 0001  
       Comparar_T_H_Adecuados@MargenErrorH 000D         Comparar_T_H_Adecuados@MargenErrorT 000B  
                              ??_PedirDato 0010                        _DatoDigitadoAEntero 1738  
                              _INTCON2bits 000FF1                                  copy_data0 1C94  
             __size_of_PrenderVentiladores 0006                                   _MargenEH 006C  
                                 _MargenET 006E                          ?_ApagarAspersores 0001  
                                 __Hrparam 0000      ControlHumedadAspersor@HumedadDigitada 0003  
                       ??_ApagarAspersores 0001                                 vfprintf@ap 0054  
                                 __Lrparam 0000                                 vfprintf@fp 0050  
                 MostrarTemperatura@Cadena 00BA                       ?_DatoDigitadoAEntero 0007  
                          ?_DHT11_ReadData 0001                                _initTeclado 1DFA  
                         __size_of___aodiv 0188                           __size_of___aomod 0164  
                               ?_vfpfcnvrt 0040                __size_of_PedirTodosLosDatos 00BA  
          __size_of_ControlHumedadAspersor 0046                            DHT11_ReadData@i 0001  
                          ___aodiv@divisor 0009                            ___aodiv@counter 0011  
Comparar_T_H_Adecuados@TemperaturaAdecuada 0014                                 sprintf@fmt 005A  
                         __size_of_keyfind 021E                                   _dtoa$946 002E  
                                 __ptext10 188E                                   __ptext11 0D50  
                                 __ptext20 0F04                                   __ptext12 0850  
                                 __ptext21 1C02                                   __ptext13 1510  
                                 __ptext30 1738                                   __ptext22 18F0  
                                 __ptext14 1CB6                                   __ptext31 1D76  
                                 __ptext23 1A52                                   __ptext15 1B7E  
                                 __ptext40 19AA                                   __ptext32 1AF2  
                                 __ptext24 1CEC                                   __ptext16 1446  
                                 __ptext41 1DD4                                   __ptext33 1DDC  
                                 __ptext25 1AA2                                   __ptext17 1DFE  
                                 __ptext34 1DE2                                   __ptext26 1C42  
                                 __ptext18 1BC2                                   __ptext35 1B38  
                                 __ptext27 1D9C                                   __ptext19 108C  
                                 __ptext36 1DE8                                   __ptext28 194E  
                                 __ptext37 1DEE                                   __ptext29 1D20  
                                 __ptext38 1DF4                                   __ptext39 134A  
                         __size_of_sprintf 0052                   DatosSensorTH@RH_Integral 0005  
                            __size_of_main 015A                              __size_of_dtoa 02E2  
                             ?_DHT11_Start 0001                                   _temp_col 0070  
                                 isa$xinst 000000                      ??_DatoDigitadoAEntero 0009  
                                 _vfprintf 188E                                 _LCD_String 18F0  
                DatoDigitadoAEntero@Decena 000E                           ___aomod@dividend 0001  
                          _HumedadAdecuada 0068                  DatoDigitadoAEntero@Unidad 000A  
                   _ControlHumedadAspersor 1B38                                  sprintf@ap 00B2  
                PrenderLed@HumedadAdecuada 0001         ControlHumedadAspersor@MargenErrorH 0005  
              __size_of_MostrarTemperatura 0070               __size_of_DHT11_CheckResponse 002C  
                          ___aomod@divisor 0009                                ??_vfpfcnvrt 0046  
                          ___aomod@counter 0011                                   sprintf@f 00B4  
                                 sprintf@s 0058                        _TemperaturaAdecuada 006A  
            __size_of_ConfigurarPuertosLCD 0006                     __size_of_LCD_String_xy 0040  
                             ___aodiv@sign 0012                               ___aomod@sign 0012  
