

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Oct 11 14:54:08 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    58  0000                     
    59                           ; Version 2.20
    60                           ; Generated 12/02/2020 GMT
    61                           ; 
    62                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F4550 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     
    94                           	psect	idataBANK0
    95  001DBC                     __pidataBANK0:
    96                           	callstack 0
    97                           
    98                           ;initializer for _keypad
    99  001DBC  31                 	db	49
   100  001DBD  32                 	db	50
   101  001DBE  33                 	db	51
   102  001DBF  34                 	db	52
   103  001DC0  35                 	db	53
   104  001DC1  36                 	db	54
   105  001DC2  37                 	db	55
   106  001DC3  38                 	db	56
   107  001DC4  39                 	db	57
   108  001DC5  2A                 	db	42
   109  001DC6  30                 	db	48
   110  001DC7  23                 	db	35
   111                           
   112                           ;initializer for _PrimeraVez
   113  001DC8  01                 	db	1
   114  0000                     _TRISE	set	3990
   115  0000                     _TRISC	set	3988
   116  0000                     _TRISAbits	set	3986
   117  0000                     _PORTAbits	set	3968
   118  0000                     _PORTB	set	3969
   119  0000                     _LATB	set	3978
   120  0000                     _TRISB	set	3987
   121  0000                     _INTCON2bits	set	4081
   122  0000                     _LATD	set	3980
   123  0000                     _TRISD	set	3989
   124  0000                     _ADCON1	set	4033
   125  0000                     _OSCCON	set	4051
   126  0000                     _LATE2	set	31850
   127  0000                     _LATE0	set	31848
   128  0000                     _LATE1	set	31849
   129  0000                     _LATC6	set	31838
   130  0000                     _LATC2	set	31834
   131  0000                     _LATC1	set	31833
   132  0000                     _LATC0	set	31832
   133  0000                     _LATA0	set	31816
   134  0000                     _RBPU	set	32655
   135  0000                     _LATD1	set	31841
   136  0000                     _LATD0	set	31840
   137                           
   138                           	psect	smallconst
   139  000800                     __psmallconst:
   140                           	callstack 0
   141  000800  00                 	db	0
   142  000801                     STR_1:
   143  000801  54                 	db	84	;'T'
   144  000802  65                 	db	101	;'e'
   145  000803  6D                 	db	109	;'m'
   146  000804  70                 	db	112	;'p'
   147  000805  2E                 	db	46
   148  000806  20                 	db	32
   149  000807  41                 	db	65	;'A'
   150  000808  64                 	db	100	;'d'
   151  000809  65                 	db	101	;'e'
   152  00080A  63                 	db	99	;'c'
   153  00080B  75                 	db	117	;'u'
   154  00080C  61                 	db	97	;'a'
   155  00080D  64                 	db	100	;'d'
   156  00080E  61                 	db	97	;'a'
   157  00080F  00                 	db	0
   158  000810                     STR_2:
   159  000810  4D                 	db	77	;'M'
   160  000811  67                 	db	103	;'g'
   161  000812  6E                 	db	110	;'n'
   162  000813  20                 	db	32
   163  000814  45                 	db	69	;'E'
   164  000815  72                 	db	114	;'r'
   165  000816  72                 	db	114	;'r'
   166  000817  6F                 	db	111	;'o'
   167  000818  72                 	db	114	;'r'
   168  000819  20                 	db	32
   169  00081A  54                 	db	84	;'T'
   170  00081B  65                 	db	101	;'e'
   171  00081C  6D                 	db	109	;'m'
   172  00081D  70                 	db	112	;'p'
   173  00081E  00                 	db	0
   174  00081F                     STR_3:
   175  00081F  48                 	db	72	;'H'
   176  000820  75                 	db	117	;'u'
   177  000821  6D                 	db	109	;'m'
   178  000822  2E                 	db	46
   179  000823  20                 	db	32
   180  000824  41                 	db	65	;'A'
   181  000825  64                 	db	100	;'d'
   182  000826  65                 	db	101	;'e'
   183  000827  63                 	db	99	;'c'
   184  000828  75                 	db	117	;'u'
   185  000829  61                 	db	97	;'a'
   186  00082A  64                 	db	100	;'d'
   187  00082B  61                 	db	97	;'a'
   188  00082C  00                 	db	0
   189  00082D                     STR_4:
   190  00082D  4D                 	db	77	;'M'
   191  00082E  67                 	db	103	;'g'
   192  00082F  6E                 	db	110	;'n'
   193  000830  20                 	db	32
   194  000831  45                 	db	69	;'E'
   195  000832  72                 	db	114	;'r'
   196  000833  72                 	db	114	;'r'
   197  000834  6F                 	db	111	;'o'
   198  000835  72                 	db	114	;'r'
   199  000836  20                 	db	32
   200  000837  48                 	db	72	;'H'
   201  000838  75                 	db	117	;'u'
   202  000839  6D                 	db	109	;'m'
   203  00083A  00                 	db	0
   204  00083B                     STR_10:
   205  00083B  43                 	db	67	;'C'
   206  00083C  20                 	db	32
   207  00083D  54                 	db	84	;'T'
   208  00083E  65                 	db	101	;'e'
   209  00083F  6D                 	db	109	;'m'
   210  000840  70                 	db	112	;'p'
   211  000841  2E                 	db	46
   212  000842  00                 	db	0
   213  000843                     STR_7:
   214  000843  20                 	db	32
   215  000844  20                 	db	32
   216  000845  48                 	db	72	;'H'
   217  000846  75                 	db	117	;'u'
   218  000847  6D                 	db	109	;'m'
   219  000848  2E                 	db	46
   220  000849  00                 	db	0
   221  00084A                     STR_6:
   222  00084A  2E                 	db	46
   223  00084B  25                 	db	37
   224  00084C  64                 	db	100	;'d'
   225  00084D  00                 	db	0
   226  00084E  00                 	db	0	; dummy byte at the end
   227  0000                     
   228                           ; #config settings
   229                           
   230                           	psect	cinit
   231  001C80                     __pcinit:
   232                           	callstack 0
   233  001C80                     start_initialization:
   234                           	callstack 0
   235  001C80                     __initialization:
   236                           	callstack 0
   237                           
   238                           ; Initialize objects allocated to BANK0 (13 bytes)
   239                           ; load TBLPTR registers with __pidataBANK0
   240  001C80  0EBC               	movlw	low __pidataBANK0
   241  001C82  6EF6               	movwf	tblptrl,c
   242  001C84  0E1D               	movlw	high __pidataBANK0
   243  001C86  6EF7               	movwf	tblptrh,c
   244  001C88  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   245  001C8A  6EF8               	movwf	tblptru,c
   246  001C8C  EE00  F0A5         	lfsr	0,__pdataBANK0
   247  001C90  EE10 F00D          	lfsr	1,13
   248  001C94                     copy_data0:
   249  001C94  0009               	tblrd		*+
   250  001C96  CFF5 FFEE          	movff	tablat,postinc0
   251  001C9A  50E5               	movf	postdec1,w,c
   252  001C9C  50E1               	movf	fsr1l,w,c
   253  001C9E  E1FA               	bnz	copy_data0
   254                           
   255                           ; Clear objects allocated to BANK0 (69 bytes)
   256  001CA0  EE00  F060         	lfsr	0,__pbssBANK0
   257  001CA4  0E45               	movlw	69
   258  001CA6                     clear_0:
   259  001CA6  6AEE               	clrf	postinc0,c
   260  001CA8  06E8               	decf	wreg,f,c
   261  001CAA  E1FD               	bnz	clear_0
   262  001CAC                     end_of_initialization:
   263                           	callstack 0
   264  001CAC                     __end_of__initialization:
   265                           	callstack 0
   266  001CAC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   267  001CAE  6EF8               	movwf	tblptru,c
   268  001CB0  0100               	movlb	0
   269  001CB2  EFF8  F008         	goto	_main	;jump to C main() function
   270                           
   271                           	psect	bssBANK0
   272  000060                     __pbssBANK0:
   273                           	callstack 0
   274  000060                     _nout:
   275                           	callstack 0
   276  000060                     	ds	2
   277  000062                     _width:
   278                           	callstack 0
   279  000062                     	ds	2
   280  000064                     _prec:
   281                           	callstack 0
   282  000064                     	ds	2
   283  000066                     _flags:
   284                           	callstack 0
   285  000066                     	ds	2
   286  000068                     _HumedadAdecuada:
   287                           	callstack 0
   288  000068                     	ds	2
   289  00006A                     _TemperaturaAdecuada:
   290                           	callstack 0
   291  00006A                     	ds	2
   292  00006C                     _MargenEH:
   293                           	callstack 0
   294  00006C                     	ds	2
   295  00006E                     _MargenET:
   296                           	callstack 0
   297  00006E                     	ds	2
   298  000070                     _temp_col:
   299                           	callstack 0
   300  000070                     	ds	1
   301  000071                     _rowloc:
   302                           	callstack 0
   303  000071                     	ds	1
   304  000072                     _col_loc:
   305                           	callstack 0
   306  000072                     	ds	1
   307  000073                     _dbuf:
   308                           	callstack 0
   309  000073                     	ds	32
   310  000093                     _Cadena:
   311                           	callstack 0
   312  000093                     	ds	10
   313  00009D                     _Datos:
   314                           	callstack 0
   315  00009D                     	ds	2
   316  00009F                     _Humedad:
   317                           	callstack 0
   318  00009F                     	ds	2
   319  0000A1                     _Temperatura:
   320                           	callstack 0
   321  0000A1                     	ds	2
   322  0000A3                     _MargenErrorH:
   323                           	callstack 0
   324  0000A3                     	ds	1
   325  0000A4                     _MargenErrorT:
   326                           	callstack 0
   327  0000A4                     	ds	1
   328                           
   329                           	psect	dataBANK0
   330  0000A5                     __pdataBANK0:
   331                           	callstack 0
   332  0000A5                     _keypad:
   333                           	callstack 0
   334  0000A5                     	ds	12
   335  0000B1                     _PrimeraVez:
   336                           	callstack 0
   337  0000B1                     	ds	1
   338                           
   339                           	psect	cstackBANK0
   340  0000B2                     __pcstackBANK0:
   341                           	callstack 0
   342  0000B2                     sprintf@ap:
   343                           	callstack 0
   344                           
   345                           ; 2 bytes @ 0x0
   346  0000B2                     	ds	2
   347  0000B4                     sprintf@f:
   348                           	callstack 0
   349                           
   350                           ; 6 bytes @ 0x2
   351  0000B4                     	ds	6
   352  0000BA                     MostrarHumedad@Cadena:
   353                           	callstack 0
   354  0000BA                     MostrarTemperatura@Cadena:
   355                           	callstack 0
   356                           
   357                           ; 2 bytes @ 0x8
   358  0000BA                     	ds	2
   359  0000BC                     MostrarHumedad@Humedad:
   360                           	callstack 0
   361  0000BC                     MostrarTemperatura@Temperatura:
   362                           	callstack 0
   363                           
   364                           ; 1 bytes @ 0xA
   365  0000BC                     	ds	1
   366                           
   367                           	psect	cstackCOMRAM
   368  000001                     __pcstackCOMRAM:
   369                           	callstack 0
   370  000001                     ??_LCD_Command:
   371  000001                     ??_keyfind:
   372  000001                     ??_LCD_Char:
   373  000001                     ??_DHT11_Start:
   374  000001                     ?_strlen:
   375                           	callstack 0
   376  000001                     ?___wmul:
   377                           	callstack 0
   378  000001                     ?___aodiv:
   379                           	callstack 0
   380  000001                     ?___aomod:
   381                           	callstack 0
   382  000001                     DHT11_ReadData@i:
   383                           	callstack 0
   384  000001                     PrenderLed@HumedadAdecuada:
   385                           	callstack 0
   386  000001                     ControlHumedadAspersor@HumedadActual:
   387                           	callstack 0
   388  000001                     ControlTemperaturaVentilador@TempActual:
   389                           	callstack 0
   390  000001                     ___wmul@multiplier:
   391                           	callstack 0
   392  000001                     fputc@c:
   393                           	callstack 0
   394  000001                     strlen@s:
   395                           	callstack 0
   396  000001                     ___aodiv@dividend:
   397                           	callstack 0
   398  000001                     ___aomod@dividend:
   399                           	callstack 0
   400                           
   401                           ; 8 bytes @ 0x0
   402  000001                     	ds	1
   403  000002                     LCD_Command@cmd:
   404                           	callstack 0
   405  000002                     LCD_Char@dat:
   406                           	callstack 0
   407  000002                     DHT11_ReadData@data:
   408                           	callstack 0
   409  000002                     PrenderLed@TemperaturaAdecuada:
   410                           	callstack 0
   411                           
   412                           ; 1 bytes @ 0x1
   413  000002                     	ds	1
   414  000003                     ??_LCD_Init:
   415  000003                     ??_LCD_Clear:
   416  000003                     LCD_String@msg:
   417                           	callstack 0
   418  000003                     DatosSensorTH@Datos:
   419                           	callstack 0
   420  000003                     Comparar_T_H_Adecuados@TempActual:
   421                           	callstack 0
   422  000003                     ControlHumedadAspersor@HumedadDigitada:
   423                           	callstack 0
   424  000003                     ControlTemperaturaVentilador@TempDigitada:
   425                           	callstack 0
   426  000003                     ___wmul@multiplicand:
   427                           	callstack 0
   428  000003                     fputc@fp:
   429                           	callstack 0
   430  000003                     strlen@a:
   431                           	callstack 0
   432                           
   433                           ; 2 bytes @ 0x2
   434  000003                     	ds	2
   435  000005                     ??_fputc:
   436  000005                     LCD_String_xy@pos:
   437                           	callstack 0
   438  000005                     DatosSensorTH@RH_Integral:
   439                           	callstack 0
   440  000005                     Comparar_T_H_Adecuados@HumActual:
   441                           	callstack 0
   442  000005                     ControlHumedadAspersor@MargenErrorH:
   443                           	callstack 0
   444  000005                     ControlTemperaturaVentilador@MargenErrorT:
   445                           	callstack 0
   446  000005                     ___wmul@product:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0x4
   450  000005                     	ds	1
   451  000006                     DatosSensorTH@T_Integral:
   452                           	callstack 0
   453  000006                     LCD_String_xy@msg:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0x5
   457  000006                     	ds	1
   458  000007                     ??_ControlHumedadAspersor:
   459  000007                     ??_ControlTemperaturaVentilador:
   460  000007                     ?_DatoDigitadoAEntero:
   461                           	callstack 0
   462  000007                     DatoDigitadoAEntero@prmTemperatura:
   463                           	callstack 0
   464  000007                     Comparar_T_H_Adecuados@TempDigitada:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x6
   468  000007                     	ds	1
   469  000008                     LCD_String_xy@row:
   470                           	callstack 0
   471                           
   472                           ; 1 bytes @ 0x7
   473  000008                     	ds	1
   474  000009                     ??_DatoDigitadoAEntero:
   475  000009                     LCD_String_xy@location:
   476                           	callstack 0
   477  000009                     Comparar_T_H_Adecuados@HumDigitada:
   478                           	callstack 0
   479  000009                     ___aodiv@divisor:
   480                           	callstack 0
   481  000009                     ___aomod@divisor:
   482                           	callstack 0
   483                           
   484                           ; 8 bytes @ 0x8
   485  000009                     	ds	1
   486  00000A                     PedirDato@Etiqueta:
   487                           	callstack 0
   488  00000A                     DatoDigitadoAEntero@Unidad:
   489                           	callstack 0
   490  00000A                     fputs@s:
   491                           	callstack 0
   492                           
   493                           ; 2 bytes @ 0x9
   494  00000A                     	ds	1
   495  00000B                     Comparar_T_H_Adecuados@MargenErrorT:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0xA
   499  00000B                     	ds	1
   500  00000C                     PedirDato@vecLlenar:
   501                           	callstack 0
   502  00000C                     DatoDigitadoAEntero@Resultado:
   503                           	callstack 0
   504  00000C                     fputs@fp:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0xB
   508  00000C                     	ds	1
   509  00000D                     Comparar_T_H_Adecuados@MargenErrorH:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0xC
   513  00000D                     	ds	1
   514  00000E                     fputs@c:
   515                           	callstack 0
   516  00000E                     PedirDato@CantDatos:
   517                           	callstack 0
   518  00000E                     DatoDigitadoAEntero@Decena:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0xD
   522  00000E                     	ds	1
   523  00000F                     ??_Comparar_T_H_Adecuados:
   524  00000F                     fputs@i:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0xE
   528  00000F                     	ds	1
   529  000010                     ??_PedirDato:
   530                           
   531                           ; 1 bytes @ 0xF
   532  000010                     	ds	1
   533  000011                     ?_pad:
   534                           	callstack 0
   535  000011                     ___aodiv@counter:
   536                           	callstack 0
   537  000011                     ___aomod@counter:
   538                           	callstack 0
   539  000011                     pad@fp:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0x10
   543  000011                     	ds	1
   544  000012                     ___aodiv@sign:
   545                           	callstack 0
   546  000012                     ___aomod@sign:
   547                           	callstack 0
   548  000012                     PedirDato@i:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x11
   552  000012                     	ds	1
   553  000013                     ?_abs:
   554                           	callstack 0
   555  000013                     pad@buf:
   556                           	callstack 0
   557  000013                     abs@a:
   558                           	callstack 0
   559  000013                     ___aodiv@quotient:
   560                           	callstack 0
   561                           
   562                           ; 8 bytes @ 0x12
   563  000013                     	ds	1
   564  000014                     PedirDato@tecla:
   565                           	callstack 0
   566  000014                     Comparar_T_H_Adecuados@TemperaturaAdecuada:
   567                           	callstack 0
   568                           
   569                           ; 1 bytes @ 0x13
   570  000014                     	ds	1
   571  000015                     ??_abs:
   572  000015                     Comparar_T_H_Adecuados@HumedadAdecuada:
   573                           	callstack 0
   574  000015                     PedirTodosLosDatos@Temperatura:
   575                           	callstack 0
   576  000015                     pad@p:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x14
   580  000015                     	ds	2
   581  000017                     ??_pad:
   582  000017                     PedirTodosLosDatos@Humedad:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x16
   586  000017                     	ds	1
   587  000018                     pad@i:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x17
   591  000018                     	ds	1
   592  000019                     PedirTodosLosDatos@MargenErrorT:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0x18
   596  000019                     	ds	1
   597  00001A                     pad@w:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x19
   601  00001A                     	ds	1
   602  00001B                     PedirTodosLosDatos@MargenErrorH:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x1A
   606  00001B                     	ds	1
   607  00001C                     ?_dtoa:
   608                           	callstack 0
   609  00001C                     dtoa@fp:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x1B
   613  00001C                     	ds	1
   614  00001D                     ??_PedirTodosLosDatos:
   615                           
   616                           ; 1 bytes @ 0x1C
   617  00001D                     	ds	1
   618  00001E                     dtoa@d:
   619                           	callstack 0
   620                           
   621                           ; 8 bytes @ 0x1D
   622  00001E                     	ds	8
   623  000026                     ??_dtoa:
   624                           
   625                           ; 1 bytes @ 0x25
   626  000026                     	ds	8
   627  00002E                     _dtoa$946:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x2D
   631  00002E                     	ds	2
   632  000030                     dtoa@p:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x2F
   636  000030                     	ds	2
   637  000032                     dtoa@w:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0x31
   641  000032                     	ds	2
   642  000034                     dtoa@s:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x33
   646  000034                     	ds	2
   647  000036                     dtoa@n:
   648                           	callstack 0
   649                           
   650                           ; 8 bytes @ 0x35
   651  000036                     	ds	8
   652  00003E                     dtoa@i:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x3D
   656  00003E                     	ds	2
   657  000040                     ?_vfpfcnvrt:
   658                           	callstack 0
   659  000040                     vfpfcnvrt@fp:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x3F
   663  000040                     	ds	2
   664  000042                     vfpfcnvrt@fmt:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0x41
   668  000042                     	ds	2
   669  000044                     vfpfcnvrt@ap:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x43
   673  000044                     	ds	2
   674  000046                     ??_vfpfcnvrt:
   675                           
   676                           ; 1 bytes @ 0x45
   677  000046                     	ds	2
   678  000048                     vfpfcnvrt@ll:
   679                           	callstack 0
   680                           
   681                           ; 8 bytes @ 0x47
   682  000048                     	ds	8
   683  000050                     ?_vfprintf:
   684                           	callstack 0
   685  000050                     vfprintf@fp:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x4F
   689  000050                     	ds	2
   690  000052                     vfprintf@fmt:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x51
   694  000052                     	ds	2
   695  000054                     vfprintf@ap:
   696                           	callstack 0
   697                           
   698                           ; 2 bytes @ 0x53
   699  000054                     	ds	2
   700  000056                     vfprintf@cfmt:
   701                           	callstack 0
   702                           
   703                           ; 2 bytes @ 0x55
   704  000056                     	ds	2
   705  000058                     ?_sprintf:
   706                           	callstack 0
   707  000058                     sprintf@s:
   708                           	callstack 0
   709                           
   710                           ; 2 bytes @ 0x57
   711  000058                     	ds	2
   712  00005A                     sprintf@fmt:
   713                           	callstack 0
   714                           
   715                           ; 2 bytes @ 0x59
   716  00005A                     	ds	4
   717  00005E                     ??_main:
   718                           
   719                           ; 1 bytes @ 0x5D
   720  00005E                     	ds	2
   721                           
   722 ;;
   723 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   724 ;;
   725 ;; *************** function _main *****************
   726 ;; Defined at:
   727 ;;		line 12 in file "Main_Invernadero.c"
   728 ;; Parameters:    Size  Location     Type
   729 ;;		None
   730 ;; Auto vars:     Size  Location     Type
   731 ;;		None
   732 ;; Return value:  Size  Location     Type
   733 ;;                  1    wreg      void 
   734 ;; Registers used:
   735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   736 ;; Tracked objects:
   737 ;;		On entry : 0/0
   738 ;;		On exit  : 0/0
   739 ;;		Unchanged: 0/0
   740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   741 ;;      Params:         0       0       0       0       0       0       0       0       0
   742 ;;      Locals:         0       0       0       0       0       0       0       0       0
   743 ;;      Temps:          2       0       0       0       0       0       0       0       0
   744 ;;      Totals:         2       0       0       0       0       0       0       0       0
   745 ;;Total ram usage:        2 bytes
   746 ;; Hardware stack levels required when called: 9
   747 ;; This function calls:
   748 ;;		_ApagarAspersores
   749 ;;		_ApagarLeds
   750 ;;		_ApagarVentiladores
   751 ;;		_Comparar_T_H_Adecuados
   752 ;;		_ConfigurarPuertosLCD
   753 ;;		_ControlHumedadAspersor
   754 ;;		_ControlTemperaturaVentilador
   755 ;;		_DatoDigitadoAEntero
   756 ;;		_DatosSensorTH
   757 ;;		_LCD_Init
   758 ;;		_MostrarHumedad
   759 ;;		_MostrarTemperatura
   760 ;;		_PedirTodosLosDatos
   761 ;;		_initActuadores
   762 ;;		_initTeclado
   763 ;; This function is called by:
   764 ;;		Startup code after reset
   765 ;; This function uses a non-reentrant model
   766 ;;
   767                           
   768                           	psect	text0
   769  0011F0                     __ptext0:
   770                           	callstack 0
   771  0011F0                     _main:
   772                           	callstack 22
   773  0011F0  0E70               	movlw	112
   774  0011F2  6ED3               	movwf	211,c	;volatile
   775  0011F4  0E0F               	movlw	15
   776  0011F6  6EC1               	movwf	193,c	;volatile
   777  0011F8  ECFA  F00E         	call	_ConfigurarPuertosLCD	;wreg free
   778  0011FC  ECE5  F00E         	call	_initActuadores	;wreg free
   779  001200  EC76  F00E         	call	_LCD_Init	;wreg free
   780  001204  ECFD  F00E         	call	_initTeclado	;wreg free
   781  001208  ECF7  F00E         	call	_ApagarAspersores	;wreg free
   782  00120C  ECF1  F00E         	call	_ApagarVentiladores	;wreg free
   783  001210  ECEA  F00E         	call	_ApagarLeds	;wreg free
   784  001214                     l2405:
   785  001214  0100               	movlb	0	; () banked
   786  001216  05B1               	decf	_PrimeraVez& (0+255),w,b
   787  001218  A4D8               	btfss	status,2,c
   788  00121A  EF11  F009         	goto	u1681
   789  00121E  EF13  F009         	goto	u1680
   790  001222                     u1681:
   791  001222  EF48  F009         	goto	l2419
   792  001226                     u1680:
   793  001226                     
   794                           ; BSR set to: 0
   795  001226  0EA1               	movlw	low _Temperatura
   796  001228  6E15               	movwf	PedirTodosLosDatos@Temperatura^0,c
   797  00122A  0E00               	movlw	high _Temperatura
   798  00122C  6E16               	movwf	(PedirTodosLosDatos@Temperatura+1)^0,c
   799  00122E  0E9F               	movlw	low _Humedad
   800  001230  6E17               	movwf	PedirTodosLosDatos@Humedad^0,c
   801  001232  0E00               	movlw	high _Humedad
   802  001234  6E18               	movwf	(PedirTodosLosDatos@Humedad+1)^0,c
   803  001236  0EA4               	movlw	low _MargenErrorT
   804  001238  6E19               	movwf	PedirTodosLosDatos@MargenErrorT^0,c
   805  00123A  0E00               	movlw	high _MargenErrorT
   806  00123C  6E1A               	movwf	(PedirTodosLosDatos@MargenErrorT+1)^0,c
   807  00123E  0EA3               	movlw	low _MargenErrorH
   808  001240  6E1B               	movwf	PedirTodosLosDatos@MargenErrorH^0,c
   809  001242  0E00               	movlw	high _MargenErrorH
   810  001244  6E1C               	movwf	(PedirTodosLosDatos@MargenErrorH+1)^0,c
   811  001246  ECEB  F00A         	call	_PedirTodosLosDatos	;wreg free
   812  00124A  0EA1               	movlw	low _Temperatura
   813  00124C  6E07               	movwf	DatoDigitadoAEntero@prmTemperatura^0,c
   814  00124E  0E00               	movlw	high _Temperatura
   815  001250  6E08               	movwf	(DatoDigitadoAEntero@prmTemperatura+1)^0,c
   816  001252  EC9C  F00B         	call	_DatoDigitadoAEntero	;wreg free
   817  001256  C007  F06A         	movff	?_DatoDigitadoAEntero,_TemperaturaAdecuada
   818  00125A  C008  F06B         	movff	?_DatoDigitadoAEntero+1,_TemperaturaAdecuada+1
   819  00125E  0E9F               	movlw	low _Humedad
   820  001260  6E07               	movwf	DatoDigitadoAEntero@prmTemperatura^0,c
   821  001262  0E00               	movlw	high _Humedad
   822  001264  6E08               	movwf	(DatoDigitadoAEntero@prmTemperatura+1)^0,c
   823  001266  EC9C  F00B         	call	_DatoDigitadoAEntero	;wreg free
   824  00126A  C007  F068         	movff	?_DatoDigitadoAEntero,_HumedadAdecuada
   825  00126E  C008  F069         	movff	?_DatoDigitadoAEntero+1,_HumedadAdecuada+1
   826  001272  0ED0               	movlw	208
   827  001274  0100               	movlb	0	; () banked
   828  001276  25A4               	addwf	_MargenErrorT& (0+255),w,b
   829  001278  6F6E               	movwf	_MargenET& (0+255),b
   830  00127A  6B6F               	clrf	(_MargenET+1)& (0+255),b
   831  00127C  0EFF               	movlw	255
   832  00127E  236F               	addwfc	(_MargenET+1)& (0+255),f,b
   833  001280                     
   834                           ; BSR set to: 0
   835  001280  0ED0               	movlw	208
   836  001282  25A3               	addwf	_MargenErrorH& (0+255),w,b
   837  001284  6F6C               	movwf	_MargenEH& (0+255),b
   838  001286  6B6D               	clrf	(_MargenEH+1)& (0+255),b
   839  001288  0EFF               	movlw	255
   840  00128A  236D               	addwfc	(_MargenEH+1)& (0+255),f,b
   841  00128C                     
   842                           ; BSR set to: 0
   843  00128C  0E00               	movlw	0
   844  00128E  6FB1               	movwf	_PrimeraVez& (0+255),b
   845  001290                     l2419:
   846                           
   847                           ; BSR set to: 0
   848  001290  0E9D               	movlw	low _Datos
   849  001292  6E03               	movwf	DatosSensorTH@Datos^0,c
   850  001294  0E00               	movlw	high _Datos
   851  001296  6E04               	movwf	(DatosSensorTH@Datos+1)^0,c
   852  001298  EC21  F00E         	call	_DatosSensorTH	;wreg free
   853  00129C  0E9D               	movlw	low _Datos
   854  00129E  6E03               	movwf	Comparar_T_H_Adecuados@TempActual^0,c
   855  0012A0  0E00               	movlw	high _Datos
   856  0012A2  6E04               	movwf	(Comparar_T_H_Adecuados@TempActual+1)^0,c
   857  0012A4  0E9E               	movlw	low (_Datos+1)
   858  0012A6  6E05               	movwf	Comparar_T_H_Adecuados@HumActual^0,c
   859  0012A8  0E00               	movlw	high (_Datos+1)
   860  0012AA  6E06               	movwf	(Comparar_T_H_Adecuados@HumActual+1)^0,c
   861  0012AC  C06A  F007         	movff	_TemperaturaAdecuada,Comparar_T_H_Adecuados@TempDigitada
   862  0012B0  C06B  F008         	movff	_TemperaturaAdecuada+1,Comparar_T_H_Adecuados@TempDigitada+1
   863  0012B4  C068  F009         	movff	_HumedadAdecuada,Comparar_T_H_Adecuados@HumDigitada
   864  0012B8  C069  F00A         	movff	_HumedadAdecuada+1,Comparar_T_H_Adecuados@HumDigitada+1
   865  0012BC  C06E  F00B         	movff	_MargenET,Comparar_T_H_Adecuados@MargenErrorT
   866  0012C0  C06F  F00C         	movff	_MargenET+1,Comparar_T_H_Adecuados@MargenErrorT+1
   867  0012C4  C06C  F00D         	movff	_MargenEH,Comparar_T_H_Adecuados@MargenErrorH
   868  0012C8  C06D  F00E         	movff	_MargenEH+1,Comparar_T_H_Adecuados@MargenErrorH+1
   869  0012CC  ECA5  F009         	call	_Comparar_T_H_Adecuados	;wreg free
   870  0012D0  0E9E               	movlw	low (_Datos+1)
   871  0012D2  6E01               	movwf	ControlHumedadAspersor@HumedadActual^0,c
   872  0012D4  0E00               	movlw	high (_Datos+1)
   873  0012D6  6E02               	movwf	(ControlHumedadAspersor@HumedadActual+1)^0,c
   874  0012D8  C068  F003         	movff	_HumedadAdecuada,ControlHumedadAspersor@HumedadDigitada
   875  0012DC  C069  F004         	movff	_HumedadAdecuada+1,ControlHumedadAspersor@HumedadDigitada+1
   876  0012E0  C06C  F005         	movff	_MargenEH,ControlHumedadAspersor@MargenErrorH
   877  0012E4  C06D  F006         	movff	_MargenEH+1,ControlHumedadAspersor@MargenErrorH+1
   878  0012E8  EC9C  F00D         	call	_ControlHumedadAspersor	;wreg free
   879  0012EC  0E9D               	movlw	low _Datos
   880  0012EE  6E01               	movwf	ControlTemperaturaVentilador@TempActual^0,c
   881  0012F0  0E00               	movlw	high _Datos
   882  0012F2  6E02               	movwf	(ControlTemperaturaVentilador@TempActual+1)^0,c
   883  0012F4  C06A  F003         	movff	_TemperaturaAdecuada,ControlTemperaturaVentilador@TempDigitada
   884  0012F8  C06B  F004         	movff	_TemperaturaAdecuada+1,ControlTemperaturaVentilador@TempDigitada+1
   885  0012FC  C06E  F005         	movff	_MargenET,ControlTemperaturaVentilador@MargenErrorT
   886  001300  C06F  F006         	movff	_MargenET+1,ControlTemperaturaVentilador@MargenErrorT+1
   887  001304  EC79  F00D         	call	_ControlTemperaturaVentilador	;wreg free
   888  001308  0E93               	movlw	low _Cadena
   889  00130A  0100               	movlb	0	; () banked
   890  00130C  6FBA               	movwf	MostrarHumedad@Cadena& (0+255),b
   891  00130E  0E00               	movlw	high _Cadena
   892  001310  6FBB               	movwf	(MostrarHumedad@Cadena+1)& (0+255),b
   893  001312  C09E  F0BC         	movff	_Datos+1,MostrarHumedad@Humedad
   894  001316  EC0F  F00C         	call	_MostrarHumedad	;wreg free
   895  00131A  0E93               	movlw	low _Cadena
   896  00131C  0100               	movlb	0	; () banked
   897  00131E  6FBA               	movwf	MostrarTemperatura@Cadena& (0+255),b
   898  001320  0E00               	movlw	high _Cadena
   899  001322  6FBB               	movwf	(MostrarTemperatura@Cadena+1)& (0+255),b
   900  001324  C09D  F0BC         	movff	_Datos,MostrarTemperatura@Temperatura
   901  001328  ECD7  F00B         	call	_MostrarTemperatura	;wreg free
   902  00132C  0E06               	movlw	6
   903  00132E  6E5F               	movwf	(??_main+1)^0,c
   904  001330  0E13               	movlw	19
   905  001332  6E5E               	movwf	??_main^0,c
   906  001334  0EAE               	movlw	174
   907  001336                     u1697:
   908  001336  2EE8               	decfsz	wreg,f,c
   909  001338  D7FE               	bra	u1697
   910  00133A  2E5E               	decfsz	??_main^0,f,c
   911  00133C  D7FC               	bra	u1697
   912  00133E  2E5F               	decfsz	(??_main+1)^0,f,c
   913  001340  D7FA               	bra	u1697
   914  001342  EF0A  F009         	goto	l2405
   915  001346  EF00  F000         	goto	start
   916  00134A                     __end_of_main:
   917                           	callstack 0
   918                           
   919 ;; *************** function _initTeclado *****************
   920 ;; Defined at:
   921 ;;		line 146 in file "keypad.c"
   922 ;; Parameters:    Size  Location     Type
   923 ;;		None
   924 ;; Auto vars:     Size  Location     Type
   925 ;;		None
   926 ;; Return value:  Size  Location     Type
   927 ;;                  1    wreg      void 
   928 ;; Registers used:
   929 ;;		None
   930 ;; Tracked objects:
   931 ;;		On entry : 0/0
   932 ;;		On exit  : 0/0
   933 ;;		Unchanged: 0/0
   934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   935 ;;      Params:         0       0       0       0       0       0       0       0       0
   936 ;;      Locals:         0       0       0       0       0       0       0       0       0
   937 ;;      Temps:          0       0       0       0       0       0       0       0       0
   938 ;;      Totals:         0       0       0       0       0       0       0       0       0
   939 ;;Total ram usage:        0 bytes
   940 ;; Hardware stack levels used: 1
   941 ;; This function calls:
   942 ;;		Nothing
   943 ;; This function is called by:
   944 ;;		_main
   945 ;; This function uses a non-reentrant model
   946 ;;
   947                           
   948                           	psect	text1
   949  001DFA                     __ptext1:
   950                           	callstack 0
   951  001DFA                     _initTeclado:
   952                           	callstack 30
   953  001DFA                     
   954                           ;keypad.c: 147:     RBPU=0;
   955  001DFA  9EF1               	bcf	4081,7,c	;volatile
   956  001DFC  0012               	return		;funcret
   957  001DFE                     __end_of_initTeclado:
   958                           	callstack 0
   959                           
   960 ;; *************** function _initActuadores *****************
   961 ;; Defined at:
   962 ;;		line 11 in file "Actuadores.c"
   963 ;; Parameters:    Size  Location     Type
   964 ;;		None
   965 ;; Auto vars:     Size  Location     Type
   966 ;;		None
   967 ;; Return value:  Size  Location     Type
   968 ;;                  1    wreg      void 
   969 ;; Registers used:
   970 ;;		wreg, status,2
   971 ;; Tracked objects:
   972 ;;		On entry : 0/0
   973 ;;		On exit  : 0/0
   974 ;;		Unchanged: 0/0
   975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   976 ;;      Params:         0       0       0       0       0       0       0       0       0
   977 ;;      Locals:         0       0       0       0       0       0       0       0       0
   978 ;;      Temps:          0       0       0       0       0       0       0       0       0
   979 ;;      Totals:         0       0       0       0       0       0       0       0       0
   980 ;;Total ram usage:        0 bytes
   981 ;; Hardware stack levels used: 1
   982 ;; This function calls:
   983 ;;		Nothing
   984 ;; This function is called by:
   985 ;;		_main
   986 ;; This function uses a non-reentrant model
   987 ;;
   988                           
   989                           	psect	text2
   990  001DCA                     __ptext2:
   991                           	callstack 0
   992  001DCA                     _initActuadores:
   993                           	callstack 30
   994  001DCA                     
   995                           ;Actuadores.c: 12:     TRISC=0x00;
   996  001DCA  0E00               	movlw	0
   997  001DCC  6E94               	movwf	148,c	;volatile
   998                           
   999                           ;Actuadores.c: 13:     TRISE = 0;
  1000  001DCE  0E00               	movlw	0
  1001  001DD0  6E96               	movwf	150,c	;volatile
  1002  001DD2  0012               	return		;funcret
  1003  001DD4                     __end_of_initActuadores:
  1004                           	callstack 0
  1005                           
  1006 ;; *************** function _PedirTodosLosDatos *****************
  1007 ;; Defined at:
  1008 ;;		line 132 in file "LCD.c"
  1009 ;; Parameters:    Size  Location     Type
  1010 ;;  Temperatura     2   20[COMRAM] PTR unsigned char 
  1011 ;;		 -> Temperatura(2), 
  1012 ;;  Humedad         2   22[COMRAM] PTR unsigned char 
  1013 ;;		 -> Humedad(2), 
  1014 ;;  MargenErrorT    2   24[COMRAM] PTR unsigned char 
  1015 ;;		 -> MargenErrorT(1), 
  1016 ;;  MargenErrorH    2   26[COMRAM] PTR unsigned char 
  1017 ;;		 -> MargenErrorH(1), 
  1018 ;; Auto vars:     Size  Location     Type
  1019 ;;		None
  1020 ;; Return value:  Size  Location     Type
  1021 ;;                  1    wreg      void 
  1022 ;; Registers used:
  1023 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1024 ;; Tracked objects:
  1025 ;;		On entry : 0/0
  1026 ;;		On exit  : 0/0
  1027 ;;		Unchanged: 0/0
  1028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1029 ;;      Params:         8       0       0       0       0       0       0       0       0
  1030 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1031 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1032 ;;      Totals:        10       0       0       0       0       0       0       0       0
  1033 ;;Total ram usage:       10 bytes
  1034 ;; Hardware stack levels used: 1
  1035 ;; Hardware stack levels required when called: 4
  1036 ;; This function calls:
  1037 ;;		_PedirDato
  1038 ;; This function is called by:
  1039 ;;		_main
  1040 ;; This function uses a non-reentrant model
  1041 ;;
  1042                           
  1043                           	psect	text3
  1044  0015D6                     __ptext3:
  1045                           	callstack 0
  1046  0015D6                     _PedirTodosLosDatos:
  1047                           	callstack 26
  1048  0015D6                     
  1049                           ;LCD.c: 133:        PedirDato("Temp. Adecuada",Temperatura,2);
  1050  0015D6  0E01               	movlw	low STR_1
  1051  0015D8  6E0A               	movwf	PedirDato@Etiqueta^0,c
  1052  0015DA  0E08               	movlw	high STR_1
  1053  0015DC  6E0B               	movwf	(PedirDato@Etiqueta+1)^0,c
  1054  0015DE  C015  F00C         	movff	PedirTodosLosDatos@Temperatura,PedirDato@vecLlenar
  1055  0015E2  C016  F00D         	movff	PedirTodosLosDatos@Temperatura+1,PedirDato@vecLlenar+1
  1056  0015E6  0E00               	movlw	0
  1057  0015E8  6E0F               	movwf	(PedirDato@CantDatos+1)^0,c
  1058  0015EA  0E02               	movlw	2
  1059  0015EC  6E0E               	movwf	PedirDato@CantDatos^0,c
  1060  0015EE  EC48  F00B         	call	_PedirDato	;wreg free
  1061  0015F2                     
  1062                           ;LCD.c: 134:        _delay((unsigned long)((100)*(8000000L/4000.0)));
  1063  0015F2  0E02               	movlw	2
  1064  0015F4  6E1E               	movwf	(??_PedirTodosLosDatos+1)^0,c
  1065  0015F6  0E04               	movlw	4
  1066  0015F8  6E1D               	movwf	??_PedirTodosLosDatos^0,c
  1067  0015FA  0EBA               	movlw	186
  1068  0015FC                     u1707:
  1069  0015FC  2EE8               	decfsz	wreg,f,c
  1070  0015FE  D7FE               	bra	u1707
  1071  001600  2E1D               	decfsz	??_PedirTodosLosDatos^0,f,c
  1072  001602  D7FC               	bra	u1707
  1073  001604  2E1E               	decfsz	(??_PedirTodosLosDatos+1)^0,f,c
  1074  001606  D7FA               	bra	u1707
  1075  001608  D000               	nop2	
  1076  00160A                     
  1077                           ;LCD.c: 135:        PedirDato("Mgn Error Temp",MargenErrorT,1);
  1078  00160A  0E10               	movlw	low STR_2
  1079  00160C  6E0A               	movwf	PedirDato@Etiqueta^0,c
  1080  00160E  0E08               	movlw	high STR_2
  1081  001610  6E0B               	movwf	(PedirDato@Etiqueta+1)^0,c
  1082  001612  C019  F00C         	movff	PedirTodosLosDatos@MargenErrorT,PedirDato@vecLlenar
  1083  001616  C01A  F00D         	movff	PedirTodosLosDatos@MargenErrorT+1,PedirDato@vecLlenar+1
  1084  00161A  0E00               	movlw	0
  1085  00161C  6E0F               	movwf	(PedirDato@CantDatos+1)^0,c
  1086  00161E  0E01               	movlw	1
  1087  001620  6E0E               	movwf	PedirDato@CantDatos^0,c
  1088  001622  EC48  F00B         	call	_PedirDato	;wreg free
  1089                           
  1090                           ;LCD.c: 136:         _delay((unsigned long)((100)*(8000000L/4000.0)));
  1091  001626  0E02               	movlw	2
  1092  001628  6E1E               	movwf	(??_PedirTodosLosDatos+1)^0,c
  1093  00162A  0E04               	movlw	4
  1094  00162C  6E1D               	movwf	??_PedirTodosLosDatos^0,c
  1095  00162E  0EBA               	movlw	186
  1096  001630                     u1717:
  1097  001630  2EE8               	decfsz	wreg,f,c
  1098  001632  D7FE               	bra	u1717
  1099  001634  2E1D               	decfsz	??_PedirTodosLosDatos^0,f,c
  1100  001636  D7FC               	bra	u1717
  1101  001638  2E1E               	decfsz	(??_PedirTodosLosDatos+1)^0,f,c
  1102  00163A  D7FA               	bra	u1717
  1103  00163C  D000               	nop2	
  1104  00163E                     
  1105                           ;LCD.c: 137:        PedirDato("Hum. Adecuada",Humedad,2);
  1106  00163E  0E1F               	movlw	low STR_3
  1107  001640  6E0A               	movwf	PedirDato@Etiqueta^0,c
  1108  001642  0E08               	movlw	high STR_3
  1109  001644  6E0B               	movwf	(PedirDato@Etiqueta+1)^0,c
  1110  001646  C017  F00C         	movff	PedirTodosLosDatos@Humedad,PedirDato@vecLlenar
  1111  00164A  C018  F00D         	movff	PedirTodosLosDatos@Humedad+1,PedirDato@vecLlenar+1
  1112  00164E  0E00               	movlw	0
  1113  001650  6E0F               	movwf	(PedirDato@CantDatos+1)^0,c
  1114  001652  0E02               	movlw	2
  1115  001654  6E0E               	movwf	PedirDato@CantDatos^0,c
  1116  001656  EC48  F00B         	call	_PedirDato	;wreg free
  1117  00165A                     
  1118                           ;LCD.c: 138:        _delay((unsigned long)((100)*(8000000L/4000.0)));
  1119  00165A  0E02               	movlw	2
  1120  00165C  6E1E               	movwf	(??_PedirTodosLosDatos+1)^0,c
  1121  00165E  0E04               	movlw	4
  1122  001660  6E1D               	movwf	??_PedirTodosLosDatos^0,c
  1123  001662  0EBA               	movlw	186
  1124  001664                     u1727:
  1125  001664  2EE8               	decfsz	wreg,f,c
  1126  001666  D7FE               	bra	u1727
  1127  001668  2E1D               	decfsz	??_PedirTodosLosDatos^0,f,c
  1128  00166A  D7FC               	bra	u1727
  1129  00166C  2E1E               	decfsz	(??_PedirTodosLosDatos+1)^0,f,c
  1130  00166E  D7FA               	bra	u1727
  1131  001670  D000               	nop2	
  1132                           
  1133                           ;LCD.c: 139:        PedirDato("Mgn Error Hum",MargenErrorH,1);
  1134  001672  0E2D               	movlw	low STR_4
  1135  001674  6E0A               	movwf	PedirDato@Etiqueta^0,c
  1136  001676  0E08               	movlw	high STR_4
  1137  001678  6E0B               	movwf	(PedirDato@Etiqueta+1)^0,c
  1138  00167A  C01B  F00C         	movff	PedirTodosLosDatos@MargenErrorH,PedirDato@vecLlenar
  1139  00167E  C01C  F00D         	movff	PedirTodosLosDatos@MargenErrorH+1,PedirDato@vecLlenar+1
  1140  001682  0E00               	movlw	0
  1141  001684  6E0F               	movwf	(PedirDato@CantDatos+1)^0,c
  1142  001686  0E01               	movlw	1
  1143  001688  6E0E               	movwf	PedirDato@CantDatos^0,c
  1144  00168A  EC48  F00B         	call	_PedirDato	;wreg free
  1145  00168E  0012               	return		;funcret
  1146  001690                     __end_of_PedirTodosLosDatos:
  1147                           	callstack 0
  1148                           
  1149 ;; *************** function _PedirDato *****************
  1150 ;; Defined at:
  1151 ;;		line 108 in file "LCD.c"
  1152 ;; Parameters:    Size  Location     Type
  1153 ;;  Etiqueta        2    9[COMRAM] PTR unsigned char 
  1154 ;;		 -> STR_4(14), STR_3(14), STR_2(15), STR_1(15), 
  1155 ;;  vecLlenar       2   11[COMRAM] PTR unsigned char 
  1156 ;;		 -> MargenErrorH(1), MargenErrorT(1), Humedad(2), Temperatura(2), 
  1157 ;;  CantDatos       2   13[COMRAM] int 
  1158 ;; Auto vars:     Size  Location     Type
  1159 ;;  i               2   17[COMRAM] int 
  1160 ;;  tecla           1   19[COMRAM] unsigned char 
  1161 ;; Return value:  Size  Location     Type
  1162 ;;                  1    wreg      void 
  1163 ;; Registers used:
  1164 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1165 ;; Tracked objects:
  1166 ;;		On entry : 0/0
  1167 ;;		On exit  : 0/0
  1168 ;;		Unchanged: 0/0
  1169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1170 ;;      Params:         6       0       0       0       0       0       0       0       0
  1171 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1172 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1173 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1174 ;;Total ram usage:       11 bytes
  1175 ;; Hardware stack levels used: 1
  1176 ;; Hardware stack levels required when called: 3
  1177 ;; This function calls:
  1178 ;;		_LCD_Char
  1179 ;;		_LCD_Clear
  1180 ;;		_LCD_Command
  1181 ;;		_LCD_String_xy
  1182 ;;		_keyfind
  1183 ;; This function is called by:
  1184 ;;		_PedirTodosLosDatos
  1185 ;; This function uses a non-reentrant model
  1186 ;;
  1187                           
  1188                           	psect	text4
  1189  001690                     __ptext4:
  1190                           	callstack 0
  1191  001690                     _PedirDato:
  1192                           	callstack 26
  1193  001690                     
  1194                           ;LCD.c: 109:      LCD_Clear();
  1195  001690  ECA6  F00E         	call	_LCD_Clear	;wreg free
  1196  001694                     
  1197                           ;LCD.c: 111:      unsigned char tecla;;LCD.c: 112:      LCD_String_xy(0,0,Etiqueta);
  1198  001694  0E00               	movlw	0
  1199  001696  6E05               	movwf	LCD_String_xy@pos^0,c
  1200  001698  C00A  F006         	movff	PedirDato@Etiqueta,LCD_String_xy@msg
  1201  00169C  C00B  F007         	movff	PedirDato@Etiqueta+1,LCD_String_xy@msg+1
  1202  0016A0  0E00               	movlw	0
  1203  0016A2  EC01  F00E         	call	_LCD_String_xy
  1204  0016A6                     
  1205                           ;LCD.c: 113:      LCD_Command(0xC0);
  1206  0016A6  0EC0               	movlw	192
  1207  0016A8  EC51  F00D         	call	_LCD_Command
  1208  0016AC                     
  1209                           ;LCD.c: 115:      for(int i=0 ; i < CantDatos ; i++){
  1210  0016AC  0E00               	movlw	0
  1211  0016AE  6E13               	movwf	(PedirDato@i+1)^0,c
  1212  0016B0  0E00               	movlw	0
  1213  0016B2  6E12               	movwf	PedirDato@i^0,c
  1214  0016B4  EF7E  F00B         	goto	l2203
  1215  0016B8                     l2191:
  1216                           
  1217                           ;LCD.c: 117:      tecla=keyfind();
  1218  0016B8  EC99  F005         	call	_keyfind	;wreg free
  1219  0016BC  6E14               	movwf	PedirDato@tecla^0,c
  1220  0016BE                     
  1221                           ;LCD.c: 118:      }while(tecla=='*'||tecla=='#');
  1222  0016BE  0E2A               	movlw	42
  1223  0016C0  1814               	xorwf	PedirDato@tecla^0,w,c
  1224  0016C2  B4D8               	btfsc	status,2,c
  1225  0016C4  EF66  F00B         	goto	u1481
  1226  0016C8  EF68  F00B         	goto	u1480
  1227  0016CC                     u1481:
  1228  0016CC  EF5C  F00B         	goto	l2191
  1229  0016D0                     u1480:
  1230  0016D0  0E23               	movlw	35
  1231  0016D2  1814               	xorwf	PedirDato@tecla^0,w,c
  1232  0016D4  B4D8               	btfsc	status,2,c
  1233  0016D6  EF6F  F00B         	goto	u1491
  1234  0016DA  EF71  F00B         	goto	u1490
  1235  0016DE                     u1491:
  1236  0016DE  EF5C  F00B         	goto	l2191
  1237  0016E2                     u1490:
  1238  0016E2                     
  1239                           ;LCD.c: 119:      LCD_Char(tecla);
  1240  0016E2  5014               	movf	PedirDato@tecla^0,w,c
  1241  0016E4  EC29  F00D         	call	_LCD_Char
  1242  0016E8                     
  1243                           ;LCD.c: 120:      vecLlenar[i] = tecla;
  1244  0016E8  5012               	movf	PedirDato@i^0,w,c
  1245  0016EA  240C               	addwf	PedirDato@vecLlenar^0,w,c
  1246  0016EC  6ED9               	movwf	fsr2l,c
  1247  0016EE  5013               	movf	(PedirDato@i+1)^0,w,c
  1248  0016F0  200D               	addwfc	(PedirDato@vecLlenar+1)^0,w,c
  1249  0016F2  6EDA               	movwf	fsr2h,c
  1250  0016F4  C014  FFDF         	movff	PedirDato@tecla,indf2
  1251  0016F8                     
  1252                           ;LCD.c: 122:      }
  1253  0016F8  4A12               	infsnz	PedirDato@i^0,f,c
  1254  0016FA  2A13               	incf	(PedirDato@i+1)^0,f,c
  1255  0016FC                     l2203:
  1256  0016FC  500E               	movf	PedirDato@CantDatos^0,w,c
  1257  0016FE  5C12               	subwf	PedirDato@i^0,w,c
  1258  001700  5013               	movf	(PedirDato@i+1)^0,w,c
  1259  001702  0A80               	xorlw	128
  1260  001704  6E10               	movwf	??_PedirDato^0,c
  1261  001706  500F               	movf	(PedirDato@CantDatos+1)^0,w,c
  1262  001708  0A80               	xorlw	128
  1263  00170A  5810               	subwfb	??_PedirDato^0,w,c
  1264  00170C  A0D8               	btfss	status,0,c
  1265  00170E  EF8B  F00B         	goto	u1501
  1266  001712  EF8D  F00B         	goto	u1500
  1267  001716                     u1501:
  1268  001716  EF5C  F00B         	goto	l2191
  1269  00171A                     u1500:
  1270  00171A                     
  1271                           ;LCD.c: 123:      _delay((unsigned long)((100)*(8000000L/4000.0)));
  1272  00171A  0E02               	movlw	2
  1273  00171C  6E11               	movwf	(??_PedirDato+1)^0,c
  1274  00171E  0E04               	movlw	4
  1275  001720  6E10               	movwf	??_PedirDato^0,c
  1276  001722  0EBA               	movlw	186
  1277  001724                     u1737:
  1278  001724  2EE8               	decfsz	wreg,f,c
  1279  001726  D7FE               	bra	u1737
  1280  001728  2E10               	decfsz	??_PedirDato^0,f,c
  1281  00172A  D7FC               	bra	u1737
  1282  00172C  2E11               	decfsz	(??_PedirDato+1)^0,f,c
  1283  00172E  D7FA               	bra	u1737
  1284  001730  D000               	nop2	
  1285  001732                     
  1286                           ;LCD.c: 124:      LCD_Clear();
  1287  001732  ECA6  F00E         	call	_LCD_Clear	;wreg free
  1288  001736  0012               	return		;funcret
  1289  001738                     __end_of_PedirDato:
  1290                           	callstack 0
  1291                           
  1292 ;; *************** function _keyfind *****************
  1293 ;; Defined at:
  1294 ;;		line 18 in file "keypad.c"
  1295 ;; Parameters:    Size  Location     Type
  1296 ;;		None
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;		None
  1299 ;; Return value:  Size  Location     Type
  1300 ;;                  1    wreg      unsigned char 
  1301 ;; Registers used:
  1302 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1303 ;; Tracked objects:
  1304 ;;		On entry : 0/0
  1305 ;;		On exit  : 0/0
  1306 ;;		Unchanged: 0/0
  1307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1308 ;;      Params:         0       0       0       0       0       0       0       0       0
  1309 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1310 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1311 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1312 ;;Total ram usage:        1 bytes
  1313 ;; Hardware stack levels used: 1
  1314 ;; This function calls:
  1315 ;;		Nothing
  1316 ;; This function is called by:
  1317 ;;		_PedirDato
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           
  1321                           	psect	text5
  1322  000B32                     __ptext5:
  1323                           	callstack 0
  1324  000B32                     _keyfind:
  1325                           	callstack 28
  1326  000B32                     
  1327                           ;keypad.c: 21:          TRISB = 0xf0;
  1328  000B32  0EF0               	movlw	240
  1329  000B34  6E93               	movwf	147,c	;volatile
  1330                           
  1331                           ;keypad.c: 22:          LATB = 0xf0;
  1332  000B36  0EF0               	movlw	240
  1333  000B38  6E8A               	movwf	138,c	;volatile
  1334  000B3A                     l2079:
  1335                           
  1336                           ;keypad.c: 26:         {;keypad.c: 28:             col_loc = PORTB & 0xf0;
  1337  000B3A  5081               	movf	129,w,c	;volatile
  1338  000B3C  0BF0               	andlw	240
  1339  000B3E  0100               	movlb	0	; () banked
  1340  000B40  6F72               	movwf	_col_loc& (0+255),b
  1341  000B42                     
  1342                           ; BSR set to: 0
  1343                           ;keypad.c: 30:         }while(col_loc!=0xf0);
  1344  000B42  0EF0               	movlw	240
  1345  000B44  1972               	xorwf	_col_loc& (0+255),w,b
  1346  000B46  A4D8               	btfss	status,2,c
  1347  000B48  EFA8  F005         	goto	u1321
  1348  000B4C  EFAA  F005         	goto	u1320
  1349  000B50                     u1321:
  1350  000B50  EF9D  F005         	goto	l2079
  1351  000B54                     u1320:
  1352  000B54                     
  1353                           ; BSR set to: 0
  1354                           ;keypad.c: 31:          col_loc = PORTB & 0xf0;
  1355  000B54  5081               	movf	129,w,c	;volatile
  1356  000B56  0BF0               	andlw	240
  1357  000B58  6F72               	movwf	_col_loc& (0+255),b
  1358                           
  1359                           ;keypad.c: 32:       }while(col_loc!=0xf0);
  1360  000B5A  0EF0               	movlw	240
  1361  000B5C  1972               	xorwf	_col_loc& (0+255),w,b
  1362  000B5E  A4D8               	btfss	status,2,c
  1363  000B60  EFB4  F005         	goto	u1331
  1364  000B64  EFB6  F005         	goto	u1330
  1365  000B68                     u1331:
  1366  000B68  EF9D  F005         	goto	l2079
  1367  000B6C                     u1330:
  1368  000B6C                     
  1369                           ; BSR set to: 0
  1370                           ;keypad.c: 34:       _delay((unsigned long)((30)*(8000000L/4000.0)));
  1371  000B6C  0E4E               	movlw	78
  1372  000B6E  6E01               	movwf	??_keyfind^0,c
  1373  000B70  0EEB               	movlw	235
  1374  000B72                     u1747:
  1375  000B72  2EE8               	decfsz	wreg,f,c
  1376  000B74  D7FE               	bra	u1747
  1377  000B76  2E01               	decfsz	??_keyfind^0,f,c
  1378  000B78  D7FC               	bra	u1747
  1379  000B7A  F000               	nop	
  1380  000B7C                     
  1381                           ;keypad.c: 35:         LATB = 0xf0;
  1382  000B7C  0EF0               	movlw	240
  1383  000B7E  6E8A               	movwf	138,c	;volatile
  1384  000B80                     l2089:
  1385                           
  1386                           ;keypad.c: 39:             {;keypad.c: 40:                 col_loc = PORTB & 0xf0;
  1387  000B80  5081               	movf	129,w,c	;volatile
  1388  000B82  0BF0               	andlw	240
  1389  000B84  0100               	movlb	0	; () banked
  1390  000B86  6F72               	movwf	_col_loc& (0+255),b
  1391  000B88                     
  1392                           ; BSR set to: 0
  1393                           ;keypad.c: 41:             }while(col_loc==0xf0);
  1394  000B88  0EF0               	movlw	240
  1395  000B8A  1972               	xorwf	_col_loc& (0+255),w,b
  1396  000B8C  B4D8               	btfsc	status,2,c
  1397  000B8E  EFCB  F005         	goto	u1341
  1398  000B92  EFCD  F005         	goto	u1340
  1399  000B96                     u1341:
  1400  000B96  EFC0  F005         	goto	l2089
  1401  000B9A                     u1340:
  1402  000B9A                     
  1403                           ; BSR set to: 0
  1404                           ;keypad.c: 42:          col_loc = PORTB & 0xf0;
  1405  000B9A  5081               	movf	129,w,c	;volatile
  1406  000B9C  0BF0               	andlw	240
  1407  000B9E  6F72               	movwf	_col_loc& (0+255),b
  1408                           
  1409                           ;keypad.c: 43:         }while(col_loc==0xf0);
  1410  000BA0  0EF0               	movlw	240
  1411  000BA2  1972               	xorwf	_col_loc& (0+255),w,b
  1412  000BA4  B4D8               	btfsc	status,2,c
  1413  000BA6  EFD7  F005         	goto	u1351
  1414  000BAA  EFD9  F005         	goto	u1350
  1415  000BAE                     u1351:
  1416  000BAE  EFC0  F005         	goto	l2089
  1417  000BB2                     u1350:
  1418  000BB2                     
  1419                           ; BSR set to: 0
  1420                           ;keypad.c: 45:         _delay((unsigned long)((30)*(8000000L/4000.0)));
  1421  000BB2  0E4E               	movlw	78
  1422  000BB4  6E01               	movwf	??_keyfind^0,c
  1423  000BB6  0EEB               	movlw	235
  1424  000BB8                     u1757:
  1425  000BB8  2EE8               	decfsz	wreg,f,c
  1426  000BBA  D7FE               	bra	u1757
  1427  000BBC  2E01               	decfsz	??_keyfind^0,f,c
  1428  000BBE  D7FC               	bra	u1757
  1429  000BC0  F000               	nop	
  1430  000BC2                     
  1431                           ;keypad.c: 47:         col_loc = PORTB & 0xf0;
  1432  000BC2  5081               	movf	129,w,c	;volatile
  1433  000BC4  0BF0               	andlw	240
  1434  000BC6  0100               	movlb	0	; () banked
  1435  000BC8  6F72               	movwf	_col_loc& (0+255),b
  1436  000BCA                     l2099:
  1437                           
  1438                           ; BSR set to: 0
  1439                           ;keypad.c: 52:     {;keypad.c: 53:         LATB = 0xfe;
  1440  000BCA  0EFE               	movlw	254
  1441  000BCC  6E8A               	movwf	138,c	;volatile
  1442  000BCE                     
  1443                           ; BSR set to: 0
  1444                           ;keypad.c: 54:         col_loc = PORTB & 0xf0;
  1445  000BCE  5081               	movf	129,w,c	;volatile
  1446  000BD0  0BF0               	andlw	240
  1447  000BD2  6F72               	movwf	_col_loc& (0+255),b
  1448  000BD4                     
  1449                           ; BSR set to: 0
  1450                           ;keypad.c: 55:         temp_col=col_loc;
  1451  000BD4  C072  F070         	movff	_col_loc,_temp_col
  1452  000BD8                     
  1453                           ; BSR set to: 0
  1454                           ;keypad.c: 56:         if(col_loc!=0xf0)
  1455  000BD8  0EF0               	movlw	240
  1456  000BDA  1972               	xorwf	_col_loc& (0+255),w,b
  1457  000BDC  B4D8               	btfsc	status,2,c
  1458  000BDE  EFF3  F005         	goto	u1361
  1459  000BE2  EFF5  F005         	goto	u1360
  1460  000BE6                     u1361:
  1461  000BE6  EF07  F006         	goto	l2111
  1462  000BEA                     u1360:
  1463  000BEA                     
  1464                           ; BSR set to: 0
  1465                           ;keypad.c: 57:         {;keypad.c: 58:             rowloc=0;
  1466  000BEA  0E00               	movlw	0
  1467  000BEC  6F71               	movwf	_rowloc& (0+255),b
  1468                           
  1469                           ;keypad.c: 59:             while(temp_col!=0xf0)
  1470  000BEE  EFFC  F005         	goto	l166
  1471  000BF2                     l2109:
  1472                           
  1473                           ; BSR set to: 0
  1474                           ;keypad.c: 60:             {;keypad.c: 61:                 temp_col = PORTB & 0xf0;
  1475  000BF2  5081               	movf	129,w,c	;volatile
  1476  000BF4  0BF0               	andlw	240
  1477  000BF6  6F70               	movwf	_temp_col& (0+255),b
  1478  000BF8                     l166:
  1479                           
  1480                           ; BSR set to: 0
  1481                           ;keypad.c: 59:             while(temp_col!=0xf0)
  1482  000BF8  0EF0               	movlw	240
  1483  000BFA  1970               	xorwf	_temp_col& (0+255),w,b
  1484  000BFC  A4D8               	btfss	status,2,c
  1485  000BFE  EF03  F006         	goto	u1371
  1486  000C02  EF05  F006         	goto	u1370
  1487  000C06                     u1371:
  1488  000C06  EFF9  F005         	goto	l2109
  1489  000C0A                     u1370:
  1490  000C0A  EF6D  F006         	goto	l2147
  1491  000C0E                     l2111:
  1492                           
  1493                           ; BSR set to: 0
  1494                           ;keypad.c: 66:         LATB = 0xfd;
  1495  000C0E  0EFD               	movlw	253
  1496  000C10  6E8A               	movwf	138,c	;volatile
  1497  000C12                     
  1498                           ; BSR set to: 0
  1499                           ;keypad.c: 67:         col_loc = PORTB & 0xf0;
  1500  000C12  5081               	movf	129,w,c	;volatile
  1501  000C14  0BF0               	andlw	240
  1502  000C16  6F72               	movwf	_col_loc& (0+255),b
  1503  000C18                     
  1504                           ; BSR set to: 0
  1505                           ;keypad.c: 68:         temp_col=col_loc;
  1506  000C18  C072  F070         	movff	_col_loc,_temp_col
  1507  000C1C                     
  1508                           ; BSR set to: 0
  1509                           ;keypad.c: 69:         if(col_loc!=0xf0)
  1510  000C1C  0EF0               	movlw	240
  1511  000C1E  1972               	xorwf	_col_loc& (0+255),w,b
  1512  000C20  B4D8               	btfsc	status,2,c
  1513  000C22  EF15  F006         	goto	u1381
  1514  000C26  EF17  F006         	goto	u1380
  1515  000C2A                     u1381:
  1516  000C2A  EF29  F006         	goto	l2123
  1517  000C2E                     u1380:
  1518  000C2E                     
  1519                           ; BSR set to: 0
  1520                           ;keypad.c: 70:         {;keypad.c: 71:             rowloc=1;
  1521  000C2E  0E01               	movlw	1
  1522  000C30  6F71               	movwf	_rowloc& (0+255),b
  1523                           
  1524                           ;keypad.c: 72:             while(temp_col!=0xf0)
  1525  000C32  EF1E  F006         	goto	l171
  1526  000C36                     l2121:
  1527                           
  1528                           ; BSR set to: 0
  1529                           ;keypad.c: 73:             {;keypad.c: 74:                 temp_col = PORTB & 0xf0;
  1530  000C36  5081               	movf	129,w,c	;volatile
  1531  000C38  0BF0               	andlw	240
  1532  000C3A  6F70               	movwf	_temp_col& (0+255),b
  1533  000C3C                     l171:
  1534                           
  1535                           ; BSR set to: 0
  1536                           ;keypad.c: 72:             while(temp_col!=0xf0)
  1537  000C3C  0EF0               	movlw	240
  1538  000C3E  1970               	xorwf	_temp_col& (0+255),w,b
  1539  000C40  A4D8               	btfss	status,2,c
  1540  000C42  EF25  F006         	goto	u1391
  1541  000C46  EF27  F006         	goto	u1390
  1542  000C4A                     u1391:
  1543  000C4A  EF1B  F006         	goto	l2121
  1544  000C4E                     u1390:
  1545  000C4E  EF6D  F006         	goto	l2147
  1546  000C52                     l2123:
  1547                           
  1548                           ; BSR set to: 0
  1549                           ;keypad.c: 79:         LATB = 0xfb;
  1550  000C52  0EFB               	movlw	251
  1551  000C54  6E8A               	movwf	138,c	;volatile
  1552  000C56                     
  1553                           ; BSR set to: 0
  1554                           ;keypad.c: 80:         col_loc = PORTB & 0xf0;
  1555  000C56  5081               	movf	129,w,c	;volatile
  1556  000C58  0BF0               	andlw	240
  1557  000C5A  6F72               	movwf	_col_loc& (0+255),b
  1558  000C5C                     
  1559                           ; BSR set to: 0
  1560                           ;keypad.c: 81:         temp_col=col_loc;
  1561  000C5C  C072  F070         	movff	_col_loc,_temp_col
  1562  000C60                     
  1563                           ; BSR set to: 0
  1564                           ;keypad.c: 82:         if(col_loc!=0xf0)
  1565  000C60  0EF0               	movlw	240
  1566  000C62  1972               	xorwf	_col_loc& (0+255),w,b
  1567  000C64  B4D8               	btfsc	status,2,c
  1568  000C66  EF37  F006         	goto	u1401
  1569  000C6A  EF39  F006         	goto	u1400
  1570  000C6E                     u1401:
  1571  000C6E  EF4B  F006         	goto	l2135
  1572  000C72                     u1400:
  1573  000C72                     
  1574                           ; BSR set to: 0
  1575                           ;keypad.c: 83:         {;keypad.c: 84:             rowloc=2;
  1576  000C72  0E02               	movlw	2
  1577  000C74  6F71               	movwf	_rowloc& (0+255),b
  1578                           
  1579                           ;keypad.c: 85:             while(temp_col!=0xf0)
  1580  000C76  EF40  F006         	goto	l175
  1581  000C7A                     l2133:
  1582                           
  1583                           ; BSR set to: 0
  1584                           ;keypad.c: 86:             {;keypad.c: 87:                 temp_col = PORTB & 0xf0;
  1585  000C7A  5081               	movf	129,w,c	;volatile
  1586  000C7C  0BF0               	andlw	240
  1587  000C7E  6F70               	movwf	_temp_col& (0+255),b
  1588  000C80                     l175:
  1589                           
  1590                           ; BSR set to: 0
  1591                           ;keypad.c: 85:             while(temp_col!=0xf0)
  1592  000C80  0EF0               	movlw	240
  1593  000C82  1970               	xorwf	_temp_col& (0+255),w,b
  1594  000C84  A4D8               	btfss	status,2,c
  1595  000C86  EF47  F006         	goto	u1411
  1596  000C8A  EF49  F006         	goto	u1410
  1597  000C8E                     u1411:
  1598  000C8E  EF3D  F006         	goto	l2133
  1599  000C92                     u1410:
  1600  000C92  EF6D  F006         	goto	l2147
  1601  000C96                     l2135:
  1602                           
  1603                           ; BSR set to: 0
  1604                           ;keypad.c: 92:         LATB = 0xf7;
  1605  000C96  0EF7               	movlw	247
  1606  000C98  6E8A               	movwf	138,c	;volatile
  1607  000C9A                     
  1608                           ; BSR set to: 0
  1609                           ;keypad.c: 93:         col_loc = PORTB & 0xf0;
  1610  000C9A  5081               	movf	129,w,c	;volatile
  1611  000C9C  0BF0               	andlw	240
  1612  000C9E  6F72               	movwf	_col_loc& (0+255),b
  1613  000CA0                     
  1614                           ; BSR set to: 0
  1615                           ;keypad.c: 94:         temp_col=col_loc;
  1616  000CA0  C072  F070         	movff	_col_loc,_temp_col
  1617  000CA4                     
  1618                           ; BSR set to: 0
  1619                           ;keypad.c: 95:         if(col_loc!=0xf0)
  1620  000CA4  0EF0               	movlw	240
  1621  000CA6  1972               	xorwf	_col_loc& (0+255),w,b
  1622  000CA8  B4D8               	btfsc	status,2,c
  1623  000CAA  EF59  F006         	goto	u1421
  1624  000CAE  EF5B  F006         	goto	u1420
  1625  000CB2                     u1421:
  1626  000CB2  EFE5  F005         	goto	l2099
  1627  000CB6                     u1420:
  1628  000CB6                     
  1629                           ; BSR set to: 0
  1630                           ;keypad.c: 96:         {;keypad.c: 97:             rowloc=3;
  1631  000CB6  0E03               	movlw	3
  1632  000CB8  6F71               	movwf	_rowloc& (0+255),b
  1633                           
  1634                           ;keypad.c: 98:             while(temp_col!=0xf0)
  1635  000CBA  EF62  F006         	goto	l179
  1636  000CBE                     l2145:
  1637                           
  1638                           ; BSR set to: 0
  1639                           ;keypad.c: 99:             {;keypad.c: 100:                 temp_col = PORTB & 0xf0;
  1640  000CBE  5081               	movf	129,w,c	;volatile
  1641  000CC0  0BF0               	andlw	240
  1642  000CC2  6F70               	movwf	_temp_col& (0+255),b
  1643  000CC4                     l179:
  1644                           
  1645                           ; BSR set to: 0
  1646                           ;keypad.c: 98:             while(temp_col!=0xf0)
  1647  000CC4  0EF0               	movlw	240
  1648  000CC6  1970               	xorwf	_temp_col& (0+255),w,b
  1649  000CC8  A4D8               	btfss	status,2,c
  1650  000CCA  EF69  F006         	goto	u1431
  1651  000CCE  EF6B  F006         	goto	u1430
  1652  000CD2                     u1431:
  1653  000CD2  EF5F  F006         	goto	l2145
  1654  000CD6                     u1430:
  1655  000CD6  EF6D  F006         	goto	l2147
  1656  000CDA                     l169:
  1657  000CDA                     l2147:
  1658                           
  1659                           ; BSR set to: 0
  1660                           ;keypad.c: 109:     {;keypad.c: 111:         if(col_loc==0xe0)
  1661  000CDA  0EE0               	movlw	224
  1662  000CDC  1972               	xorwf	_col_loc& (0+255),w,b
  1663  000CDE  A4D8               	btfss	status,2,c
  1664  000CE0  EF74  F006         	goto	u1441
  1665  000CE4  EF76  F006         	goto	u1440
  1666  000CE8                     u1441:
  1667  000CE8  EF81  F006         	goto	l2155
  1668  000CEC                     u1440:
  1669  000CEC                     
  1670                           ; BSR set to: 0
  1671                           ;keypad.c: 112:         {;keypad.c: 113:              return keypad[rowloc][0];
  1672  000CEC  5171               	movf	_rowloc& (0+255),w,b
  1673  000CEE  0D03               	mullw	3
  1674  000CF0  0EA5               	movlw	low _keypad
  1675  000CF2  24F3               	addwf	243,w,c
  1676  000CF4  6ED9               	movwf	fsr2l,c
  1677  000CF6  0E00               	movlw	high _keypad
  1678  000CF8  20F4               	addwfc	prodh,w,c
  1679  000CFA  6EDA               	movwf	fsr2h,c
  1680  000CFC  50DF               	movf	indf2,w,c
  1681  000CFE  EFA7  F006         	goto	l185
  1682  000D02                     l2155:
  1683                           
  1684                           ; BSR set to: 0
  1685                           ;keypad.c: 116:             if(col_loc==0xd0)
  1686  000D02  0ED0               	movlw	208
  1687  000D04  1972               	xorwf	_col_loc& (0+255),w,b
  1688  000D06  A4D8               	btfss	status,2,c
  1689  000D08  EF88  F006         	goto	u1451
  1690  000D0C  EF8A  F006         	goto	u1450
  1691  000D10                     u1451:
  1692  000D10  EF95  F006         	goto	l2163
  1693  000D14                     u1450:
  1694  000D14                     
  1695                           ; BSR set to: 0
  1696                           ;keypad.c: 117:         {;keypad.c: 118:             return keypad[rowloc][1];
  1697  000D14  5171               	movf	_rowloc& (0+255),w,b
  1698  000D16  0D03               	mullw	3
  1699  000D18  0EA6               	movlw	low (_keypad+1)
  1700  000D1A  24F3               	addwf	243,w,c
  1701  000D1C  6ED9               	movwf	fsr2l,c
  1702  000D1E  0E00               	movlw	high (_keypad+1)
  1703  000D20  20F4               	addwfc	prodh,w,c
  1704  000D22  6EDA               	movwf	fsr2h,c
  1705  000D24  50DF               	movf	indf2,w,c
  1706  000D26  EFA7  F006         	goto	l185
  1707  000D2A                     l2163:
  1708                           
  1709                           ; BSR set to: 0
  1710                           ;keypad.c: 121:             if(col_loc==0xb0)
  1711  000D2A  0EB0               	movlw	176
  1712  000D2C  1972               	xorwf	_col_loc& (0+255),w,b
  1713  000D2E  A4D8               	btfss	status,2,c
  1714  000D30  EF9C  F006         	goto	u1461
  1715  000D34  EF9E  F006         	goto	u1460
  1716  000D38                     u1461:
  1717  000D38  EF6D  F006         	goto	l169
  1718  000D3C                     u1460:
  1719  000D3C                     
  1720                           ; BSR set to: 0
  1721                           ;keypad.c: 122:         {;keypad.c: 123:             return keypad[rowloc][2];
  1722  000D3C  5171               	movf	_rowloc& (0+255),w,b
  1723  000D3E  0D03               	mullw	3
  1724  000D40  0EA7               	movlw	low (_keypad+2)
  1725  000D42  24F3               	addwf	243,w,c
  1726  000D44  6ED9               	movwf	fsr2l,c
  1727  000D46  0E00               	movlw	high (_keypad+2)
  1728  000D48  20F4               	addwfc	prodh,w,c
  1729  000D4A  6EDA               	movwf	fsr2h,c
  1730  000D4C  50DF               	movf	indf2,w,c
  1731  000D4E                     l185:
  1732                           
  1733                           ; BSR set to: 0
  1734  000D4E  0012               	return		;funcret
  1735  000D50                     __end_of_keyfind:
  1736                           	callstack 0
  1737                           
  1738 ;; *************** function _LCD_Clear *****************
  1739 ;; Defined at:
  1740 ;;		line 96 in file "LCD.c"
  1741 ;; Parameters:    Size  Location     Type
  1742 ;;		None
  1743 ;; Auto vars:     Size  Location     Type
  1744 ;;		None
  1745 ;; Return value:  Size  Location     Type
  1746 ;;                  1    wreg      void 
  1747 ;; Registers used:
  1748 ;;		wreg, status,2, status,0, cstack
  1749 ;; Tracked objects:
  1750 ;;		On entry : 0/0
  1751 ;;		On exit  : 0/0
  1752 ;;		Unchanged: 0/0
  1753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1754 ;;      Params:         0       0       0       0       0       0       0       0       0
  1755 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1756 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1757 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1758 ;;Total ram usage:        1 bytes
  1759 ;; Hardware stack levels used: 1
  1760 ;; Hardware stack levels required when called: 1
  1761 ;; This function calls:
  1762 ;;		_LCD_Command
  1763 ;; This function is called by:
  1764 ;;		_PedirDato
  1765 ;; This function uses a non-reentrant model
  1766 ;;
  1767                           
  1768                           	psect	text6
  1769  001D4C                     __ptext6:
  1770                           	callstack 0
  1771  001D4C                     _LCD_Clear:
  1772                           	callstack 27
  1773  001D4C                     
  1774                           ;LCD.c: 98:     LCD_Command(0x01);
  1775  001D4C  0E01               	movlw	1
  1776  001D4E  EC51  F00D         	call	_LCD_Command
  1777  001D52                     
  1778                           ;LCD.c: 99:     _delay((unsigned long)((3)*(8000000L/4000.0)));
  1779  001D52  0E08               	movlw	8
  1780  001D54  6E03               	movwf	??_LCD_Clear^0,c
  1781  001D56  0ECA               	movlw	202
  1782  001D58                     u1767:
  1783  001D58  2EE8               	decfsz	wreg,f,c
  1784  001D5A  D7FE               	bra	u1767
  1785  001D5C  2E03               	decfsz	??_LCD_Clear^0,f,c
  1786  001D5E  D7FC               	bra	u1767
  1787  001D60                     
  1788                           ;LCD.c: 100:     LCD_Command (0x80);
  1789  001D60  0E80               	movlw	128
  1790  001D62  EC51  F00D         	call	_LCD_Command
  1791                           
  1792                           ;LCD.c: 101:     _delay((unsigned long)((1)*(8000000L/4000.0)));
  1793  001D66  0E03               	movlw	3
  1794  001D68  6E03               	movwf	??_LCD_Clear^0,c
  1795  001D6A  0E98               	movlw	152
  1796  001D6C                     u1777:
  1797  001D6C  2EE8               	decfsz	wreg,f,c
  1798  001D6E  D7FE               	bra	u1777
  1799  001D70  2E03               	decfsz	??_LCD_Clear^0,f,c
  1800  001D72  D7FC               	bra	u1777
  1801  001D74  0012               	return		;funcret
  1802  001D76                     __end_of_LCD_Clear:
  1803                           	callstack 0
  1804                           
  1805 ;; *************** function _MostrarTemperatura *****************
  1806 ;; Defined at:
  1807 ;;		line 151 in file "LCD.c"
  1808 ;; Parameters:    Size  Location     Type
  1809 ;;  Cadena          2    8[BANK0 ] PTR unsigned char 
  1810 ;;		 -> Cadena(10), 
  1811 ;;  Temperatura     1   10[BANK0 ] unsigned char 
  1812 ;; Auto vars:     Size  Location     Type
  1813 ;;		None
  1814 ;; Return value:  Size  Location     Type
  1815 ;;                  1    wreg      void 
  1816 ;; Registers used:
  1817 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1818 ;; Tracked objects:
  1819 ;;		On entry : 0/0
  1820 ;;		On exit  : 0/0
  1821 ;;		Unchanged: 0/0
  1822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1823 ;;      Params:         0       3       0       0       0       0       0       0       0
  1824 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1825 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1826 ;;      Totals:         0       3       0       0       0       0       0       0       0
  1827 ;;Total ram usage:        3 bytes
  1828 ;; Hardware stack levels used: 1
  1829 ;; Hardware stack levels required when called: 8
  1830 ;; This function calls:
  1831 ;;		_LCD_Char
  1832 ;;		_LCD_String
  1833 ;;		_LCD_String_xy
  1834 ;;		_sprintf
  1835 ;; This function is called by:
  1836 ;;		_main
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840                           	psect	text7
  1841  0017AE                     __ptext7:
  1842                           	callstack 0
  1843  0017AE                     _MostrarTemperatura:
  1844                           	callstack 22
  1845  0017AE                     
  1846                           ;LCD.c: 152:        sprintf(Cadena,"%d",Temperatura);
  1847  0017AE  C0BA  F058         	movff	MostrarTemperatura@Cadena,sprintf@s
  1848  0017B2  C0BB  F059         	movff	MostrarTemperatura@Cadena+1,sprintf@s+1
  1849  0017B6  0E4B               	movlw	low (STR_6+1)
  1850  0017B8  6E5A               	movwf	sprintf@fmt^0,c
  1851  0017BA  0E08               	movlw	high (STR_6+1)
  1852  0017BC  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1853  0017BE  C0BC  F05C         	movff	MostrarTemperatura@Temperatura,?_sprintf+4
  1854  0017C2  6A5D               	clrf	(?_sprintf+5)^0,c
  1855  0017C4  EC00  F00D         	call	_sprintf	;wreg free
  1856  0017C8                     
  1857                           ;LCD.c: 153:        LCD_String_xy(2,0,Cadena);
  1858  0017C8  0E00               	movlw	0
  1859  0017CA  6E05               	movwf	LCD_String_xy@pos^0,c
  1860  0017CC  C0BA  F006         	movff	MostrarTemperatura@Cadena,LCD_String_xy@msg
  1861  0017D0  C0BB  F007         	movff	MostrarTemperatura@Cadena+1,LCD_String_xy@msg+1
  1862  0017D4  0E02               	movlw	2
  1863  0017D6  EC01  F00E         	call	_LCD_String_xy
  1864  0017DA                     
  1865                           ;LCD.c: 154:        sprintf(Cadena,".%d",0);
  1866  0017DA  C0BA  F058         	movff	MostrarTemperatura@Cadena,sprintf@s
  1867  0017DE  C0BB  F059         	movff	MostrarTemperatura@Cadena+1,sprintf@s+1
  1868  0017E2  0E4A               	movlw	low STR_6
  1869  0017E4  6E5A               	movwf	sprintf@fmt^0,c
  1870  0017E6  0E08               	movlw	high STR_6
  1871  0017E8  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1872  0017EA  0E00               	movlw	0
  1873  0017EC  6E5D               	movwf	(?_sprintf+5)^0,c
  1874  0017EE  0E00               	movlw	0
  1875  0017F0  6E5C               	movwf	(?_sprintf+4)^0,c
  1876  0017F2  EC00  F00D         	call	_sprintf	;wreg free
  1877  0017F6                     
  1878                           ;LCD.c: 155:        LCD_Char(0xdf);
  1879  0017F6  0EDF               	movlw	223
  1880  0017F8  EC29  F00D         	call	_LCD_Char
  1881  0017FC                     
  1882                           ;LCD.c: 156:        sprintf(Cadena,"C Temp.");
  1883  0017FC  C0BA  F058         	movff	MostrarTemperatura@Cadena,sprintf@s
  1884  001800  C0BB  F059         	movff	MostrarTemperatura@Cadena+1,sprintf@s+1
  1885  001804  0E3B               	movlw	low STR_10
  1886  001806  6E5A               	movwf	sprintf@fmt^0,c
  1887  001808  0E08               	movlw	high STR_10
  1888  00180A  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1889  00180C  EC00  F00D         	call	_sprintf	;wreg free
  1890  001810                     
  1891                           ;LCD.c: 157:        LCD_String(Cadena);
  1892  001810  C0BA  F003         	movff	MostrarTemperatura@Cadena,LCD_String@msg
  1893  001814  C0BB  F004         	movff	MostrarTemperatura@Cadena+1,LCD_String@msg+1
  1894  001818  EC78  F00C         	call	_LCD_String	;wreg free
  1895  00181C  0012               	return		;funcret
  1896  00181E                     __end_of_MostrarTemperatura:
  1897                           	callstack 0
  1898                           
  1899 ;; *************** function _MostrarHumedad *****************
  1900 ;; Defined at:
  1901 ;;		line 142 in file "LCD.c"
  1902 ;; Parameters:    Size  Location     Type
  1903 ;;  Cadena          2    8[BANK0 ] PTR unsigned char 
  1904 ;;		 -> Cadena(10), 
  1905 ;;  Humedad         1   10[BANK0 ] unsigned char 
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;		None
  1908 ;; Return value:  Size  Location     Type
  1909 ;;                  1    wreg      void 
  1910 ;; Registers used:
  1911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1917 ;;      Params:         0       3       0       0       0       0       0       0       0
  1918 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1919 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1920 ;;      Totals:         0       3       0       0       0       0       0       0       0
  1921 ;;Total ram usage:        3 bytes
  1922 ;; Hardware stack levels used: 1
  1923 ;; Hardware stack levels required when called: 8
  1924 ;; This function calls:
  1925 ;;		_LCD_Char
  1926 ;;		_LCD_String
  1927 ;;		_LCD_String_xy
  1928 ;;		_sprintf
  1929 ;; This function is called by:
  1930 ;;		_main
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933                           
  1934                           	psect	text8
  1935  00181E                     __ptext8:
  1936                           	callstack 0
  1937  00181E                     _MostrarHumedad:
  1938                           	callstack 22
  1939  00181E                     
  1940                           ;LCD.c: 143:         sprintf(Cadena,"%d",Humedad);
  1941  00181E  C0BA  F058         	movff	MostrarHumedad@Cadena,sprintf@s
  1942  001822  C0BB  F059         	movff	MostrarHumedad@Cadena+1,sprintf@s+1
  1943  001826  0E4B               	movlw	low (STR_6+1)
  1944  001828  6E5A               	movwf	sprintf@fmt^0,c
  1945  00182A  0E08               	movlw	high (STR_6+1)
  1946  00182C  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1947  00182E  C0BC  F05C         	movff	MostrarHumedad@Humedad,?_sprintf+4
  1948  001832  6A5D               	clrf	(?_sprintf+5)^0,c
  1949  001834  EC00  F00D         	call	_sprintf	;wreg free
  1950  001838                     
  1951                           ;LCD.c: 144:         LCD_String_xy(0,0,Cadena);
  1952  001838  0E00               	movlw	0
  1953  00183A  6E05               	movwf	LCD_String_xy@pos^0,c
  1954  00183C  C0BA  F006         	movff	MostrarHumedad@Cadena,LCD_String_xy@msg
  1955  001840  C0BB  F007         	movff	MostrarHumedad@Cadena+1,LCD_String_xy@msg+1
  1956  001844  0E00               	movlw	0
  1957  001846  EC01  F00E         	call	_LCD_String_xy
  1958  00184A                     
  1959                           ;LCD.c: 145:         sprintf(Cadena,".%d",0);
  1960  00184A  C0BA  F058         	movff	MostrarHumedad@Cadena,sprintf@s
  1961  00184E  C0BB  F059         	movff	MostrarHumedad@Cadena+1,sprintf@s+1
  1962  001852  0E4A               	movlw	low STR_6
  1963  001854  6E5A               	movwf	sprintf@fmt^0,c
  1964  001856  0E08               	movlw	high STR_6
  1965  001858  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1966  00185A  0E00               	movlw	0
  1967  00185C  6E5D               	movwf	(?_sprintf+5)^0,c
  1968  00185E  0E00               	movlw	0
  1969  001860  6E5C               	movwf	(?_sprintf+4)^0,c
  1970  001862  EC00  F00D         	call	_sprintf	;wreg free
  1971  001866                     
  1972                           ;LCD.c: 146:         LCD_Char('%');
  1973  001866  0E25               	movlw	37
  1974  001868  EC29  F00D         	call	_LCD_Char
  1975  00186C                     
  1976                           ;LCD.c: 147:         sprintf(Cadena,"  Hum.");
  1977  00186C  C0BA  F058         	movff	MostrarHumedad@Cadena,sprintf@s
  1978  001870  C0BB  F059         	movff	MostrarHumedad@Cadena+1,sprintf@s+1
  1979  001874  0E43               	movlw	low STR_7
  1980  001876  6E5A               	movwf	sprintf@fmt^0,c
  1981  001878  0E08               	movlw	high STR_7
  1982  00187A  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1983  00187C  EC00  F00D         	call	_sprintf	;wreg free
  1984  001880                     
  1985                           ;LCD.c: 148:         LCD_String(Cadena);
  1986  001880  C0BA  F003         	movff	MostrarHumedad@Cadena,LCD_String@msg
  1987  001884  C0BB  F004         	movff	MostrarHumedad@Cadena+1,LCD_String@msg+1
  1988  001888  EC78  F00C         	call	_LCD_String	;wreg free
  1989  00188C  0012               	return		;funcret
  1990  00188E                     __end_of_MostrarHumedad:
  1991                           	callstack 0
  1992                           
  1993 ;; *************** function _sprintf *****************
  1994 ;; Defined at:
  1995 ;;		line 9 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\nf_sprintf.c"
  1996 ;; Parameters:    Size  Location     Type
  1997 ;;  s               2   87[COMRAM] PTR unsigned char 
  1998 ;;		 -> Cadena(10), 
  1999 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
  2000 ;;		 -> STR_10(8), STR_9(4), STR_8(3), STR_7(7), 
  2001 ;;		 -> STR_6(4), STR_5(3), 
  2002 ;; Auto vars:     Size  Location     Type
  2003 ;;  f               6    2[BANK0 ] struct _IO_FILE
  2004 ;;  ap              2    0[BANK0 ] PTR void [1]
  2005 ;;		 -> ?_sprintf(2), 
  2006 ;;  ret             2    0        int 
  2007 ;; Return value:  Size  Location     Type
  2008 ;;                  2   87[COMRAM] int 
  2009 ;; Registers used:
  2010 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2011 ;; Tracked objects:
  2012 ;;		On entry : 0/0
  2013 ;;		On exit  : 0/0
  2014 ;;		Unchanged: 0/0
  2015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2016 ;;      Params:         6       0       0       0       0       0       0       0       0
  2017 ;;      Locals:         0       8       0       0       0       0       0       0       0
  2018 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2019 ;;      Totals:         6       8       0       0       0       0       0       0       0
  2020 ;;Total ram usage:       14 bytes
  2021 ;; Hardware stack levels used: 1
  2022 ;; Hardware stack levels required when called: 7
  2023 ;; This function calls:
  2024 ;;		_vfprintf
  2025 ;; This function is called by:
  2026 ;;		_MostrarHumedad
  2027 ;;		_MostrarTemperatura
  2028 ;; This function uses a non-reentrant model
  2029 ;;
  2030                           
  2031                           	psect	text9
  2032  001A00                     __ptext9:
  2033                           	callstack 0
  2034  001A00                     _sprintf:
  2035                           	callstack 22
  2036  001A00  0E5C               	movlw	low (?_sprintf+4)
  2037  001A02  0100               	movlb	0	; () banked
  2038  001A04  6FB2               	movwf	sprintf@ap& (0+255),b
  2039  001A06  0E00               	movlw	high (?_sprintf+4)
  2040  001A08  6FB3               	movwf	(sprintf@ap+1)& (0+255),b
  2041  001A0A  C058  F0B4         	movff	sprintf@s,sprintf@f
  2042  001A0E  C059  F0B5         	movff	sprintf@s+1,sprintf@f+1
  2043  001A12                     
  2044                           ; BSR set to: 0
  2045  001A12  0E00               	movlw	0
  2046  001A14  6FB7               	movwf	(sprintf@f+3)& (0+255),b
  2047  001A16  0E00               	movlw	0
  2048  001A18  6FB6               	movwf	(sprintf@f+2)& (0+255),b
  2049  001A1A                     
  2050                           ; BSR set to: 0
  2051  001A1A  0E00               	movlw	0
  2052  001A1C  6FB9               	movwf	(sprintf@f+5)& (0+255),b
  2053  001A1E  0E00               	movlw	0
  2054  001A20  6FB8               	movwf	(sprintf@f+4)& (0+255),b
  2055  001A22                     
  2056                           ; BSR set to: 0
  2057  001A22  0EB4               	movlw	low sprintf@f
  2058  001A24  6E50               	movwf	vfprintf@fp^0,c
  2059  001A26  0E00               	movlw	high sprintf@f
  2060  001A28  6E51               	movwf	(vfprintf@fp+1)^0,c
  2061  001A2A  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
  2062  001A2E  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2063  001A32  0EB2               	movlw	low sprintf@ap
  2064  001A34  6E54               	movwf	vfprintf@ap^0,c
  2065  001A36  0E00               	movlw	high sprintf@ap
  2066  001A38  6E55               	movwf	(vfprintf@ap+1)^0,c
  2067  001A3A  EC47  F00C         	call	_vfprintf	;wreg free
  2068  001A3E  0100               	movlb	0	; () banked
  2069  001A40  51B6               	movf	(sprintf@f+2)& (0+255),w,b
  2070  001A42  2458               	addwf	sprintf@s^0,w,c
  2071  001A44  6ED9               	movwf	fsr2l,c
  2072  001A46  51B7               	movf	(sprintf@f+3)& (0+255),w,b
  2073  001A48  2059               	addwfc	(sprintf@s+1)^0,w,c
  2074  001A4A  6EDA               	movwf	fsr2h,c
  2075  001A4C  0E00               	movlw	0
  2076  001A4E  6EDF               	movwf	indf2,c
  2077  001A50                     
  2078                           ; BSR set to: 0
  2079  001A50  0012               	return		;funcret
  2080  001A52                     __end_of_sprintf:
  2081                           	callstack 0
  2082                           
  2083 ;; *************** function _vfprintf *****************
  2084 ;; Defined at:
  2085 ;;		line 1390 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  2088 ;;		 -> sprintf@f(6), 
  2089 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  2090 ;;		 -> STR_10(8), STR_9(4), STR_8(3), STR_7(7), 
  2091 ;;		 -> STR_6(4), STR_5(3), 
  2092 ;;  ap              2   83[COMRAM] PTR PTR void 
  2093 ;;		 -> sprintf@ap(2), 
  2094 ;; Auto vars:     Size  Location     Type
  2095 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  2096 ;;		 -> STR_10(8), STR_9(4), STR_8(3), STR_7(7), 
  2097 ;;		 -> STR_6(4), STR_5(3), 
  2098 ;; Return value:  Size  Location     Type
  2099 ;;                  2   79[COMRAM] int 
  2100 ;; Registers used:
  2101 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2102 ;; Tracked objects:
  2103 ;;		On entry : 0/0
  2104 ;;		On exit  : 0/0
  2105 ;;		Unchanged: 0/0
  2106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2107 ;;      Params:         6       0       0       0       0       0       0       0       0
  2108 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2109 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2110 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2111 ;;Total ram usage:        8 bytes
  2112 ;; Hardware stack levels used: 1
  2113 ;; Hardware stack levels required when called: 6
  2114 ;; This function calls:
  2115 ;;		_vfpfcnvrt
  2116 ;; This function is called by:
  2117 ;;		_sprintf
  2118 ;; This function uses a non-reentrant model
  2119 ;;
  2120                           
  2121                           	psect	text10
  2122  00188E                     __ptext10:
  2123                           	callstack 0
  2124  00188E                     _vfprintf:
  2125                           	callstack 22
  2126  00188E                     
  2127                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1390: int vfprintf(FIL
      +                          E *fp, const char *fmt, va_list ap);D:\XC8 compilador para el MPLAB\pic\sources\c99\comm
      +                          on\doprnt.c: 1391: {;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 13
      +                          93:     char *cfmt;;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 139
      +                          5:     cfmt = (char *)fmt;
  2128  00188E  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  2129  001892  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2130  001896                     
  2131                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1396:     nout = 0;
  2132  001896  0E00               	movlw	0
  2133  001898  0100               	movlb	0	; () banked
  2134  00189A  6F61               	movwf	(_nout+1)& (0+255),b
  2135  00189C  0E00               	movlw	0
  2136  00189E  6F60               	movwf	_nout& (0+255),b
  2137                           
  2138                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1397:     while (*cfmt
      +                          ) {
  2139  0018A0  EF65  F00C         	goto	l2177
  2140  0018A4                     l2175:
  2141                           
  2142                           ; BSR set to: 0
  2143                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1398:         nout += 
      +                          vfpfcnvrt(fp, &cfmt, ap);
  2144  0018A4  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  2145  0018A8  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2146  0018AC  0E56               	movlw	low vfprintf@cfmt
  2147  0018AE  6E42               	movwf	vfpfcnvrt@fmt^0,c
  2148  0018B0  0E00               	movlw	high vfprintf@cfmt
  2149  0018B2  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2150  0018B4  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  2151  0018B8  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2152  0018BC  ECA8  F006         	call	_vfpfcnvrt	;wreg free
  2153  0018C0  5040               	movf	?_vfpfcnvrt^0,w,c
  2154  0018C2  0100               	movlb	0	; () banked
  2155  0018C4  2760               	addwf	_nout& (0+255),f,b
  2156  0018C6  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  2157  0018C8  2361               	addwfc	(_nout+1)& (0+255),f,b
  2158  0018CA                     l2177:
  2159                           
  2160                           ; BSR set to: 0
  2161                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1397:     while (*cfmt
      +                          ) {
  2162  0018CA  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  2163  0018CE  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2164  0018D2                     	if	0	;tblptru may be non-zero
  2165  0018D2                     	endif
  2166  0018D2                     	if	0	;tblptru may be non-zero
  2167  0018D2                     	endif
  2168  0018D2  0008               	tblrd		*
  2169  0018D4  50F5               	movf	tablat,w,c
  2170  0018D6  0900               	iorlw	0
  2171  0018D8  A4D8               	btfss	status,2,c
  2172  0018DA  EF71  F00C         	goto	u1471
  2173  0018DE  EF73  F00C         	goto	u1470
  2174  0018E2                     u1471:
  2175  0018E2  EF52  F00C         	goto	l2175
  2176  0018E6                     u1470:
  2177  0018E6                     
  2178                           ; BSR set to: 0
  2179                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1400:     return nout;
  2180  0018E6  C060  F050         	movff	_nout,?_vfprintf
  2181  0018EA  C061  F051         	movff	_nout+1,?_vfprintf+1
  2182  0018EE                     
  2183                           ; BSR set to: 0
  2184  0018EE  0012               	return		;funcret
  2185  0018F0                     __end_of_vfprintf:
  2186                           	callstack 0
  2187                           
  2188 ;; *************** function _vfpfcnvrt *****************
  2189 ;; Defined at:
  2190 ;;		line 692 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c"
  2191 ;; Parameters:    Size  Location     Type
  2192 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  2193 ;;		 -> sprintf@f(6), 
  2194 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  2195 ;;		 -> vfprintf@cfmt(2), 
  2196 ;;  ap              2   67[COMRAM] PTR PTR void 
  2197 ;;		 -> sprintf@ap(2), 
  2198 ;; Auto vars:     Size  Location     Type
  2199 ;;  ll              8   71[COMRAM] long long 
  2200 ;;  llu             8    0        unsigned long long 
  2201 ;;  f               4    0        unsigned long long 
  2202 ;;  vp              3    0        PTR void 
  2203 ;;  ct              3    0        unsigned char [3]
  2204 ;;  cp              3    0        PTR unsigned char 
  2205 ;;  i               2    0        int 
  2206 ;;  done            2    0        int 
  2207 ;;  c               1    0        unsigned char 
  2208 ;; Return value:  Size  Location     Type
  2209 ;;                  2   63[COMRAM] int 
  2210 ;; Registers used:
  2211 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2212 ;; Tracked objects:
  2213 ;;		On entry : 0/0
  2214 ;;		On exit  : 0/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2217 ;;      Params:         6       0       0       0       0       0       0       0       0
  2218 ;;      Locals:         8       0       0       0       0       0       0       0       0
  2219 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2220 ;;      Totals:        16       0       0       0       0       0       0       0       0
  2221 ;;Total ram usage:       16 bytes
  2222 ;; Hardware stack levels used: 1
  2223 ;; Hardware stack levels required when called: 5
  2224 ;; This function calls:
  2225 ;;		_dtoa
  2226 ;;		_fputc
  2227 ;; This function is called by:
  2228 ;;		_vfprintf
  2229 ;; This function uses a non-reentrant model
  2230 ;;
  2231                           
  2232                           	psect	text11
  2233  000D50                     __ptext11:
  2234                           	callstack 0
  2235  000D50                     _vfpfcnvrt:
  2236                           	callstack 22
  2237  000D50                     
  2238                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 692: static int vfpfcn
      +                          vrt(FILE *fp, char *fmt[], va_list ap);D:\XC8 compilador para el MPLAB\pic\sources\c99\c
      +                          ommon\doprnt.c: 693: {;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 
      +                          694:     char c, *cp, ct[3];;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\dopr
      +                          nt.c: 695:     int done, i;;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprn
      +                          t.c: 696:     long long ll;;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprn
      +                          t.c: 697:     unsigned long long llu;
  2239  000D50  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2240  000D54  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2241  000D58  CFDE FFF6          	movff	postinc2,tblptrl
  2242  000D5C  CFDD FFF7          	movff	postdec2,tblptrh
  2243  000D60                     	if	0	;tblptru may be non-zero
  2244  000D60                     	endif
  2245  000D60                     	if	0	;tblptru may be non-zero
  2246  000D60                     	endif
  2247  000D60  0008               	tblrd		*
  2248  000D62  50F5               	movf	tablat,w,c
  2249  000D64  0A25               	xorlw	37
  2250  000D66  A4D8               	btfss	status,2,c
  2251  000D68  EFB8  F006         	goto	u1271
  2252  000D6C  EFBA  F006         	goto	u1270
  2253  000D70                     u1271:
  2254  000D70  EF66  F007         	goto	l2047
  2255  000D74                     u1270:
  2256  000D74                     
  2257                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 703:         ++*fmt;
  2258  000D74  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2259  000D78  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2260  000D7C  2ADE               	incf	postinc2,f,c
  2261  000D7E  0E00               	movlw	0
  2262  000D80  22DD               	addwfc	postdec2,f,c
  2263  000D82                     
  2264                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 705:         flags = w
      +                          idth = 0;
  2265  000D82  0E00               	movlw	0
  2266  000D84  0100               	movlb	0	; () banked
  2267  000D86  6F63               	movwf	(_width+1)& (0+255),b
  2268  000D88  0E00               	movlw	0
  2269  000D8A  6F62               	movwf	_width& (0+255),b
  2270  000D8C  C062  F066         	movff	_width,_flags
  2271  000D90  C063  F067         	movff	_width+1,_flags+1
  2272  000D94                     
  2273                           ; BSR set to: 0
  2274                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 706:         prec = -1
      +                          ;
  2275  000D94  6964               	setf	_prec& (0+255),b
  2276  000D96  6965               	setf	(_prec+1)& (0+255),b
  2277  000D98                     
  2278                           ; BSR set to: 0
  2279                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 847:         if ((*fmt
      +                          [0] == 'd') || (*fmt[0] == 'i')) {
  2280  000D98  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2281  000D9C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2282  000DA0  CFDE FFF6          	movff	postinc2,tblptrl
  2283  000DA4  CFDD FFF7          	movff	postdec2,tblptrh
  2284  000DA8                     	if	0	;tblptru may be non-zero
  2285  000DA8                     	endif
  2286  000DA8                     	if	0	;tblptru may be non-zero
  2287  000DA8                     	endif
  2288  000DA8  0008               	tblrd		*
  2289  000DAA  50F5               	movf	tablat,w,c
  2290  000DAC  0A64               	xorlw	100
  2291  000DAE  B4D8               	btfsc	status,2,c
  2292  000DB0  EFDC  F006         	goto	u1281
  2293  000DB4  EFDE  F006         	goto	u1280
  2294  000DB8                     u1281:
  2295  000DB8  EFF0  F006         	goto	l2025
  2296  000DBC                     u1280:
  2297  000DBC                     
  2298                           ; BSR set to: 0
  2299  000DBC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2300  000DC0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2301  000DC4  CFDE FFF6          	movff	postinc2,tblptrl
  2302  000DC8  CFDD FFF7          	movff	postdec2,tblptrh
  2303  000DCC                     	if	0	;tblptru may be non-zero
  2304  000DCC                     	endif
  2305  000DCC                     	if	0	;tblptru may be non-zero
  2306  000DCC                     	endif
  2307  000DCC  0008               	tblrd		*
  2308  000DCE  50F5               	movf	tablat,w,c
  2309  000DD0  0A69               	xorlw	105
  2310  000DD2  A4D8               	btfss	status,2,c
  2311  000DD4  EFEE  F006         	goto	u1291
  2312  000DD8  EFF0  F006         	goto	u1290
  2313  000DDC                     u1291:
  2314  000DDC  EF30  F007         	goto	l2031
  2315  000DE0                     u1290:
  2316  000DE0                     l2025:
  2317                           
  2318                           ; BSR set to: 0
  2319                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 849:             ++*fm
      +                          t;
  2320  000DE0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2321  000DE4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2322  000DE8  2ADE               	incf	postinc2,f,c
  2323  000DEA  0E00               	movlw	0
  2324  000DEC  22DD               	addwfc	postdec2,f,c
  2325                           
  2326                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 850:             ll = 
      +                          (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2327  000DEE  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2328  000DF2  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2329  000DF6  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2330  000DFA  0E02               	movlw	2
  2331  000DFC  26DE               	addwf	postinc2,f,c
  2332  000DFE  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2333  000E02  0E00               	movlw	0
  2334  000E04  22DD               	addwfc	postdec2,f,c
  2335  000E06  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2336  000E0A  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2337  000E0E  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  2338  000E12  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  2339  000E16  0E00               	movlw	0
  2340  000E18  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  2341  000E1A  0EFF               	movlw	-1
  2342  000E1C  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  2343  000E1E  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  2344  000E20  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  2345  000E22  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  2346  000E24  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  2347  000E26  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  2348  000E28                     
  2349                           ; BSR set to: 0
  2350                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 852:             retur
      +                          n dtoa(fp, ll);
  2351  000E28  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2352  000E2C  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2353  000E30  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  2354  000E34  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2355  000E38  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2356  000E3C  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2357  000E40  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2358  000E44  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2359  000E48  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2360  000E4C  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2361  000E50  EC28  F004         	call	_dtoa	;wreg free
  2362  000E54  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  2363  000E58  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2364  000E5C  EF81  F007         	goto	l1048
  2365  000E60                     l2031:
  2366                           
  2367                           ; BSR set to: 0
  2368                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1372:         if ((*fm
      +                          t)[0] == '%') {
  2369  000E60  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2370  000E64  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2371  000E68  CFDE FFF6          	movff	postinc2,tblptrl
  2372  000E6C  CFDD FFF7          	movff	postdec2,tblptrh
  2373  000E70                     	if	0	;tblptru may be non-zero
  2374  000E70                     	endif
  2375  000E70                     	if	0	;tblptru may be non-zero
  2376  000E70                     	endif
  2377  000E70  0008               	tblrd		*
  2378  000E72  50F5               	movf	tablat,w,c
  2379  000E74  0A25               	xorlw	37
  2380  000E76  A4D8               	btfss	status,2,c
  2381  000E78  EF40  F007         	goto	u1301
  2382  000E7C  EF42  F007         	goto	u1300
  2383  000E80                     u1301:
  2384  000E80  EF59  F007         	goto	l2041
  2385  000E84                     u1300:
  2386  000E84                     
  2387                           ; BSR set to: 0
  2388                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1373:             ++*f
      +                          mt;
  2389  000E84  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2390  000E88  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2391  000E8C  2ADE               	incf	postinc2,f,c
  2392  000E8E  0E00               	movlw	0
  2393  000E90  22DD               	addwfc	postdec2,f,c
  2394  000E92                     
  2395                           ; BSR set to: 0
  2396                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1374:             fput
      +                          c((int)'%', fp);
  2397  000E92  0E00               	movlw	0
  2398  000E94  6E02               	movwf	(fputc@c+1)^0,c
  2399  000E96  0E25               	movlw	37
  2400  000E98  6E01               	movwf	fputc@c^0,c
  2401  000E9A  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2402  000E9E  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2403  000EA2  EC23  F00A         	call	_fputc	;wreg free
  2404  000EA6                     l2037:
  2405                           
  2406                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1375:             retu
      +                          rn 1;
  2407  000EA6  0E00               	movlw	0
  2408  000EA8  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  2409  000EAA  0E01               	movlw	1
  2410  000EAC  6E40               	movwf	?_vfpfcnvrt^0,c
  2411  000EAE  EF81  F007         	goto	l1048
  2412  000EB2                     l2041:
  2413                           
  2414                           ; BSR set to: 0
  2415                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1379:         ++*fmt;
  2416  000EB2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2417  000EB6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2418  000EBA  2ADE               	incf	postinc2,f,c
  2419  000EBC  0E00               	movlw	0
  2420  000EBE  22DD               	addwfc	postdec2,f,c
  2421  000EC0                     
  2422                           ; BSR set to: 0
  2423                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1380:         return 0
      +                          ;
  2424  000EC0  0E00               	movlw	0
  2425  000EC2  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  2426  000EC4  0E00               	movlw	0
  2427  000EC6  6E40               	movwf	?_vfpfcnvrt^0,c
  2428  000EC8  EF81  F007         	goto	l1048
  2429  000ECC                     l2047:
  2430                           
  2431                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1384:     fputc((int)(
      +                          *fmt)[0], fp);
  2432  000ECC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2433  000ED0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2434  000ED4  CFDE FFF6          	movff	postinc2,tblptrl
  2435  000ED8  CFDD FFF7          	movff	postdec2,tblptrh
  2436  000EDC                     	if	0	;tblptru may be non-zero
  2437  000EDC                     	endif
  2438  000EDC                     	if	0	;tblptru may be non-zero
  2439  000EDC                     	endif
  2440  000EDC  0008               	tblrd		*
  2441  000EDE  50F5               	movf	tablat,w,c
  2442  000EE0  6E01               	movwf	fputc@c^0,c
  2443  000EE2  6A02               	clrf	(fputc@c+1)^0,c
  2444  000EE4  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2445  000EE8  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2446  000EEC  EC23  F00A         	call	_fputc	;wreg free
  2447  000EF0                     
  2448                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2449  000EF0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2450  000EF4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2451  000EF8  2ADE               	incf	postinc2,f,c
  2452  000EFA  0E00               	movlw	0
  2453  000EFC  22DD               	addwfc	postdec2,f,c
  2454  000EFE  EF53  F007         	goto	l2037
  2455  000F02                     l1048:
  2456  000F02  0012               	return		;funcret
  2457  000F04                     __end_of_vfpfcnvrt:
  2458                           	callstack 0
  2459                           
  2460 ;; *************** function _dtoa *****************
  2461 ;; Defined at:
  2462 ;;		line 287 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c"
  2463 ;; Parameters:    Size  Location     Type
  2464 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2465 ;;		 -> sprintf@f(6), 
  2466 ;;  d               8   29[COMRAM] long long 
  2467 ;; Auto vars:     Size  Location     Type
  2468 ;;  n               8   53[COMRAM] long long 
  2469 ;;  i               2   61[COMRAM] int 
  2470 ;;  s               2   51[COMRAM] int 
  2471 ;;  w               2   49[COMRAM] int 
  2472 ;;  p               2   47[COMRAM] int 
  2473 ;; Return value:  Size  Location     Type
  2474 ;;                  2   27[COMRAM] int 
  2475 ;; Registers used:
  2476 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2477 ;; Tracked objects:
  2478 ;;		On entry : 0/0
  2479 ;;		On exit  : 0/0
  2480 ;;		Unchanged: 0/0
  2481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2482 ;;      Params:        10       0       0       0       0       0       0       0       0
  2483 ;;      Locals:        18       0       0       0       0       0       0       0       0
  2484 ;;      Temps:          8       0       0       0       0       0       0       0       0
  2485 ;;      Totals:        36       0       0       0       0       0       0       0       0
  2486 ;;Total ram usage:       36 bytes
  2487 ;; Hardware stack levels used: 1
  2488 ;; Hardware stack levels required when called: 4
  2489 ;; This function calls:
  2490 ;;		___aodiv
  2491 ;;		___aomod
  2492 ;;		_abs
  2493 ;;		_pad
  2494 ;; This function is called by:
  2495 ;;		_vfpfcnvrt
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498                           
  2499                           	psect	text12
  2500  000850                     __ptext12:
  2501                           	callstack 0
  2502  000850                     _dtoa:
  2503                           	callstack 22
  2504  000850                     
  2505                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 287: static int dtoa(F
      +                          ILE *fp, long long d);D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 2
      +                          88: {;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 289:     int i, p
      +                          , s, w;;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 290:     long l
      +                          ong n;;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 293:     n = d;
  2506  000850  C01E  F036         	movff	dtoa@d,dtoa@n
  2507  000854  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  2508  000858  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  2509  00085C  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  2510  000860  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  2511  000864  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  2512  000868  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  2513  00086C  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  2514  000870                     
  2515                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 294:     s = n < 0 ? 1
      +                           : 0;
  2516  000870  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  2517  000872  EF3D  F004         	goto	u1091
  2518  000876  EF40  F004         	goto	u1090
  2519  00087A                     u1091:
  2520  00087A  0E01               	movlw	1
  2521  00087C  EF41  F004         	goto	u1100
  2522  000880                     u1090:
  2523  000880  0E00               	movlw	0
  2524  000882                     u1100:
  2525  000882  6E34               	movwf	dtoa@s^0,c
  2526  000884  6A35               	clrf	(dtoa@s+1)^0,c
  2527                           
  2528                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2529  000886  5034               	movf	dtoa@s^0,w,c
  2530  000888  1035               	iorwf	(dtoa@s+1)^0,w,c
  2531  00088A  B4D8               	btfsc	status,2,c
  2532  00088C  EF4A  F004         	goto	u1111
  2533  000890  EF4C  F004         	goto	u1110
  2534  000894                     u1111:
  2535  000894  EF5C  F004         	goto	l1929
  2536  000898                     u1110:
  2537  000898                     
  2538                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 296:         n = -n;
  2539  000898  1E3D               	comf	(dtoa@n+7)^0,f,c
  2540  00089A  1E3C               	comf	(dtoa@n+6)^0,f,c
  2541  00089C  1E3B               	comf	(dtoa@n+5)^0,f,c
  2542  00089E  1E3A               	comf	(dtoa@n+4)^0,f,c
  2543  0008A0  1E39               	comf	(dtoa@n+3)^0,f,c
  2544  0008A2  1E38               	comf	(dtoa@n+2)^0,f,c
  2545  0008A4  1E37               	comf	(dtoa@n+1)^0,f,c
  2546  0008A6  6C36               	negf	dtoa@n^0,c
  2547  0008A8  0E00               	movlw	0
  2548  0008AA  2237               	addwfc	(dtoa@n+1)^0,f,c
  2549  0008AC  2238               	addwfc	(dtoa@n+2)^0,f,c
  2550  0008AE  2239               	addwfc	(dtoa@n+3)^0,f,c
  2551  0008B0  223A               	addwfc	(dtoa@n+4)^0,f,c
  2552  0008B2  223B               	addwfc	(dtoa@n+5)^0,f,c
  2553  0008B4  223C               	addwfc	(dtoa@n+6)^0,f,c
  2554  0008B6  223D               	addwfc	(dtoa@n+7)^0,f,c
  2555  0008B8                     l1929:
  2556                           
  2557                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 300:     if (!(prec < 
      +                          0)) {
  2558  0008B8  0100               	movlb	0	; () banked
  2559  0008BA  BF65               	btfsc	(_prec+1)& (0+255),7,b
  2560  0008BC  EF62  F004         	goto	u1121
  2561  0008C0  EF64  F004         	goto	u1120
  2562  0008C4                     u1121:
  2563  0008C4  EF65  F004         	goto	l1933
  2564  0008C8                     u1120:
  2565  0008C8                     
  2566                           ; BSR set to: 0
  2567                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 301:         flags &= 
      +                          ~(1 << 1);
  2568  0008C8  9366               	bcf	_flags& (0+255),1,b
  2569  0008CA                     l1933:
  2570                           
  2571                           ; BSR set to: 0
  2572                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 303:     p = (0 < prec
      +                          ) ? prec : 1;
  2573  0008CA  BF65               	btfsc	(_prec+1)& (0+255),7,b
  2574  0008CC  EF72  F004         	goto	u1130
  2575  0008D0  5165               	movf	(_prec+1)& (0+255),w,b
  2576  0008D2  E106               	bnz	u1131
  2577  0008D4  0564               	decf	_prec& (0+255),w,b
  2578  0008D6  B0D8               	btfsc	status,0,c
  2579  0008D8  EF70  F004         	goto	u1131
  2580  0008DC  EF72  F004         	goto	u1130
  2581  0008E0                     u1131:
  2582  0008E0  EF78  F004         	goto	l1021
  2583  0008E4                     u1130:
  2584  0008E4                     
  2585                           ; BSR set to: 0
  2586  0008E4  0E00               	movlw	0
  2587  0008E6  6E31               	movwf	(dtoa@p+1)^0,c
  2588  0008E8  0E01               	movlw	1
  2589  0008EA  6E30               	movwf	dtoa@p^0,c
  2590  0008EC  EF7C  F004         	goto	l1023
  2591  0008F0                     l1021:
  2592                           
  2593                           ; BSR set to: 0
  2594  0008F0  C064  F030         	movff	_prec,dtoa@p
  2595  0008F4  C065  F031         	movff	_prec+1,dtoa@p+1
  2596  0008F8                     l1023:
  2597                           
  2598                           ; BSR set to: 0
  2599                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 304:     w = width;
  2600  0008F8  C062  F032         	movff	_width,dtoa@w
  2601  0008FC  C063  F033         	movff	_width+1,dtoa@w+1
  2602  000900                     
  2603                           ; BSR set to: 0
  2604                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 305:     if (s || (fla
      +                          gs & (1 << 2))) {
  2605  000900  5034               	movf	dtoa@s^0,w,c
  2606  000902  1035               	iorwf	(dtoa@s+1)^0,w,c
  2607  000904  A4D8               	btfss	status,2,c
  2608  000906  EF87  F004         	goto	u1141
  2609  00090A  EF89  F004         	goto	u1140
  2610  00090E                     u1141:
  2611  00090E  EF90  F004         	goto	l1941
  2612  000912                     u1140:
  2613  000912                     
  2614                           ; BSR set to: 0
  2615  000912  A566               	btfss	_flags& (0+255),2,b
  2616  000914  EF8E  F004         	goto	u1151
  2617  000918  EF90  F004         	goto	u1150
  2618  00091C                     u1151:
  2619  00091C  EF93  F004         	goto	l1943
  2620  000920                     u1150:
  2621  000920                     l1941:
  2622                           
  2623                           ; BSR set to: 0
  2624                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 306:         --w;
  2625  000920  0632               	decf	dtoa@w^0,f,c
  2626  000922  A0D8               	btfss	status,0,c
  2627  000924  0633               	decf	(dtoa@w+1)^0,f,c
  2628  000926                     l1943:
  2629                           
  2630                           ; BSR set to: 0
  2631                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 310:     i = sizeof(db
      +                          uf) - 1;
  2632  000926  0E00               	movlw	0
  2633  000928  6E3F               	movwf	(dtoa@i+1)^0,c
  2634  00092A  0E1F               	movlw	31
  2635  00092C  6E3E               	movwf	dtoa@i^0,c
  2636  00092E                     
  2637                           ; BSR set to: 0
  2638                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] = '\0
      +                          ';
  2639  00092E  0E00               	movlw	0
  2640  000930  6F92               	movwf	(_dbuf+31)& (0+255),b
  2641                           
  2642                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 312:     while (!(i < 
      +                          1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2643  000932  EF17  F005         	goto	l1957
  2644  000936                     l1947:
  2645                           
  2646                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 313:         --i;
  2647  000936  063E               	decf	dtoa@i^0,f,c
  2648  000938  A0D8               	btfss	status,0,c
  2649  00093A  063F               	decf	(dtoa@i+1)^0,f,c
  2650  00093C                     
  2651                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 314:         dbuf[i] =
      +                           (char)((int)'0' + abs(n % 10));
  2652  00093C  0E73               	movlw	low _dbuf
  2653  00093E  243E               	addwf	dtoa@i^0,w,c
  2654  000940  6ED9               	movwf	fsr2l,c
  2655  000942  0E00               	movlw	high _dbuf
  2656  000944  203F               	addwfc	(dtoa@i+1)^0,w,c
  2657  000946  6EDA               	movwf	fsr2h,c
  2658  000948  C036  F001         	movff	dtoa@n,___aomod@dividend
  2659  00094C  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2660  000950  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2661  000954  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2662  000958  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2663  00095C  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2664  000960  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2665  000964  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2666  000968  0E0A               	movlw	10
  2667  00096A  6E09               	movwf	___aomod@divisor^0,c
  2668  00096C  0E00               	movlw	0
  2669  00096E  6E0A               	movwf	(___aomod@divisor+1)^0,c
  2670  000970  0E00               	movlw	0
  2671  000972  6E0B               	movwf	(___aomod@divisor+2)^0,c
  2672  000974  0E00               	movlw	0
  2673  000976  6E0C               	movwf	(___aomod@divisor+3)^0,c
  2674  000978  0E00               	movlw	0
  2675  00097A  6E0D               	movwf	(___aomod@divisor+4)^0,c
  2676  00097C  0E00               	movlw	0
  2677  00097E  6E0E               	movwf	(___aomod@divisor+5)^0,c
  2678  000980  0E00               	movlw	0
  2679  000982  6E0F               	movwf	(___aomod@divisor+6)^0,c
  2680  000984  0E00               	movlw	0
  2681  000986  6E10               	movwf	(___aomod@divisor+7)^0,c
  2682  000988  EC46  F008         	call	___aomod	;wreg free
  2683  00098C  C001  F026         	movff	?___aomod,??_dtoa
  2684  000990  C002  F027         	movff	?___aomod+1,??_dtoa+1
  2685  000994  C003  F028         	movff	?___aomod+2,??_dtoa+2
  2686  000998  C004  F029         	movff	?___aomod+3,??_dtoa+3
  2687  00099C  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  2688  0009A0  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  2689  0009A4  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  2690  0009A8  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  2691  0009AC  C026  F013         	movff	??_dtoa,abs@a
  2692  0009B0  C028  F014         	movff	??_dtoa+2,abs@a+1
  2693  0009B4  ECE1  F00D         	call	_abs	;wreg free
  2694  0009B8  5013               	movf	?_abs^0,w,c
  2695  0009BA  0F30               	addlw	48
  2696  0009BC  6EDF               	movwf	indf2,c
  2697  0009BE                     
  2698                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 315:         --p;
  2699  0009BE  0630               	decf	dtoa@p^0,f,c
  2700  0009C0  A0D8               	btfss	status,0,c
  2701  0009C2  0631               	decf	(dtoa@p+1)^0,f,c
  2702  0009C4                     
  2703                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 316:         --w;
  2704  0009C4  0632               	decf	dtoa@w^0,f,c
  2705  0009C6  A0D8               	btfss	status,0,c
  2706  0009C8  0633               	decf	(dtoa@w+1)^0,f,c
  2707  0009CA                     
  2708                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 317:         n = n / 1
      +                          0;
  2709  0009CA  C036  F001         	movff	dtoa@n,___aodiv@dividend
  2710  0009CE  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2711  0009D2  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2712  0009D6  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2713  0009DA  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2714  0009DE  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2715  0009E2  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2716  0009E6  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2717  0009EA  0E0A               	movlw	10
  2718  0009EC  6E09               	movwf	___aodiv@divisor^0,c
  2719  0009EE  0E00               	movlw	0
  2720  0009F0  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  2721  0009F2  0E00               	movlw	0
  2722  0009F4  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  2723  0009F6  0E00               	movlw	0
  2724  0009F8  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  2725  0009FA  0E00               	movlw	0
  2726  0009FC  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  2727  0009FE  0E00               	movlw	0
  2728  000A00  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  2729  000A02  0E00               	movlw	0
  2730  000A04  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  2731  000A06  0E00               	movlw	0
  2732  000A08  6E10               	movwf	(___aodiv@divisor+7)^0,c
  2733  000A0A  EC82  F007         	call	___aodiv	;wreg free
  2734  000A0E  C001  F036         	movff	?___aodiv,dtoa@n
  2735  000A12  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  2736  000A16  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  2737  000A1A  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  2738  000A1E  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  2739  000A22  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  2740  000A26  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  2741  000A2A  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  2742  000A2E                     l1957:
  2743                           
  2744                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 312:     while (!(i < 
      +                          1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2745  000A2E  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  2746  000A30  EF22  F005         	goto	u1161
  2747  000A34  503F               	movf	(dtoa@i+1)^0,w,c
  2748  000A36  E108               	bnz	u1160
  2749  000A38  043E               	decf	dtoa@i^0,w,c
  2750  000A3A  A0D8               	btfss	status,0,c
  2751  000A3C  EF22  F005         	goto	u1161
  2752  000A40  EF24  F005         	goto	u1160
  2753  000A44                     u1161:
  2754  000A44  EF55  F005         	goto	l1967
  2755  000A48                     u1160:
  2756  000A48  5036               	movf	dtoa@n^0,w,c
  2757  000A4A  1037               	iorwf	(dtoa@n+1)^0,w,c
  2758  000A4C  1038               	iorwf	(dtoa@n+2)^0,w,c
  2759  000A4E  1039               	iorwf	(dtoa@n+3)^0,w,c
  2760  000A50  103A               	iorwf	(dtoa@n+4)^0,w,c
  2761  000A52  103B               	iorwf	(dtoa@n+5)^0,w,c
  2762  000A54  103C               	iorwf	(dtoa@n+6)^0,w,c
  2763  000A56  103D               	iorwf	(dtoa@n+7)^0,w,c
  2764  000A58  A4D8               	btfss	status,2,c
  2765  000A5A  EF31  F005         	goto	u1171
  2766  000A5E  EF33  F005         	goto	u1170
  2767  000A62                     u1171:
  2768  000A62  EF9B  F004         	goto	l1947
  2769  000A66                     u1170:
  2770  000A66  BE31               	btfsc	(dtoa@p+1)^0,7,c
  2771  000A68  EF40  F005         	goto	u1180
  2772  000A6C  5031               	movf	(dtoa@p+1)^0,w,c
  2773  000A6E  E106               	bnz	u1181
  2774  000A70  0430               	decf	dtoa@p^0,w,c
  2775  000A72  B0D8               	btfsc	status,0,c
  2776  000A74  EF3E  F005         	goto	u1181
  2777  000A78  EF40  F005         	goto	u1180
  2778  000A7C                     u1181:
  2779  000A7C  EF9B  F004         	goto	l1947
  2780  000A80                     u1180:
  2781  000A80  BE33               	btfsc	(dtoa@w+1)^0,7,c
  2782  000A82  EF4B  F005         	goto	u1191
  2783  000A86  5033               	movf	(dtoa@w+1)^0,w,c
  2784  000A88  E108               	bnz	u1190
  2785  000A8A  0432               	decf	dtoa@w^0,w,c
  2786  000A8C  A0D8               	btfss	status,0,c
  2787  000A8E  EF4B  F005         	goto	u1191
  2788  000A92  EF4D  F005         	goto	u1190
  2789  000A96                     u1191:
  2790  000A96  EF55  F005         	goto	l1967
  2791  000A9A                     u1190:
  2792  000A9A  0100               	movlb	0	; () banked
  2793  000A9C  B366               	btfsc	_flags& (0+255),1,b
  2794  000A9E  EF53  F005         	goto	u1201
  2795  000AA2  EF55  F005         	goto	u1200
  2796  000AA6                     u1201:
  2797  000AA6  EF9B  F004         	goto	l1947
  2798  000AAA                     u1200:
  2799  000AAA                     l1967:
  2800                           
  2801                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 321:     if (s || (fla
      +                          gs & (1 << 2))) {
  2802  000AAA  5034               	movf	dtoa@s^0,w,c
  2803  000AAC  1035               	iorwf	(dtoa@s+1)^0,w,c
  2804  000AAE  A4D8               	btfss	status,2,c
  2805  000AB0  EF5C  F005         	goto	u1211
  2806  000AB4  EF5E  F005         	goto	u1210
  2807  000AB8                     u1211:
  2808  000AB8  EF66  F005         	goto	l1971
  2809  000ABC                     u1210:
  2810  000ABC  0100               	movlb	0	; () banked
  2811  000ABE  A566               	btfss	_flags& (0+255),2,b
  2812  000AC0  EF64  F005         	goto	u1221
  2813  000AC4  EF66  F005         	goto	u1220
  2814  000AC8                     u1221:
  2815  000AC8  EF84  F005         	goto	l1981
  2816  000ACC                     u1220:
  2817  000ACC                     l1971:
  2818                           
  2819                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 322:         --i;
  2820  000ACC  063E               	decf	dtoa@i^0,f,c
  2821  000ACE  A0D8               	btfss	status,0,c
  2822  000AD0  063F               	decf	(dtoa@i+1)^0,f,c
  2823  000AD2                     
  2824                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 323:         dbuf[i] =
      +                           s ? '-' : '+';
  2825  000AD2  5034               	movf	dtoa@s^0,w,c
  2826  000AD4  1035               	iorwf	(dtoa@s+1)^0,w,c
  2827  000AD6  A4D8               	btfss	status,2,c
  2828  000AD8  EF70  F005         	goto	u1231
  2829  000ADC  EF72  F005         	goto	u1230
  2830  000AE0                     u1231:
  2831  000AE0  EF78  F005         	goto	l1977
  2832  000AE4                     u1230:
  2833  000AE4  0E00               	movlw	0
  2834  000AE6  6E2F               	movwf	(_dtoa$946+1)^0,c
  2835  000AE8  0E2B               	movlw	43
  2836  000AEA  6E2E               	movwf	_dtoa$946^0,c
  2837  000AEC  EF7C  F005         	goto	l1979
  2838  000AF0                     l1977:
  2839  000AF0  0E00               	movlw	0
  2840  000AF2  6E2F               	movwf	(_dtoa$946+1)^0,c
  2841  000AF4  0E2D               	movlw	45
  2842  000AF6  6E2E               	movwf	_dtoa$946^0,c
  2843  000AF8                     l1979:
  2844  000AF8  0E73               	movlw	low _dbuf
  2845  000AFA  243E               	addwf	dtoa@i^0,w,c
  2846  000AFC  6ED9               	movwf	fsr2l,c
  2847  000AFE  0E00               	movlw	high _dbuf
  2848  000B00  203F               	addwfc	(dtoa@i+1)^0,w,c
  2849  000B02  6EDA               	movwf	fsr2h,c
  2850  000B04  C02E  FFDF         	movff	_dtoa$946,indf2
  2851  000B08                     l1981:
  2852                           
  2853                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 327:     return pad(fp
      +                          , &dbuf[i], w);
  2854  000B08  C01C  F011         	movff	dtoa@fp,pad@fp
  2855  000B0C  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  2856  000B10  0E73               	movlw	low _dbuf
  2857  000B12  243E               	addwf	dtoa@i^0,w,c
  2858  000B14  6E13               	movwf	pad@buf^0,c
  2859  000B16  0E00               	movlw	high _dbuf
  2860  000B18  203F               	addwfc	(dtoa@i+1)^0,w,c
  2861  000B1A  6E14               	movwf	(pad@buf+1)^0,c
  2862  000B1C  C032  F015         	movff	dtoa@w,pad@p
  2863  000B20  C033  F016         	movff	dtoa@w+1,pad@p+1
  2864  000B24  EC88  F00A         	call	_pad	;wreg free
  2865  000B28  C011  F01C         	movff	?_pad,?_dtoa
  2866  000B2C  C012  F01D         	movff	?_pad+1,?_dtoa+1
  2867  000B30  0012               	return		;funcret
  2868  000B32                     __end_of_dtoa:
  2869                           	callstack 0
  2870                           
  2871 ;; *************** function _pad *****************
  2872 ;; Defined at:
  2873 ;;		line 72 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c"
  2874 ;; Parameters:    Size  Location     Type
  2875 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2876 ;;		 -> sprintf@f(6), 
  2877 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2878 ;;		 -> dbuf(32), 
  2879 ;;  p               2   20[COMRAM] int 
  2880 ;; Auto vars:     Size  Location     Type
  2881 ;;  w               2   25[COMRAM] int 
  2882 ;;  i               2   23[COMRAM] int 
  2883 ;; Return value:  Size  Location     Type
  2884 ;;                  2   16[COMRAM] int 
  2885 ;; Registers used:
  2886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2887 ;; Tracked objects:
  2888 ;;		On entry : 0/0
  2889 ;;		On exit  : 0/0
  2890 ;;		Unchanged: 0/0
  2891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2892 ;;      Params:         6       0       0       0       0       0       0       0       0
  2893 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2894 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2895 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2896 ;;Total ram usage:       11 bytes
  2897 ;; Hardware stack levels used: 1
  2898 ;; Hardware stack levels required when called: 3
  2899 ;; This function calls:
  2900 ;;		_fputc
  2901 ;;		_fputs
  2902 ;;		_strlen
  2903 ;; This function is called by:
  2904 ;;		_dtoa
  2905 ;; This function uses a non-reentrant model
  2906 ;;
  2907                           
  2908                           	psect	text13
  2909  001510                     __ptext13:
  2910                           	callstack 0
  2911  001510                     _pad:
  2912                           	callstack 22
  2913  001510                     
  2914                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 72: static int pad(FIL
      +                          E *fp, char *buf, int p);D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c
      +                          : 73: {;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 74:     int i, 
      +                          w;;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 77:     if (flags & 
      +                          (1 << 0)) {
  2915  001510  0100               	movlb	0	; () banked
  2916  001512  A166               	btfss	_flags& (0+255),0,b
  2917  001514  EF8E  F00A         	goto	u1041
  2918  001518  EF90  F00A         	goto	u1040
  2919  00151C                     u1041:
  2920  00151C  EF9A  F00A         	goto	l1881
  2921  001520                     u1040:
  2922  001520                     
  2923                           ; BSR set to: 0
  2924                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 78:         fputs((con
      +                          st char *)buf, fp);
  2925  001520  C013  F00A         	movff	pad@buf,fputs@s
  2926  001524  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2927  001528  C011  F00C         	movff	pad@fp,fputs@fp
  2928  00152C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2929  001530  ECBF  F00D         	call	_fputs	;wreg free
  2930  001534                     l1881:
  2931                           
  2932                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 82:     w = (p < 0) ? 
      +                          0 : p;
  2933  001534  BE16               	btfsc	(pad@p+1)^0,7,c
  2934  001536  EF9F  F00A         	goto	u1051
  2935  00153A  EFA1  F00A         	goto	u1050
  2936  00153E                     u1051:
  2937  00153E  EFA7  F00A         	goto	l1885
  2938  001542                     u1050:
  2939  001542  C015  F01A         	movff	pad@p,pad@w
  2940  001546  C016  F01B         	movff	pad@p+1,pad@w+1
  2941  00154A  EFAB  F00A         	goto	l1010
  2942  00154E                     l1885:
  2943  00154E  0E00               	movlw	0
  2944  001550  6E1B               	movwf	(pad@w+1)^0,c
  2945  001552  0E00               	movlw	0
  2946  001554  6E1A               	movwf	pad@w^0,c
  2947  001556                     l1010:
  2948                           
  2949                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2950  001556  0E00               	movlw	0
  2951  001558  6E19               	movwf	(pad@i+1)^0,c
  2952  00155A  0E00               	movlw	0
  2953  00155C  6E18               	movwf	pad@i^0,c
  2954                           
  2955                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 84:     while (i < w) 
      +                          {
  2956  00155E  EFBD  F00A         	goto	l1891
  2957  001562                     l1887:
  2958                           
  2959                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 85:         fputc(' ',
      +                           fp);
  2960  001562  0E00               	movlw	0
  2961  001564  6E02               	movwf	(fputc@c+1)^0,c
  2962  001566  0E20               	movlw	32
  2963  001568  6E01               	movwf	fputc@c^0,c
  2964  00156A  C011  F003         	movff	pad@fp,fputc@fp
  2965  00156E  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2966  001572  EC23  F00A         	call	_fputc	;wreg free
  2967  001576                     
  2968                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2969  001576  4A18               	infsnz	pad@i^0,f,c
  2970  001578  2A19               	incf	(pad@i+1)^0,f,c
  2971  00157A                     l1891:
  2972                           
  2973                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 84:     while (i < w) 
      +                          {
  2974  00157A  501A               	movf	pad@w^0,w,c
  2975  00157C  5C18               	subwf	pad@i^0,w,c
  2976  00157E  5019               	movf	(pad@i+1)^0,w,c
  2977  001580  0A80               	xorlw	128
  2978  001582  6E17               	movwf	??_pad^0,c
  2979  001584  501B               	movf	(pad@w+1)^0,w,c
  2980  001586  0A80               	xorlw	128
  2981  001588  5817               	subwfb	??_pad^0,w,c
  2982  00158A  A0D8               	btfss	status,0,c
  2983  00158C  EFCA  F00A         	goto	u1061
  2984  001590  EFCC  F00A         	goto	u1060
  2985  001594                     u1061:
  2986  001594  EFB1  F00A         	goto	l1887
  2987  001598                     u1060:
  2988  001598                     
  2989                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 90:     if (!(flags & 
      +                          (1 << 0))) {
  2990  001598  0100               	movlb	0	; () banked
  2991  00159A  B166               	btfsc	_flags& (0+255),0,b
  2992  00159C  EFD2  F00A         	goto	u1071
  2993  0015A0  EFD4  F00A         	goto	u1070
  2994  0015A4                     u1071:
  2995  0015A4  EFDE  F00A         	goto	l1895
  2996  0015A8                     u1070:
  2997  0015A8                     
  2998                           ; BSR set to: 0
  2999                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 91:         fputs((con
      +                          st char *)buf, fp);
  3000  0015A8  C013  F00A         	movff	pad@buf,fputs@s
  3001  0015AC  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3002  0015B0  C011  F00C         	movff	pad@fp,fputs@fp
  3003  0015B4  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3004  0015B8  ECBF  F00D         	call	_fputs	;wreg free
  3005  0015BC                     l1895:
  3006                           
  3007                           ;D:\XC8 compilador para el MPLAB\pic\sources\c99\common\doprnt.c: 94:     return (int)(s
      +                          trlen(buf) + (size_t)w);
  3008  0015BC  C013  F001         	movff	pad@buf,strlen@s
  3009  0015C0  C014  F002         	movff	pad@buf+1,strlen@s+1
  3010  0015C4  EC5B  F00E         	call	_strlen	;wreg free
  3011  0015C8  501A               	movf	pad@w^0,w,c
  3012  0015CA  2401               	addwf	?_strlen^0,w,c
  3013  0015CC  6E11               	movwf	?_pad^0,c
  3014  0015CE  501B               	movf	(pad@w+1)^0,w,c
  3015  0015D0  2002               	addwfc	(?_strlen+1)^0,w,c
  3016  0015D2  6E12               	movwf	(?_pad+1)^0,c
  3017  0015D4  0012               	return		;funcret
  3018  0015D6                     __end_of_pad:
  3019                           	callstack 0
  3020                           
  3021 ;; *************** function _strlen *****************
  3022 ;; Defined at:
  3023 ;;		line 5 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\strlen.c"
  3024 ;; Parameters:    Size  Location     Type
  3025 ;;  s               2    0[COMRAM] PTR const unsigned char 
  3026 ;;		 -> dbuf(32), 
  3027 ;; Auto vars:     Size  Location     Type
  3028 ;;  a               2    2[COMRAM] PTR const unsigned char 
  3029 ;;		 -> dbuf(32), 
  3030 ;; Return value:  Size  Location     Type
  3031 ;;                  2    0[COMRAM] unsigned int 
  3032 ;; Registers used:
  3033 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3034 ;; Tracked objects:
  3035 ;;		On entry : 0/0
  3036 ;;		On exit  : 0/0
  3037 ;;		Unchanged: 0/0
  3038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3039 ;;      Params:         2       0       0       0       0       0       0       0       0
  3040 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3041 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3042 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3043 ;;Total ram usage:        4 bytes
  3044 ;; Hardware stack levels used: 1
  3045 ;; This function calls:
  3046 ;;		Nothing
  3047 ;; This function is called by:
  3048 ;;		_pad
  3049 ;; This function uses a non-reentrant model
  3050 ;;
  3051                           
  3052                           	psect	text14
  3053  001CB6                     __ptext14:
  3054                           	callstack 0
  3055  001CB6                     _strlen:
  3056                           	callstack 24
  3057  001CB6  C001  F003         	movff	strlen@s,strlen@a
  3058  001CBA  C002  F004         	movff	strlen@s+1,strlen@a+1
  3059  001CBE  EF63  F00E         	goto	l1791
  3060  001CC2                     l1789:
  3061  001CC2  4A01               	infsnz	strlen@s^0,f,c
  3062  001CC4  2A02               	incf	(strlen@s+1)^0,f,c
  3063  001CC6                     l1791:
  3064  001CC6  C001  FFD9         	movff	strlen@s,fsr2l
  3065  001CCA  C002  FFDA         	movff	strlen@s+1,fsr2h
  3066  001CCE  50DF               	movf	indf2,w,c
  3067  001CD0  A4D8               	btfss	status,2,c
  3068  001CD2  EF6D  F00E         	goto	u901
  3069  001CD6  EF6F  F00E         	goto	u900
  3070  001CDA                     u901:
  3071  001CDA  EF61  F00E         	goto	l1789
  3072  001CDE                     u900:
  3073  001CDE  5003               	movf	strlen@a^0,w,c
  3074  001CE0  5C01               	subwf	strlen@s^0,w,c
  3075  001CE2  6E01               	movwf	?_strlen^0,c
  3076  001CE4  5004               	movf	(strlen@a+1)^0,w,c
  3077  001CE6  5802               	subwfb	(strlen@s+1)^0,w,c
  3078  001CE8  6E02               	movwf	(?_strlen+1)^0,c
  3079  001CEA  0012               	return		;funcret
  3080  001CEC                     __end_of_strlen:
  3081                           	callstack 0
  3082                           
  3083 ;; *************** function _fputs *****************
  3084 ;; Defined at:
  3085 ;;		line 8 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\nf_fputs.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3088 ;;		 -> dbuf(32), 
  3089 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3090 ;;		 -> sprintf@f(6), 
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;  i               2   14[COMRAM] int 
  3093 ;;  c               1   13[COMRAM] unsigned char 
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  2    9[COMRAM] int 
  3096 ;; Registers used:
  3097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3103 ;;      Params:         4       0       0       0       0       0       0       0       0
  3104 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3105 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3106 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3107 ;;Total ram usage:        7 bytes
  3108 ;; Hardware stack levels used: 1
  3109 ;; Hardware stack levels required when called: 2
  3110 ;; This function calls:
  3111 ;;		_fputc
  3112 ;; This function is called by:
  3113 ;;		_pad
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           	psect	text15
  3118  001B7E                     __ptext15:
  3119                           	callstack 0
  3120  001B7E                     _fputs:
  3121                           	callstack 22
  3122  001B7E  0E00               	movlw	0
  3123  001B80  6E10               	movwf	(fputs@i+1)^0,c
  3124  001B82  0E00               	movlw	0
  3125  001B84  6E0F               	movwf	fputs@i^0,c
  3126  001B86  EFD0  F00D         	goto	l1785
  3127  001B8A                     l1781:
  3128  001B8A  C00E  F001         	movff	fputs@c,fputc@c
  3129  001B8E  6A02               	clrf	(fputc@c+1)^0,c
  3130  001B90  C00C  F003         	movff	fputs@fp,fputc@fp
  3131  001B94  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  3132  001B98  EC23  F00A         	call	_fputc	;wreg free
  3133  001B9C  4A0F               	infsnz	fputs@i^0,f,c
  3134  001B9E  2A10               	incf	(fputs@i+1)^0,f,c
  3135  001BA0                     l1785:
  3136  001BA0  500F               	movf	fputs@i^0,w,c
  3137  001BA2  240A               	addwf	fputs@s^0,w,c
  3138  001BA4  6ED9               	movwf	fsr2l,c
  3139  001BA6  5010               	movf	(fputs@i+1)^0,w,c
  3140  001BA8  200B               	addwfc	(fputs@s+1)^0,w,c
  3141  001BAA  6EDA               	movwf	fsr2h,c
  3142  001BAC  50DF               	movf	indf2,w,c
  3143  001BAE  6E0E               	movwf	fputs@c^0,c
  3144  001BB0  500E               	movf	fputs@c^0,w,c
  3145  001BB2  A4D8               	btfss	status,2,c
  3146  001BB4  EFDE  F00D         	goto	u891
  3147  001BB8  EFE0  F00D         	goto	u890
  3148  001BBC                     u891:
  3149  001BBC  EFC5  F00D         	goto	l1781
  3150  001BC0                     u890:
  3151  001BC0  0012               	return		;funcret
  3152  001BC2                     __end_of_fputs:
  3153                           	callstack 0
  3154                           
  3155 ;; *************** function _fputc *****************
  3156 ;; Defined at:
  3157 ;;		line 8 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\nf_fputc.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;  c               2    0[COMRAM] int 
  3160 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  3161 ;;		 -> sprintf@f(6), 
  3162 ;; Auto vars:     Size  Location     Type
  3163 ;;		None
  3164 ;; Return value:  Size  Location     Type
  3165 ;;                  2    0[COMRAM] int 
  3166 ;; Registers used:
  3167 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3168 ;; Tracked objects:
  3169 ;;		On entry : 0/0
  3170 ;;		On exit  : 0/0
  3171 ;;		Unchanged: 0/0
  3172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3173 ;;      Params:         4       0       0       0       0       0       0       0       0
  3174 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3175 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3176 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3177 ;;Total ram usage:        9 bytes
  3178 ;; Hardware stack levels used: 1
  3179 ;; Hardware stack levels required when called: 1
  3180 ;; This function calls:
  3181 ;;		_putch
  3182 ;; This function is called by:
  3183 ;;		_pad
  3184 ;;		_vfpfcnvrt
  3185 ;;		_fputs
  3186 ;; This function uses a non-reentrant model
  3187 ;;
  3188                           
  3189                           	psect	text16
  3190  001446                     __ptext16:
  3191                           	callstack 0
  3192  001446                     _fputc:
  3193                           	callstack 25
  3194  001446  5003               	movf	fputc@fp^0,w,c
  3195  001448  1004               	iorwf	(fputc@fp+1)^0,w,c
  3196  00144A  B4D8               	btfsc	status,2,c
  3197  00144C  EF2A  F00A         	goto	u851
  3198  001450  EF2C  F00A         	goto	u850
  3199  001454                     u851:
  3200  001454  EF35  F00A         	goto	l1769
  3201  001458                     u850:
  3202  001458  5003               	movf	fputc@fp^0,w,c
  3203  00145A  1004               	iorwf	(fputc@fp+1)^0,w,c
  3204  00145C  A4D8               	btfss	status,2,c
  3205  00145E  EF33  F00A         	goto	u861
  3206  001462  EF35  F00A         	goto	u860
  3207  001466                     u861:
  3208  001466  EF3A  F00A         	goto	l1771
  3209  00146A                     u860:
  3210  00146A                     l1769:
  3211  00146A  5001               	movf	fputc@c^0,w,c
  3212  00146C  ECFF  F00E         	call	_putch
  3213  001470  EF87  F00A         	goto	l1074
  3214  001474                     l1771:
  3215  001474  EE20 F004          	lfsr	2,4
  3216  001478  5003               	movf	fputc@fp^0,w,c
  3217  00147A  26D9               	addwf	fsr2l,f,c
  3218  00147C  5004               	movf	(fputc@fp+1)^0,w,c
  3219  00147E  22DA               	addwfc	fsr2h,f,c
  3220  001480  50DE               	movf	postinc2,w,c
  3221  001482  10DE               	iorwf	postinc2,w,c
  3222  001484  B4D8               	btfsc	status,2,c
  3223  001486  EF47  F00A         	goto	u871
  3224  00148A  EF49  F00A         	goto	u870
  3225  00148E                     u871:
  3226  00148E  EF64  F00A         	goto	l1775
  3227  001492                     u870:
  3228  001492  EE20 F004          	lfsr	2,4
  3229  001496  5003               	movf	fputc@fp^0,w,c
  3230  001498  26D9               	addwf	fsr2l,f,c
  3231  00149A  5004               	movf	(fputc@fp+1)^0,w,c
  3232  00149C  22DA               	addwfc	fsr2h,f,c
  3233  00149E  EE10 F002          	lfsr	1,2
  3234  0014A2  5003               	movf	fputc@fp^0,w,c
  3235  0014A4  26E1               	addwf	fsr1l,f,c
  3236  0014A6  5004               	movf	(fputc@fp+1)^0,w,c
  3237  0014A8  22E2               	addwfc	fsr1h,f,c
  3238  0014AA  50DE               	movf	postinc2,w,c
  3239  0014AC  5CE6               	subwf	postinc1,w,c
  3240  0014AE  50E6               	movf	postinc1,w,c
  3241  0014B0  0A80               	xorlw	128
  3242  0014B2  6E09               	movwf	(??_fputc+4)^0,c
  3243  0014B4  50DE               	movf	postinc2,w,c
  3244  0014B6  0A80               	xorlw	128
  3245  0014B8  5809               	subwfb	(??_fputc+4)^0,w,c
  3246  0014BA  B0D8               	btfsc	status,0,c
  3247  0014BC  EF62  F00A         	goto	u881
  3248  0014C0  EF64  F00A         	goto	u880
  3249  0014C4                     u881:
  3250  0014C4  EF87  F00A         	goto	l1074
  3251  0014C8                     u880:
  3252  0014C8                     l1775:
  3253  0014C8  EE20 F002          	lfsr	2,2
  3254  0014CC  5003               	movf	fputc@fp^0,w,c
  3255  0014CE  26D9               	addwf	fsr2l,f,c
  3256  0014D0  5004               	movf	(fputc@fp+1)^0,w,c
  3257  0014D2  22DA               	addwfc	fsr2h,f,c
  3258  0014D4  CFDE F005          	movff	postinc2,??_fputc
  3259  0014D8  CFDD F006          	movff	postdec2,??_fputc+1
  3260  0014DC  C003  FFD9         	movff	fputc@fp,fsr2l
  3261  0014E0  C004  FFDA         	movff	fputc@fp+1,fsr2h
  3262  0014E4  CFDE F007          	movff	postinc2,??_fputc+2
  3263  0014E8  CFDD F008          	movff	postdec2,??_fputc+3
  3264  0014EC  5005               	movf	??_fputc^0,w,c
  3265  0014EE  2407               	addwf	(??_fputc+2)^0,w,c
  3266  0014F0  6ED9               	movwf	fsr2l,c
  3267  0014F2  5006               	movf	(??_fputc+1)^0,w,c
  3268  0014F4  2008               	addwfc	(??_fputc+3)^0,w,c
  3269  0014F6  6EDA               	movwf	fsr2h,c
  3270  0014F8  C001  FFDF         	movff	fputc@c,indf2
  3271  0014FC  EE20 F002          	lfsr	2,2
  3272  001500  5003               	movf	fputc@fp^0,w,c
  3273  001502  26D9               	addwf	fsr2l,f,c
  3274  001504  5004               	movf	(fputc@fp+1)^0,w,c
  3275  001506  22DA               	addwfc	fsr2h,f,c
  3276  001508  2ADE               	incf	postinc2,f,c
  3277  00150A  0E00               	movlw	0
  3278  00150C  22DD               	addwfc	postdec2,f,c
  3279  00150E                     l1074:
  3280  00150E  0012               	return		;funcret
  3281  001510                     __end_of_fputc:
  3282                           	callstack 0
  3283                           
  3284 ;; *************** function _putch *****************
  3285 ;; Defined at:
  3286 ;;		line 7 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\putch.c"
  3287 ;; Parameters:    Size  Location     Type
  3288 ;;  c               1    wreg     unsigned char 
  3289 ;; Auto vars:     Size  Location     Type
  3290 ;;  c               1    0[COMRAM] unsigned char 
  3291 ;; Return value:  Size  Location     Type
  3292 ;;                  1    wreg      void 
  3293 ;; Registers used:
  3294 ;;		wreg
  3295 ;; Tracked objects:
  3296 ;;		On entry : 0/0
  3297 ;;		On exit  : 0/0
  3298 ;;		Unchanged: 0/0
  3299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3300 ;;      Params:         0       0       0       0       0       0       0       0       0
  3301 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3302 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3303 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3304 ;;Total ram usage:        0 bytes
  3305 ;; Hardware stack levels used: 1
  3306 ;; This function calls:
  3307 ;;		Nothing
  3308 ;; This function is called by:
  3309 ;;		_fputc
  3310 ;; This function uses a non-reentrant model
  3311 ;;
  3312                           
  3313                           	psect	text17
  3314  001DFE                     __ptext17:
  3315                           	callstack 0
  3316  001DFE                     _putch:
  3317                           	callstack 25
  3318  001DFE  0012               	return		;funcret
  3319  001E00                     __end_of_putch:
  3320                           	callstack 0
  3321                           
  3322 ;; *************** function _abs *****************
  3323 ;; Defined at:
  3324 ;;		line 1 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\abs.c"
  3325 ;; Parameters:    Size  Location     Type
  3326 ;;  a               2   18[COMRAM] int 
  3327 ;; Auto vars:     Size  Location     Type
  3328 ;;		None
  3329 ;; Return value:  Size  Location     Type
  3330 ;;                  2   18[COMRAM] int 
  3331 ;; Registers used:
  3332 ;;		wreg, status,2, status,0
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3338 ;;      Params:         2       0       0       0       0       0       0       0       0
  3339 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3340 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3341 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3342 ;;Total ram usage:        4 bytes
  3343 ;; Hardware stack levels used: 1
  3344 ;; This function calls:
  3345 ;;		Nothing
  3346 ;; This function is called by:
  3347 ;;		_dtoa
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350                           
  3351                           	psect	text18
  3352  001BC2                     __ptext18:
  3353                           	callstack 0
  3354  001BC2                     _abs:
  3355                           	callstack 25
  3356  001BC2  BE14               	btfsc	(abs@a+1)^0,7,c
  3357  001BC4  EFEE  F00D         	goto	u1080
  3358  001BC8  5014               	movf	(abs@a+1)^0,w,c
  3359  001BCA  E106               	bnz	u1081
  3360  001BCC  0413               	decf	abs@a^0,w,c
  3361  001BCE  B0D8               	btfsc	status,0,c
  3362  001BD0  EFEC  F00D         	goto	u1081
  3363  001BD4  EFEE  F00D         	goto	u1080
  3364  001BD8                     u1081:
  3365  001BD8  EFFC  F00D         	goto	l1059
  3366  001BDC                     u1080:
  3367  001BDC  C013  F015         	movff	abs@a,??_abs
  3368  001BE0  C014  F016         	movff	abs@a+1,??_abs+1
  3369  001BE4  1E15               	comf	??_abs^0,f,c
  3370  001BE6  1E16               	comf	(??_abs+1)^0,f,c
  3371  001BE8  4A15               	infsnz	??_abs^0,f,c
  3372  001BEA  2A16               	incf	(??_abs+1)^0,f,c
  3373  001BEC  C015  F013         	movff	??_abs,?_abs
  3374  001BF0  C016  F014         	movff	??_abs+1,?_abs+1
  3375  001BF4  EF00  F00E         	goto	l1062
  3376  001BF8                     l1059:
  3377  001BF8  C013  F013         	movff	abs@a,?_abs
  3378  001BFC  C014  F014         	movff	abs@a+1,?_abs+1
  3379  001C00                     l1062:
  3380  001C00  0012               	return		;funcret
  3381  001C02                     __end_of_abs:
  3382                           	callstack 0
  3383                           
  3384 ;; *************** function ___aomod *****************
  3385 ;; Defined at:
  3386 ;;		line 9 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\aomod.c"
  3387 ;; Parameters:    Size  Location     Type
  3388 ;;  dividend        8    0[COMRAM] long long 
  3389 ;;  divisor         8    8[COMRAM] long long 
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;  sign            1   17[COMRAM] unsigned char 
  3392 ;;  counter         1   16[COMRAM] unsigned char 
  3393 ;; Return value:  Size  Location     Type
  3394 ;;                  8    0[COMRAM] long long 
  3395 ;; Registers used:
  3396 ;;		wreg, status,2, status,0
  3397 ;; Tracked objects:
  3398 ;;		On entry : 0/0
  3399 ;;		On exit  : 0/0
  3400 ;;		Unchanged: 0/0
  3401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3402 ;;      Params:        16       0       0       0       0       0       0       0       0
  3403 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3404 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3405 ;;      Totals:        18       0       0       0       0       0       0       0       0
  3406 ;;Total ram usage:       18 bytes
  3407 ;; Hardware stack levels used: 1
  3408 ;; This function calls:
  3409 ;;		Nothing
  3410 ;; This function is called by:
  3411 ;;		_dtoa
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414                           
  3415                           	psect	text19
  3416  00108C                     __ptext19:
  3417                           	callstack 0
  3418  00108C                     ___aomod:
  3419                           	callstack 25
  3420  00108C  0E00               	movlw	0
  3421  00108E  6E12               	movwf	___aomod@sign^0,c
  3422  001090  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  3423  001092  EF4F  F008         	goto	u980
  3424  001096  EF4D  F008         	goto	u981
  3425  00109A                     u981:
  3426  00109A  EF61  F008         	goto	l1849
  3427  00109E                     u980:
  3428  00109E  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3429  0010A0  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3430  0010A2  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3431  0010A4  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3432  0010A6  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3433  0010A8  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3434  0010AA  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3435  0010AC  6C01               	negf	___aomod@dividend^0,c
  3436  0010AE  0E00               	movlw	0
  3437  0010B0  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3438  0010B2  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3439  0010B4  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3440  0010B6  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3441  0010B8  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3442  0010BA  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3443  0010BC  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3444  0010BE  0E01               	movlw	1
  3445  0010C0  6E12               	movwf	___aomod@sign^0,c
  3446  0010C2                     l1849:
  3447  0010C2  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  3448  0010C4  EF68  F008         	goto	u990
  3449  0010C8  EF66  F008         	goto	u991
  3450  0010CC                     u991:
  3451  0010CC  EF78  F008         	goto	l1853
  3452  0010D0                     u990:
  3453  0010D0  1E10               	comf	(___aomod@divisor+7)^0,f,c
  3454  0010D2  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  3455  0010D4  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  3456  0010D6  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  3457  0010D8  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  3458  0010DA  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  3459  0010DC  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  3460  0010DE  6C09               	negf	___aomod@divisor^0,c
  3461  0010E0  0E00               	movlw	0
  3462  0010E2  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  3463  0010E4  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  3464  0010E6  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  3465  0010E8  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  3466  0010EA  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  3467  0010EC  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  3468  0010EE  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  3469  0010F0                     l1853:
  3470  0010F0  5009               	movf	___aomod@divisor^0,w,c
  3471  0010F2  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  3472  0010F4  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  3473  0010F6  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  3474  0010F8  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  3475  0010FA  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  3476  0010FC  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  3477  0010FE  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  3478  001100  B4D8               	btfsc	status,2,c
  3479  001102  EF85  F008         	goto	u1001
  3480  001106  EF87  F008         	goto	u1000
  3481  00110A                     u1001:
  3482  00110A  EFCF  F008         	goto	l1869
  3483  00110E                     u1000:
  3484  00110E  0E01               	movlw	1
  3485  001110  6E11               	movwf	___aomod@counter^0,c
  3486  001112  EF95  F008         	goto	l1859
  3487  001116                     l1857:
  3488  001116  90D8               	bcf	status,0,c
  3489  001118  3609               	rlcf	___aomod@divisor^0,f,c
  3490  00111A  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  3491  00111C  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  3492  00111E  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  3493  001120  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  3494  001122  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  3495  001124  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  3496  001126  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  3497  001128  2A11               	incf	___aomod@counter^0,f,c
  3498  00112A                     l1859:
  3499  00112A  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  3500  00112C  EF9A  F008         	goto	u1011
  3501  001130  EF9C  F008         	goto	u1010
  3502  001134                     u1011:
  3503  001134  EF8B  F008         	goto	l1857
  3504  001138                     u1010:
  3505  001138                     l1861:
  3506  001138  5009               	movf	___aomod@divisor^0,w,c
  3507  00113A  5C01               	subwf	___aomod@dividend^0,w,c
  3508  00113C  500A               	movf	(___aomod@divisor+1)^0,w,c
  3509  00113E  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  3510  001140  500B               	movf	(___aomod@divisor+2)^0,w,c
  3511  001142  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  3512  001144  500C               	movf	(___aomod@divisor+3)^0,w,c
  3513  001146  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  3514  001148  500D               	movf	(___aomod@divisor+4)^0,w,c
  3515  00114A  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  3516  00114C  500E               	movf	(___aomod@divisor+5)^0,w,c
  3517  00114E  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  3518  001150  500F               	movf	(___aomod@divisor+6)^0,w,c
  3519  001152  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  3520  001154  5010               	movf	(___aomod@divisor+7)^0,w,c
  3521  001156  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  3522  001158  A0D8               	btfss	status,0,c
  3523  00115A  EFB1  F008         	goto	u1021
  3524  00115E  EFB3  F008         	goto	u1020
  3525  001162                     u1021:
  3526  001162  EFC3  F008         	goto	l1865
  3527  001166                     u1020:
  3528  001166  5009               	movf	___aomod@divisor^0,w,c
  3529  001168  5E01               	subwf	___aomod@dividend^0,f,c
  3530  00116A  500A               	movf	(___aomod@divisor+1)^0,w,c
  3531  00116C  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  3532  00116E  500B               	movf	(___aomod@divisor+2)^0,w,c
  3533  001170  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  3534  001172  500C               	movf	(___aomod@divisor+3)^0,w,c
  3535  001174  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  3536  001176  500D               	movf	(___aomod@divisor+4)^0,w,c
  3537  001178  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  3538  00117A  500E               	movf	(___aomod@divisor+5)^0,w,c
  3539  00117C  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  3540  00117E  500F               	movf	(___aomod@divisor+6)^0,w,c
  3541  001180  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  3542  001182  5010               	movf	(___aomod@divisor+7)^0,w,c
  3543  001184  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  3544  001186                     l1865:
  3545  001186  90D8               	bcf	status,0,c
  3546  001188  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  3547  00118A  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  3548  00118C  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  3549  00118E  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  3550  001190  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  3551  001192  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  3552  001194  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  3553  001196  3209               	rrcf	___aomod@divisor^0,f,c
  3554  001198  2E11               	decfsz	___aomod@counter^0,f,c
  3555  00119A  EF9C  F008         	goto	l1861
  3556  00119E                     l1869:
  3557  00119E  5012               	movf	___aomod@sign^0,w,c
  3558  0011A0  B4D8               	btfsc	status,2,c
  3559  0011A2  EFD5  F008         	goto	u1031
  3560  0011A6  EFD7  F008         	goto	u1030
  3561  0011AA                     u1031:
  3562  0011AA  EFE7  F008         	goto	l1873
  3563  0011AE                     u1030:
  3564  0011AE  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3565  0011B0  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3566  0011B2  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3567  0011B4  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3568  0011B6  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3569  0011B8  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3570  0011BA  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3571  0011BC  6C01               	negf	___aomod@dividend^0,c
  3572  0011BE  0E00               	movlw	0
  3573  0011C0  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3574  0011C2  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3575  0011C4  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3576  0011C6  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3577  0011C8  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3578  0011CA  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3579  0011CC  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3580  0011CE                     l1873:
  3581  0011CE  C001  F001         	movff	___aomod@dividend,?___aomod
  3582  0011D2  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3583  0011D6  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3584  0011DA  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3585  0011DE  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3586  0011E2  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3587  0011E6  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3588  0011EA  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3589  0011EE  0012               	return		;funcret
  3590  0011F0                     __end_of___aomod:
  3591                           	callstack 0
  3592                           
  3593 ;; *************** function ___aodiv *****************
  3594 ;; Defined at:
  3595 ;;		line 9 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\aodiv.c"
  3596 ;; Parameters:    Size  Location     Type
  3597 ;;  dividend        8    0[COMRAM] long long 
  3598 ;;  divisor         8    8[COMRAM] long long 
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;  quotient        8   18[COMRAM] long long 
  3601 ;;  sign            1   17[COMRAM] unsigned char 
  3602 ;;  counter         1   16[COMRAM] unsigned char 
  3603 ;; Return value:  Size  Location     Type
  3604 ;;                  8    0[COMRAM] long long 
  3605 ;; Registers used:
  3606 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3607 ;; Tracked objects:
  3608 ;;		On entry : 0/0
  3609 ;;		On exit  : 0/0
  3610 ;;		Unchanged: 0/0
  3611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3612 ;;      Params:        16       0       0       0       0       0       0       0       0
  3613 ;;      Locals:        10       0       0       0       0       0       0       0       0
  3614 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3615 ;;      Totals:        26       0       0       0       0       0       0       0       0
  3616 ;;Total ram usage:       26 bytes
  3617 ;; Hardware stack levels used: 1
  3618 ;; This function calls:
  3619 ;;		Nothing
  3620 ;; This function is called by:
  3621 ;;		_dtoa
  3622 ;; This function uses a non-reentrant model
  3623 ;;
  3624                           
  3625                           	psect	text20
  3626  000F04                     __ptext20:
  3627                           	callstack 0
  3628  000F04                     ___aodiv:
  3629                           	callstack 25
  3630  000F04  0E00               	movlw	0
  3631  000F06  6E12               	movwf	___aodiv@sign^0,c
  3632  000F08  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3633  000F0A  EF8B  F007         	goto	u910
  3634  000F0E  EF89  F007         	goto	u911
  3635  000F12                     u911:
  3636  000F12  EF9D  F007         	goto	l1805
  3637  000F16                     u910:
  3638  000F16  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3639  000F18  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3640  000F1A  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3641  000F1C  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3642  000F1E  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3643  000F20  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3644  000F22  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3645  000F24  6C09               	negf	___aodiv@divisor^0,c
  3646  000F26  0E00               	movlw	0
  3647  000F28  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3648  000F2A  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3649  000F2C  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3650  000F2E  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3651  000F30  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3652  000F32  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3653  000F34  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3654  000F36  0E01               	movlw	1
  3655  000F38  6E12               	movwf	___aodiv@sign^0,c
  3656  000F3A                     l1805:
  3657  000F3A  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3658  000F3C  EFA4  F007         	goto	u920
  3659  000F40  EFA2  F007         	goto	u921
  3660  000F44                     u921:
  3661  000F44  EFB6  F007         	goto	l1811
  3662  000F48                     u920:
  3663  000F48  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3664  000F4A  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3665  000F4C  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3666  000F4E  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3667  000F50  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3668  000F52  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3669  000F54  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3670  000F56  6C01               	negf	___aodiv@dividend^0,c
  3671  000F58  0E00               	movlw	0
  3672  000F5A  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3673  000F5C  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3674  000F5E  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3675  000F60  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3676  000F62  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3677  000F64  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3678  000F66  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3679  000F68  0E01               	movlw	1
  3680  000F6A  1A12               	xorwf	___aodiv@sign^0,f,c
  3681  000F6C                     l1811:
  3682  000F6C  EE20  F013         	lfsr	2,___aodiv@quotient
  3683  000F70  0E07               	movlw	7
  3684  000F72                     u931:
  3685  000F72  6ADE               	clrf	postinc2,c
  3686  000F74  06E8               	decf	wreg,f,c
  3687  000F76  E2FD               	bc	u931
  3688  000F78  5009               	movf	___aodiv@divisor^0,w,c
  3689  000F7A  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3690  000F7C  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3691  000F7E  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3692  000F80  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3693  000F82  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3694  000F84  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3695  000F86  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  3696  000F88  B4D8               	btfsc	status,2,c
  3697  000F8A  EFC9  F007         	goto	u941
  3698  000F8E  EFCB  F007         	goto	u940
  3699  000F92                     u941:
  3700  000F92  EF1D  F008         	goto	l1833
  3701  000F96                     u940:
  3702  000F96  0E01               	movlw	1
  3703  000F98  6E11               	movwf	___aodiv@counter^0,c
  3704  000F9A  EFD9  F007         	goto	l1819
  3705  000F9E                     l1817:
  3706  000F9E  90D8               	bcf	status,0,c
  3707  000FA0  3609               	rlcf	___aodiv@divisor^0,f,c
  3708  000FA2  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3709  000FA4  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3710  000FA6  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3711  000FA8  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3712  000FAA  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3713  000FAC  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3714  000FAE  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  3715  000FB0  2A11               	incf	___aodiv@counter^0,f,c
  3716  000FB2                     l1819:
  3717  000FB2  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  3718  000FB4  EFDE  F007         	goto	u951
  3719  000FB8  EFE0  F007         	goto	u950
  3720  000FBC                     u951:
  3721  000FBC  EFCF  F007         	goto	l1817
  3722  000FC0                     u950:
  3723  000FC0                     l1821:
  3724  000FC0  90D8               	bcf	status,0,c
  3725  000FC2  3613               	rlcf	___aodiv@quotient^0,f,c
  3726  000FC4  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3727  000FC6  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3728  000FC8  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3729  000FCA  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3730  000FCC  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3731  000FCE  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3732  000FD0  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3733  000FD2  5009               	movf	___aodiv@divisor^0,w,c
  3734  000FD4  5C01               	subwf	___aodiv@dividend^0,w,c
  3735  000FD6  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3736  000FD8  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3737  000FDA  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3738  000FDC  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3739  000FDE  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3740  000FE0  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3741  000FE2  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3742  000FE4  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3743  000FE6  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3744  000FE8  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3745  000FEA  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3746  000FEC  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  3747  000FEE  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3748  000FF0  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  3749  000FF2  A0D8               	btfss	status,0,c
  3750  000FF4  EFFE  F007         	goto	u961
  3751  000FF8  EF00  F008         	goto	u960
  3752  000FFC                     u961:
  3753  000FFC  EF11  F008         	goto	l1829
  3754  001000                     u960:
  3755  001000  5009               	movf	___aodiv@divisor^0,w,c
  3756  001002  5E01               	subwf	___aodiv@dividend^0,f,c
  3757  001004  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3758  001006  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3759  001008  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3760  00100A  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3761  00100C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3762  00100E  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3763  001010  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3764  001012  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3765  001014  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3766  001016  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3767  001018  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3768  00101A  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3769  00101C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3770  00101E  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  3771  001020  8013               	bsf	___aodiv@quotient^0,0,c
  3772  001022                     l1829:
  3773  001022  90D8               	bcf	status,0,c
  3774  001024  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  3775  001026  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3776  001028  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3777  00102A  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3778  00102C  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3779  00102E  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3780  001030  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3781  001032  3209               	rrcf	___aodiv@divisor^0,f,c
  3782  001034  2E11               	decfsz	___aodiv@counter^0,f,c
  3783  001036  EFE0  F007         	goto	l1821
  3784  00103A                     l1833:
  3785  00103A  5012               	movf	___aodiv@sign^0,w,c
  3786  00103C  B4D8               	btfsc	status,2,c
  3787  00103E  EF23  F008         	goto	u971
  3788  001042  EF25  F008         	goto	u970
  3789  001046                     u971:
  3790  001046  EF35  F008         	goto	l1837
  3791  00104A                     u970:
  3792  00104A  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  3793  00104C  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  3794  00104E  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  3795  001050  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  3796  001052  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  3797  001054  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  3798  001056  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  3799  001058  6C13               	negf	___aodiv@quotient^0,c
  3800  00105A  0E00               	movlw	0
  3801  00105C  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3802  00105E  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3803  001060  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3804  001062  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3805  001064  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3806  001066  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3807  001068  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3808  00106A                     l1837:
  3809  00106A  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3810  00106E  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3811  001072  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3812  001076  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3813  00107A  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3814  00107E  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3815  001082  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3816  001086  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3817  00108A  0012               	return		;funcret
  3818  00108C                     __end_of___aodiv:
  3819                           	callstack 0
  3820                           
  3821 ;; *************** function _LCD_String_xy *****************
  3822 ;; Defined at:
  3823 ;;		line 77 in file "LCD.c"
  3824 ;; Parameters:    Size  Location     Type
  3825 ;;  row             1    wreg     unsigned char 
  3826 ;;  pos             1    4[COMRAM] unsigned char 
  3827 ;;  msg             2    5[COMRAM] PTR const unsigned char 
  3828 ;;		 -> STR_4(14), STR_3(14), STR_2(15), STR_1(15), 
  3829 ;;		 -> Cadena(10), 
  3830 ;; Auto vars:     Size  Location     Type
  3831 ;;  row             1    7[COMRAM] unsigned char 
  3832 ;;  location        1    8[COMRAM] unsigned char 
  3833 ;; Return value:  Size  Location     Type
  3834 ;;                  1    wreg      void 
  3835 ;; Registers used:
  3836 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3842 ;;      Params:         3       0       0       0       0       0       0       0       0
  3843 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3844 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3845 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3846 ;;Total ram usage:        5 bytes
  3847 ;; Hardware stack levels used: 1
  3848 ;; Hardware stack levels required when called: 2
  3849 ;; This function calls:
  3850 ;;		_LCD_Command
  3851 ;;		_LCD_String
  3852 ;; This function is called by:
  3853 ;;		_PedirDato
  3854 ;;		_MostrarHumedad
  3855 ;;		_MostrarTemperatura
  3856 ;; This function uses a non-reentrant model
  3857 ;;
  3858                           
  3859                           	psect	text21
  3860  001C02                     __ptext21:
  3861                           	callstack 0
  3862  001C02                     _LCD_String_xy:
  3863                           	callstack 26
  3864                           
  3865                           ;incstack = 0
  3866                           ;LCD_String_xy@row stored from wreg
  3867  001C02  6E08               	movwf	LCD_String_xy@row^0,c
  3868  001C04                     
  3869                           ;LCD.c: 80:     if(row<=1)
  3870  001C04  0E02               	movlw	2
  3871  001C06  6008               	cpfslt	LCD_String_xy@row^0,c
  3872  001C08  EF08  F00E         	goto	u1311
  3873  001C0C  EF0A  F00E         	goto	u1310
  3874  001C10                     u1311:
  3875  001C10  EF13  F00E         	goto	l2065
  3876  001C14                     u1310:
  3877  001C14                     
  3878                           ;LCD.c: 81:     {;LCD.c: 82:         location = (0x80) | ((pos) & 0x0f);
  3879  001C14  5005               	movf	LCD_String_xy@pos^0,w,c
  3880  001C16  0B0F               	andlw	15
  3881  001C18  0980               	iorlw	128
  3882  001C1A  6E09               	movwf	LCD_String_xy@location^0,c
  3883  001C1C                     
  3884                           ;LCD.c: 83:         LCD_Command(location);
  3885  001C1C  5009               	movf	LCD_String_xy@location^0,w,c
  3886  001C1E  EC51  F00D         	call	_LCD_Command
  3887                           
  3888                           ;LCD.c: 84:     }
  3889  001C22  EF1A  F00E         	goto	l2069
  3890  001C26                     l2065:
  3891                           
  3892                           ;LCD.c: 86:     {;LCD.c: 87:         location = (0xC0) | ((pos) & 0x0f);
  3893  001C26  5005               	movf	LCD_String_xy@pos^0,w,c
  3894  001C28  0B0F               	andlw	15
  3895  001C2A  09C0               	iorlw	192
  3896  001C2C  6E09               	movwf	LCD_String_xy@location^0,c
  3897  001C2E                     
  3898                           ;LCD.c: 88:         LCD_Command(location);
  3899  001C2E  5009               	movf	LCD_String_xy@location^0,w,c
  3900  001C30  EC51  F00D         	call	_LCD_Command
  3901  001C34                     l2069:
  3902                           
  3903                           ;LCD.c: 92:     LCD_String(msg);
  3904  001C34  C006  F003         	movff	LCD_String_xy@msg,LCD_String@msg
  3905  001C38  C007  F004         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  3906  001C3C  EC78  F00C         	call	_LCD_String	;wreg free
  3907  001C40  0012               	return		;funcret
  3908  001C42                     __end_of_LCD_String_xy:
  3909                           	callstack 0
  3910                           
  3911 ;; *************** function _LCD_String *****************
  3912 ;; Defined at:
  3913 ;;		line 67 in file "LCD.c"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;  msg             2    2[COMRAM] PTR const unsigned char 
  3916 ;;		 -> STR_4(14), STR_3(14), STR_2(15), STR_1(15), 
  3917 ;;		 -> Cadena(10), 
  3918 ;; Auto vars:     Size  Location     Type
  3919 ;;		None
  3920 ;; Return value:  Size  Location     Type
  3921 ;;                  1    wreg      void 
  3922 ;; Registers used:
  3923 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3924 ;; Tracked objects:
  3925 ;;		On entry : 0/0
  3926 ;;		On exit  : 0/0
  3927 ;;		Unchanged: 0/0
  3928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3929 ;;      Params:         2       0       0       0       0       0       0       0       0
  3930 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3931 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3932 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3933 ;;Total ram usage:        2 bytes
  3934 ;; Hardware stack levels used: 1
  3935 ;; Hardware stack levels required when called: 1
  3936 ;; This function calls:
  3937 ;;		_LCD_Char
  3938 ;; This function is called by:
  3939 ;;		_LCD_String_xy
  3940 ;;		_MostrarHumedad
  3941 ;;		_MostrarTemperatura
  3942 ;; This function uses a non-reentrant model
  3943 ;;
  3944                           
  3945                           	psect	text22
  3946  0018F0                     __ptext22:
  3947                           	callstack 0
  3948  0018F0                     _LCD_String:
  3949                           	callstack 26
  3950  0018F0                     
  3951                           ;LCD.c: 67: void LCD_String(const char *msg);LCD.c: 68: {;LCD.c: 69:  while((*msg)!=0)
  3952  0018F0  EF8E  F00C         	goto	l2011
  3953  0018F4                     l2007:
  3954                           
  3955                           ;LCD.c: 70:  {;LCD.c: 71:    LCD_Char(*msg);
  3956  0018F4  C003  FFF6         	movff	LCD_String@msg,tblptrl
  3957  0018F8  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  3958  0018FC  6AF8               	clrf	tblptru,c
  3959  0018FE  0E07               	movlw	(high __ramtop+-1)
  3960  001900  64F7               	cpfsgt	tblptrh,c
  3961  001902  D003               	bra	u1247
  3962  001904  0008               	tblrd		*
  3963  001906  50F5               	movf	tablat,w,c
  3964  001908  D005               	bra	u1240
  3965  00190A                     u1247:
  3966  00190A  CFF6 FFE1          	movff	tblptrl,fsr1l
  3967  00190E  CFF7 FFE2          	movff	tblptrh,fsr1h
  3968  001912  50E7               	movf	indf1,w,c
  3969  001914                     u1240:
  3970  001914  EC29  F00D         	call	_LCD_Char
  3971  001918                     
  3972                           ;LCD.c: 72:    msg++;
  3973  001918  4A03               	infsnz	LCD_String@msg^0,f,c
  3974  00191A  2A04               	incf	(LCD_String@msg+1)^0,f,c
  3975  00191C                     l2011:
  3976                           
  3977                           ;LCD.c: 69:  while((*msg)!=0)
  3978  00191C  C003  FFF6         	movff	LCD_String@msg,tblptrl
  3979  001920  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  3980  001924  6AF8               	clrf	tblptru,c
  3981  001926  0E07               	movlw	(high __ramtop+-1)
  3982  001928  64F7               	cpfsgt	tblptrh,c
  3983  00192A  D003               	bra	u1257
  3984  00192C  0008               	tblrd		*
  3985  00192E  50F5               	movf	tablat,w,c
  3986  001930  D005               	bra	u1250
  3987  001932                     u1257:
  3988  001932  CFF6 FFE1          	movff	tblptrl,fsr1l
  3989  001936  CFF7 FFE2          	movff	tblptrh,fsr1h
  3990  00193A  50E7               	movf	indf1,w,c
  3991  00193C                     u1250:
  3992  00193C  0900               	iorlw	0
  3993  00193E  A4D8               	btfss	status,2,c
  3994  001940  EFA4  F00C         	goto	u1261
  3995  001944  EFA6  F00C         	goto	u1260
  3996  001948                     u1261:
  3997  001948  EF7A  F00C         	goto	l2007
  3998  00194C                     u1260:
  3999  00194C  0012               	return		;funcret
  4000  00194E                     __end_of_LCD_String:
  4001                           	callstack 0
  4002                           
  4003 ;; *************** function _LCD_Char *****************
  4004 ;; Defined at:
  4005 ;;		line 53 in file "LCD.c"
  4006 ;; Parameters:    Size  Location     Type
  4007 ;;  dat             1    wreg     unsigned char 
  4008 ;; Auto vars:     Size  Location     Type
  4009 ;;  dat             1    1[COMRAM] unsigned char 
  4010 ;; Return value:  Size  Location     Type
  4011 ;;                  1    wreg      void 
  4012 ;; Registers used:
  4013 ;;		wreg, status,2, status,0
  4014 ;; Tracked objects:
  4015 ;;		On entry : 0/0
  4016 ;;		On exit  : 0/0
  4017 ;;		Unchanged: 0/0
  4018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4019 ;;      Params:         0       0       0       0       0       0       0       0       0
  4020 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4021 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4022 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4023 ;;Total ram usage:        2 bytes
  4024 ;; Hardware stack levels used: 1
  4025 ;; This function calls:
  4026 ;;		Nothing
  4027 ;; This function is called by:
  4028 ;;		_LCD_String
  4029 ;;		_PedirDato
  4030 ;;		_MostrarHumedad
  4031 ;;		_MostrarTemperatura
  4032 ;; This function uses a non-reentrant model
  4033 ;;
  4034                           
  4035                           	psect	text23
  4036  001A52                     __ptext23:
  4037                           	callstack 0
  4038  001A52                     _LCD_Char:
  4039                           	callstack 26
  4040                           
  4041                           ;incstack = 0
  4042                           ;LCD_Char@dat stored from wreg
  4043  001A52  6E02               	movwf	LCD_Char@dat^0,c
  4044  001A54                     
  4045                           ;LCD.c: 53: void LCD_Char(unsigned char dat);LCD.c: 54: {;LCD.c: 55:  LATD = (LATD & 0x0
      +                          f) | (0xF0 & dat);
  4046  001A54  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  4047  001A58  0EF0               	movlw	240
  4048  001A5A  1601               	andwf	??_LCD_Char^0,f,c
  4049  001A5C  508C               	movf	140,w,c	;volatile
  4050  001A5E  0B0F               	andlw	15
  4051  001A60  1001               	iorwf	??_LCD_Char^0,w,c
  4052  001A62  6E8C               	movwf	140,c	;volatile
  4053  001A64                     
  4054                           ;LCD.c: 56:  LATD0 = 1;
  4055  001A64  808C               	bsf	3980,0,c	;volatile
  4056  001A66                     
  4057                           ;LCD.c: 57:  LATD1 = 1;
  4058  001A66  828C               	bsf	3980,1,c	;volatile
  4059  001A68                     
  4060                           ;LCD.c: 58:  __nop();
  4061  001A68  F000               	nop	
  4062  001A6A                     
  4063                           ;LCD.c: 59:  LATD1 = 0;
  4064  001A6A  928C               	bcf	3980,1,c	;volatile
  4065  001A6C                     
  4066                           ;LCD.c: 60:  _delay((unsigned long)((1)*(8000000L/4000.0)));
  4067  001A6C  0E03               	movlw	3
  4068  001A6E  6E01               	movwf	??_LCD_Char^0,c
  4069  001A70  0E98               	movlw	152
  4070  001A72                     u1787:
  4071  001A72  2EE8               	decfsz	wreg,f,c
  4072  001A74  D7FE               	bra	u1787
  4073  001A76  2E01               	decfsz	??_LCD_Char^0,f,c
  4074  001A78  D7FC               	bra	u1787
  4075  001A7A                     
  4076                           ;LCD.c: 61:     LATD = (LATD & 0x0f) | (dat<<4);
  4077  001A7A  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  4078  001A7E  3A01               	swapf	??_LCD_Char^0,f,c
  4079  001A80  0EF0               	movlw	240
  4080  001A82  1601               	andwf	??_LCD_Char^0,f,c
  4081  001A84  508C               	movf	140,w,c	;volatile
  4082  001A86  0B0F               	andlw	15
  4083  001A88  1001               	iorwf	??_LCD_Char^0,w,c
  4084  001A8A  6E8C               	movwf	140,c	;volatile
  4085  001A8C                     
  4086                           ;LCD.c: 62:  LATD1 = 1;
  4087  001A8C  828C               	bsf	3980,1,c	;volatile
  4088  001A8E                     
  4089                           ;LCD.c: 63:  __nop();
  4090  001A8E  F000               	nop	
  4091  001A90                     
  4092                           ;LCD.c: 64:  LATD1 = 0;
  4093  001A90  928C               	bcf	3980,1,c	;volatile
  4094                           
  4095                           ;LCD.c: 65:  _delay((unsigned long)((3)*(8000000L/4000.0)));
  4096  001A92  0E08               	movlw	8
  4097  001A94  6E01               	movwf	??_LCD_Char^0,c
  4098  001A96  0ECA               	movlw	202
  4099  001A98                     u1797:
  4100  001A98  2EE8               	decfsz	wreg,f,c
  4101  001A9A  D7FE               	bra	u1797
  4102  001A9C  2E01               	decfsz	??_LCD_Char^0,f,c
  4103  001A9E  D7FC               	bra	u1797
  4104  001AA0  0012               	return		;funcret
  4105  001AA2                     __end_of_LCD_Char:
  4106                           	callstack 0
  4107                           
  4108 ;; *************** function _LCD_Init *****************
  4109 ;; Defined at:
  4110 ;;		line 25 in file "LCD.c"
  4111 ;; Parameters:    Size  Location     Type
  4112 ;;		None
  4113 ;; Auto vars:     Size  Location     Type
  4114 ;;		None
  4115 ;; Return value:  Size  Location     Type
  4116 ;;                  1    wreg      void 
  4117 ;; Registers used:
  4118 ;;		wreg, status,2, status,0, cstack
  4119 ;; Tracked objects:
  4120 ;;		On entry : 0/0
  4121 ;;		On exit  : 0/0
  4122 ;;		Unchanged: 0/0
  4123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4124 ;;      Params:         0       0       0       0       0       0       0       0       0
  4125 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4126 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4127 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4128 ;;Total ram usage:        1 bytes
  4129 ;; Hardware stack levels used: 1
  4130 ;; Hardware stack levels required when called: 1
  4131 ;; This function calls:
  4132 ;;		_LCD_Command
  4133 ;; This function is called by:
  4134 ;;		_main
  4135 ;; This function uses a non-reentrant model
  4136 ;;
  4137                           
  4138                           	psect	text24
  4139  001CEC                     __ptext24:
  4140                           	callstack 0
  4141  001CEC                     _LCD_Init:
  4142                           	callstack 29
  4143  001CEC                     
  4144                           ;LCD.c: 27:     TRISD = 0;
  4145  001CEC  0E00               	movlw	0
  4146  001CEE  6E95               	movwf	149,c	;volatile
  4147  001CF0                     
  4148                           ;LCD.c: 28:     _delay((unsigned long)((15)*(8000000L/4000.0)));
  4149  001CF0  0E27               	movlw	39
  4150  001CF2  6E03               	movwf	??_LCD_Init^0,c
  4151  001CF4  0EF5               	movlw	245
  4152  001CF6                     u1807:
  4153  001CF6  2EE8               	decfsz	wreg,f,c
  4154  001CF8  D7FE               	bra	u1807
  4155  001CFA  2E03               	decfsz	??_LCD_Init^0,f,c
  4156  001CFC  D7FC               	bra	u1807
  4157  001CFE  F000               	nop	
  4158  001D00                     
  4159                           ;LCD.c: 29:     LCD_Command(0x02);
  4160  001D00  0E02               	movlw	2
  4161  001D02  EC51  F00D         	call	_LCD_Command
  4162  001D06                     
  4163                           ;LCD.c: 31:     LCD_Command(0x28);
  4164  001D06  0E28               	movlw	40
  4165  001D08  EC51  F00D         	call	_LCD_Command
  4166  001D0C                     
  4167                           ;LCD.c: 33:  LCD_Command(0x01);
  4168  001D0C  0E01               	movlw	1
  4169  001D0E  EC51  F00D         	call	_LCD_Command
  4170  001D12                     
  4171                           ;LCD.c: 34:     LCD_Command(0x0c);
  4172  001D12  0E0C               	movlw	12
  4173  001D14  EC51  F00D         	call	_LCD_Command
  4174  001D18                     
  4175                           ;LCD.c: 35:  LCD_Command(0x06);
  4176  001D18  0E06               	movlw	6
  4177  001D1A  EC51  F00D         	call	_LCD_Command
  4178  001D1E  0012               	return		;funcret
  4179  001D20                     __end_of_LCD_Init:
  4180                           	callstack 0
  4181                           
  4182 ;; *************** function _LCD_Command *****************
  4183 ;; Defined at:
  4184 ;;		line 38 in file "LCD.c"
  4185 ;; Parameters:    Size  Location     Type
  4186 ;;  cmd             1    wreg     unsigned char 
  4187 ;; Auto vars:     Size  Location     Type
  4188 ;;  cmd             1    1[COMRAM] unsigned char 
  4189 ;; Return value:  Size  Location     Type
  4190 ;;                  1    wreg      void 
  4191 ;; Registers used:
  4192 ;;		wreg, status,2, status,0
  4193 ;; Tracked objects:
  4194 ;;		On entry : 0/0
  4195 ;;		On exit  : 0/0
  4196 ;;		Unchanged: 0/0
  4197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4198 ;;      Params:         0       0       0       0       0       0       0       0       0
  4199 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4200 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4201 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4202 ;;Total ram usage:        2 bytes
  4203 ;; Hardware stack levels used: 1
  4204 ;; This function calls:
  4205 ;;		Nothing
  4206 ;; This function is called by:
  4207 ;;		_LCD_Init
  4208 ;;		_LCD_String_xy
  4209 ;;		_LCD_Clear
  4210 ;;		_PedirDato
  4211 ;; This function uses a non-reentrant model
  4212 ;;
  4213                           
  4214                           	psect	text25
  4215  001AA2                     __ptext25:
  4216                           	callstack 0
  4217  001AA2                     _LCD_Command:
  4218                           	callstack 27
  4219                           
  4220                           ;incstack = 0
  4221                           ;LCD_Command@cmd stored from wreg
  4222  001AA2  6E02               	movwf	LCD_Command@cmd^0,c
  4223  001AA4                     
  4224                           ;LCD.c: 38: void LCD_Command(unsigned char cmd );LCD.c: 39: {;LCD.c: 40:  LATD = (LATD &
      +                           0x0f) |(0xF0 & cmd);
  4225  001AA4  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  4226  001AA8  0EF0               	movlw	240
  4227  001AAA  1601               	andwf	??_LCD_Command^0,f,c
  4228  001AAC  508C               	movf	140,w,c	;volatile
  4229  001AAE  0B0F               	andlw	15
  4230  001AB0  1001               	iorwf	??_LCD_Command^0,w,c
  4231  001AB2  6E8C               	movwf	140,c	;volatile
  4232  001AB4                     
  4233                           ;LCD.c: 41:  LATD0 = 0;
  4234  001AB4  908C               	bcf	3980,0,c	;volatile
  4235  001AB6                     
  4236                           ;LCD.c: 42:  LATD1 = 1;
  4237  001AB6  828C               	bsf	3980,1,c	;volatile
  4238  001AB8                     
  4239                           ;LCD.c: 43:  __nop();
  4240  001AB8  F000               	nop	
  4241  001ABA                     
  4242                           ;LCD.c: 44:  LATD1 = 0;
  4243  001ABA  928C               	bcf	3980,1,c	;volatile
  4244  001ABC                     
  4245                           ;LCD.c: 45:  _delay((unsigned long)((1)*(8000000L/4000.0)));
  4246  001ABC  0E03               	movlw	3
  4247  001ABE  6E01               	movwf	??_LCD_Command^0,c
  4248  001AC0  0E98               	movlw	152
  4249  001AC2                     u1817:
  4250  001AC2  2EE8               	decfsz	wreg,f,c
  4251  001AC4  D7FE               	bra	u1817
  4252  001AC6  2E01               	decfsz	??_LCD_Command^0,f,c
  4253  001AC8  D7FC               	bra	u1817
  4254  001ACA                     
  4255                           ;LCD.c: 46:     LATD = (LATD & 0x0f) | (cmd<<4);
  4256  001ACA  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  4257  001ACE  3A01               	swapf	??_LCD_Command^0,f,c
  4258  001AD0  0EF0               	movlw	240
  4259  001AD2  1601               	andwf	??_LCD_Command^0,f,c
  4260  001AD4  508C               	movf	140,w,c	;volatile
  4261  001AD6  0B0F               	andlw	15
  4262  001AD8  1001               	iorwf	??_LCD_Command^0,w,c
  4263  001ADA  6E8C               	movwf	140,c	;volatile
  4264  001ADC                     
  4265                           ;LCD.c: 47:  LATD1 = 1;
  4266  001ADC  828C               	bsf	3980,1,c	;volatile
  4267  001ADE                     
  4268                           ;LCD.c: 48:  __nop();
  4269  001ADE  F000               	nop	
  4270  001AE0                     
  4271                           ;LCD.c: 49:  LATD1 = 0;
  4272  001AE0  928C               	bcf	3980,1,c	;volatile
  4273                           
  4274                           ;LCD.c: 50:  _delay((unsigned long)((3)*(8000000L/4000.0)));
  4275  001AE2  0E08               	movlw	8
  4276  001AE4  6E01               	movwf	??_LCD_Command^0,c
  4277  001AE6  0ECA               	movlw	202
  4278  001AE8                     u1827:
  4279  001AE8  2EE8               	decfsz	wreg,f,c
  4280  001AEA  D7FE               	bra	u1827
  4281  001AEC  2E01               	decfsz	??_LCD_Command^0,f,c
  4282  001AEE  D7FC               	bra	u1827
  4283  001AF0  0012               	return		;funcret
  4284  001AF2                     __end_of_LCD_Command:
  4285                           	callstack 0
  4286                           
  4287 ;; *************** function _DatosSensorTH *****************
  4288 ;; Defined at:
  4289 ;;		line 43 in file "DHT11.c"
  4290 ;; Parameters:    Size  Location     Type
  4291 ;;  Datos           2    2[COMRAM] PTR unsigned char 
  4292 ;;		 -> Datos(2), 
  4293 ;; Auto vars:     Size  Location     Type
  4294 ;;  T_Integral      1    5[COMRAM] unsigned char 
  4295 ;;  RH_Integral     1    4[COMRAM] unsigned char 
  4296 ;;  Checksum        1    0        unsigned char 
  4297 ;;  T_Decimal       1    0        unsigned char 
  4298 ;;  RH_Decimal      1    0        unsigned char 
  4299 ;; Return value:  Size  Location     Type
  4300 ;;                  1    wreg      void 
  4301 ;; Registers used:
  4302 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4303 ;; Tracked objects:
  4304 ;;		On entry : 0/0
  4305 ;;		On exit  : 0/0
  4306 ;;		Unchanged: 0/0
  4307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4308 ;;      Params:         2       0       0       0       0       0       0       0       0
  4309 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4310 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4311 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4312 ;;Total ram usage:        4 bytes
  4313 ;; Hardware stack levels used: 1
  4314 ;; Hardware stack levels required when called: 1
  4315 ;; This function calls:
  4316 ;;		_DHT11_CheckResponse
  4317 ;;		_DHT11_ReadData
  4318 ;;		_DHT11_Start
  4319 ;; This function is called by:
  4320 ;;		_main
  4321 ;; This function uses a non-reentrant model
  4322 ;;
  4323                           
  4324                           	psect	text26
  4325  001C42                     __ptext26:
  4326                           	callstack 0
  4327  001C42                     _DatosSensorTH:
  4328                           	callstack 29
  4329  001C42                     
  4330                           ;DHT11.c: 44:          char RH_Decimal,RH_Integral,T_Decimal,T_Integral;;DHT11.c: 45:   
      +                                 char Checksum;;DHT11.c: 46:          DHT11_Start();
  4331  001C42  ECCE  F00E         	call	_DHT11_Start	;wreg free
  4332  001C46                     
  4333                           ;DHT11.c: 47:          DHT11_CheckResponse();
  4334  001C46  EC90  F00E         	call	_DHT11_CheckResponse	;wreg free
  4335  001C4A                     
  4336                           ;DHT11.c: 50:          RH_Integral = DHT11_ReadData();
  4337  001C4A  ECA7  F00C         	call	_DHT11_ReadData	;wreg free
  4338  001C4E  6E05               	movwf	DatosSensorTH@RH_Integral^0,c
  4339  001C50  ECA7  F00C         	call	_DHT11_ReadData	;wreg free
  4340  001C54                     
  4341                           ;DHT11.c: 52:          T_Integral = DHT11_ReadData();
  4342  001C54  ECA7  F00C         	call	_DHT11_ReadData	;wreg free
  4343  001C58  6E06               	movwf	DatosSensorTH@T_Integral^0,c
  4344  001C5A  ECA7  F00C         	call	_DHT11_ReadData	;wreg free
  4345  001C5E  ECA7  F00C         	call	_DHT11_ReadData	;wreg free
  4346  001C62                     
  4347                           ;DHT11.c: 56:          Datos[0]=T_Integral;
  4348  001C62  C003  FFD9         	movff	DatosSensorTH@Datos,fsr2l
  4349  001C66  C004  FFDA         	movff	DatosSensorTH@Datos+1,fsr2h
  4350  001C6A  C006  FFDF         	movff	DatosSensorTH@T_Integral,indf2
  4351  001C6E                     
  4352                           ;DHT11.c: 57:          Datos[1]=RH_Integral;
  4353  001C6E  EE20 F001          	lfsr	2,1
  4354  001C72  5003               	movf	DatosSensorTH@Datos^0,w,c
  4355  001C74  26D9               	addwf	fsr2l,f,c
  4356  001C76  5004               	movf	(DatosSensorTH@Datos+1)^0,w,c
  4357  001C78  22DA               	addwfc	fsr2h,f,c
  4358  001C7A  C005  FFDF         	movff	DatosSensorTH@RH_Integral,indf2
  4359  001C7E  0012               	return		;funcret
  4360  001C80                     __end_of_DatosSensorTH:
  4361                           	callstack 0
  4362                           
  4363 ;; *************** function _DHT11_Start *****************
  4364 ;; Defined at:
  4365 ;;		line 23 in file "DHT11.c"
  4366 ;; Parameters:    Size  Location     Type
  4367 ;;		None
  4368 ;; Auto vars:     Size  Location     Type
  4369 ;;		None
  4370 ;; Return value:  Size  Location     Type
  4371 ;;                  1    wreg      void 
  4372 ;; Registers used:
  4373 ;;		wreg
  4374 ;; Tracked objects:
  4375 ;;		On entry : 0/0
  4376 ;;		On exit  : 0/0
  4377 ;;		Unchanged: 0/0
  4378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4379 ;;      Params:         0       0       0       0       0       0       0       0       0
  4380 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4381 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4382 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4383 ;;Total ram usage:        1 bytes
  4384 ;; Hardware stack levels used: 1
  4385 ;; This function calls:
  4386 ;;		Nothing
  4387 ;; This function is called by:
  4388 ;;		_DatosSensorTH
  4389 ;; This function uses a non-reentrant model
  4390 ;;
  4391                           
  4392                           	psect	text27
  4393  001D9C                     __ptext27:
  4394                           	callstack 0
  4395  001D9C                     _DHT11_Start:
  4396                           	callstack 29
  4397  001D9C                     
  4398                           ;DHT11.c: 25:     TRISAbits.RA0 = 0;
  4399  001D9C  9092               	bcf	146,0,c	;volatile
  4400                           
  4401                           ;DHT11.c: 26:     LATA0 = 0;
  4402  001D9E  9089               	bcf	3977,0,c	;volatile
  4403  001DA0                     
  4404                           ;DHT11.c: 27:     _delay((unsigned long)((18)*(8000000L/4000.0)));
  4405  001DA0  0E2F               	movlw	47
  4406  001DA2  6E01               	movwf	??_DHT11_Start^0,c
  4407  001DA4  0EC0               	movlw	192
  4408  001DA6                     u1837:
  4409  001DA6  2EE8               	decfsz	wreg,f,c
  4410  001DA8  D7FE               	bra	u1837
  4411  001DAA  2E01               	decfsz	??_DHT11_Start^0,f,c
  4412  001DAC  D7FC               	bra	u1837
  4413  001DAE                     
  4414                           ;DHT11.c: 28:     LATA0 = 1;
  4415  001DAE  8089               	bsf	3977,0,c	;volatile
  4416                           
  4417                           ;DHT11.c: 29:     _delay((unsigned long)((20)*(8000000L/4000000.0)));
  4418  001DB0  0E0D               	movlw	13
  4419  001DB2                     u1847:
  4420  001DB2  2EE8               	decfsz	wreg,f,c
  4421  001DB4  D7FE               	bra	u1847
  4422  001DB6  F000               	nop	
  4423  001DB8                     
  4424                           ;DHT11.c: 30:     TRISAbits.RA0 = 1;
  4425  001DB8  8092               	bsf	146,0,c	;volatile
  4426  001DBA  0012               	return		;funcret
  4427  001DBC                     __end_of_DHT11_Start:
  4428                           	callstack 0
  4429                           
  4430 ;; *************** function _DHT11_ReadData *****************
  4431 ;; Defined at:
  4432 ;;		line 7 in file "DHT11.c"
  4433 ;; Parameters:    Size  Location     Type
  4434 ;;		None
  4435 ;; Auto vars:     Size  Location     Type
  4436 ;;  data            1    1[COMRAM] unsigned char 
  4437 ;;  i               1    0[COMRAM] unsigned char 
  4438 ;; Return value:  Size  Location     Type
  4439 ;;                  1    wreg      unsigned char 
  4440 ;; Registers used:
  4441 ;;		wreg, status,2, status,0
  4442 ;; Tracked objects:
  4443 ;;		On entry : 0/0
  4444 ;;		On exit  : 0/0
  4445 ;;		Unchanged: 0/0
  4446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4447 ;;      Params:         0       0       0       0       0       0       0       0       0
  4448 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4449 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4450 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4451 ;;Total ram usage:        2 bytes
  4452 ;; Hardware stack levels used: 1
  4453 ;; This function calls:
  4454 ;;		Nothing
  4455 ;; This function is called by:
  4456 ;;		_DatosSensorTH
  4457 ;; This function uses a non-reentrant model
  4458 ;;
  4459                           
  4460                           	psect	text28
  4461  00194E                     __ptext28:
  4462                           	callstack 0
  4463  00194E                     _DHT11_ReadData:
  4464                           	callstack 29
  4465  00194E                     
  4466                           ;DHT11.c: 9:   char i,data = 0;
  4467  00194E  0E00               	movlw	0
  4468  001950  6E02               	movwf	DHT11_ReadData@data^0,c
  4469                           
  4470                           ;DHT11.c: 10:     for(i=0;i<8;i++)
  4471  001952  0E00               	movlw	0
  4472  001954  6E01               	movwf	DHT11_ReadData@i^0,c
  4473  001956                     l212:
  4474  001956  A080               	btfss	128,0,c	;volatile
  4475  001958  EFB0  F00C         	goto	u1511
  4476  00195C  EFB2  F00C         	goto	u1510
  4477  001960                     u1511:
  4478  001960  EFAB  F00C         	goto	l212
  4479  001964                     u1510:
  4480  001964                     
  4481                           ;DHT11.c: 13:         _delay((unsigned long)((30)*(8000000L/4000000.0)));
  4482  001964  0E14               	movlw	20
  4483  001966                     u1857:
  4484  001966  2EE8               	decfsz	wreg,f,c
  4485  001968  D7FE               	bra	u1857
  4486  00196A                     
  4487                           ;DHT11.c: 14:         if(PORTAbits.RA0 & 1)
  4488  00196A  A080               	btfss	128,0,c	;volatile
  4489  00196C  EFBA  F00C         	goto	u1521
  4490  001970  EFBC  F00C         	goto	u1520
  4491  001974                     u1521:
  4492  001974  EFC0  F00C         	goto	l2233
  4493  001978                     u1520:
  4494  001978                     
  4495                           ;DHT11.c: 15:           data = ((data<<1) | 1);
  4496  001978  80D8               	bsf	status,0,c
  4497  00197A  3602               	rlcf	DHT11_ReadData@data^0,f,c
  4498  00197C  EFC3  F00C         	goto	l217
  4499  001980                     l2233:
  4500                           
  4501                           ;DHT11.c: 17:           data = (data<<1);
  4502  001980  5002               	movf	DHT11_ReadData@data^0,w,c
  4503  001982  2402               	addwf	DHT11_ReadData@data^0,w,c
  4504  001984  6E02               	movwf	DHT11_ReadData@data^0,c
  4505  001986                     l217:
  4506  001986  B080               	btfsc	128,0,c	;volatile
  4507  001988  EFC8  F00C         	goto	u1531
  4508  00198C  EFCA  F00C         	goto	u1530
  4509  001990                     u1531:
  4510  001990  EFC3  F00C         	goto	l217
  4511  001994                     u1530:
  4512  001994                     
  4513                           ;DHT11.c: 19:     }
  4514  001994  2A01               	incf	DHT11_ReadData@i^0,f,c
  4515  001996  0E07               	movlw	7
  4516  001998  6401               	cpfsgt	DHT11_ReadData@i^0,c
  4517  00199A  EFD1  F00C         	goto	u1541
  4518  00199E  EFD3  F00C         	goto	u1540
  4519  0019A2                     u1541:
  4520  0019A2  EFAB  F00C         	goto	l212
  4521  0019A6                     u1540:
  4522  0019A6                     
  4523                           ;DHT11.c: 20:   return data;
  4524  0019A6  5002               	movf	DHT11_ReadData@data^0,w,c
  4525  0019A8  0012               	return		;funcret
  4526  0019AA                     __end_of_DHT11_ReadData:
  4527                           	callstack 0
  4528                           
  4529 ;; *************** function _DHT11_CheckResponse *****************
  4530 ;; Defined at:
  4531 ;;		line 36 in file "DHT11.c"
  4532 ;; Parameters:    Size  Location     Type
  4533 ;;		None
  4534 ;; Auto vars:     Size  Location     Type
  4535 ;;		None
  4536 ;; Return value:  Size  Location     Type
  4537 ;;                  1    wreg      void 
  4538 ;; Registers used:
  4539 ;;		None
  4540 ;; Tracked objects:
  4541 ;;		On entry : 0/0
  4542 ;;		On exit  : 0/0
  4543 ;;		Unchanged: 0/0
  4544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4545 ;;      Params:         0       0       0       0       0       0       0       0       0
  4546 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4547 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4548 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4549 ;;Total ram usage:        0 bytes
  4550 ;; Hardware stack levels used: 1
  4551 ;; This function calls:
  4552 ;;		Nothing
  4553 ;; This function is called by:
  4554 ;;		_DatosSensorTH
  4555 ;; This function uses a non-reentrant model
  4556 ;;
  4557                           
  4558                           	psect	text29
  4559  001D20                     __ptext29:
  4560                           	callstack 0
  4561  001D20                     _DHT11_CheckResponse:
  4562                           	callstack 29
  4563  001D20                     l226:
  4564  001D20  B080               	btfsc	128,0,c	;volatile
  4565  001D22  EF95  F00E         	goto	u1551
  4566  001D26  EF97  F00E         	goto	u1550
  4567  001D2A                     u1551:
  4568  001D2A  EF90  F00E         	goto	l226
  4569  001D2E                     u1550:
  4570  001D2E                     l229:
  4571  001D2E  A080               	btfss	128,0,c	;volatile
  4572  001D30  EF9C  F00E         	goto	u1561
  4573  001D34  EF9E  F00E         	goto	u1560
  4574  001D38                     u1561:
  4575  001D38  EF97  F00E         	goto	l229
  4576  001D3C                     u1560:
  4577  001D3C                     l232:
  4578  001D3C  B080               	btfsc	128,0,c	;volatile
  4579  001D3E  EFA3  F00E         	goto	u1571
  4580  001D42  EFA5  F00E         	goto	u1570
  4581  001D46                     u1571:
  4582  001D46  EF9E  F00E         	goto	l232
  4583  001D4A                     u1570:
  4584  001D4A  0012               	return		;funcret
  4585  001D4C                     __end_of_DHT11_CheckResponse:
  4586                           	callstack 0
  4587                           
  4588 ;; *************** function _DatoDigitadoAEntero *****************
  4589 ;; Defined at:
  4590 ;;		line 131 in file "keypad.c"
  4591 ;; Parameters:    Size  Location     Type
  4592 ;;  prmTemperatu    2    6[COMRAM] PTR unsigned char 
  4593 ;;		 -> Humedad(2), Temperatura(2), 
  4594 ;; Auto vars:     Size  Location     Type
  4595 ;;  Decena          2   13[COMRAM] int 
  4596 ;;  Resultado       2   11[COMRAM] int 
  4597 ;;  Unidad          2    9[COMRAM] int 
  4598 ;; Return value:  Size  Location     Type
  4599 ;;                  2    6[COMRAM] int 
  4600 ;; Registers used:
  4601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4602 ;; Tracked objects:
  4603 ;;		On entry : 0/0
  4604 ;;		On exit  : 0/0
  4605 ;;		Unchanged: 0/0
  4606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4607 ;;      Params:         2       0       0       0       0       0       0       0       0
  4608 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4609 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4610 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4611 ;;Total ram usage:        9 bytes
  4612 ;; Hardware stack levels used: 1
  4613 ;; Hardware stack levels required when called: 1
  4614 ;; This function calls:
  4615 ;;		___wmul
  4616 ;; This function is called by:
  4617 ;;		_main
  4618 ;; This function uses a non-reentrant model
  4619 ;;
  4620                           
  4621                           	psect	text30
  4622  001738                     __ptext30:
  4623                           	callstack 0
  4624  001738                     _DatoDigitadoAEntero:
  4625                           	callstack 29
  4626  001738                     
  4627                           ;keypad.c: 133:     int Unidad = 0;
  4628  001738  0E00               	movlw	0
  4629  00173A  6E0B               	movwf	(DatoDigitadoAEntero@Unidad+1)^0,c
  4630  00173C  0E00               	movlw	0
  4631  00173E  6E0A               	movwf	DatoDigitadoAEntero@Unidad^0,c
  4632                           
  4633                           ;keypad.c: 135:     int Resultado=0;
  4634  001740  0E00               	movlw	0
  4635  001742  6E0D               	movwf	(DatoDigitadoAEntero@Resultado+1)^0,c
  4636  001744  0E00               	movlw	0
  4637  001746  6E0C               	movwf	DatoDigitadoAEntero@Resultado^0,c
  4638  001748                     
  4639                           ;keypad.c: 137:     Decena = prmTemperatura[0]-'0';
  4640  001748  C007  FFD9         	movff	DatoDigitadoAEntero@prmTemperatura,fsr2l
  4641  00174C  C008  FFDA         	movff	DatoDigitadoAEntero@prmTemperatura+1,fsr2h
  4642  001750  50DF               	movf	indf2,w,c
  4643  001752  6E09               	movwf	??_DatoDigitadoAEntero^0,c
  4644  001754  0ED0               	movlw	208
  4645  001756  2409               	addwf	??_DatoDigitadoAEntero^0,w,c
  4646  001758  6E0E               	movwf	DatoDigitadoAEntero@Decena^0,c
  4647  00175A  6A0F               	clrf	(DatoDigitadoAEntero@Decena+1)^0,c
  4648  00175C  0EFF               	movlw	255
  4649  00175E  220F               	addwfc	(DatoDigitadoAEntero@Decena+1)^0,f,c
  4650  001760                     
  4651                           ;keypad.c: 138:     Unidad = prmTemperatura[1]-'0';
  4652  001760  EE20 F001          	lfsr	2,1
  4653  001764  5007               	movf	DatoDigitadoAEntero@prmTemperatura^0,w,c
  4654  001766  26D9               	addwf	fsr2l,f,c
  4655  001768  5008               	movf	(DatoDigitadoAEntero@prmTemperatura+1)^0,w,c
  4656  00176A  22DA               	addwfc	fsr2h,f,c
  4657  00176C  50DF               	movf	indf2,w,c
  4658  00176E  6E09               	movwf	??_DatoDigitadoAEntero^0,c
  4659  001770  0ED0               	movlw	208
  4660  001772  2409               	addwf	??_DatoDigitadoAEntero^0,w,c
  4661  001774  6E0A               	movwf	DatoDigitadoAEntero@Unidad^0,c
  4662  001776  6A0B               	clrf	(DatoDigitadoAEntero@Unidad+1)^0,c
  4663  001778  0EFF               	movlw	255
  4664  00177A  220B               	addwfc	(DatoDigitadoAEntero@Unidad+1)^0,f,c
  4665  00177C                     
  4666                           ;keypad.c: 140:     Decena = Decena * 10;
  4667  00177C  C00E  F001         	movff	DatoDigitadoAEntero@Decena,___wmul@multiplier
  4668  001780  C00F  F002         	movff	DatoDigitadoAEntero@Decena+1,___wmul@multiplier+1
  4669  001784  0E00               	movlw	0
  4670  001786  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4671  001788  0E0A               	movlw	10
  4672  00178A  6E03               	movwf	___wmul@multiplicand^0,c
  4673  00178C  ECBB  F00E         	call	___wmul	;wreg free
  4674  001790  C001  F00E         	movff	?___wmul,DatoDigitadoAEntero@Decena
  4675  001794  C002  F00F         	movff	?___wmul+1,DatoDigitadoAEntero@Decena+1
  4676  001798                     
  4677                           ;keypad.c: 141:     Resultado = Decena + Unidad;
  4678  001798  500A               	movf	DatoDigitadoAEntero@Unidad^0,w,c
  4679  00179A  240E               	addwf	DatoDigitadoAEntero@Decena^0,w,c
  4680  00179C  6E0C               	movwf	DatoDigitadoAEntero@Resultado^0,c
  4681  00179E  500B               	movf	(DatoDigitadoAEntero@Unidad+1)^0,w,c
  4682  0017A0  200F               	addwfc	(DatoDigitadoAEntero@Decena+1)^0,w,c
  4683  0017A2  6E0D               	movwf	(DatoDigitadoAEntero@Resultado+1)^0,c
  4684  0017A4                     
  4685                           ;keypad.c: 143:     return Resultado;
  4686  0017A4  C00C  F007         	movff	DatoDigitadoAEntero@Resultado,?_DatoDigitadoAEntero
  4687  0017A8  C00D  F008         	movff	DatoDigitadoAEntero@Resultado+1,?_DatoDigitadoAEntero+1
  4688  0017AC  0012               	return		;funcret
  4689  0017AE                     __end_of_DatoDigitadoAEntero:
  4690                           	callstack 0
  4691                           
  4692 ;; *************** function ___wmul *****************
  4693 ;; Defined at:
  4694 ;;		line 15 in file "D:\XC8 compilador para el MPLAB\pic\sources\c99\common\Umul16.c"
  4695 ;; Parameters:    Size  Location     Type
  4696 ;;  multiplier      2    0[COMRAM] unsigned int 
  4697 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4698 ;; Auto vars:     Size  Location     Type
  4699 ;;  product         2    4[COMRAM] unsigned int 
  4700 ;; Return value:  Size  Location     Type
  4701 ;;                  2    0[COMRAM] unsigned int 
  4702 ;; Registers used:
  4703 ;;		wreg, status,2, status,0, prodl, prodh
  4704 ;; Tracked objects:
  4705 ;;		On entry : 0/0
  4706 ;;		On exit  : 0/0
  4707 ;;		Unchanged: 0/0
  4708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4709 ;;      Params:         4       0       0       0       0       0       0       0       0
  4710 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4711 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4712 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4713 ;;Total ram usage:        6 bytes
  4714 ;; Hardware stack levels used: 1
  4715 ;; This function calls:
  4716 ;;		Nothing
  4717 ;; This function is called by:
  4718 ;;		_DatoDigitadoAEntero
  4719 ;; This function uses a non-reentrant model
  4720 ;;
  4721                           
  4722                           	psect	text31
  4723  001D76                     __ptext31:
  4724                           	callstack 0
  4725  001D76                     ___wmul:
  4726                           	callstack 29
  4727  001D76  5001               	movf	___wmul@multiplier^0,w,c
  4728  001D78  0203               	mulwf	___wmul@multiplicand^0,c
  4729  001D7A  CFF3 F005          	movff	prodl,___wmul@product
  4730  001D7E  CFF4 F006          	movff	prodh,___wmul@product+1
  4731  001D82  5001               	movf	___wmul@multiplier^0,w,c
  4732  001D84  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  4733  001D86  50F3               	movf	243,w,c
  4734  001D88  2606               	addwf	(___wmul@product+1)^0,f,c
  4735  001D8A  5002               	movf	(___wmul@multiplier+1)^0,w,c
  4736  001D8C  0203               	mulwf	___wmul@multiplicand^0,c
  4737  001D8E  50F3               	movf	243,w,c
  4738  001D90  2606               	addwf	(___wmul@product+1)^0,f,c
  4739  001D92  C005  F001         	movff	___wmul@product,?___wmul
  4740  001D96  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4741  001D9A  0012               	return		;funcret
  4742  001D9C                     __end_of___wmul:
  4743                           	callstack 0
  4744                           
  4745 ;; *************** function _ControlTemperaturaVentilador *****************
  4746 ;; Defined at:
  4747 ;;		line 59 in file "Actuadores.c"
  4748 ;; Parameters:    Size  Location     Type
  4749 ;;  TempActual      2    0[COMRAM] PTR unsigned char 
  4750 ;;		 -> Datos(2), 
  4751 ;;  TempDigitada    2    2[COMRAM] int 
  4752 ;;  MargenErrorT    2    4[COMRAM] int 
  4753 ;; Auto vars:     Size  Location     Type
  4754 ;;		None
  4755 ;; Return value:  Size  Location     Type
  4756 ;;                  1    wreg      void 
  4757 ;; Registers used:
  4758 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4759 ;; Tracked objects:
  4760 ;;		On entry : 0/0
  4761 ;;		On exit  : 0/0
  4762 ;;		Unchanged: 0/0
  4763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4764 ;;      Params:         6       0       0       0       0       0       0       0       0
  4765 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4766 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4767 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4768 ;;Total ram usage:       11 bytes
  4769 ;; Hardware stack levels used: 1
  4770 ;; Hardware stack levels required when called: 1
  4771 ;; This function calls:
  4772 ;;		_ApagarVentiladores
  4773 ;;		_PrenderVentiladores
  4774 ;; This function is called by:
  4775 ;;		_main
  4776 ;; This function uses a non-reentrant model
  4777 ;;
  4778                           
  4779                           	psect	text32
  4780  001AF2                     __ptext32:
  4781                           	callstack 0
  4782  001AF2                     _ControlTemperaturaVentilador:
  4783                           	callstack 29
  4784  001AF2                     
  4785                           ;Actuadores.c: 60:     if(*TempActual>TempDigitada+MargenErrorT){
  4786  001AF2  C001  FFD9         	movff	ControlTemperaturaVentilador@TempActual,fsr2l
  4787  001AF6  C002  FFDA         	movff	ControlTemperaturaVentilador@TempActual+1,fsr2h
  4788  001AFA  50DF               	movf	indf2,w,c
  4789  001AFC  6E07               	movwf	??_ControlTemperaturaVentilador^0,c
  4790  001AFE  6A08               	clrf	(??_ControlTemperaturaVentilador+1)^0,c
  4791  001B00  5005               	movf	ControlTemperaturaVentilador@MargenErrorT^0,w,c
  4792  001B02  2403               	addwf	ControlTemperaturaVentilador@TempDigitada^0,w,c
  4793  001B04  6E09               	movwf	(??_ControlTemperaturaVentilador+2)^0,c
  4794  001B06  5006               	movf	(ControlTemperaturaVentilador@MargenErrorT+1)^0,w,c
  4795  001B08  2004               	addwfc	(ControlTemperaturaVentilador@TempDigitada+1)^0,w,c
  4796  001B0A  6E0A               	movwf	(??_ControlTemperaturaVentilador+3)^0,c
  4797  001B0C  5007               	movf	??_ControlTemperaturaVentilador^0,w,c
  4798  001B0E  5C09               	subwf	(??_ControlTemperaturaVentilador+2)^0,w,c
  4799  001B10  500A               	movf	(??_ControlTemperaturaVentilador+3)^0,w,c
  4800  001B12  0A80               	xorlw	128
  4801  001B14  6E0B               	movwf	(??_ControlTemperaturaVentilador+4)^0,c
  4802  001B16  5008               	movf	(??_ControlTemperaturaVentilador+1)^0,w,c
  4803  001B18  0A80               	xorlw	128
  4804  001B1A  580B               	subwfb	(??_ControlTemperaturaVentilador+4)^0,w,c
  4805  001B1C  B0D8               	btfsc	status,0,c
  4806  001B1E  EF93  F00D         	goto	u1671
  4807  001B22  EF95  F00D         	goto	u1670
  4808  001B26                     u1671:
  4809  001B26  EF99  F00D         	goto	l2363
  4810  001B2A                     u1670:
  4811  001B2A                     
  4812                           ;Actuadores.c: 61:         PrenderVentiladores();
  4813  001B2A  ECEE  F00E         	call	_PrenderVentiladores	;wreg free
  4814                           
  4815                           ;Actuadores.c: 62:     }else{
  4816  001B2E  EF9B  F00D         	goto	l302
  4817  001B32                     l2363:
  4818                           
  4819                           ;Actuadores.c: 63:         ApagarVentiladores();
  4820  001B32  ECF1  F00E         	call	_ApagarVentiladores	;wreg free
  4821  001B36                     l302:
  4822  001B36  0012               	return		;funcret
  4823  001B38                     __end_of_ControlTemperaturaVentilador:
  4824                           	callstack 0
  4825                           
  4826 ;; *************** function _PrenderVentiladores *****************
  4827 ;; Defined at:
  4828 ;;		line 30 in file "Actuadores.c"
  4829 ;; Parameters:    Size  Location     Type
  4830 ;;		None
  4831 ;; Auto vars:     Size  Location     Type
  4832 ;;		None
  4833 ;; Return value:  Size  Location     Type
  4834 ;;                  1    wreg      void 
  4835 ;; Registers used:
  4836 ;;		None
  4837 ;; Tracked objects:
  4838 ;;		On entry : 0/0
  4839 ;;		On exit  : 0/0
  4840 ;;		Unchanged: 0/0
  4841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4842 ;;      Params:         0       0       0       0       0       0       0       0       0
  4843 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4844 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4845 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4846 ;;Total ram usage:        0 bytes
  4847 ;; Hardware stack levels used: 1
  4848 ;; This function calls:
  4849 ;;		Nothing
  4850 ;; This function is called by:
  4851 ;;		_ControlTemperaturaVentilador
  4852 ;; This function uses a non-reentrant model
  4853 ;;
  4854                           
  4855                           	psect	text33
  4856  001DDC                     __ptext33:
  4857                           	callstack 0
  4858  001DDC                     _PrenderVentiladores:
  4859                           	callstack 29
  4860  001DDC                     
  4861                           ;Actuadores.c: 31:     LATC2=1;
  4862  001DDC  848B               	bsf	3979,2,c	;volatile
  4863                           
  4864                           ;Actuadores.c: 32:     LATC6=1;
  4865  001DDE  8C8B               	bsf	3979,6,c	;volatile
  4866  001DE0  0012               	return		;funcret
  4867  001DE2                     __end_of_PrenderVentiladores:
  4868                           	callstack 0
  4869                           
  4870 ;; *************** function _ApagarVentiladores *****************
  4871 ;; Defined at:
  4872 ;;		line 20 in file "Actuadores.c"
  4873 ;; Parameters:    Size  Location     Type
  4874 ;;		None
  4875 ;; Auto vars:     Size  Location     Type
  4876 ;;		None
  4877 ;; Return value:  Size  Location     Type
  4878 ;;                  1    wreg      void 
  4879 ;; Registers used:
  4880 ;;		None
  4881 ;; Tracked objects:
  4882 ;;		On entry : 0/0
  4883 ;;		On exit  : 0/0
  4884 ;;		Unchanged: 0/0
  4885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4886 ;;      Params:         0       0       0       0       0       0       0       0       0
  4887 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4888 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4889 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4890 ;;Total ram usage:        0 bytes
  4891 ;; Hardware stack levels used: 1
  4892 ;; This function calls:
  4893 ;;		Nothing
  4894 ;; This function is called by:
  4895 ;;		_main
  4896 ;;		_ControlTemperaturaVentilador
  4897 ;; This function uses a non-reentrant model
  4898 ;;
  4899                           
  4900                           	psect	text34
  4901  001DE2                     __ptext34:
  4902                           	callstack 0
  4903  001DE2                     _ApagarVentiladores:
  4904                           	callstack 29
  4905  001DE2                     
  4906                           ;Actuadores.c: 21:     LATC2=0;
  4907  001DE2  948B               	bcf	3979,2,c	;volatile
  4908                           
  4909                           ;Actuadores.c: 22:     LATC6=0;
  4910  001DE4  9C8B               	bcf	3979,6,c	;volatile
  4911  001DE6  0012               	return		;funcret
  4912  001DE8                     __end_of_ApagarVentiladores:
  4913                           	callstack 0
  4914                           
  4915 ;; *************** function _ControlHumedadAspersor *****************
  4916 ;; Defined at:
  4917 ;;		line 51 in file "Actuadores.c"
  4918 ;; Parameters:    Size  Location     Type
  4919 ;;  HumedadActua    2    0[COMRAM] PTR unsigned char 
  4920 ;;		 -> Datos(2), 
  4921 ;;  HumedadDigit    2    2[COMRAM] int 
  4922 ;;  MargenErrorH    2    4[COMRAM] int 
  4923 ;; Auto vars:     Size  Location     Type
  4924 ;;		None
  4925 ;; Return value:  Size  Location     Type
  4926 ;;                  1    wreg      void 
  4927 ;; Registers used:
  4928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4929 ;; Tracked objects:
  4930 ;;		On entry : 0/0
  4931 ;;		On exit  : 0/0
  4932 ;;		Unchanged: 0/0
  4933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4934 ;;      Params:         6       0       0       0       0       0       0       0       0
  4935 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4936 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4937 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4938 ;;Total ram usage:       11 bytes
  4939 ;; Hardware stack levels used: 1
  4940 ;; Hardware stack levels required when called: 1
  4941 ;; This function calls:
  4942 ;;		_ApagarAspersores
  4943 ;;		_PrenderAspersores
  4944 ;; This function is called by:
  4945 ;;		_main
  4946 ;; This function uses a non-reentrant model
  4947 ;;
  4948                           
  4949                           	psect	text35
  4950  001B38                     __ptext35:
  4951                           	callstack 0
  4952  001B38                     _ControlHumedadAspersor:
  4953                           	callstack 29
  4954  001B38                     
  4955                           ;Actuadores.c: 52:     if(*HumedadActual<HumedadDigitada-MargenErrorH){
  4956  001B38  5005               	movf	ControlHumedadAspersor@MargenErrorH^0,w,c
  4957  001B3A  5C03               	subwf	ControlHumedadAspersor@HumedadDigitada^0,w,c
  4958  001B3C  6E07               	movwf	??_ControlHumedadAspersor^0,c
  4959  001B3E  5006               	movf	(ControlHumedadAspersor@MargenErrorH+1)^0,w,c
  4960  001B40  5804               	subwfb	(ControlHumedadAspersor@HumedadDigitada+1)^0,w,c
  4961  001B42  6E08               	movwf	(??_ControlHumedadAspersor+1)^0,c
  4962  001B44  C001  FFD9         	movff	ControlHumedadAspersor@HumedadActual,fsr2l
  4963  001B48  C002  FFDA         	movff	ControlHumedadAspersor@HumedadActual+1,fsr2h
  4964  001B4C  50DF               	movf	indf2,w,c
  4965  001B4E  6E09               	movwf	(??_ControlHumedadAspersor+2)^0,c
  4966  001B50  6A0A               	clrf	(??_ControlHumedadAspersor+3)^0,c
  4967  001B52  5007               	movf	??_ControlHumedadAspersor^0,w,c
  4968  001B54  5C09               	subwf	(??_ControlHumedadAspersor+2)^0,w,c
  4969  001B56  500A               	movf	(??_ControlHumedadAspersor+3)^0,w,c
  4970  001B58  0A80               	xorlw	128
  4971  001B5A  6E0B               	movwf	(??_ControlHumedadAspersor+4)^0,c
  4972  001B5C  5008               	movf	(??_ControlHumedadAspersor+1)^0,w,c
  4973  001B5E  0A80               	xorlw	128
  4974  001B60  580B               	subwfb	(??_ControlHumedadAspersor+4)^0,w,c
  4975  001B62  B0D8               	btfsc	status,0,c
  4976  001B64  EFB6  F00D         	goto	u1661
  4977  001B68  EFB8  F00D         	goto	u1660
  4978  001B6C                     u1661:
  4979  001B6C  EFBC  F00D         	goto	l2357
  4980  001B70                     u1660:
  4981  001B70                     
  4982                           ;Actuadores.c: 53:         PrenderAspersores();
  4983  001B70  ECF4  F00E         	call	_PrenderAspersores	;wreg free
  4984                           
  4985                           ;Actuadores.c: 54:     }else{
  4986  001B74  EFBE  F00D         	goto	l297
  4987  001B78                     l2357:
  4988                           
  4989                           ;Actuadores.c: 55:         ApagarAspersores();
  4990  001B78  ECF7  F00E         	call	_ApagarAspersores	;wreg free
  4991  001B7C                     l297:
  4992  001B7C  0012               	return		;funcret
  4993  001B7E                     __end_of_ControlHumedadAspersor:
  4994                           	callstack 0
  4995                           
  4996 ;; *************** function _PrenderAspersores *****************
  4997 ;; Defined at:
  4998 ;;		line 25 in file "Actuadores.c"
  4999 ;; Parameters:    Size  Location     Type
  5000 ;;		None
  5001 ;; Auto vars:     Size  Location     Type
  5002 ;;		None
  5003 ;; Return value:  Size  Location     Type
  5004 ;;                  1    wreg      void 
  5005 ;; Registers used:
  5006 ;;		None
  5007 ;; Tracked objects:
  5008 ;;		On entry : 0/0
  5009 ;;		On exit  : 0/0
  5010 ;;		Unchanged: 0/0
  5011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5012 ;;      Params:         0       0       0       0       0       0       0       0       0
  5013 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5014 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5015 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5016 ;;Total ram usage:        0 bytes
  5017 ;; Hardware stack levels used: 1
  5018 ;; This function calls:
  5019 ;;		Nothing
  5020 ;; This function is called by:
  5021 ;;		_ControlHumedadAspersor
  5022 ;; This function uses a non-reentrant model
  5023 ;;
  5024                           
  5025                           	psect	text36
  5026  001DE8                     __ptext36:
  5027                           	callstack 0
  5028  001DE8                     _PrenderAspersores:
  5029                           	callstack 29
  5030  001DE8                     
  5031                           ;Actuadores.c: 26:     LATC0=1;
  5032  001DE8  808B               	bsf	3979,0,c	;volatile
  5033                           
  5034                           ;Actuadores.c: 27:     LATC1=1;
  5035  001DEA  828B               	bsf	3979,1,c	;volatile
  5036  001DEC  0012               	return		;funcret
  5037  001DEE                     __end_of_PrenderAspersores:
  5038                           	callstack 0
  5039                           
  5040 ;; *************** function _ApagarAspersores *****************
  5041 ;; Defined at:
  5042 ;;		line 16 in file "Actuadores.c"
  5043 ;; Parameters:    Size  Location     Type
  5044 ;;		None
  5045 ;; Auto vars:     Size  Location     Type
  5046 ;;		None
  5047 ;; Return value:  Size  Location     Type
  5048 ;;                  1    wreg      void 
  5049 ;; Registers used:
  5050 ;;		None
  5051 ;; Tracked objects:
  5052 ;;		On entry : 0/0
  5053 ;;		On exit  : 0/0
  5054 ;;		Unchanged: 0/0
  5055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5056 ;;      Params:         0       0       0       0       0       0       0       0       0
  5057 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5058 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5059 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5060 ;;Total ram usage:        0 bytes
  5061 ;; Hardware stack levels used: 1
  5062 ;; This function calls:
  5063 ;;		Nothing
  5064 ;; This function is called by:
  5065 ;;		_main
  5066 ;;		_ControlHumedadAspersor
  5067 ;; This function uses a non-reentrant model
  5068 ;;
  5069                           
  5070                           	psect	text37
  5071  001DEE                     __ptext37:
  5072                           	callstack 0
  5073  001DEE                     _ApagarAspersores:
  5074                           	callstack 29
  5075  001DEE                     
  5076                           ;Actuadores.c: 17:     LATC0=0;
  5077  001DEE  908B               	bcf	3979,0,c	;volatile
  5078                           
  5079                           ;Actuadores.c: 18:     LATC1=0;
  5080  001DF0  928B               	bcf	3979,1,c	;volatile
  5081  001DF2  0012               	return		;funcret
  5082  001DF4                     __end_of_ApagarAspersores:
  5083                           	callstack 0
  5084                           
  5085 ;; *************** function _ConfigurarPuertosLCD *****************
  5086 ;; Defined at:
  5087 ;;		line 127 in file "LCD.c"
  5088 ;; Parameters:    Size  Location     Type
  5089 ;;		None
  5090 ;; Auto vars:     Size  Location     Type
  5091 ;;		None
  5092 ;; Return value:  Size  Location     Type
  5093 ;;                  1    wreg      void 
  5094 ;; Registers used:
  5095 ;;		wreg, status,2
  5096 ;; Tracked objects:
  5097 ;;		On entry : 0/0
  5098 ;;		On exit  : 0/0
  5099 ;;		Unchanged: 0/0
  5100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5101 ;;      Params:         0       0       0       0       0       0       0       0       0
  5102 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5103 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5104 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5105 ;;Total ram usage:        0 bytes
  5106 ;; Hardware stack levels used: 1
  5107 ;; This function calls:
  5108 ;;		Nothing
  5109 ;; This function is called by:
  5110 ;;		_main
  5111 ;; This function uses a non-reentrant model
  5112 ;;
  5113                           
  5114                           	psect	text38
  5115  001DF4                     __ptext38:
  5116                           	callstack 0
  5117  001DF4                     _ConfigurarPuertosLCD:
  5118                           	callstack 30
  5119  001DF4                     
  5120                           ;LCD.c: 128: TRISD=0x00;
  5121  001DF4  0E00               	movlw	0
  5122  001DF6  6E95               	movwf	149,c	;volatile
  5123  001DF8  0012               	return		;funcret
  5124  001DFA                     __end_of_ConfigurarPuertosLCD:
  5125                           	callstack 0
  5126                           
  5127 ;; *************** function _Comparar_T_H_Adecuados *****************
  5128 ;; Defined at:
  5129 ;;		line 60 in file "DHT11.c"
  5130 ;; Parameters:    Size  Location     Type
  5131 ;;  TempActual      2    2[COMRAM] PTR unsigned char 
  5132 ;;		 -> Datos(2), 
  5133 ;;  HumActual       2    4[COMRAM] PTR unsigned char 
  5134 ;;		 -> Datos(2), 
  5135 ;;  TempDigitada    2    6[COMRAM] int 
  5136 ;;  HumDigitada     2    8[COMRAM] int 
  5137 ;;  MargenErrorT    2   10[COMRAM] int 
  5138 ;;  MargenErrorH    2   12[COMRAM] int 
  5139 ;; Auto vars:     Size  Location     Type
  5140 ;;  HumedadAdecu    1   20[COMRAM] _Bool 
  5141 ;;  TemperaturaA    1   19[COMRAM] _Bool 
  5142 ;; Return value:  Size  Location     Type
  5143 ;;                  1    wreg      void 
  5144 ;; Registers used:
  5145 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5146 ;; Tracked objects:
  5147 ;;		On entry : 0/0
  5148 ;;		On exit  : 0/0
  5149 ;;		Unchanged: 0/0
  5150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5151 ;;      Params:        12       0       0       0       0       0       0       0       0
  5152 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5153 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5154 ;;      Totals:        19       0       0       0       0       0       0       0       0
  5155 ;;Total ram usage:       19 bytes
  5156 ;; Hardware stack levels used: 1
  5157 ;; Hardware stack levels required when called: 2
  5158 ;; This function calls:
  5159 ;;		_PrenderLed
  5160 ;; This function is called by:
  5161 ;;		_main
  5162 ;; This function uses a non-reentrant model
  5163 ;;
  5164                           
  5165                           	psect	text39
  5166  00134A                     __ptext39:
  5167                           	callstack 0
  5168  00134A                     _Comparar_T_H_Adecuados:
  5169                           	callstack 28
  5170  00134A                     
  5171                           ;DHT11.c: 60: void Comparar_T_H_Adecuados(char *TempActual,char *HumActual,int TempDigit
      +                          ada,;DHT11.c: 61:         int HumDigitada,int MargenErrorT,int MargenErrorH){;DHT11.c: 6
      +                          2:     _Bool TemperaturaAdecuada= 1;
  5172  00134A  0E01               	movlw	1
  5173  00134C  6E14               	movwf	Comparar_T_H_Adecuados@TemperaturaAdecuada^0,c
  5174                           
  5175                           ;DHT11.c: 63:     _Bool HumedadAdecuada =1;
  5176  00134E  0E01               	movlw	1
  5177  001350  6E15               	movwf	Comparar_T_H_Adecuados@HumedadAdecuada^0,c
  5178  001352                     
  5179                           ;DHT11.c: 64:     if(*TempActual<TempDigitada-MargenErrorT || *TempActual >TempDigitada+
      +                          MargenErrorT){
  5180  001352  500B               	movf	Comparar_T_H_Adecuados@MargenErrorT^0,w,c
  5181  001354  5C07               	subwf	Comparar_T_H_Adecuados@TempDigitada^0,w,c
  5182  001356  6E0F               	movwf	??_Comparar_T_H_Adecuados^0,c
  5183  001358  500C               	movf	(Comparar_T_H_Adecuados@MargenErrorT+1)^0,w,c
  5184  00135A  5808               	subwfb	(Comparar_T_H_Adecuados@TempDigitada+1)^0,w,c
  5185  00135C  6E10               	movwf	(??_Comparar_T_H_Adecuados+1)^0,c
  5186  00135E  C003  FFD9         	movff	Comparar_T_H_Adecuados@TempActual,fsr2l
  5187  001362  C004  FFDA         	movff	Comparar_T_H_Adecuados@TempActual+1,fsr2h
  5188  001366  50DF               	movf	indf2,w,c
  5189  001368  6E11               	movwf	(??_Comparar_T_H_Adecuados+2)^0,c
  5190  00136A  6A12               	clrf	(??_Comparar_T_H_Adecuados+3)^0,c
  5191  00136C  500F               	movf	??_Comparar_T_H_Adecuados^0,w,c
  5192  00136E  5C11               	subwf	(??_Comparar_T_H_Adecuados+2)^0,w,c
  5193  001370  5012               	movf	(??_Comparar_T_H_Adecuados+3)^0,w,c
  5194  001372  0A80               	xorlw	128
  5195  001374  6E13               	movwf	(??_Comparar_T_H_Adecuados+4)^0,c
  5196  001376  5010               	movf	(??_Comparar_T_H_Adecuados+1)^0,w,c
  5197  001378  0A80               	xorlw	128
  5198  00137A  5813               	subwfb	(??_Comparar_T_H_Adecuados+4)^0,w,c
  5199  00137C  A0D8               	btfss	status,0,c
  5200  00137E  EFC3  F009         	goto	u1621
  5201  001382  EFC5  F009         	goto	u1620
  5202  001386                     u1621:
  5203  001386  EFE1  F009         	goto	l2343
  5204  00138A                     u1620:
  5205  00138A  C003  FFD9         	movff	Comparar_T_H_Adecuados@TempActual,fsr2l
  5206  00138E  C004  FFDA         	movff	Comparar_T_H_Adecuados@TempActual+1,fsr2h
  5207  001392  50DF               	movf	indf2,w,c
  5208  001394  6E0F               	movwf	??_Comparar_T_H_Adecuados^0,c
  5209  001396  6A10               	clrf	(??_Comparar_T_H_Adecuados+1)^0,c
  5210  001398  500B               	movf	Comparar_T_H_Adecuados@MargenErrorT^0,w,c
  5211  00139A  2407               	addwf	Comparar_T_H_Adecuados@TempDigitada^0,w,c
  5212  00139C  6E11               	movwf	(??_Comparar_T_H_Adecuados+2)^0,c
  5213  00139E  500C               	movf	(Comparar_T_H_Adecuados@MargenErrorT+1)^0,w,c
  5214  0013A0  2008               	addwfc	(Comparar_T_H_Adecuados@TempDigitada+1)^0,w,c
  5215  0013A2  6E12               	movwf	(??_Comparar_T_H_Adecuados+3)^0,c
  5216  0013A4  500F               	movf	??_Comparar_T_H_Adecuados^0,w,c
  5217  0013A6  5C11               	subwf	(??_Comparar_T_H_Adecuados+2)^0,w,c
  5218  0013A8  5012               	movf	(??_Comparar_T_H_Adecuados+3)^0,w,c
  5219  0013AA  0A80               	xorlw	128
  5220  0013AC  6E13               	movwf	(??_Comparar_T_H_Adecuados+4)^0,c
  5221  0013AE  5010               	movf	(??_Comparar_T_H_Adecuados+1)^0,w,c
  5222  0013B0  0A80               	xorlw	128
  5223  0013B2  5813               	subwfb	(??_Comparar_T_H_Adecuados+4)^0,w,c
  5224  0013B4  B0D8               	btfsc	status,0,c
  5225  0013B6  EFDF  F009         	goto	u1631
  5226  0013BA  EFE1  F009         	goto	u1630
  5227  0013BE                     u1631:
  5228  0013BE  EFE3  F009         	goto	l2345
  5229  0013C2                     u1630:
  5230  0013C2                     l2343:
  5231                           
  5232                           ;DHT11.c: 65:            TemperaturaAdecuada=0;
  5233  0013C2  0E00               	movlw	0
  5234  0013C4  6E14               	movwf	Comparar_T_H_Adecuados@TemperaturaAdecuada^0,c
  5235  0013C6                     l2345:
  5236                           
  5237                           ;DHT11.c: 67:     if(*HumActual<HumDigitada-MargenErrorH || *HumActual>HumDigitada+Marge
      +                          nErrorH){
  5238  0013C6  500D               	movf	Comparar_T_H_Adecuados@MargenErrorH^0,w,c
  5239  0013C8  5C09               	subwf	Comparar_T_H_Adecuados@HumDigitada^0,w,c
  5240  0013CA  6E0F               	movwf	??_Comparar_T_H_Adecuados^0,c
  5241  0013CC  500E               	movf	(Comparar_T_H_Adecuados@MargenErrorH+1)^0,w,c
  5242  0013CE  580A               	subwfb	(Comparar_T_H_Adecuados@HumDigitada+1)^0,w,c
  5243  0013D0  6E10               	movwf	(??_Comparar_T_H_Adecuados+1)^0,c
  5244  0013D2  C005  FFD9         	movff	Comparar_T_H_Adecuados@HumActual,fsr2l
  5245  0013D6  C006  FFDA         	movff	Comparar_T_H_Adecuados@HumActual+1,fsr2h
  5246  0013DA  50DF               	movf	indf2,w,c
  5247  0013DC  6E11               	movwf	(??_Comparar_T_H_Adecuados+2)^0,c
  5248  0013DE  6A12               	clrf	(??_Comparar_T_H_Adecuados+3)^0,c
  5249  0013E0  500F               	movf	??_Comparar_T_H_Adecuados^0,w,c
  5250  0013E2  5C11               	subwf	(??_Comparar_T_H_Adecuados+2)^0,w,c
  5251  0013E4  5012               	movf	(??_Comparar_T_H_Adecuados+3)^0,w,c
  5252  0013E6  0A80               	xorlw	128
  5253  0013E8  6E13               	movwf	(??_Comparar_T_H_Adecuados+4)^0,c
  5254  0013EA  5010               	movf	(??_Comparar_T_H_Adecuados+1)^0,w,c
  5255  0013EC  0A80               	xorlw	128
  5256  0013EE  5813               	subwfb	(??_Comparar_T_H_Adecuados+4)^0,w,c
  5257  0013F0  A0D8               	btfss	status,0,c
  5258  0013F2  EFFD  F009         	goto	u1641
  5259  0013F6  EFFF  F009         	goto	u1640
  5260  0013FA                     u1641:
  5261  0013FA  EF1B  F00A         	goto	l2349
  5262  0013FE                     u1640:
  5263  0013FE  C005  FFD9         	movff	Comparar_T_H_Adecuados@HumActual,fsr2l
  5264  001402  C006  FFDA         	movff	Comparar_T_H_Adecuados@HumActual+1,fsr2h
  5265  001406  50DF               	movf	indf2,w,c
  5266  001408  6E0F               	movwf	??_Comparar_T_H_Adecuados^0,c
  5267  00140A  6A10               	clrf	(??_Comparar_T_H_Adecuados+1)^0,c
  5268  00140C  500D               	movf	Comparar_T_H_Adecuados@MargenErrorH^0,w,c
  5269  00140E  2409               	addwf	Comparar_T_H_Adecuados@HumDigitada^0,w,c
  5270  001410  6E11               	movwf	(??_Comparar_T_H_Adecuados+2)^0,c
  5271  001412  500E               	movf	(Comparar_T_H_Adecuados@MargenErrorH+1)^0,w,c
  5272  001414  200A               	addwfc	(Comparar_T_H_Adecuados@HumDigitada+1)^0,w,c
  5273  001416  6E12               	movwf	(??_Comparar_T_H_Adecuados+3)^0,c
  5274  001418  500F               	movf	??_Comparar_T_H_Adecuados^0,w,c
  5275  00141A  5C11               	subwf	(??_Comparar_T_H_Adecuados+2)^0,w,c
  5276  00141C  5012               	movf	(??_Comparar_T_H_Adecuados+3)^0,w,c
  5277  00141E  0A80               	xorlw	128
  5278  001420  6E13               	movwf	(??_Comparar_T_H_Adecuados+4)^0,c
  5279  001422  5010               	movf	(??_Comparar_T_H_Adecuados+1)^0,w,c
  5280  001424  0A80               	xorlw	128
  5281  001426  5813               	subwfb	(??_Comparar_T_H_Adecuados+4)^0,w,c
  5282  001428  B0D8               	btfsc	status,0,c
  5283  00142A  EF19  F00A         	goto	u1651
  5284  00142E  EF1B  F00A         	goto	u1650
  5285  001432                     u1651:
  5286  001432  EF1D  F00A         	goto	l2351
  5287  001436                     u1650:
  5288  001436                     l2349:
  5289                           
  5290                           ;DHT11.c: 68:         HumedadAdecuada=0;
  5291  001436  0E00               	movlw	0
  5292  001438  6E15               	movwf	Comparar_T_H_Adecuados@HumedadAdecuada^0,c
  5293  00143A                     l2351:
  5294                           
  5295                           ;DHT11.c: 70:    PrenderLed(TemperaturaAdecuada,HumedadAdecuada);
  5296  00143A  C015  F001         	movff	Comparar_T_H_Adecuados@HumedadAdecuada,PrenderLed@HumedadAdecuada
  5297  00143E  5014               	movf	Comparar_T_H_Adecuados@TemperaturaAdecuada^0,w,c
  5298  001440  ECD5  F00C         	call	_PrenderLed
  5299  001444  0012               	return		;funcret
  5300  001446                     __end_of_Comparar_T_H_Adecuados:
  5301                           	callstack 0
  5302                           
  5303 ;; *************** function _PrenderLed *****************
  5304 ;; Defined at:
  5305 ;;		line 40 in file "Actuadores.c"
  5306 ;; Parameters:    Size  Location     Type
  5307 ;;  TemperaturaA    1    wreg     _Bool 
  5308 ;;  HumedadAdecu    1    0[COMRAM] _Bool 
  5309 ;; Auto vars:     Size  Location     Type
  5310 ;;  TemperaturaA    1    1[COMRAM] _Bool 
  5311 ;; Return value:  Size  Location     Type
  5312 ;;                  1    wreg      void 
  5313 ;; Registers used:
  5314 ;;		wreg, status,2, cstack
  5315 ;; Tracked objects:
  5316 ;;		On entry : 0/0
  5317 ;;		On exit  : 0/0
  5318 ;;		Unchanged: 0/0
  5319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5320 ;;      Params:         1       0       0       0       0       0       0       0       0
  5321 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5322 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5323 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5324 ;;Total ram usage:        2 bytes
  5325 ;; Hardware stack levels used: 1
  5326 ;; Hardware stack levels required when called: 1
  5327 ;; This function calls:
  5328 ;;		_ApagarLeds
  5329 ;; This function is called by:
  5330 ;;		_Comparar_T_H_Adecuados
  5331 ;; This function uses a non-reentrant model
  5332 ;;
  5333                           
  5334                           	psect	text40
  5335  0019AA                     __ptext40:
  5336                           	callstack 0
  5337  0019AA                     _PrenderLed:
  5338                           	callstack 28
  5339                           
  5340                           ;incstack = 0
  5341                           ;PrenderLed@TemperaturaAdecuada stored from wreg
  5342  0019AA  6E02               	movwf	PrenderLed@TemperaturaAdecuada^0,c
  5343  0019AC                     
  5344                           ;Actuadores.c: 41:     ApagarLeds();
  5345  0019AC  ECEA  F00E         	call	_ApagarLeds	;wreg free
  5346  0019B0                     
  5347                           ;Actuadores.c: 42:     if(TemperaturaAdecuada==0 && HumedadAdecuada==0){
  5348  0019B0  5002               	movf	PrenderLed@TemperaturaAdecuada^0,w,c
  5349  0019B2  A4D8               	btfss	status,2,c
  5350  0019B4  EFDE  F00C         	goto	u1581
  5351  0019B8  EFE0  F00C         	goto	u1580
  5352  0019BC                     u1581:
  5353  0019BC  EFEB  F00C         	goto	l2261
  5354  0019C0                     u1580:
  5355  0019C0  5001               	movf	PrenderLed@HumedadAdecuada^0,w,c
  5356  0019C2  A4D8               	btfss	status,2,c
  5357  0019C4  EFE6  F00C         	goto	u1591
  5358  0019C8  EFE8  F00C         	goto	u1590
  5359  0019CC                     u1591:
  5360  0019CC  EFEB  F00C         	goto	l2261
  5361  0019D0                     u1590:
  5362  0019D0                     
  5363                           ;Actuadores.c: 43:         LATE0=1;
  5364  0019D0  808D               	bsf	3981,0,c	;volatile
  5365                           
  5366                           ;Actuadores.c: 44:     }else if(TemperaturaAdecuada==0 || HumedadAdecuada==0){
  5367  0019D2  EFFF  F00C         	goto	l292
  5368  0019D6                     l2261:
  5369  0019D6  5002               	movf	PrenderLed@TemperaturaAdecuada^0,w,c
  5370  0019D8  B4D8               	btfsc	status,2,c
  5371  0019DA  EFF1  F00C         	goto	u1601
  5372  0019DE  EFF3  F00C         	goto	u1600
  5373  0019E2                     u1601:
  5374  0019E2  EFFB  F00C         	goto	l290
  5375  0019E6                     u1600:
  5376  0019E6  5001               	movf	PrenderLed@HumedadAdecuada^0,w,c
  5377  0019E8  A4D8               	btfss	status,2,c
  5378  0019EA  EFF9  F00C         	goto	u1611
  5379  0019EE  EFFB  F00C         	goto	u1610
  5380  0019F2                     u1611:
  5381  0019F2  EFFE  F00C         	goto	l288
  5382  0019F6                     u1610:
  5383  0019F6                     l290:
  5384                           
  5385                           ;Actuadores.c: 45:         LATE1=1;
  5386  0019F6  828D               	bsf	3981,1,c	;volatile
  5387                           
  5388                           ;Actuadores.c: 46:     }else{
  5389  0019F8  EFFF  F00C         	goto	l292
  5390  0019FC                     l288:
  5391                           
  5392                           ;Actuadores.c: 47:         LATE2=1;
  5393  0019FC  848D               	bsf	3981,2,c	;volatile
  5394  0019FE                     l292:
  5395  0019FE  0012               	return		;funcret
  5396  001A00                     __end_of_PrenderLed:
  5397                           	callstack 0
  5398                           
  5399 ;; *************** function _ApagarLeds *****************
  5400 ;; Defined at:
  5401 ;;		line 35 in file "Actuadores.c"
  5402 ;; Parameters:    Size  Location     Type
  5403 ;;		None
  5404 ;; Auto vars:     Size  Location     Type
  5405 ;;		None
  5406 ;; Return value:  Size  Location     Type
  5407 ;;                  1    wreg      void 
  5408 ;; Registers used:
  5409 ;;		None
  5410 ;; Tracked objects:
  5411 ;;		On entry : 0/0
  5412 ;;		On exit  : 0/0
  5413 ;;		Unchanged: 0/0
  5414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5415 ;;      Params:         0       0       0       0       0       0       0       0       0
  5416 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5417 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5418 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5419 ;;Total ram usage:        0 bytes
  5420 ;; Hardware stack levels used: 1
  5421 ;; This function calls:
  5422 ;;		Nothing
  5423 ;; This function is called by:
  5424 ;;		_main
  5425 ;;		_PrenderLed
  5426 ;; This function uses a non-reentrant model
  5427 ;;
  5428                           
  5429                           	psect	text41
  5430  001DD4                     __ptext41:
  5431                           	callstack 0
  5432  001DD4                     _ApagarLeds:
  5433                           	callstack 28
  5434  001DD4                     
  5435                           ;Actuadores.c: 36:     LATE1=0;
  5436  001DD4  928D               	bcf	3981,1,c	;volatile
  5437                           
  5438                           ;Actuadores.c: 37:     LATE0=0;
  5439  001DD6  908D               	bcf	3981,0,c	;volatile
  5440                           
  5441                           ;Actuadores.c: 38:     LATE2=0;
  5442  001DD8  948D               	bcf	3981,2,c	;volatile
  5443  001DDA  0012               	return		;funcret
  5444  001DDC                     __end_of_ApagarLeds:
  5445                           	callstack 0
  5446                           
  5447                           	psect	rparam
  5448  0000                     
  5449                           	psect	idloc
  5450                           
  5451                           ;Config register IDLOC0 @ 0x200000
  5452                           ;	unspecified, using default values
  5453  200000                     	org	2097152
  5454  200000  FF                 	db	255
  5455                           
  5456                           ;Config register IDLOC1 @ 0x200001
  5457                           ;	unspecified, using default values
  5458  200001                     	org	2097153
  5459  200001  FF                 	db	255
  5460                           
  5461                           ;Config register IDLOC2 @ 0x200002
  5462                           ;	unspecified, using default values
  5463  200002                     	org	2097154
  5464  200002  FF                 	db	255
  5465                           
  5466                           ;Config register IDLOC3 @ 0x200003
  5467                           ;	unspecified, using default values
  5468  200003                     	org	2097155
  5469  200003  FF                 	db	255
  5470                           
  5471                           ;Config register IDLOC4 @ 0x200004
  5472                           ;	unspecified, using default values
  5473  200004                     	org	2097156
  5474  200004  FF                 	db	255
  5475                           
  5476                           ;Config register IDLOC5 @ 0x200005
  5477                           ;	unspecified, using default values
  5478  200005                     	org	2097157
  5479  200005  FF                 	db	255
  5480                           
  5481                           ;Config register IDLOC6 @ 0x200006
  5482                           ;	unspecified, using default values
  5483  200006                     	org	2097158
  5484  200006  FF                 	db	255
  5485                           
  5486                           ;Config register IDLOC7 @ 0x200007
  5487                           ;	unspecified, using default values
  5488  200007                     	org	2097159
  5489  200007  FF                 	db	255
  5490                           
  5491                           	psect	config
  5492                           
  5493                           ;Config register CONFIG1L @ 0x300000
  5494                           ;	unspecified, using default values
  5495                           ;	PLL Prescaler Selection bits
  5496                           ;	PLLDIV = 0x0, unprogrammed default
  5497                           ;	System Clock Postscaler Selection bits
  5498                           ;	CPUDIV = 0x0, unprogrammed default
  5499                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  5500                           ;	USBDIV = 0x0, unprogrammed default
  5501  300000                     	org	3145728
  5502  300000  00                 	db	0
  5503                           
  5504                           ;Config register CONFIG1H @ 0x300001
  5505                           ;	Oscillator Selection bits
  5506                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  5507                           ;	Fail-Safe Clock Monitor Enable bit
  5508                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5509                           ;	Internal/External Oscillator Switchover bit
  5510                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5511  300001                     	org	3145729
  5512  300001  09                 	db	9
  5513                           
  5514                           ;Config register CONFIG2L @ 0x300002
  5515                           ;	Power-up Timer Enable bit
  5516                           ;	PWRT = OFF, PWRT disabled
  5517                           ;	Brown-out Reset Enable bits
  5518                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  5519                           ;	Brown-out Reset Voltage bits
  5520                           ;	BORV = 3, Minimum setting 2.05V
  5521                           ;	USB Voltage Regulator Enable bit
  5522                           ;	VREGEN = OFF, USB voltage regulator disabled
  5523  300002                     	org	3145730
  5524  300002  1F                 	db	31
  5525                           
  5526                           ;Config register CONFIG2H @ 0x300003
  5527                           ;	Watchdog Timer Enable bit
  5528                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5529                           ;	Watchdog Timer Postscale Select bits
  5530                           ;	WDTPS = 32768, 1:32768
  5531  300003                     	org	3145731
  5532  300003  1E                 	db	30
  5533                           
  5534                           ; Padding undefined space
  5535  300004                     	org	3145732
  5536  300004  FF                 	db	255
  5537                           
  5538                           ;Config register CONFIG3H @ 0x300005
  5539                           ;	CCP2 MUX bit
  5540                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  5541                           ;	PORTB A/D Enable bit
  5542                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5543                           ;	Low-Power Timer 1 Oscillator Enable bit
  5544                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5545                           ;	MCLR Pin Enable bit
  5546                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5547  300005                     	org	3145733
  5548  300005  81                 	db	129
  5549                           
  5550                           ;Config register CONFIG4L @ 0x300006
  5551                           ;	Stack Full/Underflow Reset Enable bit
  5552                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5553                           ;	Single-Supply ICSP Enable bit
  5554                           ;	LVP = OFF, Single-Supply ICSP disabled
  5555                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  5556                           ;	ICPRT = OFF, ICPORT disabled
  5557                           ;	Extended Instruction Set Enable bit
  5558                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5559                           ;	Background Debugger Enable bit
  5560                           ;	DEBUG = 0x1, unprogrammed default
  5561  300006                     	org	3145734
  5562  300006  81                 	db	129
  5563                           
  5564                           ; Padding undefined space
  5565  300007                     	org	3145735
  5566  300007  FF                 	db	255
  5567                           
  5568                           ;Config register CONFIG5L @ 0x300008
  5569                           ;	Code Protection bit
  5570                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  5571                           ;	Code Protection bit
  5572                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  5573                           ;	Code Protection bit
  5574                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  5575                           ;	Code Protection bit
  5576                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  5577  300008                     	org	3145736
  5578  300008  0F                 	db	15
  5579                           
  5580                           ;Config register CONFIG5H @ 0x300009
  5581                           ;	Boot Block Code Protection bit
  5582                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  5583                           ;	Data EEPROM Code Protection bit
  5584                           ;	CPD = OFF, Data EEPROM is not code-protected
  5585  300009                     	org	3145737
  5586  300009  C0                 	db	192
  5587                           
  5588                           ;Config register CONFIG6L @ 0x30000A
  5589                           ;	Write Protection bit
  5590                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  5591                           ;	Write Protection bit
  5592                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  5593                           ;	Write Protection bit
  5594                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  5595                           ;	Write Protection bit
  5596                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  5597  30000A                     	org	3145738
  5598  30000A  0F                 	db	15
  5599                           
  5600                           ;Config register CONFIG6H @ 0x30000B
  5601                           ;	Configuration Register Write Protection bit
  5602                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  5603                           ;	Boot Block Write Protection bit
  5604                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  5605                           ;	Data EEPROM Write Protection bit
  5606                           ;	WRTD = OFF, Data EEPROM is not write-protected
  5607  30000B                     	org	3145739
  5608  30000B  E0                 	db	224
  5609                           
  5610                           ;Config register CONFIG7L @ 0x30000C
  5611                           ;	Table Read Protection bit
  5612                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5613                           ;	Table Read Protection bit
  5614                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5615                           ;	Table Read Protection bit
  5616                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5617                           ;	Table Read Protection bit
  5618                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5619  30000C                     	org	3145740
  5620  30000C  0F                 	db	15
  5621                           
  5622                           ;Config register CONFIG7H @ 0x30000D
  5623                           ;	Boot Block Table Read Protection bit
  5624                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  5625  30000D                     	org	3145741
  5626  30000D  40                 	db	64
  5627                           tosu	equ	0xFFF
  5628                           tosh	equ	0xFFE
  5629                           tosl	equ	0xFFD
  5630                           stkptr	equ	0xFFC
  5631                           pclatu	equ	0xFFB
  5632                           pclath	equ	0xFFA
  5633                           pcl	equ	0xFF9
  5634                           tblptru	equ	0xFF8
  5635                           tblptrh	equ	0xFF7
  5636                           tblptrl	equ	0xFF6
  5637                           tablat	equ	0xFF5
  5638                           prodh	equ	0xFF4
  5639                           prodl	equ	0xFF3
  5640                           indf0	equ	0xFEF
  5641                           postinc0	equ	0xFEE
  5642                           postdec0	equ	0xFED
  5643                           preinc0	equ	0xFEC
  5644                           plusw0	equ	0xFEB
  5645                           fsr0h	equ	0xFEA
  5646                           fsr0l	equ	0xFE9
  5647                           wreg	equ	0xFE8
  5648                           indf1	equ	0xFE7
  5649                           postinc1	equ	0xFE6
  5650                           postdec1	equ	0xFE5
  5651                           preinc1	equ	0xFE4
  5652                           plusw1	equ	0xFE3
  5653                           fsr1h	equ	0xFE2
  5654                           fsr1l	equ	0xFE1
  5655                           bsr	equ	0xFE0
  5656                           indf2	equ	0xFDF
  5657                           postinc2	equ	0xFDE
  5658                           postdec2	equ	0xFDD
  5659                           preinc2	equ	0xFDC
  5660                           plusw2	equ	0xFDB
  5661                           fsr2h	equ	0xFDA
  5662                           fsr2l	equ	0xFD9
  5663                           status	equ	0xFD8

Data Sizes:
    Strings     77
    Constant    0
    Data        13
    BSS         69
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     11      93
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> Cadena(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_10(CODE[8]), STR_9(CODE[4]), STR_8(CODE[3]), STR_7(CODE[7]), 
		 -> STR_6(CODE[4]), STR_5(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 8
		 -> STR_10(CODE[8]), STR_9(CODE[4]), STR_8(CODE[3]), STR_7(CODE[7]), 
		 -> STR_6(CODE[4]), STR_5(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_10(CODE[8]), STR_9(CODE[4]), STR_8(CODE[3]), STR_7(CODE[7]), 
		 -> STR_6(CODE[4]), STR_5(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> Cadena(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S873_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> Cadena(BANK0[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> Cadena(BANK0[10]), 

    ControlTemperaturaVentilador@TempActual	PTR unsigned char  size(2) Largest target is 2
		 -> Datos(BANK0[2]), 

    ControlHumedadAspersor@HumedadActual	PTR unsigned char  size(2) Largest target is 2
		 -> Datos(BANK0[2]), 

    Comparar_T_H_Adecuados@HumActual	PTR unsigned char  size(2) Largest target is 2
		 -> Datos(BANK0[2]), 

    Comparar_T_H_Adecuados@TempActual	PTR unsigned char  size(2) Largest target is 2
		 -> Datos(BANK0[2]), 

    DatosSensorTH@Datos	PTR unsigned char  size(2) Largest target is 2
		 -> Datos(BANK0[2]), 

    DatoDigitadoAEntero@prmTemperatura	PTR unsigned char  size(2) Largest target is 2
		 -> Humedad(BANK0[2]), Temperatura(BANK0[2]), 

    MostrarTemperatura@Cadena	PTR unsigned char  size(2) Largest target is 10
		 -> Cadena(BANK0[10]), 

    MostrarHumedad@Cadena	PTR unsigned char  size(2) Largest target is 10
		 -> Cadena(BANK0[10]), 

    PedirTodosLosDatos@MargenErrorH	PTR unsigned char  size(2) Largest target is 1
		 -> MargenErrorH(BANK0[1]), 

    PedirTodosLosDatos@Humedad	PTR unsigned char  size(2) Largest target is 2
		 -> Humedad(BANK0[2]), 

    PedirTodosLosDatos@MargenErrorT	PTR unsigned char  size(2) Largest target is 1
		 -> MargenErrorT(BANK0[1]), 

    PedirTodosLosDatos@Temperatura	PTR unsigned char  size(2) Largest target is 2
		 -> Temperatura(BANK0[2]), 

    PedirDato@vecLlenar	PTR unsigned char  size(2) Largest target is 2
		 -> MargenErrorH(BANK0[1]), MargenErrorT(BANK0[1]), Humedad(BANK0[2]), Temperatura(BANK0[2]), 

    PedirDato@Etiqueta	PTR unsigned char  size(2) Largest target is 15
		 -> STR_4(CODE[14]), STR_3(CODE[14]), STR_2(CODE[15]), STR_1(CODE[15]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_4(CODE[14]), STR_3(CODE[14]), STR_2(CODE[15]), STR_1(CODE[15]), 
		 -> Cadena(BANK0[10]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_4(CODE[14]), STR_3(CODE[14]), STR_2(CODE[15]), STR_1(CODE[15]), 
		 -> Cadena(BANK0[10]), 


Critical Paths under _main in COMRAM

    _PedirTodosLosDatos->_PedirDato
    _PedirDato->_LCD_String_xy
    _LCD_Clear->_LCD_Command
    _MostrarTemperatura->_sprintf
    _MostrarHumedad->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Init->_LCD_Command
    _DatosSensorTH->_DHT11_ReadData
    _DatoDigitadoAEntero->___wmul
    _Comparar_T_H_Adecuados->_PrenderLed

Critical Paths under _main in BANK0

    _main->_MostrarHumedad
    _main->_MostrarTemperatura
    _MostrarTemperatura->_sprintf
    _MostrarHumedad->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   22757
                                             93 COMRAM     2     2      0
                   _ApagarAspersores
                         _ApagarLeds
                 _ApagarVentiladores
             _Comparar_T_H_Adecuados
               _ConfigurarPuertosLCD
             _ControlHumedadAspersor
       _ControlTemperaturaVentilador
                _DatoDigitadoAEntero
                      _DatosSensorTH
                           _LCD_Init
                     _MostrarHumedad
                 _MostrarTemperatura
                 _PedirTodosLosDatos
                     _initActuadores
                        _initTeclado
 ---------------------------------------------------------------------------------
 (1) _initTeclado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initActuadores                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PedirTodosLosDatos                                  10     2      8    2589
                                             20 COMRAM    10     2      8
                          _PedirDato
 ---------------------------------------------------------------------------------
 (2) _PedirDato                                           11     5      6    2197
                                              9 COMRAM    11     5      6
                           _LCD_Char
                          _LCD_Clear
                        _LCD_Command
                      _LCD_String_xy
                            _keyfind
 ---------------------------------------------------------------------------------
 (3) _keyfind                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_Clear                                            1     1      0      44
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _MostrarTemperatura                                   3     0      3    8813
                                              8 BANK0      3     0      3
                           _LCD_Char
                         _LCD_String
                      _LCD_String_xy
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _MostrarHumedad                                       3     0      3    8813
                                              8 BANK0      3     0      3
                           _LCD_Char
                         _LCD_String
                      _LCD_String_xy
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16    10      6    7216
                                             87 COMRAM     6     0      6
                                              0 BANK0      8     8      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (3) _LCD_String_xy                                        5     2      3     952
                                              4 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (4) _LCD_String                                           2     0      2     317
                                              2 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (5) _LCD_Char                                             2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      44
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (4) _LCD_Command                                          2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DatosSensorTH                                        7     5      2     284
                                              2 COMRAM     4     2      2
                _DHT11_CheckResponse
                     _DHT11_ReadData
                        _DHT11_Start
 ---------------------------------------------------------------------------------
 (2) _DHT11_Start                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DHT11_ReadData                                       2     2      0     115
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _DHT11_CheckResponse                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DatoDigitadoAEntero                                  9     7      2     694
                                              6 COMRAM     9     7      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _ControlTemperaturaVentilador                        11     5      6     294
                                              0 COMRAM    11     5      6
                 _ApagarVentiladores
                _PrenderVentiladores
 ---------------------------------------------------------------------------------
 (2) _PrenderVentiladores                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ApagarVentiladores                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlHumedadAspersor                              11     5      6     294
                                              0 COMRAM    11     5      6
                   _ApagarAspersores
                  _PrenderAspersores
 ---------------------------------------------------------------------------------
 (2) _PrenderAspersores                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ApagarAspersores                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigurarPuertosLCD                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Comparar_T_H_Adecuados                              19     7     12     932
                                              2 COMRAM    19     7     12
                         _PrenderLed
 ---------------------------------------------------------------------------------
 (2) _PrenderLed                                           2     1      1     164
                                              0 COMRAM     2     1      1
                         _ApagarLeds
 ---------------------------------------------------------------------------------
 (3) _ApagarLeds                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ApagarAspersores
   _ApagarLeds
   _ApagarVentiladores
   _Comparar_T_H_Adecuados
     _PrenderLed
       _ApagarLeds
   _ConfigurarPuertosLCD
   _ControlHumedadAspersor
     _ApagarAspersores
     _PrenderAspersores
   _ControlTemperaturaVentilador
     _ApagarVentiladores
     _PrenderVentiladores
   _DatoDigitadoAEntero
     ___wmul
   _DatosSensorTH
     _DHT11_CheckResponse
     _DHT11_ReadData
     _DHT11_Start
   _LCD_Init
     _LCD_Command
   _MostrarHumedad
     _LCD_Char
     _LCD_String
       _LCD_Char
     _LCD_String_xy
       _LCD_Command
       _LCD_String
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc
   _MostrarTemperatura
     _LCD_Char
     _LCD_String
     _LCD_String_xy
     _sprintf
   _PedirTodosLosDatos
     _PedirDato
       _LCD_Char
       _LCD_Clear
         _LCD_Command
       _LCD_Command
       _LCD_String_xy
       _keyfind
   _initActuadores
   _initTeclado

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      B      5D       5       58.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BC      20        0.0%
DATA                 0      0      BC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Oct 11 14:54:08 2021

       Comparar_T_H_Adecuados@TempDigitada 0007                               ?_LCD_Command 0001  
                                       l91 1AF0                                         l94 1AA0  
                                       l88 1D1E                        _PrenderVentiladores 1DDC  
                      ___wmul@multiplicand 0003                                ?_LCD_String 0003  
              __size_of_ApagarVentiladores 0006                                        l100 194C  
                                      l105 1C40                                        l122 168E  
                                      l220 19A8                                        l212 1956  
                                      l108 1D74                                        l116 1736  
                                      l125 188C                                        l302 1B36  
                                      l119 1DF8                                        l223 1DBA  
                                      l232 1D3C                                        l128 181C  
                                      l305 1D9A                                        l217 1986  
                                      l226 1D20                                        l235 1D4A  
                                      l171 0C3C                                        l229 1D2E  
                                      l238 1C7E                                        l166 0BF8  
                                      l247 1444                                        l271 1DF2  
                                      l175 0C80                                        l280 1DE0  
                                      l432 11EE                                        l185 0D4E  
                                      l169 0CDA                                        l290 19F6  
                                      l274 1DE6                                        l194 17AC  
                                      l283 1DDA                                        l419 108A  
                                      l179 0CC4                                        l292 19FE  
                                      l268 1DD2                                        l277 1DEC  
                                      l197 1DFC                                        l288 19FC  
                                      l297 1B7C                                        l983 1A50  
                                      u900 1CDE                                        u901 1CDA  
                                      u910 0F16                                        u911 0F12  
                                      u920 0F48                                        u921 0F44  
                                      u850 1458                                        u931 0F72  
                                      u851 1454                                        u940 0F96  
                                      u860 146A                                        u941 0F92  
                                      u861 1466                                        u950 0FC0  
                                      u870 1492                                        u951 0FBC  
                                      u871 148E                                        u960 1000  
                                      u880 14C8                                        u961 0FFC  
                                      u881 14C4                                        u970 104A  
                                      u890 1BC0                                        u971 1046  
                                      u891 1BBC                                        u980 109E  
                                      u981 109A                                        u990 10D0  
                                      u991 10CC                                        _abs 1BC2  
                                      _pad 1510                                        prod 000FF3  
                                      wreg 000FE8                  PedirTodosLosDatos@Humedad 0017  
                              LCD_Char@dat 0002                             PedirDato@tecla 0014  
                     MostrarHumedad@Cadena 00BA                                       l1010 1556  
                                     l1013 1598                                       l1021 08F0  
                                     l1015 15D4                                       l1023 08F8  
                                     l2001 1ADE                                       l1041 0B30  
                                     l2003 1AE0                                       l2011 191C  
                                     ?_abs 0013                                       l2005 18F0  
                                     l2021 0D98                                       l2013 0D50  
                                     l2101 0BCE                                       l1062 1C00  
                                     l1054 18E6                                       l2007 18F4  
                                     l2031 0E60                                       l2023 0DBC  
                                     l2015 0D74                                       l1055 18EE  
                                     l2111 0C0E                                       l2103 0BD4  
                                     l1048 0F02                                       l2009 1918  
                                     l2033 0E84                                       l2041 0EB2  
                                     l2025 0DE0                                       l2017 0D82  
                                     l2121 0C36                                       l2113 0C12  
                                     l2105 0BD8                                       l2201 16F8  
                                     l1074 150E                                       l1082 1BC0  
                                     l1059 1BF8                                       l1091 1CEA  
                                     l2043 0EC0                                       l2035 0E92  
                                     l2027 0E28                                       l2019 0D94  
                                     l2211 1A12                                       l2131 0C72  
                                     l2123 0C52                                       l2115 0C18  
                                     l2107 0BEA                                       l2203 16FC  
                                     l2221 194E                                       l2061 1C14  
                                     l1085 1DFE                                       l2037 0EA6  
                                     l2213 1A1A                                       l2141 0CA4  
                                     l2133 0C7A                                       l2125 0C56  
                                     l2117 0C1C                                       l2109 0BF2  
                                     l2205 171A                                       l2301 163E  
                                     l2055 1DD4                                       l2311 177C  
                                     l2231 1978                                       l2063 1C1C  
                                     l2047 0ECC                                       l2215 1A22  
                                     l2071 1D4C                                       l2143 0CB6  
                                     l2135 0C96                                       l2127 0C5C  
                                     l2119 0C2E                                       l2207 1732  
                                     l2303 165A                                       l2313 1798  
                                     l2305 1738                                       l2233 1980  
                                     l2321 1C46                                       l2065 1C26  
                                     l2057 1C04                                       l2049 0EF0  
                                     l2217 1A3E                                       l2209 1A00  
                                     l2073 1D52                                       l2145 0CBE  
                                     l2137 0C9A                                       l2129 0C60  
                                     l2081 0B42                                       l2401 120C  
                                     l2315 17A4                                       l2307 1748  
                                     l2251 1D20                                       l2235 1994  
                                     l2227 1964                                       l2243 1D9C  
                                     l2331 1C5E                                       l2323 1C4A  
                                     l2067 1C2E                                       l2059 1C04  
                                     l2171 188E                                       l2075 1D60  
                                     l2163 0D2A                                       l2155 0D02  
                                     l2139 0CA0                                       l2147 0CDA  
                                     l2091 0B88                                       l2083 0B54  
                                     l2411 125E                                       l2403 1210  
                                     l2261 19D6                                       l2253 19AC  
                                     l2341 138A                                       l2181 1DE2  
                                     l2309 1760                                       l2237 1996  
                                     l2229 196A                                       l2245 1DA0  
                                     l2333 1C62                                       l2325 1C50  
                                     l2069 1C34                                       l2173 1896  
                                     l2165 0D3C                                       l2157 0D14  
                                     l2149 0CEC                                       l2093 0B9A  
                                     l2085 0B6C                                       l2077 0B32  
                                     l2421 129C                                       l2413 1272  
                                     l2405 1214                                       l2263 19E6  
                                     l2255 19B0                                       l2351 143A  
                                     l2343 13C2                                       l2271 1D92  
                                     l2239 19A6                                       l2247 1DAE  
                                     l2335 1C6E                                       l2327 1C54  
                                     l2319 1C42                                       l2175 18A4  
                                     l2095 0BB2                                       l2087 0B7C  
                                     l2079 0B3A                                       l2191 16B8  
                                     l2183 1690                                       l2431 132C  
                                     l2423 12D0                                       l2415 1280  
                                     l2407 1226                                       l2257 19C0  
                                     l2345 13C6                                       l2337 134A  
                                     l2265 1DE8                                       l2353 1B38  
                                     l2361 1B2A                                       l2249 1DB8  
                                     l2329 1C5A                                       l2281 1CF0  
                                     l1801 0F16                                       l2177 18CA  
                                     l2097 0BC2                                       l2089 0B80  
                                     l2193 16BE                                       l2185 1694  
                                     l2425 12EC                                       l2417 128C  
                                     l2409 124A                                       l2259 19D0  
                                     l2347 13FE                                       l2339 1352  
                                     l2275 1DF4                                       l2179 1DEE  
                                     l2355 1B70                                       l2267 1DDC  
                                     l2363 1B32                                       l2291 1D18  
                                     l2283 1D00                                       l1811 0F6C  
                                     l1803 0F36                                       l2371 1866  
                                     l2099 0BCA                                       l2195 16D0  
                                     l2187 16A6                                       l2427 1308  
                                     l2419 1290                                       l2349 1436  
                                     l2357 1B78                                       l2269 1D76  
                                     l2285 1D06                                       l1821 0FC0  
                                     l1813 0F78                                       l1805 0F3A  
                                     l1901 1BDC                                       l2373 186C  
                                     l2365 181E                                       l2381 17DA  
                                     l2197 16E2                                       l2189 16AC  
                                     l2277 1DCA                                       l2293 1DFA  
                                     l2429 131A                                       l2359 1AF2  
                                     l2287 1D0C                                       l2279 1CEC  
                                     l1911 1A6A                                       l1903 1A54  
                                     l1831 1034                                       l1823 0FD2  
                                     l1815 0F96                                       l1807 0F48  
                                     l2375 1880                                       l2367 1838  
                                     l2383 17F6                                       l2199 16E8  
                                     l2295 15D6                                       l2391 11F8  
                                     l2289 1D12                                       l1921 1A90  
                                     l1913 1A6C                                       l1905 1A64  
                                     l1825 1000                                       l1817 0F9E  
                                     l1833 103A                                       l1809 0F68  
                                     l1841 108C                                       l2369 184A  
                                     l2385 17FC                                       l2377 17AE  
                                     l2297 15F2                                       l2393 11FC  
                                     l1915 1A7A                                       l1907 1A66  
                                     l1835 104A                                       l1827 1020  
                                     l1819 0FB2                                       l1851 10D0  
                                     l1843 1090                                       l1771 1474  
                                     l1931 08C8                                       l1923 0850  
                                     l2387 1810                                       l2379 17C8  
                                     l2299 160A                                       l2395 1200  
                                     l1917 1A8C                                       l1909 1A68  
                                     l1837 106A                                       l1829 1022  
                                     l1861 1138                                       l1853 10F0  
                                     l1845 109E                                       l1773 1492  
                                     l1765 1446                                       l1781 1B8A  
                                     l1941 0920                                       l1933 08CA  
                                     l1925 0870                                       l2397 1204  
                                     l2389 11F0                                       l1919 1A8E  
                                     l1871 11AE                                       l1863 1166  
                                     l1855 110E                                       l1847 10BE  
                                     l1775 14C8                                       l1767 1458  
                                     l1783 1B9C                                       l1791 1CC6  
                                     l1951 09BE                                       l1943 0926  
                                     l1935 08E4                                       l1927 0898  
                                     l2399 1208                                       l1873 11CE  
                                     l1865 1186                                       l1857 1116  
                                     l1849 10C2                                       l1769 146A  
                                     l1785 1BA0                                       l1793 1CDE  
                                     l1881 1534                                       l1961 0A66  
                                     l1953 09C4                                       l1945 092E  
                                     l1937 0900                                       l1929 08B8  
                                     l1867 1198                                       l1859 112A  
                                     l1779 1B7E                                       l1787 1CB6  
                                     l1891 157A                                       l1883 1542  
                                     l1971 0ACC                                       l1963 0A80  
                                     l1955 09CA                                       l1947 0936  
                                     l1939 0912                                       l1797 0F04  
                                     l1869 119E                                       l1789 1CC2  
                                     l1893 15A8                                       l1885 154E  
                                     l1877 1510                                       l1973 0AD2  
                                     l1981 0B08                                       l1965 0A9A  
                                     l1949 093C                                       l1957 0A2E  
                                     ?_pad 0011                                       l1991 1AB8  
                                     l1799 0F08                                       l1895 15BC  
                                     l1887 1562                                       l1879 1520  
                                     l1975 0AE4                                       l1959 0A48  
                                     l1967 0AAA                                       l1993 1ABA  
                                     l1985 1AA4                                       l1889 1576  
                                     l1977 0AF0                                       l1969 0ABC  
                                     l1995 1ABC                                       l1987 1AB4  
                                     l1899 1BC2                                       l1979 0AF8  
                                     l1997 1ACA                                       l1989 1AB6  
                                     l1999 1ADC                                       STR_1 0801  
                                     STR_2 0810                                       STR_3 081F  
                                     STR_4 082D                                       STR_5 084B  
                                     STR_6 084A                                       STR_7 0843  
                                     STR_8 084B                                       STR_9 084A  
                                     u1000 110E                                       u1001 110A  
                                     u1010 1138                                       u1011 1134  
                                     u1020 1166                                       u1100 0882  
                                     u1021 1162                                       u1030 11AE  
                                     u1110 0898                                       u1031 11AA  
                                     u1111 0894                                       u1040 1520  
                                     u1200 0AAA                                       u1120 08C8  
                                     u1041 151C                                       u1201 0AA6  
                                     u1121 08C4                                       u1050 1542  
                                     u1210 0ABC                                       u1130 08E4  
                                     u1051 153E                                       u1211 0AB8  
                                     u1131 08E0                                       u1060 1598  
                                     u1220 0ACC                                       u1140 0912  
                                     u1300 0E84                                       u1061 1594  
                                     u1221 0AC8                                       u1141 090E  
                                     u1301 0E80                                       u1310 1C14  
                                     u1070 15A8                                       u1230 0AE4  
                                     u1150 0920                                       u1311 1C10  
                                     u1071 15A4                                       u1231 0AE0  
                                     u1151 091C                                       u1240 1914  
                                     u1080 1BDC                                       u1160 0A48  
                                     u1400 0C72                                       u1320 0B54  
                                     u1081 1BD8                                       u1161 0A44  
                                     u1401 0C6E                                       u1321 0B50  
                                     u1250 193C                                       u1170 0A66  
                                     u1090 0880                                       u1410 0C92  
                                     u1330 0B6C                                       u1171 0A62  
                                     u1091 087A                                       u1411 0C8E  
                                     u1331 0B68                                       u1260 194C  
                                     u1180 0A80                                       u1420 0CB6  
                                     u1340 0B9A                                       u1500 171A  
                                     u1261 1948                                       u1181 0A7C  
                                     u1421 0CB2                                       u1341 0B96  
                                     u1501 1716                                       u1510 1964  
                                     u1190 0A9A                                       u1270 0D74  
                                     u1430 0CD6                                       u1350 0BB2  
                                     _LATB 000F8A                                       u1511 1960  
                                     u1247 190A                                       u1191 0A96  
                                     u1271 0D70                                       u1431 0CD2  
                                     u1351 0BAE                                       u1600 19E6  
                                     u1520 1978                                       u1280 0DBC  
                                     u1440 0CEC                                       u1360 0BEA  
                                     _LATD 000F8C                                       u1601 19E2  
                                     u1521 1974                                       u1257 1932  
                                     u1281 0DB8                                       u1441 0CE8  
                                     u1361 0BE6                                       u1610 19F6  
                                     u1530 1994                                       u1290 0DE0  
                                     u1450 0D14                                       u1370 0C0A  
                                     u1611 19F2                                       u1531 1990  
                                     u1291 0DDC                                       u1451 0D10  
                                     u1371 0C06                                       u1620 138A  
                                     u1540 19A6                                       u1460 0D3C  
                                     u1380 0C2E                                       u1621 1386  
                                     u1541 19A2                                       u1461 0D38  
                                     u1381 0C2A                                       u1630 13C2  
                                     u1550 1D2E                                       u1470 18E6  
                                     u1390 0C4E                                       u1631 13BE  
                                     u1551 1D2A                                       u1471 18E2  
                                     u1391 0C4A                                       u1640 13FE  
                                     u1560 1D3C                                       u1480 16D0  
                                     u1641 13FA                                       u1561 1D38  
                                     u1481 16CC                                       u1650 1436  
                                     u1570 1D4A                                       u1490 16E2  
                                     u1651 1432                                       u1571 1D46  
                                     u1491 16DE                                       u1707 15FC  
                                     u1580 19C0                                       u1660 1B70  
                                     u1581 19BC                                       u1661 1B6C  
                                     u1717 1630                                       u1590 19D0  
                                     u1670 1B2A                                       u1591 19CC  
                                     u1671 1B26                                       u1807 1CF6  
                                     u1727 1664                                       u1680 1226  
                                     u1817 1AC2                                       u1737 1724  
                                     u1681 1222                                       u1827 1AE8  
                                     u1747 0B72                       ?_PrenderVentiladores 0001  
                                     u1837 1DA6                                       u1757 0BB8  
                                     u1847 1DB2                                       u1767 1D58  
                                     u1857 1966                                       u1777 1D6C  
                                     u1697 1336                                       u1787 1A72  
                                     u1797 1A98                                       _RBPU 007F8F  
                 ??_Comparar_T_H_Adecuados 000F                                 _ApagarLeds 1DD4  
                                     abs@a 0013                                       _dbuf 0073  
                                     _main 11F0                                       _dtoa 0850  
                       __size_of_LCD_Clear 002A                                       _prec 0064  
                                     _nout 0060                                       pad@i 0018  
                                     pad@p 0015                                       fsr1h 000FE2  
                                     fsr2h 000FDA                                       indf1 000FE7  
                                     indf2 000FDF                                       fsr1l 000FE1  
                                     pad@w 001A                                       fsr2l 000FD9  
                                     prodh 000FF4                                       prodl 000FF3  
                                     start 0000                           ??_DHT11_ReadData 0001  
                            _LCD_String_xy 1C02                       __size_of_DHT11_Start 0020  
                               PedirDato@i 0012                               ___param_bank 000000  
                    __end_of_DatosSensorTH 1C80                                      ??_abs 0015  
                             ?_initTeclado 0001                                      ??_pad 0017  
                         __end_of_LCD_Char 1AA2                           __end_of_LCD_Init 1D20  
                          __end_of___aodiv 108C                                      ?_main 0001  
                                    ?_dtoa 001C                            __end_of___aomod 11F0  
                                    STR_10 083B                  __size_of_ApagarAspersores 0006  
                                    _LATA0 007C48                                      _LATC0 007C58  
                                    _LATC1 007C59                                      _LATD0 007C60  
                                    _LATC2 007C5A                                      _LATD1 007C61  
                                    _LATE0 007C68                                      _LATE1 007C69  
                                    _LATC6 007C5E                                      _LATE2 007C6A  
                             vfpfcnvrt@fmt 0042                                      _PORTB 000F81  
                                    _TRISB 000F93                                      _TRISC 000F94  
                                    _TRISD 000F95                                      _TRISE 000F96  
                                    _Datos 009D                      MostrarHumedad@Humedad 00BC  
                                    _flags 0066                                      _fputc 1446  
                          __end_of_keyfind 0D50                                      _fputs 1B7E  
                                    pad@fp 0011                      ??_PrenderVentiladores 0001  
                                    _width 0062                                      _putch 1DFE  
                                    dtoa@d 001E                                      dtoa@i 003E  
                                    dtoa@n 0036                                      dtoa@p 0030  
                                    dtoa@s 0034                                      dtoa@w 0032  
                                    tablat 000FF5      Comparar_T_H_Adecuados@HumedadAdecuada 0015  
                                    status 000FD8                        __size_of_LCD_String 005E  
                          __end_of_sprintf 1A52              PedirTodosLosDatos@Temperatura 0015  
                           ?_LCD_String_xy 0005                          _PrenderAspersores 1DE8  
                          __initialization 1C80                               __end_of_main 134A  
                             __end_of_dtoa 0B32                 __end_of_PedirTodosLosDatos 1690  
                       ?_PrenderAspersores 0001                    __size_of_MostrarHumedad 0070  
          Comparar_T_H_Adecuados@HumActual 0005                                     ??_main 005E  
                                   ??_dtoa 0026                          __end_of_LCD_Clear 1D76  
                      ??_PrenderAspersores 0001                              __activetblptr 000002  
                  __size_of_initActuadores 000A                    ?_ControlHumedadAspersor 0001  
                                   _ADCON1 000FC1                                     ?_fputc 0001  
                                   ?_fputs 000A                                     ?_putch 0001  
                      _DHT11_CheckResponse 1D20                           LCD_String_xy@msg 0006  
                         LCD_String_xy@pos 0005                           LCD_String_xy@row 0008  
                                   _OSCCON 000FD3                                ?_ApagarLeds 0001  
          __size_of_Comparar_T_H_Adecuados 00FC                                     _Cadena 0093  
              __end_of_DatoDigitadoAEntero 17AE                         __size_of_PedirDato 00A8  
                __end_of_PrenderAspersores 1DEE                               vfprintf@cfmt 0056  
                               _PrenderLed 19AA                                  ??___aodiv 0011  
                                ??___aomod 0011                                     ___wmul 1D76  
                     ?_DHT11_CheckResponse 0001                                     _keypad 00A5  
                               _PrimeraVez 00B1                                     clear_0 1CA6  
 ControlTemperaturaVentilador@MargenErrorT 0005                                     isa$std 000001  
                                   pad@buf 0013                                     _rowloc 0071  
                     __size_of_LCD_Command 0050                                     dtoa@fp 001C  
                                   _strlen 1CB6                                     fputc@c 0001  
                                   fputs@c 000E                                     fputs@i 000F  
                                   fputs@s 000A                                  ??_keyfind 0001  
           __end_of_ControlHumedadAspersor 1B7E                               __mediumconst 0000  
                                   tblptrh 000FF7                                     tblptrl 000FF6  
                                   tblptru 000FF8                                     putch@c 0001  
                         __end_of_vfprintf 18F0                                  ??_sprintf 005E  
     __end_of_ControlTemperaturaVentilador 1B38      __size_of_ControlTemperaturaVentilador 0046  
             _ControlTemperaturaVentilador 1AF2                          PedirDato@Etiqueta 000A  
                                ?_LCD_Char 0001                                 __accesstop 0060  
                  __end_of__initialization 1CAC                 __end_of_MostrarTemperatura 181E  
                                ?_LCD_Init 0001                            ??_LCD_String_xy 0008  
             __end_of_ConfigurarPuertosLCD 1DFA                              ___rparam_used 000001  
                           __pcstackCOMRAM 0001                               __pidataBANK0 1DBC  
                    ??_DHT11_CheckResponse 0001                              __end_of_fputc 1510  
                            __end_of_fputs 1BC2                              __end_of_putch 1E00  
                             ??_LCD_String 0005                     _Comparar_T_H_Adecuados 134A  
                     __size_of_initTeclado 0004                           _ApagarAspersores 1DEE  
                      __size_of_ApagarLeds 0008                          __end_of_PedirDato 1738  
                       DatosSensorTH@Datos 0003                                    ??_fputc 0005  
                                  ??_fputs 000E                                    ??_putch 0001  
                               __pbssBANK0 0060                                 ??_LCD_Char 0001  
                               ??_LCD_Init 0003              ?_ControlTemperaturaVentilador 0001  
               __size_of_PrenderAspersores 0006                         __end_of_LCD_String 194E  
                              ?_PrenderLed 0001                                    ?___wmul 0001  
                           _MostrarHumedad 181E                 __end_of_ApagarVentiladores 1DE8  
         Comparar_T_H_Adecuados@TempActual 0003                                    ?_strlen 0001  
                           _initActuadores 1DCA               DatoDigitadoAEntero@Resultado 000C  
                       __size_of_vfpfcnvrt 01B4                              ??_DHT11_Start 0001  
                            LCD_String@msg 0003                                    _Humedad 009F  
                                  __Hparam 0000                                    __Lparam 0000  
                   __end_of_MostrarHumedad 188E                                    ___aodiv 0F04  
                                  ___aomod 108C                            __size_of___wmul 0026  
                                ?_vfprintf 0050                               __psmallconst 0800  
                              _Temperatura 00A1                                    __pcinit 1C80  
                                  __ramtop 0800              PrenderLed@TemperaturaAdecuada 0002  
                                  __ptext0 11F0                                    __ptext1 1DFA  
                                  __ptext2 1DCA                                    __ptext3 15D6  
                                  __ptext4 1690                                    __ptext5 0B32  
                                  __ptext6 1D4C                                    __ptext7 17AE  
                                  __ptext8 181E                                    __ptext9 1A00  
                   __end_of_initActuadores 1DD4                                    _col_loc 0072  
                          __size_of_strlen 0036                               __size_of_abs 0040  
                             __size_of_pad 00C6                                    _keyfind 0B32  
              __end_of_PrenderVentiladores 1DE2                       _ConfigurarPuertosLCD 1DF4  
                       _PedirTodosLosDatos 15D6                                  _LCD_Clear 1D4C  
                                  _sprintf 1A00                        __size_of_PrenderLed 0056  
                       PedirDato@CantDatos 000E                     __size_of_DatosSensorTH 003E  
                     end_of_initialization 1CAC                        ?_PedirTodosLosDatos 0015  
                             ??_ApagarLeds 0001                                    fputc@fp 0003  
                           LCD_Command@cmd 0002                              __Lmediumconst 0000  
                                  fputs@fp 000C   ControlTemperaturaVentilador@TempDigitada 0003  
                          ?_MostrarHumedad 00BA             ??_ControlTemperaturaVentilador 0007  
                        __end_of_vfpfcnvrt 0F04                        __end_of_DHT11_Start 1DBC  
                                  postdec1 000FE5                                    postdec2 000FDD  
                                  postinc0 000FEE                                    postinc1 000FE6  
                                  postinc2 000FDE                                 ??_vfprintf 0056  
                     ??_PedirTodosLosDatos 001D                                    strlen@a 0003  
                                  strlen@s 0001                                  _PORTAbits 000F80  
                          ?_initActuadores 0001                    __size_of_DHT11_ReadData 005C  
                    ?_ConfigurarPuertosLCD 0001                         __end_of_ApagarLeds 1DDC  
                                _TRISAbits 000F92                                 ?_LCD_Clear 0001  
                             _MargenErrorH 00A3                               _MargenErrorT 00A4  
                 __end_of_ApagarAspersores 1DF4             PedirTodosLosDatos@MargenErrorH 001B  
           PedirTodosLosDatos@MargenErrorT 0019                          __size_of_LCD_Char 0050  
                        __size_of_LCD_Init 0034                         DHT11_ReadData@data 0002  
                  DatosSensorTH@T_Integral 0006                    ?_Comparar_T_H_Adecuados 0003  
             __size_of_DatoDigitadoAEntero 0076                              _DatosSensorTH 1C42  
                            ??_LCD_Command 0001                         _MostrarTemperatura 17AE  
                              vfpfcnvrt@ap 0044                                vfpfcnvrt@fp 0040  
                              vfpfcnvrt@ll 0048                             __end_of___wmul 1D9C  
                      ?_MostrarTemperatura 00BA                             __end_of_strlen 1CEC  
                      start_initialization 1C80                                __end_of_abs 1C02  
                              __end_of_pad 15D6                                  _PedirDato 1690  
        Comparar_T_H_Adecuados@HumDigitada 0009                                _DHT11_Start 1D9C  
              __end_of_DHT11_CheckResponse 1D4C                       ??_MostrarTemperatura 005E  
                    __end_of_LCD_String_xy 1C42          DatoDigitadoAEntero@prmTemperatura 0007  
           __end_of_Comparar_T_H_Adecuados 1446                                vfprintf@fmt 0052  
                             ??_PrenderLed 0002                             ?_DatosSensorTH 0003  
                                 ??___wmul 0005                              ??_initTeclado 0001  
                              __pdataBANK0 00A5                     ??_ConfigurarPuertosLCD 0001  
                                 ??_strlen 0003                        __end_of_LCD_Command 1AF2  
                            __pcstackBANK0 00B2                           ___aodiv@dividend 0001  
                       _ApagarVentiladores 1DE2                                ??_LCD_Clear 0003  
                               ?_PedirDato 000A                         PedirDato@vecLlenar 000C  
                       __end_of_PrenderLed 1A00              MostrarTemperatura@Temperatura 00BC  
                      ?_ApagarVentiladores 0001        ControlHumedadAspersor@HumedadActual 0001  
                                 ?___aodiv 0001                                   ?___aomod 0001  
                         ___aodiv@quotient 0013                   ??_ControlHumedadAspersor 0007  
                     ??_ApagarVentiladores 0001                             _DHT11_ReadData 194E  
                        __size_of_vfprintf 0062                                __smallconst 0800  
                      __end_of_initTeclado 1DFE                                   ?_keyfind 0001  
                    LCD_String_xy@location 0009                                   ?_sprintf 0058  
                           __size_of_fputc 00CA                             __size_of_fputs 0044  
                           __size_of_putch 0002     ControlTemperaturaVentilador@TempActual 0001  
                                 _LCD_Char 1A52                           ??_MostrarHumedad 005E  
                                 _LCD_Init 1CEC                             ___wmul@product 0005  
                          ??_DatosSensorTH 0005                           ??_initActuadores 0001  
                   __end_of_DHT11_ReadData 19AA                                _LCD_Command 1AA2  
                                _vfpfcnvrt 0D50                          ___wmul@multiplier 0001  
       Comparar_T_H_Adecuados@MargenErrorH 000D         Comparar_T_H_Adecuados@MargenErrorT 000B  
                              ??_PedirDato 0010                        _DatoDigitadoAEntero 1738  
                              _INTCON2bits 000FF1                                  copy_data0 1C94  
             __size_of_PrenderVentiladores 0006                                   _MargenEH 006C  
                                 _MargenET 006E                          ?_ApagarAspersores 0001  
                                 __Hrparam 0000      ControlHumedadAspersor@HumedadDigitada 0003  
                       ??_ApagarAspersores 0001                                 vfprintf@ap 0054  
                                 __Lrparam 0000                                 vfprintf@fp 0050  
                 MostrarTemperatura@Cadena 00BA                       ?_DatoDigitadoAEntero 0007  
                          ?_DHT11_ReadData 0001                                _initTeclado 1DFA  
                         __size_of___aodiv 0188                           __size_of___aomod 0164  
                               ?_vfpfcnvrt 0040                __size_of_PedirTodosLosDatos 00BA  
          __size_of_ControlHumedadAspersor 0046                            DHT11_ReadData@i 0001  
                          ___aodiv@divisor 0009                            ___aodiv@counter 0011  
Comparar_T_H_Adecuados@TemperaturaAdecuada 0014                                 sprintf@fmt 005A  
                         __size_of_keyfind 021E                                   _dtoa$946 002E  
                                 __ptext10 188E                                   __ptext11 0D50  
                                 __ptext20 0F04                                   __ptext12 0850  
                                 __ptext21 1C02                                   __ptext13 1510  
                                 __ptext30 1738                                   __ptext22 18F0  
                                 __ptext14 1CB6                                   __ptext31 1D76  
                                 __ptext23 1A52                                   __ptext15 1B7E  
                                 __ptext40 19AA                                   __ptext32 1AF2  
                                 __ptext24 1CEC                                   __ptext16 1446  
                                 __ptext41 1DD4                                   __ptext33 1DDC  
                                 __ptext25 1AA2                                   __ptext17 1DFE  
                                 __ptext34 1DE2                                   __ptext26 1C42  
                                 __ptext18 1BC2                                   __ptext35 1B38  
                                 __ptext27 1D9C                                   __ptext19 108C  
                                 __ptext36 1DE8                                   __ptext28 194E  
                                 __ptext37 1DEE                                   __ptext29 1D20  
                                 __ptext38 1DF4                                   __ptext39 134A  
                         __size_of_sprintf 0052                   DatosSensorTH@RH_Integral 0005  
                            __size_of_main 015A                              __size_of_dtoa 02E2  
                             ?_DHT11_Start 0001                                   _temp_col 0070  
                                 isa$xinst 000000                      ??_DatoDigitadoAEntero 0009  
                                 _vfprintf 188E                                 _LCD_String 18F0  
                DatoDigitadoAEntero@Decena 000E                           ___aomod@dividend 0001  
                          _HumedadAdecuada 0068                  DatoDigitadoAEntero@Unidad 000A  
                   _ControlHumedadAspersor 1B38                                  sprintf@ap 00B2  
                PrenderLed@HumedadAdecuada 0001         ControlHumedadAspersor@MargenErrorH 0005  
              __size_of_MostrarTemperatura 0070               __size_of_DHT11_CheckResponse 002C  
                          ___aomod@divisor 0009                                ??_vfpfcnvrt 0046  
                          ___aomod@counter 0011                                   sprintf@f 00B4  
                                 sprintf@s 0058                        _TemperaturaAdecuada 006A  
            __size_of_ConfigurarPuertosLCD 0006                     __size_of_LCD_String_xy 0040  
                             ___aodiv@sign 0012                               ___aomod@sign 0012  
